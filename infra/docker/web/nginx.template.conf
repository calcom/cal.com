# Redirect DOMAIN_PLACEHOLDER → app.DOMAIN_PLACEHOLDER
server {
    listen 443 ssl;
    server_name DOMAIN_PLACEHOLDER;

    return 301 https://app.DOMAIN_PLACEHOLDER$request_uri;

    ssl_certificate /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# Next.js / App server for app.DOMAIN_PLACEHOLDER
server {
    listen 443 ssl;
    server_name app.DOMAIN_PLACEHOLDER www.DOMAIN_PLACEHOLDER;

    client_max_body_size 15M;

    # Homepage (/) → external Framer site
    location = / {
        proxy_pass https://HOMEPAGE_PLACEHOLDER/;
        proxy_set_header Host HOMEPAGE_PLACEHOLDER;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Original-Host $host;

        proxy_ssl_server_name on;
        proxy_ssl_verify off;
        proxy_redirect off;
    }

    location ^~ /info/ {
        proxy_pass https://HOMEPAGE_PLACEHOLDER$request_uri;
        proxy_set_header Host HOMEPAGE_PLACEHOLDER;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_ssl_server_name on;
        proxy_ssl_verify off;
        proxy_redirect off;
    }

    # API routes → local Next.js app
    location /api/ {
        proxy_pass http://127.0.0.1:PORT_PLACEHOLDER;
        proxy_set_header Host $host;   # keep original domain for session cookies
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Everything else → local app
    location / {
        proxy_pass http://127.0.0.1:PORT_PLACEHOLDER;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    ssl_certificate /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# Catch-all for unauthorized subdomains → redirect to app.DOMAIN_PLACEHOLDER
server {
    listen 443 ssl;
    server_name *.DOMAIN_PLACEHOLDER;

    if ($host !~* ^(app|www)\.DOMAIN_PLACEHOLDER$) {
        return 301 https://app.DOMAIN_PLACEHOLDER$request_uri;
    }

    ssl_certificate /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/DOMAIN_PLACEHOLDER/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# HTTP → HTTPS Redirection
server {
    listen 80;
    server_name DOMAIN_PLACEHOLDER *.DOMAIN_PLACEHOLDER;

    return 301 https://$host$request_uri;
}
