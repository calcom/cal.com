/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `OrganizationBilling` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model OrganizationBilling
 *
 */
export type OrganizationBillingModel =
  runtime.Types.Result.DefaultSelection<Prisma.$OrganizationBillingPayload>;

export type AggregateOrganizationBilling = {
  _count: OrganizationBillingCountAggregateOutputType | null;
  _avg: OrganizationBillingAvgAggregateOutputType | null;
  _sum: OrganizationBillingSumAggregateOutputType | null;
  _min: OrganizationBillingMinAggregateOutputType | null;
  _max: OrganizationBillingMaxAggregateOutputType | null;
};

export type OrganizationBillingAvgAggregateOutputType = {
  teamId: number | null;
};

export type OrganizationBillingSumAggregateOutputType = {
  teamId: number | null;
};

export type OrganizationBillingMinAggregateOutputType = {
  id: string | null;
  teamId: number | null;
  subscriptionId: string | null;
  subscriptionItemId: string | null;
  customerId: string | null;
  status: string | null;
  planName: string | null;
  subscriptionStart: Date | null;
  subscriptionTrialEnd: Date | null;
  subscriptionEnd: Date | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type OrganizationBillingMaxAggregateOutputType = {
  id: string | null;
  teamId: number | null;
  subscriptionId: string | null;
  subscriptionItemId: string | null;
  customerId: string | null;
  status: string | null;
  planName: string | null;
  subscriptionStart: Date | null;
  subscriptionTrialEnd: Date | null;
  subscriptionEnd: Date | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type OrganizationBillingCountAggregateOutputType = {
  id: number;
  teamId: number;
  subscriptionId: number;
  subscriptionItemId: number;
  customerId: number;
  status: number;
  planName: number;
  subscriptionStart: number;
  subscriptionTrialEnd: number;
  subscriptionEnd: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type OrganizationBillingAvgAggregateInputType = {
  teamId?: true;
};

export type OrganizationBillingSumAggregateInputType = {
  teamId?: true;
};

export type OrganizationBillingMinAggregateInputType = {
  id?: true;
  teamId?: true;
  subscriptionId?: true;
  subscriptionItemId?: true;
  customerId?: true;
  status?: true;
  planName?: true;
  subscriptionStart?: true;
  subscriptionTrialEnd?: true;
  subscriptionEnd?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type OrganizationBillingMaxAggregateInputType = {
  id?: true;
  teamId?: true;
  subscriptionId?: true;
  subscriptionItemId?: true;
  customerId?: true;
  status?: true;
  planName?: true;
  subscriptionStart?: true;
  subscriptionTrialEnd?: true;
  subscriptionEnd?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type OrganizationBillingCountAggregateInputType = {
  id?: true;
  teamId?: true;
  subscriptionId?: true;
  subscriptionItemId?: true;
  customerId?: true;
  status?: true;
  planName?: true;
  subscriptionStart?: true;
  subscriptionTrialEnd?: true;
  subscriptionEnd?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type OrganizationBillingAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which OrganizationBilling to aggregate.
   */
  where?: Prisma.OrganizationBillingWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of OrganizationBillings to fetch.
   */
  orderBy?:
    | Prisma.OrganizationBillingOrderByWithRelationInput
    | Prisma.OrganizationBillingOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.OrganizationBillingWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` OrganizationBillings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` OrganizationBillings.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned OrganizationBillings
   **/
  _count?: true | OrganizationBillingCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: OrganizationBillingAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: OrganizationBillingSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: OrganizationBillingMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: OrganizationBillingMaxAggregateInputType;
};

export type GetOrganizationBillingAggregateType<T extends OrganizationBillingAggregateArgs> = {
  [P in keyof T & keyof AggregateOrganizationBilling]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOrganizationBilling[P]>
    : Prisma.GetScalarType<T[P], AggregateOrganizationBilling[P]>;
};

export type OrganizationBillingGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.OrganizationBillingWhereInput;
  orderBy?:
    | Prisma.OrganizationBillingOrderByWithAggregationInput
    | Prisma.OrganizationBillingOrderByWithAggregationInput[];
  by: Prisma.OrganizationBillingScalarFieldEnum[] | Prisma.OrganizationBillingScalarFieldEnum;
  having?: Prisma.OrganizationBillingScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: OrganizationBillingCountAggregateInputType | true;
  _avg?: OrganizationBillingAvgAggregateInputType;
  _sum?: OrganizationBillingSumAggregateInputType;
  _min?: OrganizationBillingMinAggregateInputType;
  _max?: OrganizationBillingMaxAggregateInputType;
};

export type OrganizationBillingGroupByOutputType = {
  id: string;
  teamId: number;
  subscriptionId: string;
  subscriptionItemId: string;
  customerId: string;
  status: string;
  planName: string;
  subscriptionStart: Date | null;
  subscriptionTrialEnd: Date | null;
  subscriptionEnd: Date | null;
  createdAt: Date;
  updatedAt: Date;
  _count: OrganizationBillingCountAggregateOutputType | null;
  _avg: OrganizationBillingAvgAggregateOutputType | null;
  _sum: OrganizationBillingSumAggregateOutputType | null;
  _min: OrganizationBillingMinAggregateOutputType | null;
  _max: OrganizationBillingMaxAggregateOutputType | null;
};

type GetOrganizationBillingGroupByPayload<T extends OrganizationBillingGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<OrganizationBillingGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof OrganizationBillingGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], OrganizationBillingGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], OrganizationBillingGroupByOutputType[P]>;
    }
  >
>;

export type OrganizationBillingWhereInput = {
  AND?: Prisma.OrganizationBillingWhereInput | Prisma.OrganizationBillingWhereInput[];
  OR?: Prisma.OrganizationBillingWhereInput[];
  NOT?: Prisma.OrganizationBillingWhereInput | Prisma.OrganizationBillingWhereInput[];
  id?: Prisma.StringFilter<"OrganizationBilling"> | string;
  teamId?: Prisma.IntFilter<"OrganizationBilling"> | number;
  subscriptionId?: Prisma.StringFilter<"OrganizationBilling"> | string;
  subscriptionItemId?: Prisma.StringFilter<"OrganizationBilling"> | string;
  customerId?: Prisma.StringFilter<"OrganizationBilling"> | string;
  status?: Prisma.StringFilter<"OrganizationBilling"> | string;
  planName?: Prisma.StringFilter<"OrganizationBilling"> | string;
  subscriptionStart?: Prisma.DateTimeNullableFilter<"OrganizationBilling"> | Date | string | null;
  subscriptionTrialEnd?: Prisma.DateTimeNullableFilter<"OrganizationBilling"> | Date | string | null;
  subscriptionEnd?: Prisma.DateTimeNullableFilter<"OrganizationBilling"> | Date | string | null;
  createdAt?: Prisma.DateTimeFilter<"OrganizationBilling"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"OrganizationBilling"> | Date | string;
  team?: Prisma.XOR<Prisma.TeamScalarRelationFilter, Prisma.TeamWhereInput>;
};

export type OrganizationBillingOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  subscriptionId?: Prisma.SortOrder;
  subscriptionItemId?: Prisma.SortOrder;
  customerId?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  planName?: Prisma.SortOrder;
  subscriptionStart?: Prisma.SortOrderInput | Prisma.SortOrder;
  subscriptionTrialEnd?: Prisma.SortOrderInput | Prisma.SortOrder;
  subscriptionEnd?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  team?: Prisma.TeamOrderByWithRelationInput;
};

export type OrganizationBillingWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    teamId?: number;
    subscriptionId?: string;
    AND?: Prisma.OrganizationBillingWhereInput | Prisma.OrganizationBillingWhereInput[];
    OR?: Prisma.OrganizationBillingWhereInput[];
    NOT?: Prisma.OrganizationBillingWhereInput | Prisma.OrganizationBillingWhereInput[];
    subscriptionItemId?: Prisma.StringFilter<"OrganizationBilling"> | string;
    customerId?: Prisma.StringFilter<"OrganizationBilling"> | string;
    status?: Prisma.StringFilter<"OrganizationBilling"> | string;
    planName?: Prisma.StringFilter<"OrganizationBilling"> | string;
    subscriptionStart?: Prisma.DateTimeNullableFilter<"OrganizationBilling"> | Date | string | null;
    subscriptionTrialEnd?: Prisma.DateTimeNullableFilter<"OrganizationBilling"> | Date | string | null;
    subscriptionEnd?: Prisma.DateTimeNullableFilter<"OrganizationBilling"> | Date | string | null;
    createdAt?: Prisma.DateTimeFilter<"OrganizationBilling"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"OrganizationBilling"> | Date | string;
    team?: Prisma.XOR<Prisma.TeamScalarRelationFilter, Prisma.TeamWhereInput>;
  },
  "id" | "teamId" | "subscriptionId"
>;

export type OrganizationBillingOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  subscriptionId?: Prisma.SortOrder;
  subscriptionItemId?: Prisma.SortOrder;
  customerId?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  planName?: Prisma.SortOrder;
  subscriptionStart?: Prisma.SortOrderInput | Prisma.SortOrder;
  subscriptionTrialEnd?: Prisma.SortOrderInput | Prisma.SortOrder;
  subscriptionEnd?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.OrganizationBillingCountOrderByAggregateInput;
  _avg?: Prisma.OrganizationBillingAvgOrderByAggregateInput;
  _max?: Prisma.OrganizationBillingMaxOrderByAggregateInput;
  _min?: Prisma.OrganizationBillingMinOrderByAggregateInput;
  _sum?: Prisma.OrganizationBillingSumOrderByAggregateInput;
};

export type OrganizationBillingScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.OrganizationBillingScalarWhereWithAggregatesInput
    | Prisma.OrganizationBillingScalarWhereWithAggregatesInput[];
  OR?: Prisma.OrganizationBillingScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.OrganizationBillingScalarWhereWithAggregatesInput
    | Prisma.OrganizationBillingScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"OrganizationBilling"> | string;
  teamId?: Prisma.IntWithAggregatesFilter<"OrganizationBilling"> | number;
  subscriptionId?: Prisma.StringWithAggregatesFilter<"OrganizationBilling"> | string;
  subscriptionItemId?: Prisma.StringWithAggregatesFilter<"OrganizationBilling"> | string;
  customerId?: Prisma.StringWithAggregatesFilter<"OrganizationBilling"> | string;
  status?: Prisma.StringWithAggregatesFilter<"OrganizationBilling"> | string;
  planName?: Prisma.StringWithAggregatesFilter<"OrganizationBilling"> | string;
  subscriptionStart?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"OrganizationBilling">
    | Date
    | string
    | null;
  subscriptionTrialEnd?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"OrganizationBilling">
    | Date
    | string
    | null;
  subscriptionEnd?: Prisma.DateTimeNullableWithAggregatesFilter<"OrganizationBilling"> | Date | string | null;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"OrganizationBilling"> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"OrganizationBilling"> | Date | string;
};

export type OrganizationBillingCreateInput = {
  id?: string;
  subscriptionId: string;
  subscriptionItemId: string;
  customerId: string;
  status: string;
  planName: string;
  subscriptionStart?: Date | string | null;
  subscriptionTrialEnd?: Date | string | null;
  subscriptionEnd?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  team: Prisma.TeamCreateNestedOneWithoutOrganizationBillingInput;
};

export type OrganizationBillingUncheckedCreateInput = {
  id?: string;
  teamId: number;
  subscriptionId: string;
  subscriptionItemId: string;
  customerId: string;
  status: string;
  planName: string;
  subscriptionStart?: Date | string | null;
  subscriptionTrialEnd?: Date | string | null;
  subscriptionEnd?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type OrganizationBillingUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionId?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionItemId?: Prisma.StringFieldUpdateOperationsInput | string;
  customerId?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  planName?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionStart?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  subscriptionTrialEnd?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  subscriptionEnd?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  team?: Prisma.TeamUpdateOneRequiredWithoutOrganizationBillingNestedInput;
};

export type OrganizationBillingUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  teamId?: Prisma.IntFieldUpdateOperationsInput | number;
  subscriptionId?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionItemId?: Prisma.StringFieldUpdateOperationsInput | string;
  customerId?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  planName?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionStart?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  subscriptionTrialEnd?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  subscriptionEnd?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type OrganizationBillingCreateManyInput = {
  id?: string;
  teamId: number;
  subscriptionId: string;
  subscriptionItemId: string;
  customerId: string;
  status: string;
  planName: string;
  subscriptionStart?: Date | string | null;
  subscriptionTrialEnd?: Date | string | null;
  subscriptionEnd?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type OrganizationBillingUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionId?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionItemId?: Prisma.StringFieldUpdateOperationsInput | string;
  customerId?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  planName?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionStart?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  subscriptionTrialEnd?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  subscriptionEnd?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type OrganizationBillingUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  teamId?: Prisma.IntFieldUpdateOperationsInput | number;
  subscriptionId?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionItemId?: Prisma.StringFieldUpdateOperationsInput | string;
  customerId?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  planName?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionStart?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  subscriptionTrialEnd?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  subscriptionEnd?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type OrganizationBillingNullableScalarRelationFilter = {
  is?: Prisma.OrganizationBillingWhereInput | null;
  isNot?: Prisma.OrganizationBillingWhereInput | null;
};

export type OrganizationBillingCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  subscriptionId?: Prisma.SortOrder;
  subscriptionItemId?: Prisma.SortOrder;
  customerId?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  planName?: Prisma.SortOrder;
  subscriptionStart?: Prisma.SortOrder;
  subscriptionTrialEnd?: Prisma.SortOrder;
  subscriptionEnd?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type OrganizationBillingAvgOrderByAggregateInput = {
  teamId?: Prisma.SortOrder;
};

export type OrganizationBillingMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  subscriptionId?: Prisma.SortOrder;
  subscriptionItemId?: Prisma.SortOrder;
  customerId?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  planName?: Prisma.SortOrder;
  subscriptionStart?: Prisma.SortOrder;
  subscriptionTrialEnd?: Prisma.SortOrder;
  subscriptionEnd?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type OrganizationBillingMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  subscriptionId?: Prisma.SortOrder;
  subscriptionItemId?: Prisma.SortOrder;
  customerId?: Prisma.SortOrder;
  status?: Prisma.SortOrder;
  planName?: Prisma.SortOrder;
  subscriptionStart?: Prisma.SortOrder;
  subscriptionTrialEnd?: Prisma.SortOrder;
  subscriptionEnd?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type OrganizationBillingSumOrderByAggregateInput = {
  teamId?: Prisma.SortOrder;
};

export type OrganizationBillingCreateNestedOneWithoutTeamInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationBillingCreateWithoutTeamInput,
    Prisma.OrganizationBillingUncheckedCreateWithoutTeamInput
  >;
  connectOrCreate?: Prisma.OrganizationBillingCreateOrConnectWithoutTeamInput;
  connect?: Prisma.OrganizationBillingWhereUniqueInput;
};

export type OrganizationBillingUncheckedCreateNestedOneWithoutTeamInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationBillingCreateWithoutTeamInput,
    Prisma.OrganizationBillingUncheckedCreateWithoutTeamInput
  >;
  connectOrCreate?: Prisma.OrganizationBillingCreateOrConnectWithoutTeamInput;
  connect?: Prisma.OrganizationBillingWhereUniqueInput;
};

export type OrganizationBillingUpdateOneWithoutTeamNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationBillingCreateWithoutTeamInput,
    Prisma.OrganizationBillingUncheckedCreateWithoutTeamInput
  >;
  connectOrCreate?: Prisma.OrganizationBillingCreateOrConnectWithoutTeamInput;
  upsert?: Prisma.OrganizationBillingUpsertWithoutTeamInput;
  disconnect?: Prisma.OrganizationBillingWhereInput | boolean;
  delete?: Prisma.OrganizationBillingWhereInput | boolean;
  connect?: Prisma.OrganizationBillingWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationBillingUpdateToOneWithWhereWithoutTeamInput,
      Prisma.OrganizationBillingUpdateWithoutTeamInput
    >,
    Prisma.OrganizationBillingUncheckedUpdateWithoutTeamInput
  >;
};

export type OrganizationBillingUncheckedUpdateOneWithoutTeamNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationBillingCreateWithoutTeamInput,
    Prisma.OrganizationBillingUncheckedCreateWithoutTeamInput
  >;
  connectOrCreate?: Prisma.OrganizationBillingCreateOrConnectWithoutTeamInput;
  upsert?: Prisma.OrganizationBillingUpsertWithoutTeamInput;
  disconnect?: Prisma.OrganizationBillingWhereInput | boolean;
  delete?: Prisma.OrganizationBillingWhereInput | boolean;
  connect?: Prisma.OrganizationBillingWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationBillingUpdateToOneWithWhereWithoutTeamInput,
      Prisma.OrganizationBillingUpdateWithoutTeamInput
    >,
    Prisma.OrganizationBillingUncheckedUpdateWithoutTeamInput
  >;
};

export type OrganizationBillingCreateWithoutTeamInput = {
  id?: string;
  subscriptionId: string;
  subscriptionItemId: string;
  customerId: string;
  status: string;
  planName: string;
  subscriptionStart?: Date | string | null;
  subscriptionTrialEnd?: Date | string | null;
  subscriptionEnd?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type OrganizationBillingUncheckedCreateWithoutTeamInput = {
  id?: string;
  subscriptionId: string;
  subscriptionItemId: string;
  customerId: string;
  status: string;
  planName: string;
  subscriptionStart?: Date | string | null;
  subscriptionTrialEnd?: Date | string | null;
  subscriptionEnd?: Date | string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type OrganizationBillingCreateOrConnectWithoutTeamInput = {
  where: Prisma.OrganizationBillingWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.OrganizationBillingCreateWithoutTeamInput,
    Prisma.OrganizationBillingUncheckedCreateWithoutTeamInput
  >;
};

export type OrganizationBillingUpsertWithoutTeamInput = {
  update: Prisma.XOR<
    Prisma.OrganizationBillingUpdateWithoutTeamInput,
    Prisma.OrganizationBillingUncheckedUpdateWithoutTeamInput
  >;
  create: Prisma.XOR<
    Prisma.OrganizationBillingCreateWithoutTeamInput,
    Prisma.OrganizationBillingUncheckedCreateWithoutTeamInput
  >;
  where?: Prisma.OrganizationBillingWhereInput;
};

export type OrganizationBillingUpdateToOneWithWhereWithoutTeamInput = {
  where?: Prisma.OrganizationBillingWhereInput;
  data: Prisma.XOR<
    Prisma.OrganizationBillingUpdateWithoutTeamInput,
    Prisma.OrganizationBillingUncheckedUpdateWithoutTeamInput
  >;
};

export type OrganizationBillingUpdateWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionId?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionItemId?: Prisma.StringFieldUpdateOperationsInput | string;
  customerId?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  planName?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionStart?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  subscriptionTrialEnd?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  subscriptionEnd?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type OrganizationBillingUncheckedUpdateWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionId?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionItemId?: Prisma.StringFieldUpdateOperationsInput | string;
  customerId?: Prisma.StringFieldUpdateOperationsInput | string;
  status?: Prisma.StringFieldUpdateOperationsInput | string;
  planName?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionStart?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  subscriptionTrialEnd?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  subscriptionEnd?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type OrganizationBillingSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    teamId?: boolean;
    subscriptionId?: boolean;
    subscriptionItemId?: boolean;
    customerId?: boolean;
    status?: boolean;
    planName?: boolean;
    subscriptionStart?: boolean;
    subscriptionTrialEnd?: boolean;
    subscriptionEnd?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["organizationBilling"]
>;

export type OrganizationBillingSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    teamId?: boolean;
    subscriptionId?: boolean;
    subscriptionItemId?: boolean;
    customerId?: boolean;
    status?: boolean;
    planName?: boolean;
    subscriptionStart?: boolean;
    subscriptionTrialEnd?: boolean;
    subscriptionEnd?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["organizationBilling"]
>;

export type OrganizationBillingSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    teamId?: boolean;
    subscriptionId?: boolean;
    subscriptionItemId?: boolean;
    customerId?: boolean;
    status?: boolean;
    planName?: boolean;
    subscriptionStart?: boolean;
    subscriptionTrialEnd?: boolean;
    subscriptionEnd?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["organizationBilling"]
>;

export type OrganizationBillingSelectScalar = {
  id?: boolean;
  teamId?: boolean;
  subscriptionId?: boolean;
  subscriptionItemId?: boolean;
  customerId?: boolean;
  status?: boolean;
  planName?: boolean;
  subscriptionStart?: boolean;
  subscriptionTrialEnd?: boolean;
  subscriptionEnd?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type OrganizationBillingOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "teamId"
  | "subscriptionId"
  | "subscriptionItemId"
  | "customerId"
  | "status"
  | "planName"
  | "subscriptionStart"
  | "subscriptionTrialEnd"
  | "subscriptionEnd"
  | "createdAt"
  | "updatedAt",
  ExtArgs["result"]["organizationBilling"]
>;
export type OrganizationBillingInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
};
export type OrganizationBillingIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
};
export type OrganizationBillingIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
};

export type $OrganizationBillingPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "OrganizationBilling";
  objects: {
    team: Prisma.$TeamPayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      teamId: number;
      subscriptionId: string;
      subscriptionItemId: string;
      customerId: string;
      status: string;
      planName: string;
      subscriptionStart: Date | null;
      subscriptionTrialEnd: Date | null;
      subscriptionEnd: Date | null;
      createdAt: Date;
      updatedAt: Date;
    },
    ExtArgs["result"]["organizationBilling"]
  >;
  composites: {};
};

export type OrganizationBillingGetPayload<
  S extends boolean | null | undefined | OrganizationBillingDefaultArgs
> = runtime.Types.Result.GetResult<Prisma.$OrganizationBillingPayload, S>;

export type OrganizationBillingCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<OrganizationBillingFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: OrganizationBillingCountAggregateInputType | true;
};

export interface OrganizationBillingDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["OrganizationBilling"];
    meta: { name: "OrganizationBilling" };
  };
  /**
   * Find zero or one OrganizationBilling that matches the filter.
   * @param {OrganizationBillingFindUniqueArgs} args - Arguments to find a OrganizationBilling
   * @example
   * // Get one OrganizationBilling
   * const organizationBilling = await prisma.organizationBilling.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends OrganizationBillingFindUniqueArgs>(
    args: Prisma.SelectSubset<T, OrganizationBillingFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationBillingClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationBillingPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one OrganizationBilling that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {OrganizationBillingFindUniqueOrThrowArgs} args - Arguments to find a OrganizationBilling
   * @example
   * // Get one OrganizationBilling
   * const organizationBilling = await prisma.organizationBilling.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends OrganizationBillingFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, OrganizationBillingFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationBillingClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationBillingPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first OrganizationBilling that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationBillingFindFirstArgs} args - Arguments to find a OrganizationBilling
   * @example
   * // Get one OrganizationBilling
   * const organizationBilling = await prisma.organizationBilling.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends OrganizationBillingFindFirstArgs>(
    args?: Prisma.SelectSubset<T, OrganizationBillingFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationBillingClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationBillingPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first OrganizationBilling that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationBillingFindFirstOrThrowArgs} args - Arguments to find a OrganizationBilling
   * @example
   * // Get one OrganizationBilling
   * const organizationBilling = await prisma.organizationBilling.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends OrganizationBillingFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, OrganizationBillingFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationBillingClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationBillingPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more OrganizationBillings that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationBillingFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all OrganizationBillings
   * const organizationBillings = await prisma.organizationBilling.findMany()
   *
   * // Get first 10 OrganizationBillings
   * const organizationBillings = await prisma.organizationBilling.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const organizationBillingWithIdOnly = await prisma.organizationBilling.findMany({ select: { id: true } })
   *
   */
  findMany<T extends OrganizationBillingFindManyArgs>(
    args?: Prisma.SelectSubset<T, OrganizationBillingFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationBillingPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a OrganizationBilling.
   * @param {OrganizationBillingCreateArgs} args - Arguments to create a OrganizationBilling.
   * @example
   * // Create one OrganizationBilling
   * const OrganizationBilling = await prisma.organizationBilling.create({
   *   data: {
   *     // ... data to create a OrganizationBilling
   *   }
   * })
   *
   */
  create<T extends OrganizationBillingCreateArgs>(
    args: Prisma.SelectSubset<T, OrganizationBillingCreateArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationBillingClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationBillingPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many OrganizationBillings.
   * @param {OrganizationBillingCreateManyArgs} args - Arguments to create many OrganizationBillings.
   * @example
   * // Create many OrganizationBillings
   * const organizationBilling = await prisma.organizationBilling.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends OrganizationBillingCreateManyArgs>(
    args?: Prisma.SelectSubset<T, OrganizationBillingCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many OrganizationBillings and returns the data saved in the database.
   * @param {OrganizationBillingCreateManyAndReturnArgs} args - Arguments to create many OrganizationBillings.
   * @example
   * // Create many OrganizationBillings
   * const organizationBilling = await prisma.organizationBilling.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many OrganizationBillings and only return the `id`
   * const organizationBillingWithIdOnly = await prisma.organizationBilling.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends OrganizationBillingCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, OrganizationBillingCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationBillingPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a OrganizationBilling.
   * @param {OrganizationBillingDeleteArgs} args - Arguments to delete one OrganizationBilling.
   * @example
   * // Delete one OrganizationBilling
   * const OrganizationBilling = await prisma.organizationBilling.delete({
   *   where: {
   *     // ... filter to delete one OrganizationBilling
   *   }
   * })
   *
   */
  delete<T extends OrganizationBillingDeleteArgs>(
    args: Prisma.SelectSubset<T, OrganizationBillingDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationBillingClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationBillingPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one OrganizationBilling.
   * @param {OrganizationBillingUpdateArgs} args - Arguments to update one OrganizationBilling.
   * @example
   * // Update one OrganizationBilling
   * const organizationBilling = await prisma.organizationBilling.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends OrganizationBillingUpdateArgs>(
    args: Prisma.SelectSubset<T, OrganizationBillingUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationBillingClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationBillingPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more OrganizationBillings.
   * @param {OrganizationBillingDeleteManyArgs} args - Arguments to filter OrganizationBillings to delete.
   * @example
   * // Delete a few OrganizationBillings
   * const { count } = await prisma.organizationBilling.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends OrganizationBillingDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, OrganizationBillingDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more OrganizationBillings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationBillingUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many OrganizationBillings
   * const organizationBilling = await prisma.organizationBilling.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends OrganizationBillingUpdateManyArgs>(
    args: Prisma.SelectSubset<T, OrganizationBillingUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more OrganizationBillings and returns the data updated in the database.
   * @param {OrganizationBillingUpdateManyAndReturnArgs} args - Arguments to update many OrganizationBillings.
   * @example
   * // Update many OrganizationBillings
   * const organizationBilling = await prisma.organizationBilling.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more OrganizationBillings and only return the `id`
   * const organizationBillingWithIdOnly = await prisma.organizationBilling.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends OrganizationBillingUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, OrganizationBillingUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationBillingPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one OrganizationBilling.
   * @param {OrganizationBillingUpsertArgs} args - Arguments to update or create a OrganizationBilling.
   * @example
   * // Update or create a OrganizationBilling
   * const organizationBilling = await prisma.organizationBilling.upsert({
   *   create: {
   *     // ... data to create a OrganizationBilling
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the OrganizationBilling we want to update
   *   }
   * })
   */
  upsert<T extends OrganizationBillingUpsertArgs>(
    args: Prisma.SelectSubset<T, OrganizationBillingUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationBillingClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationBillingPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of OrganizationBillings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationBillingCountArgs} args - Arguments to filter OrganizationBillings to count.
   * @example
   * // Count the number of OrganizationBillings
   * const count = await prisma.organizationBilling.count({
   *   where: {
   *     // ... the filter for the OrganizationBillings we want to count
   *   }
   * })
   **/
  count<T extends OrganizationBillingCountArgs>(
    args?: Prisma.Subset<T, OrganizationBillingCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], OrganizationBillingCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a OrganizationBilling.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationBillingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends OrganizationBillingAggregateArgs>(
    args: Prisma.Subset<T, OrganizationBillingAggregateArgs>
  ): Prisma.PrismaPromise<GetOrganizationBillingAggregateType<T>>;

  /**
   * Group by OrganizationBilling.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationBillingGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends OrganizationBillingGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: OrganizationBillingGroupByArgs["orderBy"] }
      : { orderBy?: OrganizationBillingGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, OrganizationBillingGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetOrganizationBillingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the OrganizationBilling model
   */
  readonly fields: OrganizationBillingFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for OrganizationBilling.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__OrganizationBillingClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  team<T extends Prisma.TeamDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.TeamDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__TeamClient<
    | runtime.Types.Result.GetResult<Prisma.$TeamPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the OrganizationBilling model
 */
export interface OrganizationBillingFieldRefs {
  readonly id: Prisma.FieldRef<"OrganizationBilling", "String">;
  readonly teamId: Prisma.FieldRef<"OrganizationBilling", "Int">;
  readonly subscriptionId: Prisma.FieldRef<"OrganizationBilling", "String">;
  readonly subscriptionItemId: Prisma.FieldRef<"OrganizationBilling", "String">;
  readonly customerId: Prisma.FieldRef<"OrganizationBilling", "String">;
  readonly status: Prisma.FieldRef<"OrganizationBilling", "String">;
  readonly planName: Prisma.FieldRef<"OrganizationBilling", "String">;
  readonly subscriptionStart: Prisma.FieldRef<"OrganizationBilling", "DateTime">;
  readonly subscriptionTrialEnd: Prisma.FieldRef<"OrganizationBilling", "DateTime">;
  readonly subscriptionEnd: Prisma.FieldRef<"OrganizationBilling", "DateTime">;
  readonly createdAt: Prisma.FieldRef<"OrganizationBilling", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"OrganizationBilling", "DateTime">;
}

// Custom InputTypes
/**
 * OrganizationBilling findUnique
 */
export type OrganizationBillingFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationBilling
   */
  select?: Prisma.OrganizationBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationBilling
   */
  omit?: Prisma.OrganizationBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationBillingInclude<ExtArgs> | null;
  /**
   * Filter, which OrganizationBilling to fetch.
   */
  where: Prisma.OrganizationBillingWhereUniqueInput;
};

/**
 * OrganizationBilling findUniqueOrThrow
 */
export type OrganizationBillingFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationBilling
   */
  select?: Prisma.OrganizationBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationBilling
   */
  omit?: Prisma.OrganizationBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationBillingInclude<ExtArgs> | null;
  /**
   * Filter, which OrganizationBilling to fetch.
   */
  where: Prisma.OrganizationBillingWhereUniqueInput;
};

/**
 * OrganizationBilling findFirst
 */
export type OrganizationBillingFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationBilling
   */
  select?: Prisma.OrganizationBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationBilling
   */
  omit?: Prisma.OrganizationBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationBillingInclude<ExtArgs> | null;
  /**
   * Filter, which OrganizationBilling to fetch.
   */
  where?: Prisma.OrganizationBillingWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of OrganizationBillings to fetch.
   */
  orderBy?:
    | Prisma.OrganizationBillingOrderByWithRelationInput
    | Prisma.OrganizationBillingOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for OrganizationBillings.
   */
  cursor?: Prisma.OrganizationBillingWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` OrganizationBillings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` OrganizationBillings.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of OrganizationBillings.
   */
  distinct?: Prisma.OrganizationBillingScalarFieldEnum | Prisma.OrganizationBillingScalarFieldEnum[];
};

/**
 * OrganizationBilling findFirstOrThrow
 */
export type OrganizationBillingFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationBilling
   */
  select?: Prisma.OrganizationBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationBilling
   */
  omit?: Prisma.OrganizationBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationBillingInclude<ExtArgs> | null;
  /**
   * Filter, which OrganizationBilling to fetch.
   */
  where?: Prisma.OrganizationBillingWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of OrganizationBillings to fetch.
   */
  orderBy?:
    | Prisma.OrganizationBillingOrderByWithRelationInput
    | Prisma.OrganizationBillingOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for OrganizationBillings.
   */
  cursor?: Prisma.OrganizationBillingWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` OrganizationBillings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` OrganizationBillings.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of OrganizationBillings.
   */
  distinct?: Prisma.OrganizationBillingScalarFieldEnum | Prisma.OrganizationBillingScalarFieldEnum[];
};

/**
 * OrganizationBilling findMany
 */
export type OrganizationBillingFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationBilling
   */
  select?: Prisma.OrganizationBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationBilling
   */
  omit?: Prisma.OrganizationBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationBillingInclude<ExtArgs> | null;
  /**
   * Filter, which OrganizationBillings to fetch.
   */
  where?: Prisma.OrganizationBillingWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of OrganizationBillings to fetch.
   */
  orderBy?:
    | Prisma.OrganizationBillingOrderByWithRelationInput
    | Prisma.OrganizationBillingOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing OrganizationBillings.
   */
  cursor?: Prisma.OrganizationBillingWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` OrganizationBillings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` OrganizationBillings.
   */
  skip?: number;
  distinct?: Prisma.OrganizationBillingScalarFieldEnum | Prisma.OrganizationBillingScalarFieldEnum[];
};

/**
 * OrganizationBilling create
 */
export type OrganizationBillingCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationBilling
   */
  select?: Prisma.OrganizationBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationBilling
   */
  omit?: Prisma.OrganizationBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationBillingInclude<ExtArgs> | null;
  /**
   * The data needed to create a OrganizationBilling.
   */
  data: Prisma.XOR<Prisma.OrganizationBillingCreateInput, Prisma.OrganizationBillingUncheckedCreateInput>;
};

/**
 * OrganizationBilling createMany
 */
export type OrganizationBillingCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many OrganizationBillings.
   */
  data: Prisma.OrganizationBillingCreateManyInput | Prisma.OrganizationBillingCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * OrganizationBilling createManyAndReturn
 */
export type OrganizationBillingCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationBilling
   */
  select?: Prisma.OrganizationBillingSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationBilling
   */
  omit?: Prisma.OrganizationBillingOmit<ExtArgs> | null;
  /**
   * The data used to create many OrganizationBillings.
   */
  data: Prisma.OrganizationBillingCreateManyInput | Prisma.OrganizationBillingCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationBillingIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * OrganizationBilling update
 */
export type OrganizationBillingUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationBilling
   */
  select?: Prisma.OrganizationBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationBilling
   */
  omit?: Prisma.OrganizationBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationBillingInclude<ExtArgs> | null;
  /**
   * The data needed to update a OrganizationBilling.
   */
  data: Prisma.XOR<Prisma.OrganizationBillingUpdateInput, Prisma.OrganizationBillingUncheckedUpdateInput>;
  /**
   * Choose, which OrganizationBilling to update.
   */
  where: Prisma.OrganizationBillingWhereUniqueInput;
};

/**
 * OrganizationBilling updateMany
 */
export type OrganizationBillingUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update OrganizationBillings.
   */
  data: Prisma.XOR<
    Prisma.OrganizationBillingUpdateManyMutationInput,
    Prisma.OrganizationBillingUncheckedUpdateManyInput
  >;
  /**
   * Filter which OrganizationBillings to update
   */
  where?: Prisma.OrganizationBillingWhereInput;
  /**
   * Limit how many OrganizationBillings to update.
   */
  limit?: number;
};

/**
 * OrganizationBilling updateManyAndReturn
 */
export type OrganizationBillingUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationBilling
   */
  select?: Prisma.OrganizationBillingSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationBilling
   */
  omit?: Prisma.OrganizationBillingOmit<ExtArgs> | null;
  /**
   * The data used to update OrganizationBillings.
   */
  data: Prisma.XOR<
    Prisma.OrganizationBillingUpdateManyMutationInput,
    Prisma.OrganizationBillingUncheckedUpdateManyInput
  >;
  /**
   * Filter which OrganizationBillings to update
   */
  where?: Prisma.OrganizationBillingWhereInput;
  /**
   * Limit how many OrganizationBillings to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationBillingIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * OrganizationBilling upsert
 */
export type OrganizationBillingUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationBilling
   */
  select?: Prisma.OrganizationBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationBilling
   */
  omit?: Prisma.OrganizationBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationBillingInclude<ExtArgs> | null;
  /**
   * The filter to search for the OrganizationBilling to update in case it exists.
   */
  where: Prisma.OrganizationBillingWhereUniqueInput;
  /**
   * In case the OrganizationBilling found by the `where` argument doesn't exist, create a new OrganizationBilling with this data.
   */
  create: Prisma.XOR<Prisma.OrganizationBillingCreateInput, Prisma.OrganizationBillingUncheckedCreateInput>;
  /**
   * In case the OrganizationBilling was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.OrganizationBillingUpdateInput, Prisma.OrganizationBillingUncheckedUpdateInput>;
};

/**
 * OrganizationBilling delete
 */
export type OrganizationBillingDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationBilling
   */
  select?: Prisma.OrganizationBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationBilling
   */
  omit?: Prisma.OrganizationBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationBillingInclude<ExtArgs> | null;
  /**
   * Filter which OrganizationBilling to delete.
   */
  where: Prisma.OrganizationBillingWhereUniqueInput;
};

/**
 * OrganizationBilling deleteMany
 */
export type OrganizationBillingDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which OrganizationBillings to delete
   */
  where?: Prisma.OrganizationBillingWhereInput;
  /**
   * Limit how many OrganizationBillings to delete.
   */
  limit?: number;
};

/**
 * OrganizationBilling without action
 */
export type OrganizationBillingDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationBilling
   */
  select?: Prisma.OrganizationBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationBilling
   */
  omit?: Prisma.OrganizationBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationBillingInclude<ExtArgs> | null;
};
