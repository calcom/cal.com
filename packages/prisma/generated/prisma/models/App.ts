/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `App` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model App
 *
 */
export type AppModel = runtime.Types.Result.DefaultSelection<Prisma.$AppPayload>;

export type AggregateApp = {
  _count: AppCountAggregateOutputType | null;
  _min: AppMinAggregateOutputType | null;
  _max: AppMaxAggregateOutputType | null;
};

export type AppMinAggregateOutputType = {
  slug: string | null;
  dirName: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  enabled: boolean | null;
};

export type AppMaxAggregateOutputType = {
  slug: string | null;
  dirName: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  enabled: boolean | null;
};

export type AppCountAggregateOutputType = {
  slug: number;
  dirName: number;
  keys: number;
  categories: number;
  createdAt: number;
  updatedAt: number;
  enabled: number;
  _all: number;
};

export type AppMinAggregateInputType = {
  slug?: true;
  dirName?: true;
  createdAt?: true;
  updatedAt?: true;
  enabled?: true;
};

export type AppMaxAggregateInputType = {
  slug?: true;
  dirName?: true;
  createdAt?: true;
  updatedAt?: true;
  enabled?: true;
};

export type AppCountAggregateInputType = {
  slug?: true;
  dirName?: true;
  keys?: true;
  categories?: true;
  createdAt?: true;
  updatedAt?: true;
  enabled?: true;
  _all?: true;
};

export type AppAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which App to aggregate.
   */
  where?: Prisma.AppWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Apps to fetch.
   */
  orderBy?: Prisma.AppOrderByWithRelationInput | Prisma.AppOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.AppWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Apps from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Apps.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned Apps
   **/
  _count?: true | AppCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: AppMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: AppMaxAggregateInputType;
};

export type GetAppAggregateType<T extends AppAggregateArgs> = {
  [P in keyof T & keyof AggregateApp]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateApp[P]>
    : Prisma.GetScalarType<T[P], AggregateApp[P]>;
};

export type AppGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.AppWhereInput;
  orderBy?: Prisma.AppOrderByWithAggregationInput | Prisma.AppOrderByWithAggregationInput[];
  by: Prisma.AppScalarFieldEnum[] | Prisma.AppScalarFieldEnum;
  having?: Prisma.AppScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: AppCountAggregateInputType | true;
  _min?: AppMinAggregateInputType;
  _max?: AppMaxAggregateInputType;
};

export type AppGroupByOutputType = {
  slug: string;
  dirName: string;
  keys: runtime.JsonValue | null;
  categories: $Enums.AppCategories[];
  createdAt: Date;
  updatedAt: Date;
  enabled: boolean;
  _count: AppCountAggregateOutputType | null;
  _min: AppMinAggregateOutputType | null;
  _max: AppMaxAggregateOutputType | null;
};

type GetAppGroupByPayload<T extends AppGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<AppGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof AppGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], AppGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], AppGroupByOutputType[P]>;
    }
  >
>;

export type AppWhereInput = {
  AND?: Prisma.AppWhereInput | Prisma.AppWhereInput[];
  OR?: Prisma.AppWhereInput[];
  NOT?: Prisma.AppWhereInput | Prisma.AppWhereInput[];
  slug?: Prisma.StringFilter<"App"> | string;
  dirName?: Prisma.StringFilter<"App"> | string;
  keys?: Prisma.JsonNullableFilter<"App">;
  categories?: Prisma.EnumAppCategoriesNullableListFilter<"App">;
  createdAt?: Prisma.DateTimeFilter<"App"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"App"> | Date | string;
  enabled?: Prisma.BoolFilter<"App"> | boolean;
  credentials?: Prisma.CredentialListRelationFilter;
  payments?: Prisma.PaymentListRelationFilter;
  Webhook?: Prisma.WebhookListRelationFilter;
  ApiKey?: Prisma.ApiKeyListRelationFilter;
};

export type AppOrderByWithRelationInput = {
  slug?: Prisma.SortOrder;
  dirName?: Prisma.SortOrder;
  keys?: Prisma.SortOrderInput | Prisma.SortOrder;
  categories?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  credentials?: Prisma.CredentialOrderByRelationAggregateInput;
  payments?: Prisma.PaymentOrderByRelationAggregateInput;
  Webhook?: Prisma.WebhookOrderByRelationAggregateInput;
  ApiKey?: Prisma.ApiKeyOrderByRelationAggregateInput;
};

export type AppWhereUniqueInput = Prisma.AtLeast<
  {
    slug?: string;
    dirName?: string;
    AND?: Prisma.AppWhereInput | Prisma.AppWhereInput[];
    OR?: Prisma.AppWhereInput[];
    NOT?: Prisma.AppWhereInput | Prisma.AppWhereInput[];
    keys?: Prisma.JsonNullableFilter<"App">;
    categories?: Prisma.EnumAppCategoriesNullableListFilter<"App">;
    createdAt?: Prisma.DateTimeFilter<"App"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"App"> | Date | string;
    enabled?: Prisma.BoolFilter<"App"> | boolean;
    credentials?: Prisma.CredentialListRelationFilter;
    payments?: Prisma.PaymentListRelationFilter;
    Webhook?: Prisma.WebhookListRelationFilter;
    ApiKey?: Prisma.ApiKeyListRelationFilter;
  },
  "slug" | "slug" | "dirName"
>;

export type AppOrderByWithAggregationInput = {
  slug?: Prisma.SortOrder;
  dirName?: Prisma.SortOrder;
  keys?: Prisma.SortOrderInput | Prisma.SortOrder;
  categories?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  _count?: Prisma.AppCountOrderByAggregateInput;
  _max?: Prisma.AppMaxOrderByAggregateInput;
  _min?: Prisma.AppMinOrderByAggregateInput;
};

export type AppScalarWhereWithAggregatesInput = {
  AND?: Prisma.AppScalarWhereWithAggregatesInput | Prisma.AppScalarWhereWithAggregatesInput[];
  OR?: Prisma.AppScalarWhereWithAggregatesInput[];
  NOT?: Prisma.AppScalarWhereWithAggregatesInput | Prisma.AppScalarWhereWithAggregatesInput[];
  slug?: Prisma.StringWithAggregatesFilter<"App"> | string;
  dirName?: Prisma.StringWithAggregatesFilter<"App"> | string;
  keys?: Prisma.JsonNullableWithAggregatesFilter<"App">;
  categories?: Prisma.EnumAppCategoriesNullableListFilter<"App">;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"App"> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"App"> | Date | string;
  enabled?: Prisma.BoolWithAggregatesFilter<"App"> | boolean;
};

export type AppCreateInput = {
  slug: string;
  dirName: string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppCreatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Date | string;
  updatedAt?: Date | string;
  enabled?: boolean;
  credentials?: Prisma.CredentialCreateNestedManyWithoutAppInput;
  payments?: Prisma.PaymentCreateNestedManyWithoutAppInput;
  Webhook?: Prisma.WebhookCreateNestedManyWithoutAppInput;
  ApiKey?: Prisma.ApiKeyCreateNestedManyWithoutAppInput;
};

export type AppUncheckedCreateInput = {
  slug: string;
  dirName: string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppCreatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Date | string;
  updatedAt?: Date | string;
  enabled?: boolean;
  credentials?: Prisma.CredentialUncheckedCreateNestedManyWithoutAppInput;
  payments?: Prisma.PaymentUncheckedCreateNestedManyWithoutAppInput;
  Webhook?: Prisma.WebhookUncheckedCreateNestedManyWithoutAppInput;
  ApiKey?: Prisma.ApiKeyUncheckedCreateNestedManyWithoutAppInput;
};

export type AppUpdateInput = {
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  dirName?: Prisma.StringFieldUpdateOperationsInput | string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppUpdatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  credentials?: Prisma.CredentialUpdateManyWithoutAppNestedInput;
  payments?: Prisma.PaymentUpdateManyWithoutAppNestedInput;
  Webhook?: Prisma.WebhookUpdateManyWithoutAppNestedInput;
  ApiKey?: Prisma.ApiKeyUpdateManyWithoutAppNestedInput;
};

export type AppUncheckedUpdateInput = {
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  dirName?: Prisma.StringFieldUpdateOperationsInput | string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppUpdatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  credentials?: Prisma.CredentialUncheckedUpdateManyWithoutAppNestedInput;
  payments?: Prisma.PaymentUncheckedUpdateManyWithoutAppNestedInput;
  Webhook?: Prisma.WebhookUncheckedUpdateManyWithoutAppNestedInput;
  ApiKey?: Prisma.ApiKeyUncheckedUpdateManyWithoutAppNestedInput;
};

export type AppCreateManyInput = {
  slug: string;
  dirName: string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppCreatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Date | string;
  updatedAt?: Date | string;
  enabled?: boolean;
};

export type AppUpdateManyMutationInput = {
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  dirName?: Prisma.StringFieldUpdateOperationsInput | string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppUpdatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
};

export type AppUncheckedUpdateManyInput = {
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  dirName?: Prisma.StringFieldUpdateOperationsInput | string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppUpdatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
};

export type AppNullableScalarRelationFilter = {
  is?: Prisma.AppWhereInput | null;
  isNot?: Prisma.AppWhereInput | null;
};

export type EnumAppCategoriesNullableListFilter<$PrismaModel = never> = {
  equals?: $Enums.AppCategories[] | Prisma.ListEnumAppCategoriesFieldRefInput<$PrismaModel> | null;
  has?: $Enums.AppCategories | Prisma.EnumAppCategoriesFieldRefInput<$PrismaModel> | null;
  hasEvery?: $Enums.AppCategories[] | Prisma.ListEnumAppCategoriesFieldRefInput<$PrismaModel>;
  hasSome?: $Enums.AppCategories[] | Prisma.ListEnumAppCategoriesFieldRefInput<$PrismaModel>;
  isEmpty?: boolean;
};

export type AppCountOrderByAggregateInput = {
  slug?: Prisma.SortOrder;
  dirName?: Prisma.SortOrder;
  keys?: Prisma.SortOrder;
  categories?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
};

export type AppMaxOrderByAggregateInput = {
  slug?: Prisma.SortOrder;
  dirName?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
};

export type AppMinOrderByAggregateInput = {
  slug?: Prisma.SortOrder;
  dirName?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
};

export type AppCreateNestedOneWithoutCredentialsInput = {
  create?: Prisma.XOR<
    Prisma.AppCreateWithoutCredentialsInput,
    Prisma.AppUncheckedCreateWithoutCredentialsInput
  >;
  connectOrCreate?: Prisma.AppCreateOrConnectWithoutCredentialsInput;
  connect?: Prisma.AppWhereUniqueInput;
};

export type AppUpdateOneWithoutCredentialsNestedInput = {
  create?: Prisma.XOR<
    Prisma.AppCreateWithoutCredentialsInput,
    Prisma.AppUncheckedCreateWithoutCredentialsInput
  >;
  connectOrCreate?: Prisma.AppCreateOrConnectWithoutCredentialsInput;
  upsert?: Prisma.AppUpsertWithoutCredentialsInput;
  disconnect?: Prisma.AppWhereInput | boolean;
  delete?: Prisma.AppWhereInput | boolean;
  connect?: Prisma.AppWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.AppUpdateToOneWithWhereWithoutCredentialsInput,
      Prisma.AppUpdateWithoutCredentialsInput
    >,
    Prisma.AppUncheckedUpdateWithoutCredentialsInput
  >;
};

export type AppCreateNestedOneWithoutPaymentsInput = {
  create?: Prisma.XOR<Prisma.AppCreateWithoutPaymentsInput, Prisma.AppUncheckedCreateWithoutPaymentsInput>;
  connectOrCreate?: Prisma.AppCreateOrConnectWithoutPaymentsInput;
  connect?: Prisma.AppWhereUniqueInput;
};

export type AppUpdateOneWithoutPaymentsNestedInput = {
  create?: Prisma.XOR<Prisma.AppCreateWithoutPaymentsInput, Prisma.AppUncheckedCreateWithoutPaymentsInput>;
  connectOrCreate?: Prisma.AppCreateOrConnectWithoutPaymentsInput;
  upsert?: Prisma.AppUpsertWithoutPaymentsInput;
  disconnect?: Prisma.AppWhereInput | boolean;
  delete?: Prisma.AppWhereInput | boolean;
  connect?: Prisma.AppWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<Prisma.AppUpdateToOneWithWhereWithoutPaymentsInput, Prisma.AppUpdateWithoutPaymentsInput>,
    Prisma.AppUncheckedUpdateWithoutPaymentsInput
  >;
};

export type AppCreateNestedOneWithoutWebhookInput = {
  create?: Prisma.XOR<Prisma.AppCreateWithoutWebhookInput, Prisma.AppUncheckedCreateWithoutWebhookInput>;
  connectOrCreate?: Prisma.AppCreateOrConnectWithoutWebhookInput;
  connect?: Prisma.AppWhereUniqueInput;
};

export type AppUpdateOneWithoutWebhookNestedInput = {
  create?: Prisma.XOR<Prisma.AppCreateWithoutWebhookInput, Prisma.AppUncheckedCreateWithoutWebhookInput>;
  connectOrCreate?: Prisma.AppCreateOrConnectWithoutWebhookInput;
  upsert?: Prisma.AppUpsertWithoutWebhookInput;
  disconnect?: Prisma.AppWhereInput | boolean;
  delete?: Prisma.AppWhereInput | boolean;
  connect?: Prisma.AppWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<Prisma.AppUpdateToOneWithWhereWithoutWebhookInput, Prisma.AppUpdateWithoutWebhookInput>,
    Prisma.AppUncheckedUpdateWithoutWebhookInput
  >;
};

export type AppCreateNestedOneWithoutApiKeyInput = {
  create?: Prisma.XOR<Prisma.AppCreateWithoutApiKeyInput, Prisma.AppUncheckedCreateWithoutApiKeyInput>;
  connectOrCreate?: Prisma.AppCreateOrConnectWithoutApiKeyInput;
  connect?: Prisma.AppWhereUniqueInput;
};

export type AppUpdateOneWithoutApiKeyNestedInput = {
  create?: Prisma.XOR<Prisma.AppCreateWithoutApiKeyInput, Prisma.AppUncheckedCreateWithoutApiKeyInput>;
  connectOrCreate?: Prisma.AppCreateOrConnectWithoutApiKeyInput;
  upsert?: Prisma.AppUpsertWithoutApiKeyInput;
  disconnect?: Prisma.AppWhereInput | boolean;
  delete?: Prisma.AppWhereInput | boolean;
  connect?: Prisma.AppWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<Prisma.AppUpdateToOneWithWhereWithoutApiKeyInput, Prisma.AppUpdateWithoutApiKeyInput>,
    Prisma.AppUncheckedUpdateWithoutApiKeyInput
  >;
};

export type AppCreatecategoriesInput = {
  set: $Enums.AppCategories[];
};

export type AppUpdatecategoriesInput = {
  set?: $Enums.AppCategories[];
  push?: $Enums.AppCategories | $Enums.AppCategories[];
};

export type AppCreateWithoutCredentialsInput = {
  slug: string;
  dirName: string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppCreatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Date | string;
  updatedAt?: Date | string;
  enabled?: boolean;
  payments?: Prisma.PaymentCreateNestedManyWithoutAppInput;
  Webhook?: Prisma.WebhookCreateNestedManyWithoutAppInput;
  ApiKey?: Prisma.ApiKeyCreateNestedManyWithoutAppInput;
};

export type AppUncheckedCreateWithoutCredentialsInput = {
  slug: string;
  dirName: string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppCreatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Date | string;
  updatedAt?: Date | string;
  enabled?: boolean;
  payments?: Prisma.PaymentUncheckedCreateNestedManyWithoutAppInput;
  Webhook?: Prisma.WebhookUncheckedCreateNestedManyWithoutAppInput;
  ApiKey?: Prisma.ApiKeyUncheckedCreateNestedManyWithoutAppInput;
};

export type AppCreateOrConnectWithoutCredentialsInput = {
  where: Prisma.AppWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AppCreateWithoutCredentialsInput,
    Prisma.AppUncheckedCreateWithoutCredentialsInput
  >;
};

export type AppUpsertWithoutCredentialsInput = {
  update: Prisma.XOR<
    Prisma.AppUpdateWithoutCredentialsInput,
    Prisma.AppUncheckedUpdateWithoutCredentialsInput
  >;
  create: Prisma.XOR<
    Prisma.AppCreateWithoutCredentialsInput,
    Prisma.AppUncheckedCreateWithoutCredentialsInput
  >;
  where?: Prisma.AppWhereInput;
};

export type AppUpdateToOneWithWhereWithoutCredentialsInput = {
  where?: Prisma.AppWhereInput;
  data: Prisma.XOR<Prisma.AppUpdateWithoutCredentialsInput, Prisma.AppUncheckedUpdateWithoutCredentialsInput>;
};

export type AppUpdateWithoutCredentialsInput = {
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  dirName?: Prisma.StringFieldUpdateOperationsInput | string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppUpdatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  payments?: Prisma.PaymentUpdateManyWithoutAppNestedInput;
  Webhook?: Prisma.WebhookUpdateManyWithoutAppNestedInput;
  ApiKey?: Prisma.ApiKeyUpdateManyWithoutAppNestedInput;
};

export type AppUncheckedUpdateWithoutCredentialsInput = {
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  dirName?: Prisma.StringFieldUpdateOperationsInput | string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppUpdatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  payments?: Prisma.PaymentUncheckedUpdateManyWithoutAppNestedInput;
  Webhook?: Prisma.WebhookUncheckedUpdateManyWithoutAppNestedInput;
  ApiKey?: Prisma.ApiKeyUncheckedUpdateManyWithoutAppNestedInput;
};

export type AppCreateWithoutPaymentsInput = {
  slug: string;
  dirName: string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppCreatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Date | string;
  updatedAt?: Date | string;
  enabled?: boolean;
  credentials?: Prisma.CredentialCreateNestedManyWithoutAppInput;
  Webhook?: Prisma.WebhookCreateNestedManyWithoutAppInput;
  ApiKey?: Prisma.ApiKeyCreateNestedManyWithoutAppInput;
};

export type AppUncheckedCreateWithoutPaymentsInput = {
  slug: string;
  dirName: string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppCreatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Date | string;
  updatedAt?: Date | string;
  enabled?: boolean;
  credentials?: Prisma.CredentialUncheckedCreateNestedManyWithoutAppInput;
  Webhook?: Prisma.WebhookUncheckedCreateNestedManyWithoutAppInput;
  ApiKey?: Prisma.ApiKeyUncheckedCreateNestedManyWithoutAppInput;
};

export type AppCreateOrConnectWithoutPaymentsInput = {
  where: Prisma.AppWhereUniqueInput;
  create: Prisma.XOR<Prisma.AppCreateWithoutPaymentsInput, Prisma.AppUncheckedCreateWithoutPaymentsInput>;
};

export type AppUpsertWithoutPaymentsInput = {
  update: Prisma.XOR<Prisma.AppUpdateWithoutPaymentsInput, Prisma.AppUncheckedUpdateWithoutPaymentsInput>;
  create: Prisma.XOR<Prisma.AppCreateWithoutPaymentsInput, Prisma.AppUncheckedCreateWithoutPaymentsInput>;
  where?: Prisma.AppWhereInput;
};

export type AppUpdateToOneWithWhereWithoutPaymentsInput = {
  where?: Prisma.AppWhereInput;
  data: Prisma.XOR<Prisma.AppUpdateWithoutPaymentsInput, Prisma.AppUncheckedUpdateWithoutPaymentsInput>;
};

export type AppUpdateWithoutPaymentsInput = {
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  dirName?: Prisma.StringFieldUpdateOperationsInput | string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppUpdatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  credentials?: Prisma.CredentialUpdateManyWithoutAppNestedInput;
  Webhook?: Prisma.WebhookUpdateManyWithoutAppNestedInput;
  ApiKey?: Prisma.ApiKeyUpdateManyWithoutAppNestedInput;
};

export type AppUncheckedUpdateWithoutPaymentsInput = {
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  dirName?: Prisma.StringFieldUpdateOperationsInput | string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppUpdatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  credentials?: Prisma.CredentialUncheckedUpdateManyWithoutAppNestedInput;
  Webhook?: Prisma.WebhookUncheckedUpdateManyWithoutAppNestedInput;
  ApiKey?: Prisma.ApiKeyUncheckedUpdateManyWithoutAppNestedInput;
};

export type AppCreateWithoutWebhookInput = {
  slug: string;
  dirName: string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppCreatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Date | string;
  updatedAt?: Date | string;
  enabled?: boolean;
  credentials?: Prisma.CredentialCreateNestedManyWithoutAppInput;
  payments?: Prisma.PaymentCreateNestedManyWithoutAppInput;
  ApiKey?: Prisma.ApiKeyCreateNestedManyWithoutAppInput;
};

export type AppUncheckedCreateWithoutWebhookInput = {
  slug: string;
  dirName: string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppCreatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Date | string;
  updatedAt?: Date | string;
  enabled?: boolean;
  credentials?: Prisma.CredentialUncheckedCreateNestedManyWithoutAppInput;
  payments?: Prisma.PaymentUncheckedCreateNestedManyWithoutAppInput;
  ApiKey?: Prisma.ApiKeyUncheckedCreateNestedManyWithoutAppInput;
};

export type AppCreateOrConnectWithoutWebhookInput = {
  where: Prisma.AppWhereUniqueInput;
  create: Prisma.XOR<Prisma.AppCreateWithoutWebhookInput, Prisma.AppUncheckedCreateWithoutWebhookInput>;
};

export type AppUpsertWithoutWebhookInput = {
  update: Prisma.XOR<Prisma.AppUpdateWithoutWebhookInput, Prisma.AppUncheckedUpdateWithoutWebhookInput>;
  create: Prisma.XOR<Prisma.AppCreateWithoutWebhookInput, Prisma.AppUncheckedCreateWithoutWebhookInput>;
  where?: Prisma.AppWhereInput;
};

export type AppUpdateToOneWithWhereWithoutWebhookInput = {
  where?: Prisma.AppWhereInput;
  data: Prisma.XOR<Prisma.AppUpdateWithoutWebhookInput, Prisma.AppUncheckedUpdateWithoutWebhookInput>;
};

export type AppUpdateWithoutWebhookInput = {
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  dirName?: Prisma.StringFieldUpdateOperationsInput | string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppUpdatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  credentials?: Prisma.CredentialUpdateManyWithoutAppNestedInput;
  payments?: Prisma.PaymentUpdateManyWithoutAppNestedInput;
  ApiKey?: Prisma.ApiKeyUpdateManyWithoutAppNestedInput;
};

export type AppUncheckedUpdateWithoutWebhookInput = {
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  dirName?: Prisma.StringFieldUpdateOperationsInput | string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppUpdatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  credentials?: Prisma.CredentialUncheckedUpdateManyWithoutAppNestedInput;
  payments?: Prisma.PaymentUncheckedUpdateManyWithoutAppNestedInput;
  ApiKey?: Prisma.ApiKeyUncheckedUpdateManyWithoutAppNestedInput;
};

export type AppCreateWithoutApiKeyInput = {
  slug: string;
  dirName: string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppCreatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Date | string;
  updatedAt?: Date | string;
  enabled?: boolean;
  credentials?: Prisma.CredentialCreateNestedManyWithoutAppInput;
  payments?: Prisma.PaymentCreateNestedManyWithoutAppInput;
  Webhook?: Prisma.WebhookCreateNestedManyWithoutAppInput;
};

export type AppUncheckedCreateWithoutApiKeyInput = {
  slug: string;
  dirName: string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppCreatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Date | string;
  updatedAt?: Date | string;
  enabled?: boolean;
  credentials?: Prisma.CredentialUncheckedCreateNestedManyWithoutAppInput;
  payments?: Prisma.PaymentUncheckedCreateNestedManyWithoutAppInput;
  Webhook?: Prisma.WebhookUncheckedCreateNestedManyWithoutAppInput;
};

export type AppCreateOrConnectWithoutApiKeyInput = {
  where: Prisma.AppWhereUniqueInput;
  create: Prisma.XOR<Prisma.AppCreateWithoutApiKeyInput, Prisma.AppUncheckedCreateWithoutApiKeyInput>;
};

export type AppUpsertWithoutApiKeyInput = {
  update: Prisma.XOR<Prisma.AppUpdateWithoutApiKeyInput, Prisma.AppUncheckedUpdateWithoutApiKeyInput>;
  create: Prisma.XOR<Prisma.AppCreateWithoutApiKeyInput, Prisma.AppUncheckedCreateWithoutApiKeyInput>;
  where?: Prisma.AppWhereInput;
};

export type AppUpdateToOneWithWhereWithoutApiKeyInput = {
  where?: Prisma.AppWhereInput;
  data: Prisma.XOR<Prisma.AppUpdateWithoutApiKeyInput, Prisma.AppUncheckedUpdateWithoutApiKeyInput>;
};

export type AppUpdateWithoutApiKeyInput = {
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  dirName?: Prisma.StringFieldUpdateOperationsInput | string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppUpdatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  credentials?: Prisma.CredentialUpdateManyWithoutAppNestedInput;
  payments?: Prisma.PaymentUpdateManyWithoutAppNestedInput;
  Webhook?: Prisma.WebhookUpdateManyWithoutAppNestedInput;
};

export type AppUncheckedUpdateWithoutApiKeyInput = {
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  dirName?: Prisma.StringFieldUpdateOperationsInput | string;
  keys?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  categories?: Prisma.AppUpdatecategoriesInput | $Enums.AppCategories[];
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  credentials?: Prisma.CredentialUncheckedUpdateManyWithoutAppNestedInput;
  payments?: Prisma.PaymentUncheckedUpdateManyWithoutAppNestedInput;
  Webhook?: Prisma.WebhookUncheckedUpdateManyWithoutAppNestedInput;
};

/**
 * Count Type AppCountOutputType
 */

export type AppCountOutputType = {
  credentials: number;
  payments: number;
  Webhook: number;
  ApiKey: number;
};

export type AppCountOutputTypeSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  credentials?: boolean | AppCountOutputTypeCountCredentialsArgs;
  payments?: boolean | AppCountOutputTypeCountPaymentsArgs;
  Webhook?: boolean | AppCountOutputTypeCountWebhookArgs;
  ApiKey?: boolean | AppCountOutputTypeCountApiKeyArgs;
};

/**
 * AppCountOutputType without action
 */
export type AppCountOutputTypeDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AppCountOutputType
   */
  select?: Prisma.AppCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * AppCountOutputType without action
 */
export type AppCountOutputTypeCountCredentialsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.CredentialWhereInput;
};

/**
 * AppCountOutputType without action
 */
export type AppCountOutputTypeCountPaymentsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.PaymentWhereInput;
};

/**
 * AppCountOutputType without action
 */
export type AppCountOutputTypeCountWebhookArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.WebhookWhereInput;
};

/**
 * AppCountOutputType without action
 */
export type AppCountOutputTypeCountApiKeyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.ApiKeyWhereInput;
};

export type AppSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    slug?: boolean;
    dirName?: boolean;
    keys?: boolean;
    categories?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    enabled?: boolean;
    credentials?: boolean | Prisma.App$credentialsArgs<ExtArgs>;
    payments?: boolean | Prisma.App$paymentsArgs<ExtArgs>;
    Webhook?: boolean | Prisma.App$WebhookArgs<ExtArgs>;
    ApiKey?: boolean | Prisma.App$ApiKeyArgs<ExtArgs>;
    _count?: boolean | Prisma.AppCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["app"]
>;

export type AppSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    slug?: boolean;
    dirName?: boolean;
    keys?: boolean;
    categories?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    enabled?: boolean;
  },
  ExtArgs["result"]["app"]
>;

export type AppSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    slug?: boolean;
    dirName?: boolean;
    keys?: boolean;
    categories?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    enabled?: boolean;
  },
  ExtArgs["result"]["app"]
>;

export type AppSelectScalar = {
  slug?: boolean;
  dirName?: boolean;
  keys?: boolean;
  categories?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
  enabled?: boolean;
};

export type AppOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  "slug" | "dirName" | "keys" | "categories" | "createdAt" | "updatedAt" | "enabled",
  ExtArgs["result"]["app"]
>;
export type AppInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  credentials?: boolean | Prisma.App$credentialsArgs<ExtArgs>;
  payments?: boolean | Prisma.App$paymentsArgs<ExtArgs>;
  Webhook?: boolean | Prisma.App$WebhookArgs<ExtArgs>;
  ApiKey?: boolean | Prisma.App$ApiKeyArgs<ExtArgs>;
  _count?: boolean | Prisma.AppCountOutputTypeDefaultArgs<ExtArgs>;
};
export type AppIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {};
export type AppIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {};

export type $AppPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "App";
  objects: {
    credentials: Prisma.$CredentialPayload<ExtArgs>[];
    payments: Prisma.$PaymentPayload<ExtArgs>[];
    Webhook: Prisma.$WebhookPayload<ExtArgs>[];
    ApiKey: Prisma.$ApiKeyPayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      slug: string;
      dirName: string;
      keys: runtime.JsonValue | null;
      categories: $Enums.AppCategories[];
      createdAt: Date;
      updatedAt: Date;
      enabled: boolean;
    },
    ExtArgs["result"]["app"]
  >;
  composites: {};
};

export type AppGetPayload<S extends boolean | null | undefined | AppDefaultArgs> =
  runtime.Types.Result.GetResult<Prisma.$AppPayload, S>;

export type AppCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<AppFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: AppCountAggregateInputType | true;
};

export interface AppDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>["model"]["App"]; meta: { name: "App" } };
  /**
   * Find zero or one App that matches the filter.
   * @param {AppFindUniqueArgs} args - Arguments to find a App
   * @example
   * // Get one App
   * const app = await prisma.app.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AppFindUniqueArgs>(
    args: Prisma.SelectSubset<T, AppFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__AppClient<
    runtime.Types.Result.GetResult<Prisma.$AppPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one App that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AppFindUniqueOrThrowArgs} args - Arguments to find a App
   * @example
   * // Get one App
   * const app = await prisma.app.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AppFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, AppFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__AppClient<
    runtime.Types.Result.GetResult<Prisma.$AppPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first App that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppFindFirstArgs} args - Arguments to find a App
   * @example
   * // Get one App
   * const app = await prisma.app.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AppFindFirstArgs>(
    args?: Prisma.SelectSubset<T, AppFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__AppClient<
    runtime.Types.Result.GetResult<Prisma.$AppPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first App that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppFindFirstOrThrowArgs} args - Arguments to find a App
   * @example
   * // Get one App
   * const app = await prisma.app.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AppFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, AppFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__AppClient<
    runtime.Types.Result.GetResult<Prisma.$AppPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more Apps that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Apps
   * const apps = await prisma.app.findMany()
   *
   * // Get first 10 Apps
   * const apps = await prisma.app.findMany({ take: 10 })
   *
   * // Only select the `slug`
   * const appWithSlugOnly = await prisma.app.findMany({ select: { slug: true } })
   *
   */
  findMany<T extends AppFindManyArgs>(
    args?: Prisma.SelectSubset<T, AppFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$AppPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>
  >;

  /**
   * Create a App.
   * @param {AppCreateArgs} args - Arguments to create a App.
   * @example
   * // Create one App
   * const App = await prisma.app.create({
   *   data: {
   *     // ... data to create a App
   *   }
   * })
   *
   */
  create<T extends AppCreateArgs>(
    args: Prisma.SelectSubset<T, AppCreateArgs<ExtArgs>>
  ): Prisma.Prisma__AppClient<
    runtime.Types.Result.GetResult<Prisma.$AppPayload<ExtArgs>, T, "create", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many Apps.
   * @param {AppCreateManyArgs} args - Arguments to create many Apps.
   * @example
   * // Create many Apps
   * const app = await prisma.app.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends AppCreateManyArgs>(
    args?: Prisma.SelectSubset<T, AppCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many Apps and returns the data saved in the database.
   * @param {AppCreateManyAndReturnArgs} args - Arguments to create many Apps.
   * @example
   * // Create many Apps
   * const app = await prisma.app.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many Apps and only return the `slug`
   * const appWithSlugOnly = await prisma.app.createManyAndReturn({
   *   select: { slug: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends AppCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, AppCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$AppPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>
  >;

  /**
   * Delete a App.
   * @param {AppDeleteArgs} args - Arguments to delete one App.
   * @example
   * // Delete one App
   * const App = await prisma.app.delete({
   *   where: {
   *     // ... filter to delete one App
   *   }
   * })
   *
   */
  delete<T extends AppDeleteArgs>(
    args: Prisma.SelectSubset<T, AppDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__AppClient<
    runtime.Types.Result.GetResult<Prisma.$AppPayload<ExtArgs>, T, "delete", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one App.
   * @param {AppUpdateArgs} args - Arguments to update one App.
   * @example
   * // Update one App
   * const app = await prisma.app.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends AppUpdateArgs>(
    args: Prisma.SelectSubset<T, AppUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__AppClient<
    runtime.Types.Result.GetResult<Prisma.$AppPayload<ExtArgs>, T, "update", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more Apps.
   * @param {AppDeleteManyArgs} args - Arguments to filter Apps to delete.
   * @example
   * // Delete a few Apps
   * const { count } = await prisma.app.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends AppDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, AppDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Apps.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Apps
   * const app = await prisma.app.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends AppUpdateManyArgs>(
    args: Prisma.SelectSubset<T, AppUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Apps and returns the data updated in the database.
   * @param {AppUpdateManyAndReturnArgs} args - Arguments to update many Apps.
   * @example
   * // Update many Apps
   * const app = await prisma.app.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more Apps and only return the `slug`
   * const appWithSlugOnly = await prisma.app.updateManyAndReturn({
   *   select: { slug: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends AppUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, AppUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$AppPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>
  >;

  /**
   * Create or update one App.
   * @param {AppUpsertArgs} args - Arguments to update or create a App.
   * @example
   * // Update or create a App
   * const app = await prisma.app.upsert({
   *   create: {
   *     // ... data to create a App
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the App we want to update
   *   }
   * })
   */
  upsert<T extends AppUpsertArgs>(
    args: Prisma.SelectSubset<T, AppUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__AppClient<
    runtime.Types.Result.GetResult<Prisma.$AppPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of Apps.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppCountArgs} args - Arguments to filter Apps to count.
   * @example
   * // Count the number of Apps
   * const count = await prisma.app.count({
   *   where: {
   *     // ... the filter for the Apps we want to count
   *   }
   * })
   **/
  count<T extends AppCountArgs>(
    args?: Prisma.Subset<T, AppCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], AppCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a App.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends AppAggregateArgs>(
    args: Prisma.Subset<T, AppAggregateArgs>
  ): Prisma.PrismaPromise<GetAppAggregateType<T>>;

  /**
   * Group by App.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AppGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends AppGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AppGroupByArgs["orderBy"] }
      : { orderBy?: AppGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, AppGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetAppGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the App model
   */
  readonly fields: AppFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for App.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AppClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  credentials<T extends Prisma.App$credentialsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.App$credentialsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<Prisma.$CredentialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>
    | Null
  >;
  payments<T extends Prisma.App$paymentsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.App$paymentsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null
  >;
  Webhook<T extends Prisma.App$WebhookArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.App$WebhookArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$WebhookPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null
  >;
  ApiKey<T extends Prisma.App$ApiKeyArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.App$ApiKeyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the App model
 */
export interface AppFieldRefs {
  readonly slug: Prisma.FieldRef<"App", "String">;
  readonly dirName: Prisma.FieldRef<"App", "String">;
  readonly keys: Prisma.FieldRef<"App", "Json">;
  readonly categories: Prisma.FieldRef<"App", "AppCategories[]">;
  readonly createdAt: Prisma.FieldRef<"App", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"App", "DateTime">;
  readonly enabled: Prisma.FieldRef<"App", "Boolean">;
}

// Custom InputTypes
/**
 * App findUnique
 */
export type AppFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the App
   */
  select?: Prisma.AppSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the App
   */
  omit?: Prisma.AppOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppInclude<ExtArgs> | null;
  /**
   * Filter, which App to fetch.
   */
  where: Prisma.AppWhereUniqueInput;
};

/**
 * App findUniqueOrThrow
 */
export type AppFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the App
   */
  select?: Prisma.AppSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the App
   */
  omit?: Prisma.AppOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppInclude<ExtArgs> | null;
  /**
   * Filter, which App to fetch.
   */
  where: Prisma.AppWhereUniqueInput;
};

/**
 * App findFirst
 */
export type AppFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the App
   */
  select?: Prisma.AppSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the App
   */
  omit?: Prisma.AppOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppInclude<ExtArgs> | null;
  /**
   * Filter, which App to fetch.
   */
  where?: Prisma.AppWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Apps to fetch.
   */
  orderBy?: Prisma.AppOrderByWithRelationInput | Prisma.AppOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Apps.
   */
  cursor?: Prisma.AppWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Apps from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Apps.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Apps.
   */
  distinct?: Prisma.AppScalarFieldEnum | Prisma.AppScalarFieldEnum[];
};

/**
 * App findFirstOrThrow
 */
export type AppFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the App
   */
  select?: Prisma.AppSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the App
   */
  omit?: Prisma.AppOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppInclude<ExtArgs> | null;
  /**
   * Filter, which App to fetch.
   */
  where?: Prisma.AppWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Apps to fetch.
   */
  orderBy?: Prisma.AppOrderByWithRelationInput | Prisma.AppOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Apps.
   */
  cursor?: Prisma.AppWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Apps from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Apps.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Apps.
   */
  distinct?: Prisma.AppScalarFieldEnum | Prisma.AppScalarFieldEnum[];
};

/**
 * App findMany
 */
export type AppFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the App
   */
  select?: Prisma.AppSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the App
   */
  omit?: Prisma.AppOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppInclude<ExtArgs> | null;
  /**
   * Filter, which Apps to fetch.
   */
  where?: Prisma.AppWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Apps to fetch.
   */
  orderBy?: Prisma.AppOrderByWithRelationInput | Prisma.AppOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing Apps.
   */
  cursor?: Prisma.AppWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Apps from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Apps.
   */
  skip?: number;
  distinct?: Prisma.AppScalarFieldEnum | Prisma.AppScalarFieldEnum[];
};

/**
 * App create
 */
export type AppCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the App
   */
  select?: Prisma.AppSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the App
   */
  omit?: Prisma.AppOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppInclude<ExtArgs> | null;
  /**
   * The data needed to create a App.
   */
  data: Prisma.XOR<Prisma.AppCreateInput, Prisma.AppUncheckedCreateInput>;
};

/**
 * App createMany
 */
export type AppCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many Apps.
   */
  data: Prisma.AppCreateManyInput | Prisma.AppCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * App createManyAndReturn
 */
export type AppCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the App
   */
  select?: Prisma.AppSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the App
   */
  omit?: Prisma.AppOmit<ExtArgs> | null;
  /**
   * The data used to create many Apps.
   */
  data: Prisma.AppCreateManyInput | Prisma.AppCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * App update
 */
export type AppUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the App
   */
  select?: Prisma.AppSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the App
   */
  omit?: Prisma.AppOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppInclude<ExtArgs> | null;
  /**
   * The data needed to update a App.
   */
  data: Prisma.XOR<Prisma.AppUpdateInput, Prisma.AppUncheckedUpdateInput>;
  /**
   * Choose, which App to update.
   */
  where: Prisma.AppWhereUniqueInput;
};

/**
 * App updateMany
 */
export type AppUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update Apps.
   */
  data: Prisma.XOR<Prisma.AppUpdateManyMutationInput, Prisma.AppUncheckedUpdateManyInput>;
  /**
   * Filter which Apps to update
   */
  where?: Prisma.AppWhereInput;
  /**
   * Limit how many Apps to update.
   */
  limit?: number;
};

/**
 * App updateManyAndReturn
 */
export type AppUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the App
   */
  select?: Prisma.AppSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the App
   */
  omit?: Prisma.AppOmit<ExtArgs> | null;
  /**
   * The data used to update Apps.
   */
  data: Prisma.XOR<Prisma.AppUpdateManyMutationInput, Prisma.AppUncheckedUpdateManyInput>;
  /**
   * Filter which Apps to update
   */
  where?: Prisma.AppWhereInput;
  /**
   * Limit how many Apps to update.
   */
  limit?: number;
};

/**
 * App upsert
 */
export type AppUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the App
   */
  select?: Prisma.AppSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the App
   */
  omit?: Prisma.AppOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppInclude<ExtArgs> | null;
  /**
   * The filter to search for the App to update in case it exists.
   */
  where: Prisma.AppWhereUniqueInput;
  /**
   * In case the App found by the `where` argument doesn't exist, create a new App with this data.
   */
  create: Prisma.XOR<Prisma.AppCreateInput, Prisma.AppUncheckedCreateInput>;
  /**
   * In case the App was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.AppUpdateInput, Prisma.AppUncheckedUpdateInput>;
};

/**
 * App delete
 */
export type AppDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the App
   */
  select?: Prisma.AppSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the App
   */
  omit?: Prisma.AppOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppInclude<ExtArgs> | null;
  /**
   * Filter which App to delete.
   */
  where: Prisma.AppWhereUniqueInput;
};

/**
 * App deleteMany
 */
export type AppDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which Apps to delete
   */
  where?: Prisma.AppWhereInput;
  /**
   * Limit how many Apps to delete.
   */
  limit?: number;
};

/**
 * App.credentials
 */
export type App$credentialsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Credential
   */
  select?: Prisma.CredentialSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Credential
   */
  omit?: Prisma.CredentialOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CredentialInclude<ExtArgs> | null;
  where?: Prisma.CredentialWhereInput;
  orderBy?: Prisma.CredentialOrderByWithRelationInput | Prisma.CredentialOrderByWithRelationInput[];
  cursor?: Prisma.CredentialWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.CredentialScalarFieldEnum | Prisma.CredentialScalarFieldEnum[];
};

/**
 * App.payments
 */
export type App$paymentsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Payment
   */
  select?: Prisma.PaymentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Payment
   */
  omit?: Prisma.PaymentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PaymentInclude<ExtArgs> | null;
  where?: Prisma.PaymentWhereInput;
  orderBy?: Prisma.PaymentOrderByWithRelationInput | Prisma.PaymentOrderByWithRelationInput[];
  cursor?: Prisma.PaymentWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.PaymentScalarFieldEnum | Prisma.PaymentScalarFieldEnum[];
};

/**
 * App.Webhook
 */
export type App$WebhookArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Webhook
   */
  select?: Prisma.WebhookSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Webhook
   */
  omit?: Prisma.WebhookOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebhookInclude<ExtArgs> | null;
  where?: Prisma.WebhookWhereInput;
  orderBy?: Prisma.WebhookOrderByWithRelationInput | Prisma.WebhookOrderByWithRelationInput[];
  cursor?: Prisma.WebhookWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.WebhookScalarFieldEnum | Prisma.WebhookScalarFieldEnum[];
};

/**
 * App.ApiKey
 */
export type App$ApiKeyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the ApiKey
   */
  select?: Prisma.ApiKeySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ApiKey
   */
  omit?: Prisma.ApiKeyOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApiKeyInclude<ExtArgs> | null;
  where?: Prisma.ApiKeyWhereInput;
  orderBy?: Prisma.ApiKeyOrderByWithRelationInput | Prisma.ApiKeyOrderByWithRelationInput[];
  cursor?: Prisma.ApiKeyWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.ApiKeyScalarFieldEnum | Prisma.ApiKeyScalarFieldEnum[];
};

/**
 * App without action
 */
export type AppDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the App
   */
  select?: Prisma.AppSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the App
   */
  omit?: Prisma.AppOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppInclude<ExtArgs> | null;
};
