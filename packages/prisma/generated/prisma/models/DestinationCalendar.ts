/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `DestinationCalendar` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model DestinationCalendar
 *
 */
export type DestinationCalendarModel =
  runtime.Types.Result.DefaultSelection<Prisma.$DestinationCalendarPayload>;

export type AggregateDestinationCalendar = {
  _count: DestinationCalendarCountAggregateOutputType | null;
  _avg: DestinationCalendarAvgAggregateOutputType | null;
  _sum: DestinationCalendarSumAggregateOutputType | null;
  _min: DestinationCalendarMinAggregateOutputType | null;
  _max: DestinationCalendarMaxAggregateOutputType | null;
};

export type DestinationCalendarAvgAggregateOutputType = {
  id: number | null;
  userId: number | null;
  eventTypeId: number | null;
  credentialId: number | null;
};

export type DestinationCalendarSumAggregateOutputType = {
  id: number | null;
  userId: number | null;
  eventTypeId: number | null;
  credentialId: number | null;
};

export type DestinationCalendarMinAggregateOutputType = {
  id: number | null;
  integration: string | null;
  externalId: string | null;
  primaryEmail: string | null;
  userId: number | null;
  eventTypeId: number | null;
  credentialId: number | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  delegationCredentialId: string | null;
  domainWideDelegationCredentialId: string | null;
};

export type DestinationCalendarMaxAggregateOutputType = {
  id: number | null;
  integration: string | null;
  externalId: string | null;
  primaryEmail: string | null;
  userId: number | null;
  eventTypeId: number | null;
  credentialId: number | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  delegationCredentialId: string | null;
  domainWideDelegationCredentialId: string | null;
};

export type DestinationCalendarCountAggregateOutputType = {
  id: number;
  integration: number;
  externalId: number;
  primaryEmail: number;
  userId: number;
  eventTypeId: number;
  credentialId: number;
  createdAt: number;
  updatedAt: number;
  delegationCredentialId: number;
  domainWideDelegationCredentialId: number;
  _all: number;
};

export type DestinationCalendarAvgAggregateInputType = {
  id?: true;
  userId?: true;
  eventTypeId?: true;
  credentialId?: true;
};

export type DestinationCalendarSumAggregateInputType = {
  id?: true;
  userId?: true;
  eventTypeId?: true;
  credentialId?: true;
};

export type DestinationCalendarMinAggregateInputType = {
  id?: true;
  integration?: true;
  externalId?: true;
  primaryEmail?: true;
  userId?: true;
  eventTypeId?: true;
  credentialId?: true;
  createdAt?: true;
  updatedAt?: true;
  delegationCredentialId?: true;
  domainWideDelegationCredentialId?: true;
};

export type DestinationCalendarMaxAggregateInputType = {
  id?: true;
  integration?: true;
  externalId?: true;
  primaryEmail?: true;
  userId?: true;
  eventTypeId?: true;
  credentialId?: true;
  createdAt?: true;
  updatedAt?: true;
  delegationCredentialId?: true;
  domainWideDelegationCredentialId?: true;
};

export type DestinationCalendarCountAggregateInputType = {
  id?: true;
  integration?: true;
  externalId?: true;
  primaryEmail?: true;
  userId?: true;
  eventTypeId?: true;
  credentialId?: true;
  createdAt?: true;
  updatedAt?: true;
  delegationCredentialId?: true;
  domainWideDelegationCredentialId?: true;
  _all?: true;
};

export type DestinationCalendarAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which DestinationCalendar to aggregate.
   */
  where?: Prisma.DestinationCalendarWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of DestinationCalendars to fetch.
   */
  orderBy?:
    | Prisma.DestinationCalendarOrderByWithRelationInput
    | Prisma.DestinationCalendarOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.DestinationCalendarWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` DestinationCalendars from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` DestinationCalendars.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned DestinationCalendars
   **/
  _count?: true | DestinationCalendarCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: DestinationCalendarAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: DestinationCalendarSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: DestinationCalendarMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: DestinationCalendarMaxAggregateInputType;
};

export type GetDestinationCalendarAggregateType<T extends DestinationCalendarAggregateArgs> = {
  [P in keyof T & keyof AggregateDestinationCalendar]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateDestinationCalendar[P]>
    : Prisma.GetScalarType<T[P], AggregateDestinationCalendar[P]>;
};

export type DestinationCalendarGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.DestinationCalendarWhereInput;
  orderBy?:
    | Prisma.DestinationCalendarOrderByWithAggregationInput
    | Prisma.DestinationCalendarOrderByWithAggregationInput[];
  by: Prisma.DestinationCalendarScalarFieldEnum[] | Prisma.DestinationCalendarScalarFieldEnum;
  having?: Prisma.DestinationCalendarScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: DestinationCalendarCountAggregateInputType | true;
  _avg?: DestinationCalendarAvgAggregateInputType;
  _sum?: DestinationCalendarSumAggregateInputType;
  _min?: DestinationCalendarMinAggregateInputType;
  _max?: DestinationCalendarMaxAggregateInputType;
};

export type DestinationCalendarGroupByOutputType = {
  id: number;
  integration: string;
  externalId: string;
  primaryEmail: string | null;
  userId: number | null;
  eventTypeId: number | null;
  credentialId: number | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  delegationCredentialId: string | null;
  domainWideDelegationCredentialId: string | null;
  _count: DestinationCalendarCountAggregateOutputType | null;
  _avg: DestinationCalendarAvgAggregateOutputType | null;
  _sum: DestinationCalendarSumAggregateOutputType | null;
  _min: DestinationCalendarMinAggregateOutputType | null;
  _max: DestinationCalendarMaxAggregateOutputType | null;
};

type GetDestinationCalendarGroupByPayload<T extends DestinationCalendarGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<DestinationCalendarGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof DestinationCalendarGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], DestinationCalendarGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], DestinationCalendarGroupByOutputType[P]>;
    }
  >
>;

export type DestinationCalendarWhereInput = {
  AND?: Prisma.DestinationCalendarWhereInput | Prisma.DestinationCalendarWhereInput[];
  OR?: Prisma.DestinationCalendarWhereInput[];
  NOT?: Prisma.DestinationCalendarWhereInput | Prisma.DestinationCalendarWhereInput[];
  id?: Prisma.IntFilter<"DestinationCalendar"> | number;
  integration?: Prisma.StringFilter<"DestinationCalendar"> | string;
  externalId?: Prisma.StringFilter<"DestinationCalendar"> | string;
  primaryEmail?: Prisma.StringNullableFilter<"DestinationCalendar"> | string | null;
  userId?: Prisma.IntNullableFilter<"DestinationCalendar"> | number | null;
  eventTypeId?: Prisma.IntNullableFilter<"DestinationCalendar"> | number | null;
  credentialId?: Prisma.IntNullableFilter<"DestinationCalendar"> | number | null;
  createdAt?: Prisma.DateTimeNullableFilter<"DestinationCalendar"> | Date | string | null;
  updatedAt?: Prisma.DateTimeNullableFilter<"DestinationCalendar"> | Date | string | null;
  delegationCredentialId?: Prisma.StringNullableFilter<"DestinationCalendar"> | string | null;
  domainWideDelegationCredentialId?: Prisma.StringNullableFilter<"DestinationCalendar"> | string | null;
  user?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null;
  booking?: Prisma.BookingListRelationFilter;
  eventType?: Prisma.XOR<Prisma.EventTypeNullableScalarRelationFilter, Prisma.EventTypeWhereInput> | null;
  credential?: Prisma.XOR<Prisma.CredentialNullableScalarRelationFilter, Prisma.CredentialWhereInput> | null;
  delegationCredential?: Prisma.XOR<
    Prisma.DelegationCredentialNullableScalarRelationFilter,
    Prisma.DelegationCredentialWhereInput
  > | null;
  domainWideDelegation?: Prisma.XOR<
    Prisma.DomainWideDelegationNullableScalarRelationFilter,
    Prisma.DomainWideDelegationWhereInput
  > | null;
};

export type DestinationCalendarOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  integration?: Prisma.SortOrder;
  externalId?: Prisma.SortOrder;
  primaryEmail?: Prisma.SortOrderInput | Prisma.SortOrder;
  userId?: Prisma.SortOrderInput | Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrderInput | Prisma.SortOrder;
  credentialId?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  updatedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  delegationCredentialId?: Prisma.SortOrderInput | Prisma.SortOrder;
  domainWideDelegationCredentialId?: Prisma.SortOrderInput | Prisma.SortOrder;
  user?: Prisma.UserOrderByWithRelationInput;
  booking?: Prisma.BookingOrderByRelationAggregateInput;
  eventType?: Prisma.EventTypeOrderByWithRelationInput;
  credential?: Prisma.CredentialOrderByWithRelationInput;
  delegationCredential?: Prisma.DelegationCredentialOrderByWithRelationInput;
  domainWideDelegation?: Prisma.DomainWideDelegationOrderByWithRelationInput;
};

export type DestinationCalendarWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    userId?: number;
    eventTypeId?: number;
    AND?: Prisma.DestinationCalendarWhereInput | Prisma.DestinationCalendarWhereInput[];
    OR?: Prisma.DestinationCalendarWhereInput[];
    NOT?: Prisma.DestinationCalendarWhereInput | Prisma.DestinationCalendarWhereInput[];
    integration?: Prisma.StringFilter<"DestinationCalendar"> | string;
    externalId?: Prisma.StringFilter<"DestinationCalendar"> | string;
    primaryEmail?: Prisma.StringNullableFilter<"DestinationCalendar"> | string | null;
    credentialId?: Prisma.IntNullableFilter<"DestinationCalendar"> | number | null;
    createdAt?: Prisma.DateTimeNullableFilter<"DestinationCalendar"> | Date | string | null;
    updatedAt?: Prisma.DateTimeNullableFilter<"DestinationCalendar"> | Date | string | null;
    delegationCredentialId?: Prisma.StringNullableFilter<"DestinationCalendar"> | string | null;
    domainWideDelegationCredentialId?: Prisma.StringNullableFilter<"DestinationCalendar"> | string | null;
    user?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null;
    booking?: Prisma.BookingListRelationFilter;
    eventType?: Prisma.XOR<Prisma.EventTypeNullableScalarRelationFilter, Prisma.EventTypeWhereInput> | null;
    credential?: Prisma.XOR<
      Prisma.CredentialNullableScalarRelationFilter,
      Prisma.CredentialWhereInput
    > | null;
    delegationCredential?: Prisma.XOR<
      Prisma.DelegationCredentialNullableScalarRelationFilter,
      Prisma.DelegationCredentialWhereInput
    > | null;
    domainWideDelegation?: Prisma.XOR<
      Prisma.DomainWideDelegationNullableScalarRelationFilter,
      Prisma.DomainWideDelegationWhereInput
    > | null;
  },
  "id" | "userId" | "eventTypeId"
>;

export type DestinationCalendarOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  integration?: Prisma.SortOrder;
  externalId?: Prisma.SortOrder;
  primaryEmail?: Prisma.SortOrderInput | Prisma.SortOrder;
  userId?: Prisma.SortOrderInput | Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrderInput | Prisma.SortOrder;
  credentialId?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  updatedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  delegationCredentialId?: Prisma.SortOrderInput | Prisma.SortOrder;
  domainWideDelegationCredentialId?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.DestinationCalendarCountOrderByAggregateInput;
  _avg?: Prisma.DestinationCalendarAvgOrderByAggregateInput;
  _max?: Prisma.DestinationCalendarMaxOrderByAggregateInput;
  _min?: Prisma.DestinationCalendarMinOrderByAggregateInput;
  _sum?: Prisma.DestinationCalendarSumOrderByAggregateInput;
};

export type DestinationCalendarScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.DestinationCalendarScalarWhereWithAggregatesInput
    | Prisma.DestinationCalendarScalarWhereWithAggregatesInput[];
  OR?: Prisma.DestinationCalendarScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.DestinationCalendarScalarWhereWithAggregatesInput
    | Prisma.DestinationCalendarScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"DestinationCalendar"> | number;
  integration?: Prisma.StringWithAggregatesFilter<"DestinationCalendar"> | string;
  externalId?: Prisma.StringWithAggregatesFilter<"DestinationCalendar"> | string;
  primaryEmail?: Prisma.StringNullableWithAggregatesFilter<"DestinationCalendar"> | string | null;
  userId?: Prisma.IntNullableWithAggregatesFilter<"DestinationCalendar"> | number | null;
  eventTypeId?: Prisma.IntNullableWithAggregatesFilter<"DestinationCalendar"> | number | null;
  credentialId?: Prisma.IntNullableWithAggregatesFilter<"DestinationCalendar"> | number | null;
  createdAt?: Prisma.DateTimeNullableWithAggregatesFilter<"DestinationCalendar"> | Date | string | null;
  updatedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"DestinationCalendar"> | Date | string | null;
  delegationCredentialId?: Prisma.StringNullableWithAggregatesFilter<"DestinationCalendar"> | string | null;
  domainWideDelegationCredentialId?:
    | Prisma.StringNullableWithAggregatesFilter<"DestinationCalendar">
    | string
    | null;
};

export type DestinationCalendarCreateInput = {
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  user?: Prisma.UserCreateNestedOneWithoutDestinationCalendarInput;
  booking?: Prisma.BookingCreateNestedManyWithoutDestinationCalendarInput;
  eventType?: Prisma.EventTypeCreateNestedOneWithoutDestinationCalendarInput;
  credential?: Prisma.CredentialCreateNestedOneWithoutDestinationCalendarsInput;
  delegationCredential?: Prisma.DelegationCredentialCreateNestedOneWithoutDestinationCalendarInput;
  domainWideDelegation?: Prisma.DomainWideDelegationCreateNestedOneWithoutDestinationCalendarInput;
};

export type DestinationCalendarUncheckedCreateInput = {
  id?: number;
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  userId?: number | null;
  eventTypeId?: number | null;
  credentialId?: number | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  delegationCredentialId?: string | null;
  domainWideDelegationCredentialId?: string | null;
  booking?: Prisma.BookingUncheckedCreateNestedManyWithoutDestinationCalendarInput;
};

export type DestinationCalendarUpdateInput = {
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  user?: Prisma.UserUpdateOneWithoutDestinationCalendarNestedInput;
  booking?: Prisma.BookingUpdateManyWithoutDestinationCalendarNestedInput;
  eventType?: Prisma.EventTypeUpdateOneWithoutDestinationCalendarNestedInput;
  credential?: Prisma.CredentialUpdateOneWithoutDestinationCalendarsNestedInput;
  delegationCredential?: Prisma.DelegationCredentialUpdateOneWithoutDestinationCalendarNestedInput;
  domainWideDelegation?: Prisma.DomainWideDelegationUpdateOneWithoutDestinationCalendarNestedInput;
};

export type DestinationCalendarUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  eventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  credentialId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  domainWideDelegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  booking?: Prisma.BookingUncheckedUpdateManyWithoutDestinationCalendarNestedInput;
};

export type DestinationCalendarCreateManyInput = {
  id?: number;
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  userId?: number | null;
  eventTypeId?: number | null;
  credentialId?: number | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  delegationCredentialId?: string | null;
  domainWideDelegationCredentialId?: string | null;
};

export type DestinationCalendarUpdateManyMutationInput = {
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
};

export type DestinationCalendarUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  eventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  credentialId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  domainWideDelegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type DestinationCalendarNullableScalarRelationFilter = {
  is?: Prisma.DestinationCalendarWhereInput | null;
  isNot?: Prisma.DestinationCalendarWhereInput | null;
};

export type DestinationCalendarListRelationFilter = {
  every?: Prisma.DestinationCalendarWhereInput;
  some?: Prisma.DestinationCalendarWhereInput;
  none?: Prisma.DestinationCalendarWhereInput;
};

export type DestinationCalendarOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type DestinationCalendarCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  integration?: Prisma.SortOrder;
  externalId?: Prisma.SortOrder;
  primaryEmail?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  credentialId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  delegationCredentialId?: Prisma.SortOrder;
  domainWideDelegationCredentialId?: Prisma.SortOrder;
};

export type DestinationCalendarAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  credentialId?: Prisma.SortOrder;
};

export type DestinationCalendarMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  integration?: Prisma.SortOrder;
  externalId?: Prisma.SortOrder;
  primaryEmail?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  credentialId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  delegationCredentialId?: Prisma.SortOrder;
  domainWideDelegationCredentialId?: Prisma.SortOrder;
};

export type DestinationCalendarMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  integration?: Prisma.SortOrder;
  externalId?: Prisma.SortOrder;
  primaryEmail?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  credentialId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  delegationCredentialId?: Prisma.SortOrder;
  domainWideDelegationCredentialId?: Prisma.SortOrder;
};

export type DestinationCalendarSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  credentialId?: Prisma.SortOrder;
};

export type DestinationCalendarCreateNestedOneWithoutEventTypeInput = {
  create?: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutEventTypeInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutEventTypeInput
  >;
  connectOrCreate?: Prisma.DestinationCalendarCreateOrConnectWithoutEventTypeInput;
  connect?: Prisma.DestinationCalendarWhereUniqueInput;
};

export type DestinationCalendarUncheckedCreateNestedOneWithoutEventTypeInput = {
  create?: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutEventTypeInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutEventTypeInput
  >;
  connectOrCreate?: Prisma.DestinationCalendarCreateOrConnectWithoutEventTypeInput;
  connect?: Prisma.DestinationCalendarWhereUniqueInput;
};

export type DestinationCalendarUpdateOneWithoutEventTypeNestedInput = {
  create?: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutEventTypeInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutEventTypeInput
  >;
  connectOrCreate?: Prisma.DestinationCalendarCreateOrConnectWithoutEventTypeInput;
  upsert?: Prisma.DestinationCalendarUpsertWithoutEventTypeInput;
  disconnect?: Prisma.DestinationCalendarWhereInput | boolean;
  delete?: Prisma.DestinationCalendarWhereInput | boolean;
  connect?: Prisma.DestinationCalendarWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.DestinationCalendarUpdateToOneWithWhereWithoutEventTypeInput,
      Prisma.DestinationCalendarUpdateWithoutEventTypeInput
    >,
    Prisma.DestinationCalendarUncheckedUpdateWithoutEventTypeInput
  >;
};

export type DestinationCalendarUncheckedUpdateOneWithoutEventTypeNestedInput = {
  create?: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutEventTypeInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutEventTypeInput
  >;
  connectOrCreate?: Prisma.DestinationCalendarCreateOrConnectWithoutEventTypeInput;
  upsert?: Prisma.DestinationCalendarUpsertWithoutEventTypeInput;
  disconnect?: Prisma.DestinationCalendarWhereInput | boolean;
  delete?: Prisma.DestinationCalendarWhereInput | boolean;
  connect?: Prisma.DestinationCalendarWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.DestinationCalendarUpdateToOneWithWhereWithoutEventTypeInput,
      Prisma.DestinationCalendarUpdateWithoutEventTypeInput
    >,
    Prisma.DestinationCalendarUncheckedUpdateWithoutEventTypeInput
  >;
};

export type DestinationCalendarCreateNestedManyWithoutCredentialInput = {
  create?:
    | Prisma.XOR<
        Prisma.DestinationCalendarCreateWithoutCredentialInput,
        Prisma.DestinationCalendarUncheckedCreateWithoutCredentialInput
      >
    | Prisma.DestinationCalendarCreateWithoutCredentialInput[]
    | Prisma.DestinationCalendarUncheckedCreateWithoutCredentialInput[];
  connectOrCreate?:
    | Prisma.DestinationCalendarCreateOrConnectWithoutCredentialInput
    | Prisma.DestinationCalendarCreateOrConnectWithoutCredentialInput[];
  createMany?: Prisma.DestinationCalendarCreateManyCredentialInputEnvelope;
  connect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
};

export type DestinationCalendarUncheckedCreateNestedManyWithoutCredentialInput = {
  create?:
    | Prisma.XOR<
        Prisma.DestinationCalendarCreateWithoutCredentialInput,
        Prisma.DestinationCalendarUncheckedCreateWithoutCredentialInput
      >
    | Prisma.DestinationCalendarCreateWithoutCredentialInput[]
    | Prisma.DestinationCalendarUncheckedCreateWithoutCredentialInput[];
  connectOrCreate?:
    | Prisma.DestinationCalendarCreateOrConnectWithoutCredentialInput
    | Prisma.DestinationCalendarCreateOrConnectWithoutCredentialInput[];
  createMany?: Prisma.DestinationCalendarCreateManyCredentialInputEnvelope;
  connect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
};

export type DestinationCalendarUpdateManyWithoutCredentialNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.DestinationCalendarCreateWithoutCredentialInput,
        Prisma.DestinationCalendarUncheckedCreateWithoutCredentialInput
      >
    | Prisma.DestinationCalendarCreateWithoutCredentialInput[]
    | Prisma.DestinationCalendarUncheckedCreateWithoutCredentialInput[];
  connectOrCreate?:
    | Prisma.DestinationCalendarCreateOrConnectWithoutCredentialInput
    | Prisma.DestinationCalendarCreateOrConnectWithoutCredentialInput[];
  upsert?:
    | Prisma.DestinationCalendarUpsertWithWhereUniqueWithoutCredentialInput
    | Prisma.DestinationCalendarUpsertWithWhereUniqueWithoutCredentialInput[];
  createMany?: Prisma.DestinationCalendarCreateManyCredentialInputEnvelope;
  set?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  disconnect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  delete?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  connect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  update?:
    | Prisma.DestinationCalendarUpdateWithWhereUniqueWithoutCredentialInput
    | Prisma.DestinationCalendarUpdateWithWhereUniqueWithoutCredentialInput[];
  updateMany?:
    | Prisma.DestinationCalendarUpdateManyWithWhereWithoutCredentialInput
    | Prisma.DestinationCalendarUpdateManyWithWhereWithoutCredentialInput[];
  deleteMany?: Prisma.DestinationCalendarScalarWhereInput | Prisma.DestinationCalendarScalarWhereInput[];
};

export type DestinationCalendarUncheckedUpdateManyWithoutCredentialNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.DestinationCalendarCreateWithoutCredentialInput,
        Prisma.DestinationCalendarUncheckedCreateWithoutCredentialInput
      >
    | Prisma.DestinationCalendarCreateWithoutCredentialInput[]
    | Prisma.DestinationCalendarUncheckedCreateWithoutCredentialInput[];
  connectOrCreate?:
    | Prisma.DestinationCalendarCreateOrConnectWithoutCredentialInput
    | Prisma.DestinationCalendarCreateOrConnectWithoutCredentialInput[];
  upsert?:
    | Prisma.DestinationCalendarUpsertWithWhereUniqueWithoutCredentialInput
    | Prisma.DestinationCalendarUpsertWithWhereUniqueWithoutCredentialInput[];
  createMany?: Prisma.DestinationCalendarCreateManyCredentialInputEnvelope;
  set?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  disconnect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  delete?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  connect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  update?:
    | Prisma.DestinationCalendarUpdateWithWhereUniqueWithoutCredentialInput
    | Prisma.DestinationCalendarUpdateWithWhereUniqueWithoutCredentialInput[];
  updateMany?:
    | Prisma.DestinationCalendarUpdateManyWithWhereWithoutCredentialInput
    | Prisma.DestinationCalendarUpdateManyWithWhereWithoutCredentialInput[];
  deleteMany?: Prisma.DestinationCalendarScalarWhereInput | Prisma.DestinationCalendarScalarWhereInput[];
};

export type DestinationCalendarCreateNestedOneWithoutUserInput = {
  create?: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutUserInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutUserInput
  >;
  connectOrCreate?: Prisma.DestinationCalendarCreateOrConnectWithoutUserInput;
  connect?: Prisma.DestinationCalendarWhereUniqueInput;
};

export type DestinationCalendarUncheckedCreateNestedOneWithoutUserInput = {
  create?: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutUserInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutUserInput
  >;
  connectOrCreate?: Prisma.DestinationCalendarCreateOrConnectWithoutUserInput;
  connect?: Prisma.DestinationCalendarWhereUniqueInput;
};

export type DestinationCalendarUpdateOneWithoutUserNestedInput = {
  create?: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutUserInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutUserInput
  >;
  connectOrCreate?: Prisma.DestinationCalendarCreateOrConnectWithoutUserInput;
  upsert?: Prisma.DestinationCalendarUpsertWithoutUserInput;
  disconnect?: Prisma.DestinationCalendarWhereInput | boolean;
  delete?: Prisma.DestinationCalendarWhereInput | boolean;
  connect?: Prisma.DestinationCalendarWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.DestinationCalendarUpdateToOneWithWhereWithoutUserInput,
      Prisma.DestinationCalendarUpdateWithoutUserInput
    >,
    Prisma.DestinationCalendarUncheckedUpdateWithoutUserInput
  >;
};

export type DestinationCalendarUncheckedUpdateOneWithoutUserNestedInput = {
  create?: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutUserInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutUserInput
  >;
  connectOrCreate?: Prisma.DestinationCalendarCreateOrConnectWithoutUserInput;
  upsert?: Prisma.DestinationCalendarUpsertWithoutUserInput;
  disconnect?: Prisma.DestinationCalendarWhereInput | boolean;
  delete?: Prisma.DestinationCalendarWhereInput | boolean;
  connect?: Prisma.DestinationCalendarWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.DestinationCalendarUpdateToOneWithWhereWithoutUserInput,
      Prisma.DestinationCalendarUpdateWithoutUserInput
    >,
    Prisma.DestinationCalendarUncheckedUpdateWithoutUserInput
  >;
};

export type DestinationCalendarCreateNestedOneWithoutBookingInput = {
  create?: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutBookingInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutBookingInput
  >;
  connectOrCreate?: Prisma.DestinationCalendarCreateOrConnectWithoutBookingInput;
  connect?: Prisma.DestinationCalendarWhereUniqueInput;
};

export type DestinationCalendarUpdateOneWithoutBookingNestedInput = {
  create?: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutBookingInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutBookingInput
  >;
  connectOrCreate?: Prisma.DestinationCalendarCreateOrConnectWithoutBookingInput;
  upsert?: Prisma.DestinationCalendarUpsertWithoutBookingInput;
  disconnect?: Prisma.DestinationCalendarWhereInput | boolean;
  delete?: Prisma.DestinationCalendarWhereInput | boolean;
  connect?: Prisma.DestinationCalendarWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.DestinationCalendarUpdateToOneWithWhereWithoutBookingInput,
      Prisma.DestinationCalendarUpdateWithoutBookingInput
    >,
    Prisma.DestinationCalendarUncheckedUpdateWithoutBookingInput
  >;
};

export type DestinationCalendarCreateNestedManyWithoutDelegationCredentialInput = {
  create?:
    | Prisma.XOR<
        Prisma.DestinationCalendarCreateWithoutDelegationCredentialInput,
        Prisma.DestinationCalendarUncheckedCreateWithoutDelegationCredentialInput
      >
    | Prisma.DestinationCalendarCreateWithoutDelegationCredentialInput[]
    | Prisma.DestinationCalendarUncheckedCreateWithoutDelegationCredentialInput[];
  connectOrCreate?:
    | Prisma.DestinationCalendarCreateOrConnectWithoutDelegationCredentialInput
    | Prisma.DestinationCalendarCreateOrConnectWithoutDelegationCredentialInput[];
  createMany?: Prisma.DestinationCalendarCreateManyDelegationCredentialInputEnvelope;
  connect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
};

export type DestinationCalendarUncheckedCreateNestedManyWithoutDelegationCredentialInput = {
  create?:
    | Prisma.XOR<
        Prisma.DestinationCalendarCreateWithoutDelegationCredentialInput,
        Prisma.DestinationCalendarUncheckedCreateWithoutDelegationCredentialInput
      >
    | Prisma.DestinationCalendarCreateWithoutDelegationCredentialInput[]
    | Prisma.DestinationCalendarUncheckedCreateWithoutDelegationCredentialInput[];
  connectOrCreate?:
    | Prisma.DestinationCalendarCreateOrConnectWithoutDelegationCredentialInput
    | Prisma.DestinationCalendarCreateOrConnectWithoutDelegationCredentialInput[];
  createMany?: Prisma.DestinationCalendarCreateManyDelegationCredentialInputEnvelope;
  connect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
};

export type DestinationCalendarUpdateManyWithoutDelegationCredentialNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.DestinationCalendarCreateWithoutDelegationCredentialInput,
        Prisma.DestinationCalendarUncheckedCreateWithoutDelegationCredentialInput
      >
    | Prisma.DestinationCalendarCreateWithoutDelegationCredentialInput[]
    | Prisma.DestinationCalendarUncheckedCreateWithoutDelegationCredentialInput[];
  connectOrCreate?:
    | Prisma.DestinationCalendarCreateOrConnectWithoutDelegationCredentialInput
    | Prisma.DestinationCalendarCreateOrConnectWithoutDelegationCredentialInput[];
  upsert?:
    | Prisma.DestinationCalendarUpsertWithWhereUniqueWithoutDelegationCredentialInput
    | Prisma.DestinationCalendarUpsertWithWhereUniqueWithoutDelegationCredentialInput[];
  createMany?: Prisma.DestinationCalendarCreateManyDelegationCredentialInputEnvelope;
  set?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  disconnect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  delete?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  connect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  update?:
    | Prisma.DestinationCalendarUpdateWithWhereUniqueWithoutDelegationCredentialInput
    | Prisma.DestinationCalendarUpdateWithWhereUniqueWithoutDelegationCredentialInput[];
  updateMany?:
    | Prisma.DestinationCalendarUpdateManyWithWhereWithoutDelegationCredentialInput
    | Prisma.DestinationCalendarUpdateManyWithWhereWithoutDelegationCredentialInput[];
  deleteMany?: Prisma.DestinationCalendarScalarWhereInput | Prisma.DestinationCalendarScalarWhereInput[];
};

export type DestinationCalendarUncheckedUpdateManyWithoutDelegationCredentialNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.DestinationCalendarCreateWithoutDelegationCredentialInput,
        Prisma.DestinationCalendarUncheckedCreateWithoutDelegationCredentialInput
      >
    | Prisma.DestinationCalendarCreateWithoutDelegationCredentialInput[]
    | Prisma.DestinationCalendarUncheckedCreateWithoutDelegationCredentialInput[];
  connectOrCreate?:
    | Prisma.DestinationCalendarCreateOrConnectWithoutDelegationCredentialInput
    | Prisma.DestinationCalendarCreateOrConnectWithoutDelegationCredentialInput[];
  upsert?:
    | Prisma.DestinationCalendarUpsertWithWhereUniqueWithoutDelegationCredentialInput
    | Prisma.DestinationCalendarUpsertWithWhereUniqueWithoutDelegationCredentialInput[];
  createMany?: Prisma.DestinationCalendarCreateManyDelegationCredentialInputEnvelope;
  set?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  disconnect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  delete?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  connect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  update?:
    | Prisma.DestinationCalendarUpdateWithWhereUniqueWithoutDelegationCredentialInput
    | Prisma.DestinationCalendarUpdateWithWhereUniqueWithoutDelegationCredentialInput[];
  updateMany?:
    | Prisma.DestinationCalendarUpdateManyWithWhereWithoutDelegationCredentialInput
    | Prisma.DestinationCalendarUpdateManyWithWhereWithoutDelegationCredentialInput[];
  deleteMany?: Prisma.DestinationCalendarScalarWhereInput | Prisma.DestinationCalendarScalarWhereInput[];
};

export type DestinationCalendarCreateNestedManyWithoutDomainWideDelegationInput = {
  create?:
    | Prisma.XOR<
        Prisma.DestinationCalendarCreateWithoutDomainWideDelegationInput,
        Prisma.DestinationCalendarUncheckedCreateWithoutDomainWideDelegationInput
      >
    | Prisma.DestinationCalendarCreateWithoutDomainWideDelegationInput[]
    | Prisma.DestinationCalendarUncheckedCreateWithoutDomainWideDelegationInput[];
  connectOrCreate?:
    | Prisma.DestinationCalendarCreateOrConnectWithoutDomainWideDelegationInput
    | Prisma.DestinationCalendarCreateOrConnectWithoutDomainWideDelegationInput[];
  createMany?: Prisma.DestinationCalendarCreateManyDomainWideDelegationInputEnvelope;
  connect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
};

export type DestinationCalendarUncheckedCreateNestedManyWithoutDomainWideDelegationInput = {
  create?:
    | Prisma.XOR<
        Prisma.DestinationCalendarCreateWithoutDomainWideDelegationInput,
        Prisma.DestinationCalendarUncheckedCreateWithoutDomainWideDelegationInput
      >
    | Prisma.DestinationCalendarCreateWithoutDomainWideDelegationInput[]
    | Prisma.DestinationCalendarUncheckedCreateWithoutDomainWideDelegationInput[];
  connectOrCreate?:
    | Prisma.DestinationCalendarCreateOrConnectWithoutDomainWideDelegationInput
    | Prisma.DestinationCalendarCreateOrConnectWithoutDomainWideDelegationInput[];
  createMany?: Prisma.DestinationCalendarCreateManyDomainWideDelegationInputEnvelope;
  connect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
};

export type DestinationCalendarUpdateManyWithoutDomainWideDelegationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.DestinationCalendarCreateWithoutDomainWideDelegationInput,
        Prisma.DestinationCalendarUncheckedCreateWithoutDomainWideDelegationInput
      >
    | Prisma.DestinationCalendarCreateWithoutDomainWideDelegationInput[]
    | Prisma.DestinationCalendarUncheckedCreateWithoutDomainWideDelegationInput[];
  connectOrCreate?:
    | Prisma.DestinationCalendarCreateOrConnectWithoutDomainWideDelegationInput
    | Prisma.DestinationCalendarCreateOrConnectWithoutDomainWideDelegationInput[];
  upsert?:
    | Prisma.DestinationCalendarUpsertWithWhereUniqueWithoutDomainWideDelegationInput
    | Prisma.DestinationCalendarUpsertWithWhereUniqueWithoutDomainWideDelegationInput[];
  createMany?: Prisma.DestinationCalendarCreateManyDomainWideDelegationInputEnvelope;
  set?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  disconnect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  delete?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  connect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  update?:
    | Prisma.DestinationCalendarUpdateWithWhereUniqueWithoutDomainWideDelegationInput
    | Prisma.DestinationCalendarUpdateWithWhereUniqueWithoutDomainWideDelegationInput[];
  updateMany?:
    | Prisma.DestinationCalendarUpdateManyWithWhereWithoutDomainWideDelegationInput
    | Prisma.DestinationCalendarUpdateManyWithWhereWithoutDomainWideDelegationInput[];
  deleteMany?: Prisma.DestinationCalendarScalarWhereInput | Prisma.DestinationCalendarScalarWhereInput[];
};

export type DestinationCalendarUncheckedUpdateManyWithoutDomainWideDelegationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.DestinationCalendarCreateWithoutDomainWideDelegationInput,
        Prisma.DestinationCalendarUncheckedCreateWithoutDomainWideDelegationInput
      >
    | Prisma.DestinationCalendarCreateWithoutDomainWideDelegationInput[]
    | Prisma.DestinationCalendarUncheckedCreateWithoutDomainWideDelegationInput[];
  connectOrCreate?:
    | Prisma.DestinationCalendarCreateOrConnectWithoutDomainWideDelegationInput
    | Prisma.DestinationCalendarCreateOrConnectWithoutDomainWideDelegationInput[];
  upsert?:
    | Prisma.DestinationCalendarUpsertWithWhereUniqueWithoutDomainWideDelegationInput
    | Prisma.DestinationCalendarUpsertWithWhereUniqueWithoutDomainWideDelegationInput[];
  createMany?: Prisma.DestinationCalendarCreateManyDomainWideDelegationInputEnvelope;
  set?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  disconnect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  delete?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  connect?: Prisma.DestinationCalendarWhereUniqueInput | Prisma.DestinationCalendarWhereUniqueInput[];
  update?:
    | Prisma.DestinationCalendarUpdateWithWhereUniqueWithoutDomainWideDelegationInput
    | Prisma.DestinationCalendarUpdateWithWhereUniqueWithoutDomainWideDelegationInput[];
  updateMany?:
    | Prisma.DestinationCalendarUpdateManyWithWhereWithoutDomainWideDelegationInput
    | Prisma.DestinationCalendarUpdateManyWithWhereWithoutDomainWideDelegationInput[];
  deleteMany?: Prisma.DestinationCalendarScalarWhereInput | Prisma.DestinationCalendarScalarWhereInput[];
};

export type DestinationCalendarCreateWithoutEventTypeInput = {
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  user?: Prisma.UserCreateNestedOneWithoutDestinationCalendarInput;
  booking?: Prisma.BookingCreateNestedManyWithoutDestinationCalendarInput;
  credential?: Prisma.CredentialCreateNestedOneWithoutDestinationCalendarsInput;
  delegationCredential?: Prisma.DelegationCredentialCreateNestedOneWithoutDestinationCalendarInput;
  domainWideDelegation?: Prisma.DomainWideDelegationCreateNestedOneWithoutDestinationCalendarInput;
};

export type DestinationCalendarUncheckedCreateWithoutEventTypeInput = {
  id?: number;
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  userId?: number | null;
  credentialId?: number | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  delegationCredentialId?: string | null;
  domainWideDelegationCredentialId?: string | null;
  booking?: Prisma.BookingUncheckedCreateNestedManyWithoutDestinationCalendarInput;
};

export type DestinationCalendarCreateOrConnectWithoutEventTypeInput = {
  where: Prisma.DestinationCalendarWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutEventTypeInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutEventTypeInput
  >;
};

export type DestinationCalendarUpsertWithoutEventTypeInput = {
  update: Prisma.XOR<
    Prisma.DestinationCalendarUpdateWithoutEventTypeInput,
    Prisma.DestinationCalendarUncheckedUpdateWithoutEventTypeInput
  >;
  create: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutEventTypeInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutEventTypeInput
  >;
  where?: Prisma.DestinationCalendarWhereInput;
};

export type DestinationCalendarUpdateToOneWithWhereWithoutEventTypeInput = {
  where?: Prisma.DestinationCalendarWhereInput;
  data: Prisma.XOR<
    Prisma.DestinationCalendarUpdateWithoutEventTypeInput,
    Prisma.DestinationCalendarUncheckedUpdateWithoutEventTypeInput
  >;
};

export type DestinationCalendarUpdateWithoutEventTypeInput = {
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  user?: Prisma.UserUpdateOneWithoutDestinationCalendarNestedInput;
  booking?: Prisma.BookingUpdateManyWithoutDestinationCalendarNestedInput;
  credential?: Prisma.CredentialUpdateOneWithoutDestinationCalendarsNestedInput;
  delegationCredential?: Prisma.DelegationCredentialUpdateOneWithoutDestinationCalendarNestedInput;
  domainWideDelegation?: Prisma.DomainWideDelegationUpdateOneWithoutDestinationCalendarNestedInput;
};

export type DestinationCalendarUncheckedUpdateWithoutEventTypeInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  credentialId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  domainWideDelegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  booking?: Prisma.BookingUncheckedUpdateManyWithoutDestinationCalendarNestedInput;
};

export type DestinationCalendarCreateWithoutCredentialInput = {
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  user?: Prisma.UserCreateNestedOneWithoutDestinationCalendarInput;
  booking?: Prisma.BookingCreateNestedManyWithoutDestinationCalendarInput;
  eventType?: Prisma.EventTypeCreateNestedOneWithoutDestinationCalendarInput;
  delegationCredential?: Prisma.DelegationCredentialCreateNestedOneWithoutDestinationCalendarInput;
  domainWideDelegation?: Prisma.DomainWideDelegationCreateNestedOneWithoutDestinationCalendarInput;
};

export type DestinationCalendarUncheckedCreateWithoutCredentialInput = {
  id?: number;
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  userId?: number | null;
  eventTypeId?: number | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  delegationCredentialId?: string | null;
  domainWideDelegationCredentialId?: string | null;
  booking?: Prisma.BookingUncheckedCreateNestedManyWithoutDestinationCalendarInput;
};

export type DestinationCalendarCreateOrConnectWithoutCredentialInput = {
  where: Prisma.DestinationCalendarWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutCredentialInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutCredentialInput
  >;
};

export type DestinationCalendarCreateManyCredentialInputEnvelope = {
  data:
    | Prisma.DestinationCalendarCreateManyCredentialInput
    | Prisma.DestinationCalendarCreateManyCredentialInput[];
  skipDuplicates?: boolean;
};

export type DestinationCalendarUpsertWithWhereUniqueWithoutCredentialInput = {
  where: Prisma.DestinationCalendarWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.DestinationCalendarUpdateWithoutCredentialInput,
    Prisma.DestinationCalendarUncheckedUpdateWithoutCredentialInput
  >;
  create: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutCredentialInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutCredentialInput
  >;
};

export type DestinationCalendarUpdateWithWhereUniqueWithoutCredentialInput = {
  where: Prisma.DestinationCalendarWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.DestinationCalendarUpdateWithoutCredentialInput,
    Prisma.DestinationCalendarUncheckedUpdateWithoutCredentialInput
  >;
};

export type DestinationCalendarUpdateManyWithWhereWithoutCredentialInput = {
  where: Prisma.DestinationCalendarScalarWhereInput;
  data: Prisma.XOR<
    Prisma.DestinationCalendarUpdateManyMutationInput,
    Prisma.DestinationCalendarUncheckedUpdateManyWithoutCredentialInput
  >;
};

export type DestinationCalendarScalarWhereInput = {
  AND?: Prisma.DestinationCalendarScalarWhereInput | Prisma.DestinationCalendarScalarWhereInput[];
  OR?: Prisma.DestinationCalendarScalarWhereInput[];
  NOT?: Prisma.DestinationCalendarScalarWhereInput | Prisma.DestinationCalendarScalarWhereInput[];
  id?: Prisma.IntFilter<"DestinationCalendar"> | number;
  integration?: Prisma.StringFilter<"DestinationCalendar"> | string;
  externalId?: Prisma.StringFilter<"DestinationCalendar"> | string;
  primaryEmail?: Prisma.StringNullableFilter<"DestinationCalendar"> | string | null;
  userId?: Prisma.IntNullableFilter<"DestinationCalendar"> | number | null;
  eventTypeId?: Prisma.IntNullableFilter<"DestinationCalendar"> | number | null;
  credentialId?: Prisma.IntNullableFilter<"DestinationCalendar"> | number | null;
  createdAt?: Prisma.DateTimeNullableFilter<"DestinationCalendar"> | Date | string | null;
  updatedAt?: Prisma.DateTimeNullableFilter<"DestinationCalendar"> | Date | string | null;
  delegationCredentialId?: Prisma.StringNullableFilter<"DestinationCalendar"> | string | null;
  domainWideDelegationCredentialId?: Prisma.StringNullableFilter<"DestinationCalendar"> | string | null;
};

export type DestinationCalendarCreateWithoutUserInput = {
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  booking?: Prisma.BookingCreateNestedManyWithoutDestinationCalendarInput;
  eventType?: Prisma.EventTypeCreateNestedOneWithoutDestinationCalendarInput;
  credential?: Prisma.CredentialCreateNestedOneWithoutDestinationCalendarsInput;
  delegationCredential?: Prisma.DelegationCredentialCreateNestedOneWithoutDestinationCalendarInput;
  domainWideDelegation?: Prisma.DomainWideDelegationCreateNestedOneWithoutDestinationCalendarInput;
};

export type DestinationCalendarUncheckedCreateWithoutUserInput = {
  id?: number;
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  eventTypeId?: number | null;
  credentialId?: number | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  delegationCredentialId?: string | null;
  domainWideDelegationCredentialId?: string | null;
  booking?: Prisma.BookingUncheckedCreateNestedManyWithoutDestinationCalendarInput;
};

export type DestinationCalendarCreateOrConnectWithoutUserInput = {
  where: Prisma.DestinationCalendarWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutUserInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutUserInput
  >;
};

export type DestinationCalendarUpsertWithoutUserInput = {
  update: Prisma.XOR<
    Prisma.DestinationCalendarUpdateWithoutUserInput,
    Prisma.DestinationCalendarUncheckedUpdateWithoutUserInput
  >;
  create: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutUserInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutUserInput
  >;
  where?: Prisma.DestinationCalendarWhereInput;
};

export type DestinationCalendarUpdateToOneWithWhereWithoutUserInput = {
  where?: Prisma.DestinationCalendarWhereInput;
  data: Prisma.XOR<
    Prisma.DestinationCalendarUpdateWithoutUserInput,
    Prisma.DestinationCalendarUncheckedUpdateWithoutUserInput
  >;
};

export type DestinationCalendarUpdateWithoutUserInput = {
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  booking?: Prisma.BookingUpdateManyWithoutDestinationCalendarNestedInput;
  eventType?: Prisma.EventTypeUpdateOneWithoutDestinationCalendarNestedInput;
  credential?: Prisma.CredentialUpdateOneWithoutDestinationCalendarsNestedInput;
  delegationCredential?: Prisma.DelegationCredentialUpdateOneWithoutDestinationCalendarNestedInput;
  domainWideDelegation?: Prisma.DomainWideDelegationUpdateOneWithoutDestinationCalendarNestedInput;
};

export type DestinationCalendarUncheckedUpdateWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  eventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  credentialId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  domainWideDelegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  booking?: Prisma.BookingUncheckedUpdateManyWithoutDestinationCalendarNestedInput;
};

export type DestinationCalendarCreateWithoutBookingInput = {
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  user?: Prisma.UserCreateNestedOneWithoutDestinationCalendarInput;
  eventType?: Prisma.EventTypeCreateNestedOneWithoutDestinationCalendarInput;
  credential?: Prisma.CredentialCreateNestedOneWithoutDestinationCalendarsInput;
  delegationCredential?: Prisma.DelegationCredentialCreateNestedOneWithoutDestinationCalendarInput;
  domainWideDelegation?: Prisma.DomainWideDelegationCreateNestedOneWithoutDestinationCalendarInput;
};

export type DestinationCalendarUncheckedCreateWithoutBookingInput = {
  id?: number;
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  userId?: number | null;
  eventTypeId?: number | null;
  credentialId?: number | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  delegationCredentialId?: string | null;
  domainWideDelegationCredentialId?: string | null;
};

export type DestinationCalendarCreateOrConnectWithoutBookingInput = {
  where: Prisma.DestinationCalendarWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutBookingInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutBookingInput
  >;
};

export type DestinationCalendarUpsertWithoutBookingInput = {
  update: Prisma.XOR<
    Prisma.DestinationCalendarUpdateWithoutBookingInput,
    Prisma.DestinationCalendarUncheckedUpdateWithoutBookingInput
  >;
  create: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutBookingInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutBookingInput
  >;
  where?: Prisma.DestinationCalendarWhereInput;
};

export type DestinationCalendarUpdateToOneWithWhereWithoutBookingInput = {
  where?: Prisma.DestinationCalendarWhereInput;
  data: Prisma.XOR<
    Prisma.DestinationCalendarUpdateWithoutBookingInput,
    Prisma.DestinationCalendarUncheckedUpdateWithoutBookingInput
  >;
};

export type DestinationCalendarUpdateWithoutBookingInput = {
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  user?: Prisma.UserUpdateOneWithoutDestinationCalendarNestedInput;
  eventType?: Prisma.EventTypeUpdateOneWithoutDestinationCalendarNestedInput;
  credential?: Prisma.CredentialUpdateOneWithoutDestinationCalendarsNestedInput;
  delegationCredential?: Prisma.DelegationCredentialUpdateOneWithoutDestinationCalendarNestedInput;
  domainWideDelegation?: Prisma.DomainWideDelegationUpdateOneWithoutDestinationCalendarNestedInput;
};

export type DestinationCalendarUncheckedUpdateWithoutBookingInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  eventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  credentialId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  domainWideDelegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type DestinationCalendarCreateWithoutDelegationCredentialInput = {
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  user?: Prisma.UserCreateNestedOneWithoutDestinationCalendarInput;
  booking?: Prisma.BookingCreateNestedManyWithoutDestinationCalendarInput;
  eventType?: Prisma.EventTypeCreateNestedOneWithoutDestinationCalendarInput;
  credential?: Prisma.CredentialCreateNestedOneWithoutDestinationCalendarsInput;
  domainWideDelegation?: Prisma.DomainWideDelegationCreateNestedOneWithoutDestinationCalendarInput;
};

export type DestinationCalendarUncheckedCreateWithoutDelegationCredentialInput = {
  id?: number;
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  userId?: number | null;
  eventTypeId?: number | null;
  credentialId?: number | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  domainWideDelegationCredentialId?: string | null;
  booking?: Prisma.BookingUncheckedCreateNestedManyWithoutDestinationCalendarInput;
};

export type DestinationCalendarCreateOrConnectWithoutDelegationCredentialInput = {
  where: Prisma.DestinationCalendarWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutDelegationCredentialInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutDelegationCredentialInput
  >;
};

export type DestinationCalendarCreateManyDelegationCredentialInputEnvelope = {
  data:
    | Prisma.DestinationCalendarCreateManyDelegationCredentialInput
    | Prisma.DestinationCalendarCreateManyDelegationCredentialInput[];
  skipDuplicates?: boolean;
};

export type DestinationCalendarUpsertWithWhereUniqueWithoutDelegationCredentialInput = {
  where: Prisma.DestinationCalendarWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.DestinationCalendarUpdateWithoutDelegationCredentialInput,
    Prisma.DestinationCalendarUncheckedUpdateWithoutDelegationCredentialInput
  >;
  create: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutDelegationCredentialInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutDelegationCredentialInput
  >;
};

export type DestinationCalendarUpdateWithWhereUniqueWithoutDelegationCredentialInput = {
  where: Prisma.DestinationCalendarWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.DestinationCalendarUpdateWithoutDelegationCredentialInput,
    Prisma.DestinationCalendarUncheckedUpdateWithoutDelegationCredentialInput
  >;
};

export type DestinationCalendarUpdateManyWithWhereWithoutDelegationCredentialInput = {
  where: Prisma.DestinationCalendarScalarWhereInput;
  data: Prisma.XOR<
    Prisma.DestinationCalendarUpdateManyMutationInput,
    Prisma.DestinationCalendarUncheckedUpdateManyWithoutDelegationCredentialInput
  >;
};

export type DestinationCalendarCreateWithoutDomainWideDelegationInput = {
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  user?: Prisma.UserCreateNestedOneWithoutDestinationCalendarInput;
  booking?: Prisma.BookingCreateNestedManyWithoutDestinationCalendarInput;
  eventType?: Prisma.EventTypeCreateNestedOneWithoutDestinationCalendarInput;
  credential?: Prisma.CredentialCreateNestedOneWithoutDestinationCalendarsInput;
  delegationCredential?: Prisma.DelegationCredentialCreateNestedOneWithoutDestinationCalendarInput;
};

export type DestinationCalendarUncheckedCreateWithoutDomainWideDelegationInput = {
  id?: number;
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  userId?: number | null;
  eventTypeId?: number | null;
  credentialId?: number | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  delegationCredentialId?: string | null;
  booking?: Prisma.BookingUncheckedCreateNestedManyWithoutDestinationCalendarInput;
};

export type DestinationCalendarCreateOrConnectWithoutDomainWideDelegationInput = {
  where: Prisma.DestinationCalendarWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutDomainWideDelegationInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutDomainWideDelegationInput
  >;
};

export type DestinationCalendarCreateManyDomainWideDelegationInputEnvelope = {
  data:
    | Prisma.DestinationCalendarCreateManyDomainWideDelegationInput
    | Prisma.DestinationCalendarCreateManyDomainWideDelegationInput[];
  skipDuplicates?: boolean;
};

export type DestinationCalendarUpsertWithWhereUniqueWithoutDomainWideDelegationInput = {
  where: Prisma.DestinationCalendarWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.DestinationCalendarUpdateWithoutDomainWideDelegationInput,
    Prisma.DestinationCalendarUncheckedUpdateWithoutDomainWideDelegationInput
  >;
  create: Prisma.XOR<
    Prisma.DestinationCalendarCreateWithoutDomainWideDelegationInput,
    Prisma.DestinationCalendarUncheckedCreateWithoutDomainWideDelegationInput
  >;
};

export type DestinationCalendarUpdateWithWhereUniqueWithoutDomainWideDelegationInput = {
  where: Prisma.DestinationCalendarWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.DestinationCalendarUpdateWithoutDomainWideDelegationInput,
    Prisma.DestinationCalendarUncheckedUpdateWithoutDomainWideDelegationInput
  >;
};

export type DestinationCalendarUpdateManyWithWhereWithoutDomainWideDelegationInput = {
  where: Prisma.DestinationCalendarScalarWhereInput;
  data: Prisma.XOR<
    Prisma.DestinationCalendarUpdateManyMutationInput,
    Prisma.DestinationCalendarUncheckedUpdateManyWithoutDomainWideDelegationInput
  >;
};

export type DestinationCalendarCreateManyCredentialInput = {
  id?: number;
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  userId?: number | null;
  eventTypeId?: number | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  delegationCredentialId?: string | null;
  domainWideDelegationCredentialId?: string | null;
};

export type DestinationCalendarUpdateWithoutCredentialInput = {
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  user?: Prisma.UserUpdateOneWithoutDestinationCalendarNestedInput;
  booking?: Prisma.BookingUpdateManyWithoutDestinationCalendarNestedInput;
  eventType?: Prisma.EventTypeUpdateOneWithoutDestinationCalendarNestedInput;
  delegationCredential?: Prisma.DelegationCredentialUpdateOneWithoutDestinationCalendarNestedInput;
  domainWideDelegation?: Prisma.DomainWideDelegationUpdateOneWithoutDestinationCalendarNestedInput;
};

export type DestinationCalendarUncheckedUpdateWithoutCredentialInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  eventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  domainWideDelegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  booking?: Prisma.BookingUncheckedUpdateManyWithoutDestinationCalendarNestedInput;
};

export type DestinationCalendarUncheckedUpdateManyWithoutCredentialInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  eventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  domainWideDelegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type DestinationCalendarCreateManyDelegationCredentialInput = {
  id?: number;
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  userId?: number | null;
  eventTypeId?: number | null;
  credentialId?: number | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  domainWideDelegationCredentialId?: string | null;
};

export type DestinationCalendarUpdateWithoutDelegationCredentialInput = {
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  user?: Prisma.UserUpdateOneWithoutDestinationCalendarNestedInput;
  booking?: Prisma.BookingUpdateManyWithoutDestinationCalendarNestedInput;
  eventType?: Prisma.EventTypeUpdateOneWithoutDestinationCalendarNestedInput;
  credential?: Prisma.CredentialUpdateOneWithoutDestinationCalendarsNestedInput;
  domainWideDelegation?: Prisma.DomainWideDelegationUpdateOneWithoutDestinationCalendarNestedInput;
};

export type DestinationCalendarUncheckedUpdateWithoutDelegationCredentialInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  eventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  credentialId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  domainWideDelegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  booking?: Prisma.BookingUncheckedUpdateManyWithoutDestinationCalendarNestedInput;
};

export type DestinationCalendarUncheckedUpdateManyWithoutDelegationCredentialInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  eventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  credentialId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  domainWideDelegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type DestinationCalendarCreateManyDomainWideDelegationInput = {
  id?: number;
  integration: string;
  externalId: string;
  primaryEmail?: string | null;
  userId?: number | null;
  eventTypeId?: number | null;
  credentialId?: number | null;
  createdAt?: Date | string | null;
  updatedAt?: Date | string | null;
  delegationCredentialId?: string | null;
};

export type DestinationCalendarUpdateWithoutDomainWideDelegationInput = {
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  user?: Prisma.UserUpdateOneWithoutDestinationCalendarNestedInput;
  booking?: Prisma.BookingUpdateManyWithoutDestinationCalendarNestedInput;
  eventType?: Prisma.EventTypeUpdateOneWithoutDestinationCalendarNestedInput;
  credential?: Prisma.CredentialUpdateOneWithoutDestinationCalendarsNestedInput;
  delegationCredential?: Prisma.DelegationCredentialUpdateOneWithoutDestinationCalendarNestedInput;
};

export type DestinationCalendarUncheckedUpdateWithoutDomainWideDelegationInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  eventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  credentialId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  booking?: Prisma.BookingUncheckedUpdateManyWithoutDestinationCalendarNestedInput;
};

export type DestinationCalendarUncheckedUpdateManyWithoutDomainWideDelegationInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  integration?: Prisma.StringFieldUpdateOperationsInput | string;
  externalId?: Prisma.StringFieldUpdateOperationsInput | string;
  primaryEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  eventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  credentialId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

/**
 * Count Type DestinationCalendarCountOutputType
 */

export type DestinationCalendarCountOutputType = {
  booking: number;
};

export type DestinationCalendarCountOutputTypeSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  booking?: boolean | DestinationCalendarCountOutputTypeCountBookingArgs;
};

/**
 * DestinationCalendarCountOutputType without action
 */
export type DestinationCalendarCountOutputTypeDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DestinationCalendarCountOutputType
   */
  select?: Prisma.DestinationCalendarCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * DestinationCalendarCountOutputType without action
 */
export type DestinationCalendarCountOutputTypeCountBookingArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.BookingWhereInput;
};

export type DestinationCalendarSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    integration?: boolean;
    externalId?: boolean;
    primaryEmail?: boolean;
    userId?: boolean;
    eventTypeId?: boolean;
    credentialId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    delegationCredentialId?: boolean;
    domainWideDelegationCredentialId?: boolean;
    user?: boolean | Prisma.DestinationCalendar$userArgs<ExtArgs>;
    booking?: boolean | Prisma.DestinationCalendar$bookingArgs<ExtArgs>;
    eventType?: boolean | Prisma.DestinationCalendar$eventTypeArgs<ExtArgs>;
    credential?: boolean | Prisma.DestinationCalendar$credentialArgs<ExtArgs>;
    delegationCredential?: boolean | Prisma.DestinationCalendar$delegationCredentialArgs<ExtArgs>;
    domainWideDelegation?: boolean | Prisma.DestinationCalendar$domainWideDelegationArgs<ExtArgs>;
    _count?: boolean | Prisma.DestinationCalendarCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["destinationCalendar"]
>;

export type DestinationCalendarSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    integration?: boolean;
    externalId?: boolean;
    primaryEmail?: boolean;
    userId?: boolean;
    eventTypeId?: boolean;
    credentialId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    delegationCredentialId?: boolean;
    domainWideDelegationCredentialId?: boolean;
    user?: boolean | Prisma.DestinationCalendar$userArgs<ExtArgs>;
    eventType?: boolean | Prisma.DestinationCalendar$eventTypeArgs<ExtArgs>;
    credential?: boolean | Prisma.DestinationCalendar$credentialArgs<ExtArgs>;
    delegationCredential?: boolean | Prisma.DestinationCalendar$delegationCredentialArgs<ExtArgs>;
    domainWideDelegation?: boolean | Prisma.DestinationCalendar$domainWideDelegationArgs<ExtArgs>;
  },
  ExtArgs["result"]["destinationCalendar"]
>;

export type DestinationCalendarSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    integration?: boolean;
    externalId?: boolean;
    primaryEmail?: boolean;
    userId?: boolean;
    eventTypeId?: boolean;
    credentialId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    delegationCredentialId?: boolean;
    domainWideDelegationCredentialId?: boolean;
    user?: boolean | Prisma.DestinationCalendar$userArgs<ExtArgs>;
    eventType?: boolean | Prisma.DestinationCalendar$eventTypeArgs<ExtArgs>;
    credential?: boolean | Prisma.DestinationCalendar$credentialArgs<ExtArgs>;
    delegationCredential?: boolean | Prisma.DestinationCalendar$delegationCredentialArgs<ExtArgs>;
    domainWideDelegation?: boolean | Prisma.DestinationCalendar$domainWideDelegationArgs<ExtArgs>;
  },
  ExtArgs["result"]["destinationCalendar"]
>;

export type DestinationCalendarSelectScalar = {
  id?: boolean;
  integration?: boolean;
  externalId?: boolean;
  primaryEmail?: boolean;
  userId?: boolean;
  eventTypeId?: boolean;
  credentialId?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
  delegationCredentialId?: boolean;
  domainWideDelegationCredentialId?: boolean;
};

export type DestinationCalendarOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "integration"
  | "externalId"
  | "primaryEmail"
  | "userId"
  | "eventTypeId"
  | "credentialId"
  | "createdAt"
  | "updatedAt"
  | "delegationCredentialId"
  | "domainWideDelegationCredentialId",
  ExtArgs["result"]["destinationCalendar"]
>;
export type DestinationCalendarInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.DestinationCalendar$userArgs<ExtArgs>;
  booking?: boolean | Prisma.DestinationCalendar$bookingArgs<ExtArgs>;
  eventType?: boolean | Prisma.DestinationCalendar$eventTypeArgs<ExtArgs>;
  credential?: boolean | Prisma.DestinationCalendar$credentialArgs<ExtArgs>;
  delegationCredential?: boolean | Prisma.DestinationCalendar$delegationCredentialArgs<ExtArgs>;
  domainWideDelegation?: boolean | Prisma.DestinationCalendar$domainWideDelegationArgs<ExtArgs>;
  _count?: boolean | Prisma.DestinationCalendarCountOutputTypeDefaultArgs<ExtArgs>;
};
export type DestinationCalendarIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.DestinationCalendar$userArgs<ExtArgs>;
  eventType?: boolean | Prisma.DestinationCalendar$eventTypeArgs<ExtArgs>;
  credential?: boolean | Prisma.DestinationCalendar$credentialArgs<ExtArgs>;
  delegationCredential?: boolean | Prisma.DestinationCalendar$delegationCredentialArgs<ExtArgs>;
  domainWideDelegation?: boolean | Prisma.DestinationCalendar$domainWideDelegationArgs<ExtArgs>;
};
export type DestinationCalendarIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.DestinationCalendar$userArgs<ExtArgs>;
  eventType?: boolean | Prisma.DestinationCalendar$eventTypeArgs<ExtArgs>;
  credential?: boolean | Prisma.DestinationCalendar$credentialArgs<ExtArgs>;
  delegationCredential?: boolean | Prisma.DestinationCalendar$delegationCredentialArgs<ExtArgs>;
  domainWideDelegation?: boolean | Prisma.DestinationCalendar$domainWideDelegationArgs<ExtArgs>;
};

export type $DestinationCalendarPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "DestinationCalendar";
  objects: {
    user: Prisma.$UserPayload<ExtArgs> | null;
    booking: Prisma.$BookingPayload<ExtArgs>[];
    eventType: Prisma.$EventTypePayload<ExtArgs> | null;
    credential: Prisma.$CredentialPayload<ExtArgs> | null;
    delegationCredential: Prisma.$DelegationCredentialPayload<ExtArgs> | null;
    domainWideDelegation: Prisma.$DomainWideDelegationPayload<ExtArgs> | null;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      integration: string;
      externalId: string;
      /**
       * @zod.import(["import { emailSchema } from '@calcom/lib/emailSchema'"]).custom.use(emailSchema)
       */
      primaryEmail: string | null;
      userId: number | null;
      eventTypeId: number | null;
      credentialId: number | null;
      createdAt: Date | null;
      updatedAt: Date | null;
      delegationCredentialId: string | null;
      domainWideDelegationCredentialId: string | null;
    },
    ExtArgs["result"]["destinationCalendar"]
  >;
  composites: {};
};

export type DestinationCalendarGetPayload<
  S extends boolean | null | undefined | DestinationCalendarDefaultArgs
> = runtime.Types.Result.GetResult<Prisma.$DestinationCalendarPayload, S>;

export type DestinationCalendarCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<DestinationCalendarFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: DestinationCalendarCountAggregateInputType | true;
};

export interface DestinationCalendarDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["DestinationCalendar"];
    meta: { name: "DestinationCalendar" };
  };
  /**
   * Find zero or one DestinationCalendar that matches the filter.
   * @param {DestinationCalendarFindUniqueArgs} args - Arguments to find a DestinationCalendar
   * @example
   * // Get one DestinationCalendar
   * const destinationCalendar = await prisma.destinationCalendar.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends DestinationCalendarFindUniqueArgs>(
    args: Prisma.SelectSubset<T, DestinationCalendarFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__DestinationCalendarClient<
    runtime.Types.Result.GetResult<
      Prisma.$DestinationCalendarPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one DestinationCalendar that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {DestinationCalendarFindUniqueOrThrowArgs} args - Arguments to find a DestinationCalendar
   * @example
   * // Get one DestinationCalendar
   * const destinationCalendar = await prisma.destinationCalendar.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends DestinationCalendarFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, DestinationCalendarFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__DestinationCalendarClient<
    runtime.Types.Result.GetResult<
      Prisma.$DestinationCalendarPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first DestinationCalendar that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DestinationCalendarFindFirstArgs} args - Arguments to find a DestinationCalendar
   * @example
   * // Get one DestinationCalendar
   * const destinationCalendar = await prisma.destinationCalendar.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends DestinationCalendarFindFirstArgs>(
    args?: Prisma.SelectSubset<T, DestinationCalendarFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__DestinationCalendarClient<
    runtime.Types.Result.GetResult<
      Prisma.$DestinationCalendarPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first DestinationCalendar that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DestinationCalendarFindFirstOrThrowArgs} args - Arguments to find a DestinationCalendar
   * @example
   * // Get one DestinationCalendar
   * const destinationCalendar = await prisma.destinationCalendar.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends DestinationCalendarFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, DestinationCalendarFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__DestinationCalendarClient<
    runtime.Types.Result.GetResult<
      Prisma.$DestinationCalendarPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more DestinationCalendars that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DestinationCalendarFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all DestinationCalendars
   * const destinationCalendars = await prisma.destinationCalendar.findMany()
   *
   * // Get first 10 DestinationCalendars
   * const destinationCalendars = await prisma.destinationCalendar.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const destinationCalendarWithIdOnly = await prisma.destinationCalendar.findMany({ select: { id: true } })
   *
   */
  findMany<T extends DestinationCalendarFindManyArgs>(
    args?: Prisma.SelectSubset<T, DestinationCalendarFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$DestinationCalendarPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a DestinationCalendar.
   * @param {DestinationCalendarCreateArgs} args - Arguments to create a DestinationCalendar.
   * @example
   * // Create one DestinationCalendar
   * const DestinationCalendar = await prisma.destinationCalendar.create({
   *   data: {
   *     // ... data to create a DestinationCalendar
   *   }
   * })
   *
   */
  create<T extends DestinationCalendarCreateArgs>(
    args: Prisma.SelectSubset<T, DestinationCalendarCreateArgs<ExtArgs>>
  ): Prisma.Prisma__DestinationCalendarClient<
    runtime.Types.Result.GetResult<
      Prisma.$DestinationCalendarPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many DestinationCalendars.
   * @param {DestinationCalendarCreateManyArgs} args - Arguments to create many DestinationCalendars.
   * @example
   * // Create many DestinationCalendars
   * const destinationCalendar = await prisma.destinationCalendar.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends DestinationCalendarCreateManyArgs>(
    args?: Prisma.SelectSubset<T, DestinationCalendarCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many DestinationCalendars and returns the data saved in the database.
   * @param {DestinationCalendarCreateManyAndReturnArgs} args - Arguments to create many DestinationCalendars.
   * @example
   * // Create many DestinationCalendars
   * const destinationCalendar = await prisma.destinationCalendar.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many DestinationCalendars and only return the `id`
   * const destinationCalendarWithIdOnly = await prisma.destinationCalendar.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends DestinationCalendarCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, DestinationCalendarCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$DestinationCalendarPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a DestinationCalendar.
   * @param {DestinationCalendarDeleteArgs} args - Arguments to delete one DestinationCalendar.
   * @example
   * // Delete one DestinationCalendar
   * const DestinationCalendar = await prisma.destinationCalendar.delete({
   *   where: {
   *     // ... filter to delete one DestinationCalendar
   *   }
   * })
   *
   */
  delete<T extends DestinationCalendarDeleteArgs>(
    args: Prisma.SelectSubset<T, DestinationCalendarDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__DestinationCalendarClient<
    runtime.Types.Result.GetResult<
      Prisma.$DestinationCalendarPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one DestinationCalendar.
   * @param {DestinationCalendarUpdateArgs} args - Arguments to update one DestinationCalendar.
   * @example
   * // Update one DestinationCalendar
   * const destinationCalendar = await prisma.destinationCalendar.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends DestinationCalendarUpdateArgs>(
    args: Prisma.SelectSubset<T, DestinationCalendarUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__DestinationCalendarClient<
    runtime.Types.Result.GetResult<
      Prisma.$DestinationCalendarPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more DestinationCalendars.
   * @param {DestinationCalendarDeleteManyArgs} args - Arguments to filter DestinationCalendars to delete.
   * @example
   * // Delete a few DestinationCalendars
   * const { count } = await prisma.destinationCalendar.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends DestinationCalendarDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, DestinationCalendarDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more DestinationCalendars.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DestinationCalendarUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many DestinationCalendars
   * const destinationCalendar = await prisma.destinationCalendar.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends DestinationCalendarUpdateManyArgs>(
    args: Prisma.SelectSubset<T, DestinationCalendarUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more DestinationCalendars and returns the data updated in the database.
   * @param {DestinationCalendarUpdateManyAndReturnArgs} args - Arguments to update many DestinationCalendars.
   * @example
   * // Update many DestinationCalendars
   * const destinationCalendar = await prisma.destinationCalendar.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more DestinationCalendars and only return the `id`
   * const destinationCalendarWithIdOnly = await prisma.destinationCalendar.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends DestinationCalendarUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, DestinationCalendarUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$DestinationCalendarPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one DestinationCalendar.
   * @param {DestinationCalendarUpsertArgs} args - Arguments to update or create a DestinationCalendar.
   * @example
   * // Update or create a DestinationCalendar
   * const destinationCalendar = await prisma.destinationCalendar.upsert({
   *   create: {
   *     // ... data to create a DestinationCalendar
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the DestinationCalendar we want to update
   *   }
   * })
   */
  upsert<T extends DestinationCalendarUpsertArgs>(
    args: Prisma.SelectSubset<T, DestinationCalendarUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__DestinationCalendarClient<
    runtime.Types.Result.GetResult<
      Prisma.$DestinationCalendarPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of DestinationCalendars.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DestinationCalendarCountArgs} args - Arguments to filter DestinationCalendars to count.
   * @example
   * // Count the number of DestinationCalendars
   * const count = await prisma.destinationCalendar.count({
   *   where: {
   *     // ... the filter for the DestinationCalendars we want to count
   *   }
   * })
   **/
  count<T extends DestinationCalendarCountArgs>(
    args?: Prisma.Subset<T, DestinationCalendarCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], DestinationCalendarCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a DestinationCalendar.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DestinationCalendarAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends DestinationCalendarAggregateArgs>(
    args: Prisma.Subset<T, DestinationCalendarAggregateArgs>
  ): Prisma.PrismaPromise<GetDestinationCalendarAggregateType<T>>;

  /**
   * Group by DestinationCalendar.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DestinationCalendarGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends DestinationCalendarGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: DestinationCalendarGroupByArgs["orderBy"] }
      : { orderBy?: DestinationCalendarGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, DestinationCalendarGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetDestinationCalendarGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the DestinationCalendar model
   */
  readonly fields: DestinationCalendarFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for DestinationCalendar.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__DestinationCalendarClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  user<T extends Prisma.DestinationCalendar$userArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.DestinationCalendar$userArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  booking<T extends Prisma.DestinationCalendar$bookingArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.DestinationCalendar$bookingArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null
  >;
  eventType<T extends Prisma.DestinationCalendar$eventTypeArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.DestinationCalendar$eventTypeArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeClient<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypePayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  credential<T extends Prisma.DestinationCalendar$credentialArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.DestinationCalendar$credentialArgs<ExtArgs>>
  ): Prisma.Prisma__CredentialClient<
    runtime.Types.Result.GetResult<
      Prisma.$CredentialPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  delegationCredential<T extends Prisma.DestinationCalendar$delegationCredentialArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.DestinationCalendar$delegationCredentialArgs<ExtArgs>>
  ): Prisma.Prisma__DelegationCredentialClient<
    runtime.Types.Result.GetResult<
      Prisma.$DelegationCredentialPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  domainWideDelegation<T extends Prisma.DestinationCalendar$domainWideDelegationArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.DestinationCalendar$domainWideDelegationArgs<ExtArgs>>
  ): Prisma.Prisma__DomainWideDelegationClient<
    runtime.Types.Result.GetResult<
      Prisma.$DomainWideDelegationPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the DestinationCalendar model
 */
export interface DestinationCalendarFieldRefs {
  readonly id: Prisma.FieldRef<"DestinationCalendar", "Int">;
  readonly integration: Prisma.FieldRef<"DestinationCalendar", "String">;
  readonly externalId: Prisma.FieldRef<"DestinationCalendar", "String">;
  readonly primaryEmail: Prisma.FieldRef<"DestinationCalendar", "String">;
  readonly userId: Prisma.FieldRef<"DestinationCalendar", "Int">;
  readonly eventTypeId: Prisma.FieldRef<"DestinationCalendar", "Int">;
  readonly credentialId: Prisma.FieldRef<"DestinationCalendar", "Int">;
  readonly createdAt: Prisma.FieldRef<"DestinationCalendar", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"DestinationCalendar", "DateTime">;
  readonly delegationCredentialId: Prisma.FieldRef<"DestinationCalendar", "String">;
  readonly domainWideDelegationCredentialId: Prisma.FieldRef<"DestinationCalendar", "String">;
}

// Custom InputTypes
/**
 * DestinationCalendar findUnique
 */
export type DestinationCalendarFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DestinationCalendar
   */
  select?: Prisma.DestinationCalendarSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DestinationCalendar
   */
  omit?: Prisma.DestinationCalendarOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DestinationCalendarInclude<ExtArgs> | null;
  /**
   * Filter, which DestinationCalendar to fetch.
   */
  where: Prisma.DestinationCalendarWhereUniqueInput;
};

/**
 * DestinationCalendar findUniqueOrThrow
 */
export type DestinationCalendarFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DestinationCalendar
   */
  select?: Prisma.DestinationCalendarSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DestinationCalendar
   */
  omit?: Prisma.DestinationCalendarOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DestinationCalendarInclude<ExtArgs> | null;
  /**
   * Filter, which DestinationCalendar to fetch.
   */
  where: Prisma.DestinationCalendarWhereUniqueInput;
};

/**
 * DestinationCalendar findFirst
 */
export type DestinationCalendarFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DestinationCalendar
   */
  select?: Prisma.DestinationCalendarSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DestinationCalendar
   */
  omit?: Prisma.DestinationCalendarOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DestinationCalendarInclude<ExtArgs> | null;
  /**
   * Filter, which DestinationCalendar to fetch.
   */
  where?: Prisma.DestinationCalendarWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of DestinationCalendars to fetch.
   */
  orderBy?:
    | Prisma.DestinationCalendarOrderByWithRelationInput
    | Prisma.DestinationCalendarOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for DestinationCalendars.
   */
  cursor?: Prisma.DestinationCalendarWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` DestinationCalendars from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` DestinationCalendars.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of DestinationCalendars.
   */
  distinct?: Prisma.DestinationCalendarScalarFieldEnum | Prisma.DestinationCalendarScalarFieldEnum[];
};

/**
 * DestinationCalendar findFirstOrThrow
 */
export type DestinationCalendarFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DestinationCalendar
   */
  select?: Prisma.DestinationCalendarSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DestinationCalendar
   */
  omit?: Prisma.DestinationCalendarOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DestinationCalendarInclude<ExtArgs> | null;
  /**
   * Filter, which DestinationCalendar to fetch.
   */
  where?: Prisma.DestinationCalendarWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of DestinationCalendars to fetch.
   */
  orderBy?:
    | Prisma.DestinationCalendarOrderByWithRelationInput
    | Prisma.DestinationCalendarOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for DestinationCalendars.
   */
  cursor?: Prisma.DestinationCalendarWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` DestinationCalendars from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` DestinationCalendars.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of DestinationCalendars.
   */
  distinct?: Prisma.DestinationCalendarScalarFieldEnum | Prisma.DestinationCalendarScalarFieldEnum[];
};

/**
 * DestinationCalendar findMany
 */
export type DestinationCalendarFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DestinationCalendar
   */
  select?: Prisma.DestinationCalendarSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DestinationCalendar
   */
  omit?: Prisma.DestinationCalendarOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DestinationCalendarInclude<ExtArgs> | null;
  /**
   * Filter, which DestinationCalendars to fetch.
   */
  where?: Prisma.DestinationCalendarWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of DestinationCalendars to fetch.
   */
  orderBy?:
    | Prisma.DestinationCalendarOrderByWithRelationInput
    | Prisma.DestinationCalendarOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing DestinationCalendars.
   */
  cursor?: Prisma.DestinationCalendarWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` DestinationCalendars from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` DestinationCalendars.
   */
  skip?: number;
  distinct?: Prisma.DestinationCalendarScalarFieldEnum | Prisma.DestinationCalendarScalarFieldEnum[];
};

/**
 * DestinationCalendar create
 */
export type DestinationCalendarCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DestinationCalendar
   */
  select?: Prisma.DestinationCalendarSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DestinationCalendar
   */
  omit?: Prisma.DestinationCalendarOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DestinationCalendarInclude<ExtArgs> | null;
  /**
   * The data needed to create a DestinationCalendar.
   */
  data: Prisma.XOR<Prisma.DestinationCalendarCreateInput, Prisma.DestinationCalendarUncheckedCreateInput>;
};

/**
 * DestinationCalendar createMany
 */
export type DestinationCalendarCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many DestinationCalendars.
   */
  data: Prisma.DestinationCalendarCreateManyInput | Prisma.DestinationCalendarCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * DestinationCalendar createManyAndReturn
 */
export type DestinationCalendarCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DestinationCalendar
   */
  select?: Prisma.DestinationCalendarSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the DestinationCalendar
   */
  omit?: Prisma.DestinationCalendarOmit<ExtArgs> | null;
  /**
   * The data used to create many DestinationCalendars.
   */
  data: Prisma.DestinationCalendarCreateManyInput | Prisma.DestinationCalendarCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DestinationCalendarIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * DestinationCalendar update
 */
export type DestinationCalendarUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DestinationCalendar
   */
  select?: Prisma.DestinationCalendarSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DestinationCalendar
   */
  omit?: Prisma.DestinationCalendarOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DestinationCalendarInclude<ExtArgs> | null;
  /**
   * The data needed to update a DestinationCalendar.
   */
  data: Prisma.XOR<Prisma.DestinationCalendarUpdateInput, Prisma.DestinationCalendarUncheckedUpdateInput>;
  /**
   * Choose, which DestinationCalendar to update.
   */
  where: Prisma.DestinationCalendarWhereUniqueInput;
};

/**
 * DestinationCalendar updateMany
 */
export type DestinationCalendarUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update DestinationCalendars.
   */
  data: Prisma.XOR<
    Prisma.DestinationCalendarUpdateManyMutationInput,
    Prisma.DestinationCalendarUncheckedUpdateManyInput
  >;
  /**
   * Filter which DestinationCalendars to update
   */
  where?: Prisma.DestinationCalendarWhereInput;
  /**
   * Limit how many DestinationCalendars to update.
   */
  limit?: number;
};

/**
 * DestinationCalendar updateManyAndReturn
 */
export type DestinationCalendarUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DestinationCalendar
   */
  select?: Prisma.DestinationCalendarSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the DestinationCalendar
   */
  omit?: Prisma.DestinationCalendarOmit<ExtArgs> | null;
  /**
   * The data used to update DestinationCalendars.
   */
  data: Prisma.XOR<
    Prisma.DestinationCalendarUpdateManyMutationInput,
    Prisma.DestinationCalendarUncheckedUpdateManyInput
  >;
  /**
   * Filter which DestinationCalendars to update
   */
  where?: Prisma.DestinationCalendarWhereInput;
  /**
   * Limit how many DestinationCalendars to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DestinationCalendarIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * DestinationCalendar upsert
 */
export type DestinationCalendarUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DestinationCalendar
   */
  select?: Prisma.DestinationCalendarSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DestinationCalendar
   */
  omit?: Prisma.DestinationCalendarOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DestinationCalendarInclude<ExtArgs> | null;
  /**
   * The filter to search for the DestinationCalendar to update in case it exists.
   */
  where: Prisma.DestinationCalendarWhereUniqueInput;
  /**
   * In case the DestinationCalendar found by the `where` argument doesn't exist, create a new DestinationCalendar with this data.
   */
  create: Prisma.XOR<Prisma.DestinationCalendarCreateInput, Prisma.DestinationCalendarUncheckedCreateInput>;
  /**
   * In case the DestinationCalendar was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.DestinationCalendarUpdateInput, Prisma.DestinationCalendarUncheckedUpdateInput>;
};

/**
 * DestinationCalendar delete
 */
export type DestinationCalendarDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DestinationCalendar
   */
  select?: Prisma.DestinationCalendarSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DestinationCalendar
   */
  omit?: Prisma.DestinationCalendarOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DestinationCalendarInclude<ExtArgs> | null;
  /**
   * Filter which DestinationCalendar to delete.
   */
  where: Prisma.DestinationCalendarWhereUniqueInput;
};

/**
 * DestinationCalendar deleteMany
 */
export type DestinationCalendarDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which DestinationCalendars to delete
   */
  where?: Prisma.DestinationCalendarWhereInput;
  /**
   * Limit how many DestinationCalendars to delete.
   */
  limit?: number;
};

/**
 * DestinationCalendar.user
 */
export type DestinationCalendar$userArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  where?: Prisma.UserWhereInput;
};

/**
 * DestinationCalendar.booking
 */
export type DestinationCalendar$bookingArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Booking
   */
  select?: Prisma.BookingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Booking
   */
  omit?: Prisma.BookingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BookingInclude<ExtArgs> | null;
  where?: Prisma.BookingWhereInput;
  orderBy?: Prisma.BookingOrderByWithRelationInput | Prisma.BookingOrderByWithRelationInput[];
  cursor?: Prisma.BookingWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.BookingScalarFieldEnum | Prisma.BookingScalarFieldEnum[];
};

/**
 * DestinationCalendar.eventType
 */
export type DestinationCalendar$eventTypeArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventType
   */
  select?: Prisma.EventTypeSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventType
   */
  omit?: Prisma.EventTypeOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeInclude<ExtArgs> | null;
  where?: Prisma.EventTypeWhereInput;
};

/**
 * DestinationCalendar.credential
 */
export type DestinationCalendar$credentialArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Credential
   */
  select?: Prisma.CredentialSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Credential
   */
  omit?: Prisma.CredentialOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CredentialInclude<ExtArgs> | null;
  where?: Prisma.CredentialWhereInput;
};

/**
 * DestinationCalendar.delegationCredential
 */
export type DestinationCalendar$delegationCredentialArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DelegationCredential
   */
  select?: Prisma.DelegationCredentialSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DelegationCredential
   */
  omit?: Prisma.DelegationCredentialOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DelegationCredentialInclude<ExtArgs> | null;
  where?: Prisma.DelegationCredentialWhereInput;
};

/**
 * DestinationCalendar.domainWideDelegation
 */
export type DestinationCalendar$domainWideDelegationArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DomainWideDelegation
   */
  select?: Prisma.DomainWideDelegationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DomainWideDelegation
   */
  omit?: Prisma.DomainWideDelegationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DomainWideDelegationInclude<ExtArgs> | null;
  where?: Prisma.DomainWideDelegationWhereInput;
};

/**
 * DestinationCalendar without action
 */
export type DestinationCalendarDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DestinationCalendar
   */
  select?: Prisma.DestinationCalendarSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DestinationCalendar
   */
  omit?: Prisma.DestinationCalendarOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DestinationCalendarInclude<ExtArgs> | null;
};
