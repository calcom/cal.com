/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `PlatformAuthorizationToken` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model PlatformAuthorizationToken
 *
 */
export type PlatformAuthorizationTokenModel =
  runtime.Types.Result.DefaultSelection<Prisma.$PlatformAuthorizationTokenPayload>;

export type AggregatePlatformAuthorizationToken = {
  _count: PlatformAuthorizationTokenCountAggregateOutputType | null;
  _avg: PlatformAuthorizationTokenAvgAggregateOutputType | null;
  _sum: PlatformAuthorizationTokenSumAggregateOutputType | null;
  _min: PlatformAuthorizationTokenMinAggregateOutputType | null;
  _max: PlatformAuthorizationTokenMaxAggregateOutputType | null;
};

export type PlatformAuthorizationTokenAvgAggregateOutputType = {
  userId: number | null;
};

export type PlatformAuthorizationTokenSumAggregateOutputType = {
  userId: number | null;
};

export type PlatformAuthorizationTokenMinAggregateOutputType = {
  id: string | null;
  platformOAuthClientId: string | null;
  userId: number | null;
  createdAt: Date | null;
};

export type PlatformAuthorizationTokenMaxAggregateOutputType = {
  id: string | null;
  platformOAuthClientId: string | null;
  userId: number | null;
  createdAt: Date | null;
};

export type PlatformAuthorizationTokenCountAggregateOutputType = {
  id: number;
  platformOAuthClientId: number;
  userId: number;
  createdAt: number;
  _all: number;
};

export type PlatformAuthorizationTokenAvgAggregateInputType = {
  userId?: true;
};

export type PlatformAuthorizationTokenSumAggregateInputType = {
  userId?: true;
};

export type PlatformAuthorizationTokenMinAggregateInputType = {
  id?: true;
  platformOAuthClientId?: true;
  userId?: true;
  createdAt?: true;
};

export type PlatformAuthorizationTokenMaxAggregateInputType = {
  id?: true;
  platformOAuthClientId?: true;
  userId?: true;
  createdAt?: true;
};

export type PlatformAuthorizationTokenCountAggregateInputType = {
  id?: true;
  platformOAuthClientId?: true;
  userId?: true;
  createdAt?: true;
  _all?: true;
};

export type PlatformAuthorizationTokenAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which PlatformAuthorizationToken to aggregate.
   */
  where?: Prisma.PlatformAuthorizationTokenWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of PlatformAuthorizationTokens to fetch.
   */
  orderBy?:
    | Prisma.PlatformAuthorizationTokenOrderByWithRelationInput
    | Prisma.PlatformAuthorizationTokenOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.PlatformAuthorizationTokenWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` PlatformAuthorizationTokens from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` PlatformAuthorizationTokens.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned PlatformAuthorizationTokens
   **/
  _count?: true | PlatformAuthorizationTokenCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: PlatformAuthorizationTokenAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: PlatformAuthorizationTokenSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: PlatformAuthorizationTokenMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: PlatformAuthorizationTokenMaxAggregateInputType;
};

export type GetPlatformAuthorizationTokenAggregateType<T extends PlatformAuthorizationTokenAggregateArgs> = {
  [P in keyof T & keyof AggregatePlatformAuthorizationToken]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePlatformAuthorizationToken[P]>
    : Prisma.GetScalarType<T[P], AggregatePlatformAuthorizationToken[P]>;
};

export type PlatformAuthorizationTokenGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.PlatformAuthorizationTokenWhereInput;
  orderBy?:
    | Prisma.PlatformAuthorizationTokenOrderByWithAggregationInput
    | Prisma.PlatformAuthorizationTokenOrderByWithAggregationInput[];
  by: Prisma.PlatformAuthorizationTokenScalarFieldEnum[] | Prisma.PlatformAuthorizationTokenScalarFieldEnum;
  having?: Prisma.PlatformAuthorizationTokenScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: PlatformAuthorizationTokenCountAggregateInputType | true;
  _avg?: PlatformAuthorizationTokenAvgAggregateInputType;
  _sum?: PlatformAuthorizationTokenSumAggregateInputType;
  _min?: PlatformAuthorizationTokenMinAggregateInputType;
  _max?: PlatformAuthorizationTokenMaxAggregateInputType;
};

export type PlatformAuthorizationTokenGroupByOutputType = {
  id: string;
  platformOAuthClientId: string;
  userId: number;
  createdAt: Date;
  _count: PlatformAuthorizationTokenCountAggregateOutputType | null;
  _avg: PlatformAuthorizationTokenAvgAggregateOutputType | null;
  _sum: PlatformAuthorizationTokenSumAggregateOutputType | null;
  _min: PlatformAuthorizationTokenMinAggregateOutputType | null;
  _max: PlatformAuthorizationTokenMaxAggregateOutputType | null;
};

type GetPlatformAuthorizationTokenGroupByPayload<T extends PlatformAuthorizationTokenGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<PlatformAuthorizationTokenGroupByOutputType, T["by"]> & {
        [P in keyof T & keyof PlatformAuthorizationTokenGroupByOutputType]: P extends "_count"
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], PlatformAuthorizationTokenGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], PlatformAuthorizationTokenGroupByOutputType[P]>;
      }
    >
  >;

export type PlatformAuthorizationTokenWhereInput = {
  AND?: Prisma.PlatformAuthorizationTokenWhereInput | Prisma.PlatformAuthorizationTokenWhereInput[];
  OR?: Prisma.PlatformAuthorizationTokenWhereInput[];
  NOT?: Prisma.PlatformAuthorizationTokenWhereInput | Prisma.PlatformAuthorizationTokenWhereInput[];
  id?: Prisma.StringFilter<"PlatformAuthorizationToken"> | string;
  platformOAuthClientId?: Prisma.StringFilter<"PlatformAuthorizationToken"> | string;
  userId?: Prisma.IntFilter<"PlatformAuthorizationToken"> | number;
  createdAt?: Prisma.DateTimeFilter<"PlatformAuthorizationToken"> | Date | string;
  owner?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
  client?: Prisma.XOR<Prisma.PlatformOAuthClientScalarRelationFilter, Prisma.PlatformOAuthClientWhereInput>;
};

export type PlatformAuthorizationTokenOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  platformOAuthClientId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  owner?: Prisma.UserOrderByWithRelationInput;
  client?: Prisma.PlatformOAuthClientOrderByWithRelationInput;
};

export type PlatformAuthorizationTokenWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    userId_platformOAuthClientId?: Prisma.PlatformAuthorizationTokenUserIdPlatformOAuthClientIdCompoundUniqueInput;
    AND?: Prisma.PlatformAuthorizationTokenWhereInput | Prisma.PlatformAuthorizationTokenWhereInput[];
    OR?: Prisma.PlatformAuthorizationTokenWhereInput[];
    NOT?: Prisma.PlatformAuthorizationTokenWhereInput | Prisma.PlatformAuthorizationTokenWhereInput[];
    platformOAuthClientId?: Prisma.StringFilter<"PlatformAuthorizationToken"> | string;
    userId?: Prisma.IntFilter<"PlatformAuthorizationToken"> | number;
    createdAt?: Prisma.DateTimeFilter<"PlatformAuthorizationToken"> | Date | string;
    owner?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
    client?: Prisma.XOR<Prisma.PlatformOAuthClientScalarRelationFilter, Prisma.PlatformOAuthClientWhereInput>;
  },
  "id" | "userId_platformOAuthClientId"
>;

export type PlatformAuthorizationTokenOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  platformOAuthClientId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  _count?: Prisma.PlatformAuthorizationTokenCountOrderByAggregateInput;
  _avg?: Prisma.PlatformAuthorizationTokenAvgOrderByAggregateInput;
  _max?: Prisma.PlatformAuthorizationTokenMaxOrderByAggregateInput;
  _min?: Prisma.PlatformAuthorizationTokenMinOrderByAggregateInput;
  _sum?: Prisma.PlatformAuthorizationTokenSumOrderByAggregateInput;
};

export type PlatformAuthorizationTokenScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.PlatformAuthorizationTokenScalarWhereWithAggregatesInput
    | Prisma.PlatformAuthorizationTokenScalarWhereWithAggregatesInput[];
  OR?: Prisma.PlatformAuthorizationTokenScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.PlatformAuthorizationTokenScalarWhereWithAggregatesInput
    | Prisma.PlatformAuthorizationTokenScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"PlatformAuthorizationToken"> | string;
  platformOAuthClientId?: Prisma.StringWithAggregatesFilter<"PlatformAuthorizationToken"> | string;
  userId?: Prisma.IntWithAggregatesFilter<"PlatformAuthorizationToken"> | number;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"PlatformAuthorizationToken"> | Date | string;
};

export type PlatformAuthorizationTokenCreateInput = {
  id?: string;
  createdAt?: Date | string;
  owner: Prisma.UserCreateNestedOneWithoutPlatformAuthorizationTokenInput;
  client: Prisma.PlatformOAuthClientCreateNestedOneWithoutAuthorizationTokensInput;
};

export type PlatformAuthorizationTokenUncheckedCreateInput = {
  id?: string;
  platformOAuthClientId: string;
  userId: number;
  createdAt?: Date | string;
};

export type PlatformAuthorizationTokenUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  owner?: Prisma.UserUpdateOneRequiredWithoutPlatformAuthorizationTokenNestedInput;
  client?: Prisma.PlatformOAuthClientUpdateOneRequiredWithoutAuthorizationTokensNestedInput;
};

export type PlatformAuthorizationTokenUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  platformOAuthClientId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type PlatformAuthorizationTokenCreateManyInput = {
  id?: string;
  platformOAuthClientId: string;
  userId: number;
  createdAt?: Date | string;
};

export type PlatformAuthorizationTokenUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type PlatformAuthorizationTokenUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  platformOAuthClientId?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type PlatformAuthorizationTokenListRelationFilter = {
  every?: Prisma.PlatformAuthorizationTokenWhereInput;
  some?: Prisma.PlatformAuthorizationTokenWhereInput;
  none?: Prisma.PlatformAuthorizationTokenWhereInput;
};

export type PlatformAuthorizationTokenOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type PlatformAuthorizationTokenUserIdPlatformOAuthClientIdCompoundUniqueInput = {
  userId: number;
  platformOAuthClientId: string;
};

export type PlatformAuthorizationTokenCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  platformOAuthClientId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
};

export type PlatformAuthorizationTokenAvgOrderByAggregateInput = {
  userId?: Prisma.SortOrder;
};

export type PlatformAuthorizationTokenMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  platformOAuthClientId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
};

export type PlatformAuthorizationTokenMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  platformOAuthClientId?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
};

export type PlatformAuthorizationTokenSumOrderByAggregateInput = {
  userId?: Prisma.SortOrder;
};

export type PlatformAuthorizationTokenCreateNestedManyWithoutOwnerInput = {
  create?:
    | Prisma.XOR<
        Prisma.PlatformAuthorizationTokenCreateWithoutOwnerInput,
        Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutOwnerInput
      >
    | Prisma.PlatformAuthorizationTokenCreateWithoutOwnerInput[]
    | Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutOwnerInput[];
  connectOrCreate?:
    | Prisma.PlatformAuthorizationTokenCreateOrConnectWithoutOwnerInput
    | Prisma.PlatformAuthorizationTokenCreateOrConnectWithoutOwnerInput[];
  createMany?: Prisma.PlatformAuthorizationTokenCreateManyOwnerInputEnvelope;
  connect?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
};

export type PlatformAuthorizationTokenUncheckedCreateNestedManyWithoutOwnerInput = {
  create?:
    | Prisma.XOR<
        Prisma.PlatformAuthorizationTokenCreateWithoutOwnerInput,
        Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutOwnerInput
      >
    | Prisma.PlatformAuthorizationTokenCreateWithoutOwnerInput[]
    | Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutOwnerInput[];
  connectOrCreate?:
    | Prisma.PlatformAuthorizationTokenCreateOrConnectWithoutOwnerInput
    | Prisma.PlatformAuthorizationTokenCreateOrConnectWithoutOwnerInput[];
  createMany?: Prisma.PlatformAuthorizationTokenCreateManyOwnerInputEnvelope;
  connect?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
};

export type PlatformAuthorizationTokenUpdateManyWithoutOwnerNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.PlatformAuthorizationTokenCreateWithoutOwnerInput,
        Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutOwnerInput
      >
    | Prisma.PlatformAuthorizationTokenCreateWithoutOwnerInput[]
    | Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutOwnerInput[];
  connectOrCreate?:
    | Prisma.PlatformAuthorizationTokenCreateOrConnectWithoutOwnerInput
    | Prisma.PlatformAuthorizationTokenCreateOrConnectWithoutOwnerInput[];
  upsert?:
    | Prisma.PlatformAuthorizationTokenUpsertWithWhereUniqueWithoutOwnerInput
    | Prisma.PlatformAuthorizationTokenUpsertWithWhereUniqueWithoutOwnerInput[];
  createMany?: Prisma.PlatformAuthorizationTokenCreateManyOwnerInputEnvelope;
  set?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
  disconnect?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
  delete?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
  connect?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
  update?:
    | Prisma.PlatformAuthorizationTokenUpdateWithWhereUniqueWithoutOwnerInput
    | Prisma.PlatformAuthorizationTokenUpdateWithWhereUniqueWithoutOwnerInput[];
  updateMany?:
    | Prisma.PlatformAuthorizationTokenUpdateManyWithWhereWithoutOwnerInput
    | Prisma.PlatformAuthorizationTokenUpdateManyWithWhereWithoutOwnerInput[];
  deleteMany?:
    | Prisma.PlatformAuthorizationTokenScalarWhereInput
    | Prisma.PlatformAuthorizationTokenScalarWhereInput[];
};

export type PlatformAuthorizationTokenUncheckedUpdateManyWithoutOwnerNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.PlatformAuthorizationTokenCreateWithoutOwnerInput,
        Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutOwnerInput
      >
    | Prisma.PlatformAuthorizationTokenCreateWithoutOwnerInput[]
    | Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutOwnerInput[];
  connectOrCreate?:
    | Prisma.PlatformAuthorizationTokenCreateOrConnectWithoutOwnerInput
    | Prisma.PlatformAuthorizationTokenCreateOrConnectWithoutOwnerInput[];
  upsert?:
    | Prisma.PlatformAuthorizationTokenUpsertWithWhereUniqueWithoutOwnerInput
    | Prisma.PlatformAuthorizationTokenUpsertWithWhereUniqueWithoutOwnerInput[];
  createMany?: Prisma.PlatformAuthorizationTokenCreateManyOwnerInputEnvelope;
  set?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
  disconnect?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
  delete?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
  connect?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
  update?:
    | Prisma.PlatformAuthorizationTokenUpdateWithWhereUniqueWithoutOwnerInput
    | Prisma.PlatformAuthorizationTokenUpdateWithWhereUniqueWithoutOwnerInput[];
  updateMany?:
    | Prisma.PlatformAuthorizationTokenUpdateManyWithWhereWithoutOwnerInput
    | Prisma.PlatformAuthorizationTokenUpdateManyWithWhereWithoutOwnerInput[];
  deleteMany?:
    | Prisma.PlatformAuthorizationTokenScalarWhereInput
    | Prisma.PlatformAuthorizationTokenScalarWhereInput[];
};

export type PlatformAuthorizationTokenCreateNestedManyWithoutClientInput = {
  create?:
    | Prisma.XOR<
        Prisma.PlatformAuthorizationTokenCreateWithoutClientInput,
        Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutClientInput
      >
    | Prisma.PlatformAuthorizationTokenCreateWithoutClientInput[]
    | Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutClientInput[];
  connectOrCreate?:
    | Prisma.PlatformAuthorizationTokenCreateOrConnectWithoutClientInput
    | Prisma.PlatformAuthorizationTokenCreateOrConnectWithoutClientInput[];
  createMany?: Prisma.PlatformAuthorizationTokenCreateManyClientInputEnvelope;
  connect?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
};

export type PlatformAuthorizationTokenUncheckedCreateNestedManyWithoutClientInput = {
  create?:
    | Prisma.XOR<
        Prisma.PlatformAuthorizationTokenCreateWithoutClientInput,
        Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutClientInput
      >
    | Prisma.PlatformAuthorizationTokenCreateWithoutClientInput[]
    | Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutClientInput[];
  connectOrCreate?:
    | Prisma.PlatformAuthorizationTokenCreateOrConnectWithoutClientInput
    | Prisma.PlatformAuthorizationTokenCreateOrConnectWithoutClientInput[];
  createMany?: Prisma.PlatformAuthorizationTokenCreateManyClientInputEnvelope;
  connect?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
};

export type PlatformAuthorizationTokenUpdateManyWithoutClientNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.PlatformAuthorizationTokenCreateWithoutClientInput,
        Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutClientInput
      >
    | Prisma.PlatformAuthorizationTokenCreateWithoutClientInput[]
    | Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutClientInput[];
  connectOrCreate?:
    | Prisma.PlatformAuthorizationTokenCreateOrConnectWithoutClientInput
    | Prisma.PlatformAuthorizationTokenCreateOrConnectWithoutClientInput[];
  upsert?:
    | Prisma.PlatformAuthorizationTokenUpsertWithWhereUniqueWithoutClientInput
    | Prisma.PlatformAuthorizationTokenUpsertWithWhereUniqueWithoutClientInput[];
  createMany?: Prisma.PlatformAuthorizationTokenCreateManyClientInputEnvelope;
  set?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
  disconnect?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
  delete?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
  connect?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
  update?:
    | Prisma.PlatformAuthorizationTokenUpdateWithWhereUniqueWithoutClientInput
    | Prisma.PlatformAuthorizationTokenUpdateWithWhereUniqueWithoutClientInput[];
  updateMany?:
    | Prisma.PlatformAuthorizationTokenUpdateManyWithWhereWithoutClientInput
    | Prisma.PlatformAuthorizationTokenUpdateManyWithWhereWithoutClientInput[];
  deleteMany?:
    | Prisma.PlatformAuthorizationTokenScalarWhereInput
    | Prisma.PlatformAuthorizationTokenScalarWhereInput[];
};

export type PlatformAuthorizationTokenUncheckedUpdateManyWithoutClientNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.PlatformAuthorizationTokenCreateWithoutClientInput,
        Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutClientInput
      >
    | Prisma.PlatformAuthorizationTokenCreateWithoutClientInput[]
    | Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutClientInput[];
  connectOrCreate?:
    | Prisma.PlatformAuthorizationTokenCreateOrConnectWithoutClientInput
    | Prisma.PlatformAuthorizationTokenCreateOrConnectWithoutClientInput[];
  upsert?:
    | Prisma.PlatformAuthorizationTokenUpsertWithWhereUniqueWithoutClientInput
    | Prisma.PlatformAuthorizationTokenUpsertWithWhereUniqueWithoutClientInput[];
  createMany?: Prisma.PlatformAuthorizationTokenCreateManyClientInputEnvelope;
  set?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
  disconnect?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
  delete?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
  connect?:
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput
    | Prisma.PlatformAuthorizationTokenWhereUniqueInput[];
  update?:
    | Prisma.PlatformAuthorizationTokenUpdateWithWhereUniqueWithoutClientInput
    | Prisma.PlatformAuthorizationTokenUpdateWithWhereUniqueWithoutClientInput[];
  updateMany?:
    | Prisma.PlatformAuthorizationTokenUpdateManyWithWhereWithoutClientInput
    | Prisma.PlatformAuthorizationTokenUpdateManyWithWhereWithoutClientInput[];
  deleteMany?:
    | Prisma.PlatformAuthorizationTokenScalarWhereInput
    | Prisma.PlatformAuthorizationTokenScalarWhereInput[];
};

export type PlatformAuthorizationTokenCreateWithoutOwnerInput = {
  id?: string;
  createdAt?: Date | string;
  client: Prisma.PlatformOAuthClientCreateNestedOneWithoutAuthorizationTokensInput;
};

export type PlatformAuthorizationTokenUncheckedCreateWithoutOwnerInput = {
  id?: string;
  platformOAuthClientId: string;
  createdAt?: Date | string;
};

export type PlatformAuthorizationTokenCreateOrConnectWithoutOwnerInput = {
  where: Prisma.PlatformAuthorizationTokenWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.PlatformAuthorizationTokenCreateWithoutOwnerInput,
    Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutOwnerInput
  >;
};

export type PlatformAuthorizationTokenCreateManyOwnerInputEnvelope = {
  data:
    | Prisma.PlatformAuthorizationTokenCreateManyOwnerInput
    | Prisma.PlatformAuthorizationTokenCreateManyOwnerInput[];
  skipDuplicates?: boolean;
};

export type PlatformAuthorizationTokenUpsertWithWhereUniqueWithoutOwnerInput = {
  where: Prisma.PlatformAuthorizationTokenWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.PlatformAuthorizationTokenUpdateWithoutOwnerInput,
    Prisma.PlatformAuthorizationTokenUncheckedUpdateWithoutOwnerInput
  >;
  create: Prisma.XOR<
    Prisma.PlatformAuthorizationTokenCreateWithoutOwnerInput,
    Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutOwnerInput
  >;
};

export type PlatformAuthorizationTokenUpdateWithWhereUniqueWithoutOwnerInput = {
  where: Prisma.PlatformAuthorizationTokenWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.PlatformAuthorizationTokenUpdateWithoutOwnerInput,
    Prisma.PlatformAuthorizationTokenUncheckedUpdateWithoutOwnerInput
  >;
};

export type PlatformAuthorizationTokenUpdateManyWithWhereWithoutOwnerInput = {
  where: Prisma.PlatformAuthorizationTokenScalarWhereInput;
  data: Prisma.XOR<
    Prisma.PlatformAuthorizationTokenUpdateManyMutationInput,
    Prisma.PlatformAuthorizationTokenUncheckedUpdateManyWithoutOwnerInput
  >;
};

export type PlatformAuthorizationTokenScalarWhereInput = {
  AND?:
    | Prisma.PlatformAuthorizationTokenScalarWhereInput
    | Prisma.PlatformAuthorizationTokenScalarWhereInput[];
  OR?: Prisma.PlatformAuthorizationTokenScalarWhereInput[];
  NOT?:
    | Prisma.PlatformAuthorizationTokenScalarWhereInput
    | Prisma.PlatformAuthorizationTokenScalarWhereInput[];
  id?: Prisma.StringFilter<"PlatformAuthorizationToken"> | string;
  platformOAuthClientId?: Prisma.StringFilter<"PlatformAuthorizationToken"> | string;
  userId?: Prisma.IntFilter<"PlatformAuthorizationToken"> | number;
  createdAt?: Prisma.DateTimeFilter<"PlatformAuthorizationToken"> | Date | string;
};

export type PlatformAuthorizationTokenCreateWithoutClientInput = {
  id?: string;
  createdAt?: Date | string;
  owner: Prisma.UserCreateNestedOneWithoutPlatformAuthorizationTokenInput;
};

export type PlatformAuthorizationTokenUncheckedCreateWithoutClientInput = {
  id?: string;
  userId: number;
  createdAt?: Date | string;
};

export type PlatformAuthorizationTokenCreateOrConnectWithoutClientInput = {
  where: Prisma.PlatformAuthorizationTokenWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.PlatformAuthorizationTokenCreateWithoutClientInput,
    Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutClientInput
  >;
};

export type PlatformAuthorizationTokenCreateManyClientInputEnvelope = {
  data:
    | Prisma.PlatformAuthorizationTokenCreateManyClientInput
    | Prisma.PlatformAuthorizationTokenCreateManyClientInput[];
  skipDuplicates?: boolean;
};

export type PlatformAuthorizationTokenUpsertWithWhereUniqueWithoutClientInput = {
  where: Prisma.PlatformAuthorizationTokenWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.PlatformAuthorizationTokenUpdateWithoutClientInput,
    Prisma.PlatformAuthorizationTokenUncheckedUpdateWithoutClientInput
  >;
  create: Prisma.XOR<
    Prisma.PlatformAuthorizationTokenCreateWithoutClientInput,
    Prisma.PlatformAuthorizationTokenUncheckedCreateWithoutClientInput
  >;
};

export type PlatformAuthorizationTokenUpdateWithWhereUniqueWithoutClientInput = {
  where: Prisma.PlatformAuthorizationTokenWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.PlatformAuthorizationTokenUpdateWithoutClientInput,
    Prisma.PlatformAuthorizationTokenUncheckedUpdateWithoutClientInput
  >;
};

export type PlatformAuthorizationTokenUpdateManyWithWhereWithoutClientInput = {
  where: Prisma.PlatformAuthorizationTokenScalarWhereInput;
  data: Prisma.XOR<
    Prisma.PlatformAuthorizationTokenUpdateManyMutationInput,
    Prisma.PlatformAuthorizationTokenUncheckedUpdateManyWithoutClientInput
  >;
};

export type PlatformAuthorizationTokenCreateManyOwnerInput = {
  id?: string;
  platformOAuthClientId: string;
  createdAt?: Date | string;
};

export type PlatformAuthorizationTokenUpdateWithoutOwnerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  client?: Prisma.PlatformOAuthClientUpdateOneRequiredWithoutAuthorizationTokensNestedInput;
};

export type PlatformAuthorizationTokenUncheckedUpdateWithoutOwnerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  platformOAuthClientId?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type PlatformAuthorizationTokenUncheckedUpdateManyWithoutOwnerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  platformOAuthClientId?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type PlatformAuthorizationTokenCreateManyClientInput = {
  id?: string;
  userId: number;
  createdAt?: Date | string;
};

export type PlatformAuthorizationTokenUpdateWithoutClientInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  owner?: Prisma.UserUpdateOneRequiredWithoutPlatformAuthorizationTokenNestedInput;
};

export type PlatformAuthorizationTokenUncheckedUpdateWithoutClientInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type PlatformAuthorizationTokenUncheckedUpdateManyWithoutClientInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type PlatformAuthorizationTokenSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    platformOAuthClientId?: boolean;
    userId?: boolean;
    createdAt?: boolean;
    owner?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    client?: boolean | Prisma.PlatformOAuthClientDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["platformAuthorizationToken"]
>;

export type PlatformAuthorizationTokenSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    platformOAuthClientId?: boolean;
    userId?: boolean;
    createdAt?: boolean;
    owner?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    client?: boolean | Prisma.PlatformOAuthClientDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["platformAuthorizationToken"]
>;

export type PlatformAuthorizationTokenSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    platformOAuthClientId?: boolean;
    userId?: boolean;
    createdAt?: boolean;
    owner?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    client?: boolean | Prisma.PlatformOAuthClientDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["platformAuthorizationToken"]
>;

export type PlatformAuthorizationTokenSelectScalar = {
  id?: boolean;
  platformOAuthClientId?: boolean;
  userId?: boolean;
  createdAt?: boolean;
};

export type PlatformAuthorizationTokenOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  "id" | "platformOAuthClientId" | "userId" | "createdAt",
  ExtArgs["result"]["platformAuthorizationToken"]
>;
export type PlatformAuthorizationTokenInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  owner?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  client?: boolean | Prisma.PlatformOAuthClientDefaultArgs<ExtArgs>;
};
export type PlatformAuthorizationTokenIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  owner?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  client?: boolean | Prisma.PlatformOAuthClientDefaultArgs<ExtArgs>;
};
export type PlatformAuthorizationTokenIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  owner?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  client?: boolean | Prisma.PlatformOAuthClientDefaultArgs<ExtArgs>;
};

export type $PlatformAuthorizationTokenPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "PlatformAuthorizationToken";
  objects: {
    owner: Prisma.$UserPayload<ExtArgs>;
    client: Prisma.$PlatformOAuthClientPayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      platformOAuthClientId: string;
      userId: number;
      createdAt: Date;
    },
    ExtArgs["result"]["platformAuthorizationToken"]
  >;
  composites: {};
};

export type PlatformAuthorizationTokenGetPayload<
  S extends boolean | null | undefined | PlatformAuthorizationTokenDefaultArgs
> = runtime.Types.Result.GetResult<Prisma.$PlatformAuthorizationTokenPayload, S>;

export type PlatformAuthorizationTokenCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<PlatformAuthorizationTokenFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: PlatformAuthorizationTokenCountAggregateInputType | true;
};

export interface PlatformAuthorizationTokenDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["PlatformAuthorizationToken"];
    meta: { name: "PlatformAuthorizationToken" };
  };
  /**
   * Find zero or one PlatformAuthorizationToken that matches the filter.
   * @param {PlatformAuthorizationTokenFindUniqueArgs} args - Arguments to find a PlatformAuthorizationToken
   * @example
   * // Get one PlatformAuthorizationToken
   * const platformAuthorizationToken = await prisma.platformAuthorizationToken.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends PlatformAuthorizationTokenFindUniqueArgs>(
    args: Prisma.SelectSubset<T, PlatformAuthorizationTokenFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformAuthorizationTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformAuthorizationTokenPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one PlatformAuthorizationToken that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {PlatformAuthorizationTokenFindUniqueOrThrowArgs} args - Arguments to find a PlatformAuthorizationToken
   * @example
   * // Get one PlatformAuthorizationToken
   * const platformAuthorizationToken = await prisma.platformAuthorizationToken.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends PlatformAuthorizationTokenFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, PlatformAuthorizationTokenFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformAuthorizationTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformAuthorizationTokenPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first PlatformAuthorizationToken that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformAuthorizationTokenFindFirstArgs} args - Arguments to find a PlatformAuthorizationToken
   * @example
   * // Get one PlatformAuthorizationToken
   * const platformAuthorizationToken = await prisma.platformAuthorizationToken.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends PlatformAuthorizationTokenFindFirstArgs>(
    args?: Prisma.SelectSubset<T, PlatformAuthorizationTokenFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformAuthorizationTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformAuthorizationTokenPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first PlatformAuthorizationToken that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformAuthorizationTokenFindFirstOrThrowArgs} args - Arguments to find a PlatformAuthorizationToken
   * @example
   * // Get one PlatformAuthorizationToken
   * const platformAuthorizationToken = await prisma.platformAuthorizationToken.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends PlatformAuthorizationTokenFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, PlatformAuthorizationTokenFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformAuthorizationTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformAuthorizationTokenPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more PlatformAuthorizationTokens that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformAuthorizationTokenFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all PlatformAuthorizationTokens
   * const platformAuthorizationTokens = await prisma.platformAuthorizationToken.findMany()
   *
   * // Get first 10 PlatformAuthorizationTokens
   * const platformAuthorizationTokens = await prisma.platformAuthorizationToken.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const platformAuthorizationTokenWithIdOnly = await prisma.platformAuthorizationToken.findMany({ select: { id: true } })
   *
   */
  findMany<T extends PlatformAuthorizationTokenFindManyArgs>(
    args?: Prisma.SelectSubset<T, PlatformAuthorizationTokenFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformAuthorizationTokenPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a PlatformAuthorizationToken.
   * @param {PlatformAuthorizationTokenCreateArgs} args - Arguments to create a PlatformAuthorizationToken.
   * @example
   * // Create one PlatformAuthorizationToken
   * const PlatformAuthorizationToken = await prisma.platformAuthorizationToken.create({
   *   data: {
   *     // ... data to create a PlatformAuthorizationToken
   *   }
   * })
   *
   */
  create<T extends PlatformAuthorizationTokenCreateArgs>(
    args: Prisma.SelectSubset<T, PlatformAuthorizationTokenCreateArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformAuthorizationTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformAuthorizationTokenPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many PlatformAuthorizationTokens.
   * @param {PlatformAuthorizationTokenCreateManyArgs} args - Arguments to create many PlatformAuthorizationTokens.
   * @example
   * // Create many PlatformAuthorizationTokens
   * const platformAuthorizationToken = await prisma.platformAuthorizationToken.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends PlatformAuthorizationTokenCreateManyArgs>(
    args?: Prisma.SelectSubset<T, PlatformAuthorizationTokenCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many PlatformAuthorizationTokens and returns the data saved in the database.
   * @param {PlatformAuthorizationTokenCreateManyAndReturnArgs} args - Arguments to create many PlatformAuthorizationTokens.
   * @example
   * // Create many PlatformAuthorizationTokens
   * const platformAuthorizationToken = await prisma.platformAuthorizationToken.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many PlatformAuthorizationTokens and only return the `id`
   * const platformAuthorizationTokenWithIdOnly = await prisma.platformAuthorizationToken.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends PlatformAuthorizationTokenCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, PlatformAuthorizationTokenCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformAuthorizationTokenPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a PlatformAuthorizationToken.
   * @param {PlatformAuthorizationTokenDeleteArgs} args - Arguments to delete one PlatformAuthorizationToken.
   * @example
   * // Delete one PlatformAuthorizationToken
   * const PlatformAuthorizationToken = await prisma.platformAuthorizationToken.delete({
   *   where: {
   *     // ... filter to delete one PlatformAuthorizationToken
   *   }
   * })
   *
   */
  delete<T extends PlatformAuthorizationTokenDeleteArgs>(
    args: Prisma.SelectSubset<T, PlatformAuthorizationTokenDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformAuthorizationTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformAuthorizationTokenPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one PlatformAuthorizationToken.
   * @param {PlatformAuthorizationTokenUpdateArgs} args - Arguments to update one PlatformAuthorizationToken.
   * @example
   * // Update one PlatformAuthorizationToken
   * const platformAuthorizationToken = await prisma.platformAuthorizationToken.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends PlatformAuthorizationTokenUpdateArgs>(
    args: Prisma.SelectSubset<T, PlatformAuthorizationTokenUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformAuthorizationTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformAuthorizationTokenPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more PlatformAuthorizationTokens.
   * @param {PlatformAuthorizationTokenDeleteManyArgs} args - Arguments to filter PlatformAuthorizationTokens to delete.
   * @example
   * // Delete a few PlatformAuthorizationTokens
   * const { count } = await prisma.platformAuthorizationToken.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends PlatformAuthorizationTokenDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, PlatformAuthorizationTokenDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more PlatformAuthorizationTokens.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformAuthorizationTokenUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many PlatformAuthorizationTokens
   * const platformAuthorizationToken = await prisma.platformAuthorizationToken.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends PlatformAuthorizationTokenUpdateManyArgs>(
    args: Prisma.SelectSubset<T, PlatformAuthorizationTokenUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more PlatformAuthorizationTokens and returns the data updated in the database.
   * @param {PlatformAuthorizationTokenUpdateManyAndReturnArgs} args - Arguments to update many PlatformAuthorizationTokens.
   * @example
   * // Update many PlatformAuthorizationTokens
   * const platformAuthorizationToken = await prisma.platformAuthorizationToken.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more PlatformAuthorizationTokens and only return the `id`
   * const platformAuthorizationTokenWithIdOnly = await prisma.platformAuthorizationToken.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends PlatformAuthorizationTokenUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, PlatformAuthorizationTokenUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformAuthorizationTokenPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one PlatformAuthorizationToken.
   * @param {PlatformAuthorizationTokenUpsertArgs} args - Arguments to update or create a PlatformAuthorizationToken.
   * @example
   * // Update or create a PlatformAuthorizationToken
   * const platformAuthorizationToken = await prisma.platformAuthorizationToken.upsert({
   *   create: {
   *     // ... data to create a PlatformAuthorizationToken
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the PlatformAuthorizationToken we want to update
   *   }
   * })
   */
  upsert<T extends PlatformAuthorizationTokenUpsertArgs>(
    args: Prisma.SelectSubset<T, PlatformAuthorizationTokenUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformAuthorizationTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformAuthorizationTokenPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of PlatformAuthorizationTokens.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformAuthorizationTokenCountArgs} args - Arguments to filter PlatformAuthorizationTokens to count.
   * @example
   * // Count the number of PlatformAuthorizationTokens
   * const count = await prisma.platformAuthorizationToken.count({
   *   where: {
   *     // ... the filter for the PlatformAuthorizationTokens we want to count
   *   }
   * })
   **/
  count<T extends PlatformAuthorizationTokenCountArgs>(
    args?: Prisma.Subset<T, PlatformAuthorizationTokenCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], PlatformAuthorizationTokenCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a PlatformAuthorizationToken.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformAuthorizationTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends PlatformAuthorizationTokenAggregateArgs>(
    args: Prisma.Subset<T, PlatformAuthorizationTokenAggregateArgs>
  ): Prisma.PrismaPromise<GetPlatformAuthorizationTokenAggregateType<T>>;

  /**
   * Group by PlatformAuthorizationToken.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformAuthorizationTokenGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends PlatformAuthorizationTokenGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: PlatformAuthorizationTokenGroupByArgs["orderBy"] }
      : { orderBy?: PlatformAuthorizationTokenGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, PlatformAuthorizationTokenGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors
    ? GetPlatformAuthorizationTokenGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the PlatformAuthorizationToken model
   */
  readonly fields: PlatformAuthorizationTokenFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for PlatformAuthorizationToken.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__PlatformAuthorizationTokenClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  owner<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    | runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  client<T extends Prisma.PlatformOAuthClientDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.PlatformOAuthClientDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformOAuthClientClient<
    | runtime.Types.Result.GetResult<
        Prisma.$PlatformOAuthClientPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the PlatformAuthorizationToken model
 */
export interface PlatformAuthorizationTokenFieldRefs {
  readonly id: Prisma.FieldRef<"PlatformAuthorizationToken", "String">;
  readonly platformOAuthClientId: Prisma.FieldRef<"PlatformAuthorizationToken", "String">;
  readonly userId: Prisma.FieldRef<"PlatformAuthorizationToken", "Int">;
  readonly createdAt: Prisma.FieldRef<"PlatformAuthorizationToken", "DateTime">;
}

// Custom InputTypes
/**
 * PlatformAuthorizationToken findUnique
 */
export type PlatformAuthorizationTokenFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformAuthorizationToken
   */
  select?: Prisma.PlatformAuthorizationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformAuthorizationToken
   */
  omit?: Prisma.PlatformAuthorizationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformAuthorizationTokenInclude<ExtArgs> | null;
  /**
   * Filter, which PlatformAuthorizationToken to fetch.
   */
  where: Prisma.PlatformAuthorizationTokenWhereUniqueInput;
};

/**
 * PlatformAuthorizationToken findUniqueOrThrow
 */
export type PlatformAuthorizationTokenFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformAuthorizationToken
   */
  select?: Prisma.PlatformAuthorizationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformAuthorizationToken
   */
  omit?: Prisma.PlatformAuthorizationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformAuthorizationTokenInclude<ExtArgs> | null;
  /**
   * Filter, which PlatformAuthorizationToken to fetch.
   */
  where: Prisma.PlatformAuthorizationTokenWhereUniqueInput;
};

/**
 * PlatformAuthorizationToken findFirst
 */
export type PlatformAuthorizationTokenFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformAuthorizationToken
   */
  select?: Prisma.PlatformAuthorizationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformAuthorizationToken
   */
  omit?: Prisma.PlatformAuthorizationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformAuthorizationTokenInclude<ExtArgs> | null;
  /**
   * Filter, which PlatformAuthorizationToken to fetch.
   */
  where?: Prisma.PlatformAuthorizationTokenWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of PlatformAuthorizationTokens to fetch.
   */
  orderBy?:
    | Prisma.PlatformAuthorizationTokenOrderByWithRelationInput
    | Prisma.PlatformAuthorizationTokenOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for PlatformAuthorizationTokens.
   */
  cursor?: Prisma.PlatformAuthorizationTokenWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` PlatformAuthorizationTokens from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` PlatformAuthorizationTokens.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of PlatformAuthorizationTokens.
   */
  distinct?:
    | Prisma.PlatformAuthorizationTokenScalarFieldEnum
    | Prisma.PlatformAuthorizationTokenScalarFieldEnum[];
};

/**
 * PlatformAuthorizationToken findFirstOrThrow
 */
export type PlatformAuthorizationTokenFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformAuthorizationToken
   */
  select?: Prisma.PlatformAuthorizationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformAuthorizationToken
   */
  omit?: Prisma.PlatformAuthorizationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformAuthorizationTokenInclude<ExtArgs> | null;
  /**
   * Filter, which PlatformAuthorizationToken to fetch.
   */
  where?: Prisma.PlatformAuthorizationTokenWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of PlatformAuthorizationTokens to fetch.
   */
  orderBy?:
    | Prisma.PlatformAuthorizationTokenOrderByWithRelationInput
    | Prisma.PlatformAuthorizationTokenOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for PlatformAuthorizationTokens.
   */
  cursor?: Prisma.PlatformAuthorizationTokenWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` PlatformAuthorizationTokens from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` PlatformAuthorizationTokens.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of PlatformAuthorizationTokens.
   */
  distinct?:
    | Prisma.PlatformAuthorizationTokenScalarFieldEnum
    | Prisma.PlatformAuthorizationTokenScalarFieldEnum[];
};

/**
 * PlatformAuthorizationToken findMany
 */
export type PlatformAuthorizationTokenFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformAuthorizationToken
   */
  select?: Prisma.PlatformAuthorizationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformAuthorizationToken
   */
  omit?: Prisma.PlatformAuthorizationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformAuthorizationTokenInclude<ExtArgs> | null;
  /**
   * Filter, which PlatformAuthorizationTokens to fetch.
   */
  where?: Prisma.PlatformAuthorizationTokenWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of PlatformAuthorizationTokens to fetch.
   */
  orderBy?:
    | Prisma.PlatformAuthorizationTokenOrderByWithRelationInput
    | Prisma.PlatformAuthorizationTokenOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing PlatformAuthorizationTokens.
   */
  cursor?: Prisma.PlatformAuthorizationTokenWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` PlatformAuthorizationTokens from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` PlatformAuthorizationTokens.
   */
  skip?: number;
  distinct?:
    | Prisma.PlatformAuthorizationTokenScalarFieldEnum
    | Prisma.PlatformAuthorizationTokenScalarFieldEnum[];
};

/**
 * PlatformAuthorizationToken create
 */
export type PlatformAuthorizationTokenCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformAuthorizationToken
   */
  select?: Prisma.PlatformAuthorizationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformAuthorizationToken
   */
  omit?: Prisma.PlatformAuthorizationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformAuthorizationTokenInclude<ExtArgs> | null;
  /**
   * The data needed to create a PlatformAuthorizationToken.
   */
  data: Prisma.XOR<
    Prisma.PlatformAuthorizationTokenCreateInput,
    Prisma.PlatformAuthorizationTokenUncheckedCreateInput
  >;
};

/**
 * PlatformAuthorizationToken createMany
 */
export type PlatformAuthorizationTokenCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many PlatformAuthorizationTokens.
   */
  data: Prisma.PlatformAuthorizationTokenCreateManyInput | Prisma.PlatformAuthorizationTokenCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * PlatformAuthorizationToken createManyAndReturn
 */
export type PlatformAuthorizationTokenCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformAuthorizationToken
   */
  select?: Prisma.PlatformAuthorizationTokenSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformAuthorizationToken
   */
  omit?: Prisma.PlatformAuthorizationTokenOmit<ExtArgs> | null;
  /**
   * The data used to create many PlatformAuthorizationTokens.
   */
  data: Prisma.PlatformAuthorizationTokenCreateManyInput | Prisma.PlatformAuthorizationTokenCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformAuthorizationTokenIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * PlatformAuthorizationToken update
 */
export type PlatformAuthorizationTokenUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformAuthorizationToken
   */
  select?: Prisma.PlatformAuthorizationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformAuthorizationToken
   */
  omit?: Prisma.PlatformAuthorizationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformAuthorizationTokenInclude<ExtArgs> | null;
  /**
   * The data needed to update a PlatformAuthorizationToken.
   */
  data: Prisma.XOR<
    Prisma.PlatformAuthorizationTokenUpdateInput,
    Prisma.PlatformAuthorizationTokenUncheckedUpdateInput
  >;
  /**
   * Choose, which PlatformAuthorizationToken to update.
   */
  where: Prisma.PlatformAuthorizationTokenWhereUniqueInput;
};

/**
 * PlatformAuthorizationToken updateMany
 */
export type PlatformAuthorizationTokenUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update PlatformAuthorizationTokens.
   */
  data: Prisma.XOR<
    Prisma.PlatformAuthorizationTokenUpdateManyMutationInput,
    Prisma.PlatformAuthorizationTokenUncheckedUpdateManyInput
  >;
  /**
   * Filter which PlatformAuthorizationTokens to update
   */
  where?: Prisma.PlatformAuthorizationTokenWhereInput;
  /**
   * Limit how many PlatformAuthorizationTokens to update.
   */
  limit?: number;
};

/**
 * PlatformAuthorizationToken updateManyAndReturn
 */
export type PlatformAuthorizationTokenUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformAuthorizationToken
   */
  select?: Prisma.PlatformAuthorizationTokenSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformAuthorizationToken
   */
  omit?: Prisma.PlatformAuthorizationTokenOmit<ExtArgs> | null;
  /**
   * The data used to update PlatformAuthorizationTokens.
   */
  data: Prisma.XOR<
    Prisma.PlatformAuthorizationTokenUpdateManyMutationInput,
    Prisma.PlatformAuthorizationTokenUncheckedUpdateManyInput
  >;
  /**
   * Filter which PlatformAuthorizationTokens to update
   */
  where?: Prisma.PlatformAuthorizationTokenWhereInput;
  /**
   * Limit how many PlatformAuthorizationTokens to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformAuthorizationTokenIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * PlatformAuthorizationToken upsert
 */
export type PlatformAuthorizationTokenUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformAuthorizationToken
   */
  select?: Prisma.PlatformAuthorizationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformAuthorizationToken
   */
  omit?: Prisma.PlatformAuthorizationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformAuthorizationTokenInclude<ExtArgs> | null;
  /**
   * The filter to search for the PlatformAuthorizationToken to update in case it exists.
   */
  where: Prisma.PlatformAuthorizationTokenWhereUniqueInput;
  /**
   * In case the PlatformAuthorizationToken found by the `where` argument doesn't exist, create a new PlatformAuthorizationToken with this data.
   */
  create: Prisma.XOR<
    Prisma.PlatformAuthorizationTokenCreateInput,
    Prisma.PlatformAuthorizationTokenUncheckedCreateInput
  >;
  /**
   * In case the PlatformAuthorizationToken was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.PlatformAuthorizationTokenUpdateInput,
    Prisma.PlatformAuthorizationTokenUncheckedUpdateInput
  >;
};

/**
 * PlatformAuthorizationToken delete
 */
export type PlatformAuthorizationTokenDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformAuthorizationToken
   */
  select?: Prisma.PlatformAuthorizationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformAuthorizationToken
   */
  omit?: Prisma.PlatformAuthorizationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformAuthorizationTokenInclude<ExtArgs> | null;
  /**
   * Filter which PlatformAuthorizationToken to delete.
   */
  where: Prisma.PlatformAuthorizationTokenWhereUniqueInput;
};

/**
 * PlatformAuthorizationToken deleteMany
 */
export type PlatformAuthorizationTokenDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which PlatformAuthorizationTokens to delete
   */
  where?: Prisma.PlatformAuthorizationTokenWhereInput;
  /**
   * Limit how many PlatformAuthorizationTokens to delete.
   */
  limit?: number;
};

/**
 * PlatformAuthorizationToken without action
 */
export type PlatformAuthorizationTokenDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformAuthorizationToken
   */
  select?: Prisma.PlatformAuthorizationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformAuthorizationToken
   */
  omit?: Prisma.PlatformAuthorizationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformAuthorizationTokenInclude<ExtArgs> | null;
};
