/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `PlatformBilling` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model PlatformBilling
 *
 */
export type PlatformBillingModel = runtime.Types.Result.DefaultSelection<Prisma.$PlatformBillingPayload>;

export type AggregatePlatformBilling = {
  _count: PlatformBillingCountAggregateOutputType | null;
  _avg: PlatformBillingAvgAggregateOutputType | null;
  _sum: PlatformBillingSumAggregateOutputType | null;
  _min: PlatformBillingMinAggregateOutputType | null;
  _max: PlatformBillingMaxAggregateOutputType | null;
};

export type PlatformBillingAvgAggregateOutputType = {
  id: number | null;
  billingCycleStart: number | null;
  billingCycleEnd: number | null;
  managerBillingId: number | null;
};

export type PlatformBillingSumAggregateOutputType = {
  id: number | null;
  billingCycleStart: number | null;
  billingCycleEnd: number | null;
  managerBillingId: number | null;
};

export type PlatformBillingMinAggregateOutputType = {
  id: number | null;
  customerId: string | null;
  subscriptionId: string | null;
  priceId: string | null;
  plan: string | null;
  billingCycleStart: number | null;
  billingCycleEnd: number | null;
  overdue: boolean | null;
  managerBillingId: number | null;
};

export type PlatformBillingMaxAggregateOutputType = {
  id: number | null;
  customerId: string | null;
  subscriptionId: string | null;
  priceId: string | null;
  plan: string | null;
  billingCycleStart: number | null;
  billingCycleEnd: number | null;
  overdue: boolean | null;
  managerBillingId: number | null;
};

export type PlatformBillingCountAggregateOutputType = {
  id: number;
  customerId: number;
  subscriptionId: number;
  priceId: number;
  plan: number;
  billingCycleStart: number;
  billingCycleEnd: number;
  overdue: number;
  managerBillingId: number;
  _all: number;
};

export type PlatformBillingAvgAggregateInputType = {
  id?: true;
  billingCycleStart?: true;
  billingCycleEnd?: true;
  managerBillingId?: true;
};

export type PlatformBillingSumAggregateInputType = {
  id?: true;
  billingCycleStart?: true;
  billingCycleEnd?: true;
  managerBillingId?: true;
};

export type PlatformBillingMinAggregateInputType = {
  id?: true;
  customerId?: true;
  subscriptionId?: true;
  priceId?: true;
  plan?: true;
  billingCycleStart?: true;
  billingCycleEnd?: true;
  overdue?: true;
  managerBillingId?: true;
};

export type PlatformBillingMaxAggregateInputType = {
  id?: true;
  customerId?: true;
  subscriptionId?: true;
  priceId?: true;
  plan?: true;
  billingCycleStart?: true;
  billingCycleEnd?: true;
  overdue?: true;
  managerBillingId?: true;
};

export type PlatformBillingCountAggregateInputType = {
  id?: true;
  customerId?: true;
  subscriptionId?: true;
  priceId?: true;
  plan?: true;
  billingCycleStart?: true;
  billingCycleEnd?: true;
  overdue?: true;
  managerBillingId?: true;
  _all?: true;
};

export type PlatformBillingAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which PlatformBilling to aggregate.
   */
  where?: Prisma.PlatformBillingWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of PlatformBillings to fetch.
   */
  orderBy?: Prisma.PlatformBillingOrderByWithRelationInput | Prisma.PlatformBillingOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.PlatformBillingWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` PlatformBillings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` PlatformBillings.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned PlatformBillings
   **/
  _count?: true | PlatformBillingCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: PlatformBillingAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: PlatformBillingSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: PlatformBillingMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: PlatformBillingMaxAggregateInputType;
};

export type GetPlatformBillingAggregateType<T extends PlatformBillingAggregateArgs> = {
  [P in keyof T & keyof AggregatePlatformBilling]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePlatformBilling[P]>
    : Prisma.GetScalarType<T[P], AggregatePlatformBilling[P]>;
};

export type PlatformBillingGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.PlatformBillingWhereInput;
  orderBy?:
    | Prisma.PlatformBillingOrderByWithAggregationInput
    | Prisma.PlatformBillingOrderByWithAggregationInput[];
  by: Prisma.PlatformBillingScalarFieldEnum[] | Prisma.PlatformBillingScalarFieldEnum;
  having?: Prisma.PlatformBillingScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: PlatformBillingCountAggregateInputType | true;
  _avg?: PlatformBillingAvgAggregateInputType;
  _sum?: PlatformBillingSumAggregateInputType;
  _min?: PlatformBillingMinAggregateInputType;
  _max?: PlatformBillingMaxAggregateInputType;
};

export type PlatformBillingGroupByOutputType = {
  id: number;
  customerId: string;
  subscriptionId: string | null;
  priceId: string | null;
  plan: string;
  billingCycleStart: number | null;
  billingCycleEnd: number | null;
  overdue: boolean | null;
  managerBillingId: number | null;
  _count: PlatformBillingCountAggregateOutputType | null;
  _avg: PlatformBillingAvgAggregateOutputType | null;
  _sum: PlatformBillingSumAggregateOutputType | null;
  _min: PlatformBillingMinAggregateOutputType | null;
  _max: PlatformBillingMaxAggregateOutputType | null;
};

type GetPlatformBillingGroupByPayload<T extends PlatformBillingGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<PlatformBillingGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof PlatformBillingGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], PlatformBillingGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], PlatformBillingGroupByOutputType[P]>;
    }
  >
>;

export type PlatformBillingWhereInput = {
  AND?: Prisma.PlatformBillingWhereInput | Prisma.PlatformBillingWhereInput[];
  OR?: Prisma.PlatformBillingWhereInput[];
  NOT?: Prisma.PlatformBillingWhereInput | Prisma.PlatformBillingWhereInput[];
  id?: Prisma.IntFilter<"PlatformBilling"> | number;
  customerId?: Prisma.StringFilter<"PlatformBilling"> | string;
  subscriptionId?: Prisma.StringNullableFilter<"PlatformBilling"> | string | null;
  priceId?: Prisma.StringNullableFilter<"PlatformBilling"> | string | null;
  plan?: Prisma.StringFilter<"PlatformBilling"> | string;
  billingCycleStart?: Prisma.IntNullableFilter<"PlatformBilling"> | number | null;
  billingCycleEnd?: Prisma.IntNullableFilter<"PlatformBilling"> | number | null;
  overdue?: Prisma.BoolNullableFilter<"PlatformBilling"> | boolean | null;
  managerBillingId?: Prisma.IntNullableFilter<"PlatformBilling"> | number | null;
  managerBilling?: Prisma.XOR<
    Prisma.PlatformBillingNullableScalarRelationFilter,
    Prisma.PlatformBillingWhereInput
  > | null;
  managedBillings?: Prisma.PlatformBillingListRelationFilter;
  team?: Prisma.XOR<Prisma.TeamScalarRelationFilter, Prisma.TeamWhereInput>;
};

export type PlatformBillingOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  customerId?: Prisma.SortOrder;
  subscriptionId?: Prisma.SortOrderInput | Prisma.SortOrder;
  priceId?: Prisma.SortOrderInput | Prisma.SortOrder;
  plan?: Prisma.SortOrder;
  billingCycleStart?: Prisma.SortOrderInput | Prisma.SortOrder;
  billingCycleEnd?: Prisma.SortOrderInput | Prisma.SortOrder;
  overdue?: Prisma.SortOrderInput | Prisma.SortOrder;
  managerBillingId?: Prisma.SortOrderInput | Prisma.SortOrder;
  managerBilling?: Prisma.PlatformBillingOrderByWithRelationInput;
  managedBillings?: Prisma.PlatformBillingOrderByRelationAggregateInput;
  team?: Prisma.TeamOrderByWithRelationInput;
};

export type PlatformBillingWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    AND?: Prisma.PlatformBillingWhereInput | Prisma.PlatformBillingWhereInput[];
    OR?: Prisma.PlatformBillingWhereInput[];
    NOT?: Prisma.PlatformBillingWhereInput | Prisma.PlatformBillingWhereInput[];
    customerId?: Prisma.StringFilter<"PlatformBilling"> | string;
    subscriptionId?: Prisma.StringNullableFilter<"PlatformBilling"> | string | null;
    priceId?: Prisma.StringNullableFilter<"PlatformBilling"> | string | null;
    plan?: Prisma.StringFilter<"PlatformBilling"> | string;
    billingCycleStart?: Prisma.IntNullableFilter<"PlatformBilling"> | number | null;
    billingCycleEnd?: Prisma.IntNullableFilter<"PlatformBilling"> | number | null;
    overdue?: Prisma.BoolNullableFilter<"PlatformBilling"> | boolean | null;
    managerBillingId?: Prisma.IntNullableFilter<"PlatformBilling"> | number | null;
    managerBilling?: Prisma.XOR<
      Prisma.PlatformBillingNullableScalarRelationFilter,
      Prisma.PlatformBillingWhereInput
    > | null;
    managedBillings?: Prisma.PlatformBillingListRelationFilter;
    team?: Prisma.XOR<Prisma.TeamScalarRelationFilter, Prisma.TeamWhereInput>;
  },
  "id" | "id"
>;

export type PlatformBillingOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  customerId?: Prisma.SortOrder;
  subscriptionId?: Prisma.SortOrderInput | Prisma.SortOrder;
  priceId?: Prisma.SortOrderInput | Prisma.SortOrder;
  plan?: Prisma.SortOrder;
  billingCycleStart?: Prisma.SortOrderInput | Prisma.SortOrder;
  billingCycleEnd?: Prisma.SortOrderInput | Prisma.SortOrder;
  overdue?: Prisma.SortOrderInput | Prisma.SortOrder;
  managerBillingId?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.PlatformBillingCountOrderByAggregateInput;
  _avg?: Prisma.PlatformBillingAvgOrderByAggregateInput;
  _max?: Prisma.PlatformBillingMaxOrderByAggregateInput;
  _min?: Prisma.PlatformBillingMinOrderByAggregateInput;
  _sum?: Prisma.PlatformBillingSumOrderByAggregateInput;
};

export type PlatformBillingScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.PlatformBillingScalarWhereWithAggregatesInput
    | Prisma.PlatformBillingScalarWhereWithAggregatesInput[];
  OR?: Prisma.PlatformBillingScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.PlatformBillingScalarWhereWithAggregatesInput
    | Prisma.PlatformBillingScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"PlatformBilling"> | number;
  customerId?: Prisma.StringWithAggregatesFilter<"PlatformBilling"> | string;
  subscriptionId?: Prisma.StringNullableWithAggregatesFilter<"PlatformBilling"> | string | null;
  priceId?: Prisma.StringNullableWithAggregatesFilter<"PlatformBilling"> | string | null;
  plan?: Prisma.StringWithAggregatesFilter<"PlatformBilling"> | string;
  billingCycleStart?: Prisma.IntNullableWithAggregatesFilter<"PlatformBilling"> | number | null;
  billingCycleEnd?: Prisma.IntNullableWithAggregatesFilter<"PlatformBilling"> | number | null;
  overdue?: Prisma.BoolNullableWithAggregatesFilter<"PlatformBilling"> | boolean | null;
  managerBillingId?: Prisma.IntNullableWithAggregatesFilter<"PlatformBilling"> | number | null;
};

export type PlatformBillingCreateInput = {
  customerId: string;
  subscriptionId?: string | null;
  priceId?: string | null;
  plan?: string;
  billingCycleStart?: number | null;
  billingCycleEnd?: number | null;
  overdue?: boolean | null;
  managerBilling?: Prisma.PlatformBillingCreateNestedOneWithoutManagedBillingsInput;
  managedBillings?: Prisma.PlatformBillingCreateNestedManyWithoutManagerBillingInput;
  team: Prisma.TeamCreateNestedOneWithoutPlatformBillingInput;
};

export type PlatformBillingUncheckedCreateInput = {
  id: number;
  customerId: string;
  subscriptionId?: string | null;
  priceId?: string | null;
  plan?: string;
  billingCycleStart?: number | null;
  billingCycleEnd?: number | null;
  overdue?: boolean | null;
  managerBillingId?: number | null;
  managedBillings?: Prisma.PlatformBillingUncheckedCreateNestedManyWithoutManagerBillingInput;
};

export type PlatformBillingUpdateInput = {
  customerId?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  priceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  plan?: Prisma.StringFieldUpdateOperationsInput | string;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  billingCycleEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  overdue?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  managerBilling?: Prisma.PlatformBillingUpdateOneWithoutManagedBillingsNestedInput;
  managedBillings?: Prisma.PlatformBillingUpdateManyWithoutManagerBillingNestedInput;
  team?: Prisma.TeamUpdateOneRequiredWithoutPlatformBillingNestedInput;
};

export type PlatformBillingUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  customerId?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  priceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  plan?: Prisma.StringFieldUpdateOperationsInput | string;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  billingCycleEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  overdue?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  managerBillingId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  managedBillings?: Prisma.PlatformBillingUncheckedUpdateManyWithoutManagerBillingNestedInput;
};

export type PlatformBillingCreateManyInput = {
  id: number;
  customerId: string;
  subscriptionId?: string | null;
  priceId?: string | null;
  plan?: string;
  billingCycleStart?: number | null;
  billingCycleEnd?: number | null;
  overdue?: boolean | null;
  managerBillingId?: number | null;
};

export type PlatformBillingUpdateManyMutationInput = {
  customerId?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  priceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  plan?: Prisma.StringFieldUpdateOperationsInput | string;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  billingCycleEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  overdue?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
};

export type PlatformBillingUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  customerId?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  priceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  plan?: Prisma.StringFieldUpdateOperationsInput | string;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  billingCycleEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  overdue?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  managerBillingId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type PlatformBillingNullableScalarRelationFilter = {
  is?: Prisma.PlatformBillingWhereInput | null;
  isNot?: Prisma.PlatformBillingWhereInput | null;
};

export type PlatformBillingListRelationFilter = {
  every?: Prisma.PlatformBillingWhereInput;
  some?: Prisma.PlatformBillingWhereInput;
  none?: Prisma.PlatformBillingWhereInput;
};

export type PlatformBillingOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type PlatformBillingCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  customerId?: Prisma.SortOrder;
  subscriptionId?: Prisma.SortOrder;
  priceId?: Prisma.SortOrder;
  plan?: Prisma.SortOrder;
  billingCycleStart?: Prisma.SortOrder;
  billingCycleEnd?: Prisma.SortOrder;
  overdue?: Prisma.SortOrder;
  managerBillingId?: Prisma.SortOrder;
};

export type PlatformBillingAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  billingCycleStart?: Prisma.SortOrder;
  billingCycleEnd?: Prisma.SortOrder;
  managerBillingId?: Prisma.SortOrder;
};

export type PlatformBillingMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  customerId?: Prisma.SortOrder;
  subscriptionId?: Prisma.SortOrder;
  priceId?: Prisma.SortOrder;
  plan?: Prisma.SortOrder;
  billingCycleStart?: Prisma.SortOrder;
  billingCycleEnd?: Prisma.SortOrder;
  overdue?: Prisma.SortOrder;
  managerBillingId?: Prisma.SortOrder;
};

export type PlatformBillingMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  customerId?: Prisma.SortOrder;
  subscriptionId?: Prisma.SortOrder;
  priceId?: Prisma.SortOrder;
  plan?: Prisma.SortOrder;
  billingCycleStart?: Prisma.SortOrder;
  billingCycleEnd?: Prisma.SortOrder;
  overdue?: Prisma.SortOrder;
  managerBillingId?: Prisma.SortOrder;
};

export type PlatformBillingSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  billingCycleStart?: Prisma.SortOrder;
  billingCycleEnd?: Prisma.SortOrder;
  managerBillingId?: Prisma.SortOrder;
};

export type PlatformBillingCreateNestedOneWithoutTeamInput = {
  create?: Prisma.XOR<
    Prisma.PlatformBillingCreateWithoutTeamInput,
    Prisma.PlatformBillingUncheckedCreateWithoutTeamInput
  >;
  connectOrCreate?: Prisma.PlatformBillingCreateOrConnectWithoutTeamInput;
  connect?: Prisma.PlatformBillingWhereUniqueInput;
};

export type PlatformBillingUncheckedCreateNestedOneWithoutTeamInput = {
  create?: Prisma.XOR<
    Prisma.PlatformBillingCreateWithoutTeamInput,
    Prisma.PlatformBillingUncheckedCreateWithoutTeamInput
  >;
  connectOrCreate?: Prisma.PlatformBillingCreateOrConnectWithoutTeamInput;
  connect?: Prisma.PlatformBillingWhereUniqueInput;
};

export type PlatformBillingUpdateOneWithoutTeamNestedInput = {
  create?: Prisma.XOR<
    Prisma.PlatformBillingCreateWithoutTeamInput,
    Prisma.PlatformBillingUncheckedCreateWithoutTeamInput
  >;
  connectOrCreate?: Prisma.PlatformBillingCreateOrConnectWithoutTeamInput;
  upsert?: Prisma.PlatformBillingUpsertWithoutTeamInput;
  disconnect?: Prisma.PlatformBillingWhereInput | boolean;
  delete?: Prisma.PlatformBillingWhereInput | boolean;
  connect?: Prisma.PlatformBillingWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PlatformBillingUpdateToOneWithWhereWithoutTeamInput,
      Prisma.PlatformBillingUpdateWithoutTeamInput
    >,
    Prisma.PlatformBillingUncheckedUpdateWithoutTeamInput
  >;
};

export type PlatformBillingUncheckedUpdateOneWithoutTeamNestedInput = {
  create?: Prisma.XOR<
    Prisma.PlatformBillingCreateWithoutTeamInput,
    Prisma.PlatformBillingUncheckedCreateWithoutTeamInput
  >;
  connectOrCreate?: Prisma.PlatformBillingCreateOrConnectWithoutTeamInput;
  upsert?: Prisma.PlatformBillingUpsertWithoutTeamInput;
  disconnect?: Prisma.PlatformBillingWhereInput | boolean;
  delete?: Prisma.PlatformBillingWhereInput | boolean;
  connect?: Prisma.PlatformBillingWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PlatformBillingUpdateToOneWithWhereWithoutTeamInput,
      Prisma.PlatformBillingUpdateWithoutTeamInput
    >,
    Prisma.PlatformBillingUncheckedUpdateWithoutTeamInput
  >;
};

export type PlatformBillingCreateNestedOneWithoutManagedBillingsInput = {
  create?: Prisma.XOR<
    Prisma.PlatformBillingCreateWithoutManagedBillingsInput,
    Prisma.PlatformBillingUncheckedCreateWithoutManagedBillingsInput
  >;
  connectOrCreate?: Prisma.PlatformBillingCreateOrConnectWithoutManagedBillingsInput;
  connect?: Prisma.PlatformBillingWhereUniqueInput;
};

export type PlatformBillingCreateNestedManyWithoutManagerBillingInput = {
  create?:
    | Prisma.XOR<
        Prisma.PlatformBillingCreateWithoutManagerBillingInput,
        Prisma.PlatformBillingUncheckedCreateWithoutManagerBillingInput
      >
    | Prisma.PlatformBillingCreateWithoutManagerBillingInput[]
    | Prisma.PlatformBillingUncheckedCreateWithoutManagerBillingInput[];
  connectOrCreate?:
    | Prisma.PlatformBillingCreateOrConnectWithoutManagerBillingInput
    | Prisma.PlatformBillingCreateOrConnectWithoutManagerBillingInput[];
  createMany?: Prisma.PlatformBillingCreateManyManagerBillingInputEnvelope;
  connect?: Prisma.PlatformBillingWhereUniqueInput | Prisma.PlatformBillingWhereUniqueInput[];
};

export type PlatformBillingUncheckedCreateNestedManyWithoutManagerBillingInput = {
  create?:
    | Prisma.XOR<
        Prisma.PlatformBillingCreateWithoutManagerBillingInput,
        Prisma.PlatformBillingUncheckedCreateWithoutManagerBillingInput
      >
    | Prisma.PlatformBillingCreateWithoutManagerBillingInput[]
    | Prisma.PlatformBillingUncheckedCreateWithoutManagerBillingInput[];
  connectOrCreate?:
    | Prisma.PlatformBillingCreateOrConnectWithoutManagerBillingInput
    | Prisma.PlatformBillingCreateOrConnectWithoutManagerBillingInput[];
  createMany?: Prisma.PlatformBillingCreateManyManagerBillingInputEnvelope;
  connect?: Prisma.PlatformBillingWhereUniqueInput | Prisma.PlatformBillingWhereUniqueInput[];
};

export type PlatformBillingUpdateOneWithoutManagedBillingsNestedInput = {
  create?: Prisma.XOR<
    Prisma.PlatformBillingCreateWithoutManagedBillingsInput,
    Prisma.PlatformBillingUncheckedCreateWithoutManagedBillingsInput
  >;
  connectOrCreate?: Prisma.PlatformBillingCreateOrConnectWithoutManagedBillingsInput;
  upsert?: Prisma.PlatformBillingUpsertWithoutManagedBillingsInput;
  disconnect?: Prisma.PlatformBillingWhereInput | boolean;
  delete?: Prisma.PlatformBillingWhereInput | boolean;
  connect?: Prisma.PlatformBillingWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.PlatformBillingUpdateToOneWithWhereWithoutManagedBillingsInput,
      Prisma.PlatformBillingUpdateWithoutManagedBillingsInput
    >,
    Prisma.PlatformBillingUncheckedUpdateWithoutManagedBillingsInput
  >;
};

export type PlatformBillingUpdateManyWithoutManagerBillingNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.PlatformBillingCreateWithoutManagerBillingInput,
        Prisma.PlatformBillingUncheckedCreateWithoutManagerBillingInput
      >
    | Prisma.PlatformBillingCreateWithoutManagerBillingInput[]
    | Prisma.PlatformBillingUncheckedCreateWithoutManagerBillingInput[];
  connectOrCreate?:
    | Prisma.PlatformBillingCreateOrConnectWithoutManagerBillingInput
    | Prisma.PlatformBillingCreateOrConnectWithoutManagerBillingInput[];
  upsert?:
    | Prisma.PlatformBillingUpsertWithWhereUniqueWithoutManagerBillingInput
    | Prisma.PlatformBillingUpsertWithWhereUniqueWithoutManagerBillingInput[];
  createMany?: Prisma.PlatformBillingCreateManyManagerBillingInputEnvelope;
  set?: Prisma.PlatformBillingWhereUniqueInput | Prisma.PlatformBillingWhereUniqueInput[];
  disconnect?: Prisma.PlatformBillingWhereUniqueInput | Prisma.PlatformBillingWhereUniqueInput[];
  delete?: Prisma.PlatformBillingWhereUniqueInput | Prisma.PlatformBillingWhereUniqueInput[];
  connect?: Prisma.PlatformBillingWhereUniqueInput | Prisma.PlatformBillingWhereUniqueInput[];
  update?:
    | Prisma.PlatformBillingUpdateWithWhereUniqueWithoutManagerBillingInput
    | Prisma.PlatformBillingUpdateWithWhereUniqueWithoutManagerBillingInput[];
  updateMany?:
    | Prisma.PlatformBillingUpdateManyWithWhereWithoutManagerBillingInput
    | Prisma.PlatformBillingUpdateManyWithWhereWithoutManagerBillingInput[];
  deleteMany?: Prisma.PlatformBillingScalarWhereInput | Prisma.PlatformBillingScalarWhereInput[];
};

export type PlatformBillingUncheckedUpdateManyWithoutManagerBillingNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.PlatformBillingCreateWithoutManagerBillingInput,
        Prisma.PlatformBillingUncheckedCreateWithoutManagerBillingInput
      >
    | Prisma.PlatformBillingCreateWithoutManagerBillingInput[]
    | Prisma.PlatformBillingUncheckedCreateWithoutManagerBillingInput[];
  connectOrCreate?:
    | Prisma.PlatformBillingCreateOrConnectWithoutManagerBillingInput
    | Prisma.PlatformBillingCreateOrConnectWithoutManagerBillingInput[];
  upsert?:
    | Prisma.PlatformBillingUpsertWithWhereUniqueWithoutManagerBillingInput
    | Prisma.PlatformBillingUpsertWithWhereUniqueWithoutManagerBillingInput[];
  createMany?: Prisma.PlatformBillingCreateManyManagerBillingInputEnvelope;
  set?: Prisma.PlatformBillingWhereUniqueInput | Prisma.PlatformBillingWhereUniqueInput[];
  disconnect?: Prisma.PlatformBillingWhereUniqueInput | Prisma.PlatformBillingWhereUniqueInput[];
  delete?: Prisma.PlatformBillingWhereUniqueInput | Prisma.PlatformBillingWhereUniqueInput[];
  connect?: Prisma.PlatformBillingWhereUniqueInput | Prisma.PlatformBillingWhereUniqueInput[];
  update?:
    | Prisma.PlatformBillingUpdateWithWhereUniqueWithoutManagerBillingInput
    | Prisma.PlatformBillingUpdateWithWhereUniqueWithoutManagerBillingInput[];
  updateMany?:
    | Prisma.PlatformBillingUpdateManyWithWhereWithoutManagerBillingInput
    | Prisma.PlatformBillingUpdateManyWithWhereWithoutManagerBillingInput[];
  deleteMany?: Prisma.PlatformBillingScalarWhereInput | Prisma.PlatformBillingScalarWhereInput[];
};

export type PlatformBillingCreateWithoutTeamInput = {
  customerId: string;
  subscriptionId?: string | null;
  priceId?: string | null;
  plan?: string;
  billingCycleStart?: number | null;
  billingCycleEnd?: number | null;
  overdue?: boolean | null;
  managerBilling?: Prisma.PlatformBillingCreateNestedOneWithoutManagedBillingsInput;
  managedBillings?: Prisma.PlatformBillingCreateNestedManyWithoutManagerBillingInput;
};

export type PlatformBillingUncheckedCreateWithoutTeamInput = {
  customerId: string;
  subscriptionId?: string | null;
  priceId?: string | null;
  plan?: string;
  billingCycleStart?: number | null;
  billingCycleEnd?: number | null;
  overdue?: boolean | null;
  managerBillingId?: number | null;
  managedBillings?: Prisma.PlatformBillingUncheckedCreateNestedManyWithoutManagerBillingInput;
};

export type PlatformBillingCreateOrConnectWithoutTeamInput = {
  where: Prisma.PlatformBillingWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.PlatformBillingCreateWithoutTeamInput,
    Prisma.PlatformBillingUncheckedCreateWithoutTeamInput
  >;
};

export type PlatformBillingUpsertWithoutTeamInput = {
  update: Prisma.XOR<
    Prisma.PlatformBillingUpdateWithoutTeamInput,
    Prisma.PlatformBillingUncheckedUpdateWithoutTeamInput
  >;
  create: Prisma.XOR<
    Prisma.PlatformBillingCreateWithoutTeamInput,
    Prisma.PlatformBillingUncheckedCreateWithoutTeamInput
  >;
  where?: Prisma.PlatformBillingWhereInput;
};

export type PlatformBillingUpdateToOneWithWhereWithoutTeamInput = {
  where?: Prisma.PlatformBillingWhereInput;
  data: Prisma.XOR<
    Prisma.PlatformBillingUpdateWithoutTeamInput,
    Prisma.PlatformBillingUncheckedUpdateWithoutTeamInput
  >;
};

export type PlatformBillingUpdateWithoutTeamInput = {
  customerId?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  priceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  plan?: Prisma.StringFieldUpdateOperationsInput | string;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  billingCycleEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  overdue?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  managerBilling?: Prisma.PlatformBillingUpdateOneWithoutManagedBillingsNestedInput;
  managedBillings?: Prisma.PlatformBillingUpdateManyWithoutManagerBillingNestedInput;
};

export type PlatformBillingUncheckedUpdateWithoutTeamInput = {
  customerId?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  priceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  plan?: Prisma.StringFieldUpdateOperationsInput | string;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  billingCycleEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  overdue?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  managerBillingId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  managedBillings?: Prisma.PlatformBillingUncheckedUpdateManyWithoutManagerBillingNestedInput;
};

export type PlatformBillingCreateWithoutManagedBillingsInput = {
  customerId: string;
  subscriptionId?: string | null;
  priceId?: string | null;
  plan?: string;
  billingCycleStart?: number | null;
  billingCycleEnd?: number | null;
  overdue?: boolean | null;
  managerBilling?: Prisma.PlatformBillingCreateNestedOneWithoutManagedBillingsInput;
  team: Prisma.TeamCreateNestedOneWithoutPlatformBillingInput;
};

export type PlatformBillingUncheckedCreateWithoutManagedBillingsInput = {
  id: number;
  customerId: string;
  subscriptionId?: string | null;
  priceId?: string | null;
  plan?: string;
  billingCycleStart?: number | null;
  billingCycleEnd?: number | null;
  overdue?: boolean | null;
  managerBillingId?: number | null;
};

export type PlatformBillingCreateOrConnectWithoutManagedBillingsInput = {
  where: Prisma.PlatformBillingWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.PlatformBillingCreateWithoutManagedBillingsInput,
    Prisma.PlatformBillingUncheckedCreateWithoutManagedBillingsInput
  >;
};

export type PlatformBillingCreateWithoutManagerBillingInput = {
  customerId: string;
  subscriptionId?: string | null;
  priceId?: string | null;
  plan?: string;
  billingCycleStart?: number | null;
  billingCycleEnd?: number | null;
  overdue?: boolean | null;
  managedBillings?: Prisma.PlatformBillingCreateNestedManyWithoutManagerBillingInput;
  team: Prisma.TeamCreateNestedOneWithoutPlatformBillingInput;
};

export type PlatformBillingUncheckedCreateWithoutManagerBillingInput = {
  id: number;
  customerId: string;
  subscriptionId?: string | null;
  priceId?: string | null;
  plan?: string;
  billingCycleStart?: number | null;
  billingCycleEnd?: number | null;
  overdue?: boolean | null;
  managedBillings?: Prisma.PlatformBillingUncheckedCreateNestedManyWithoutManagerBillingInput;
};

export type PlatformBillingCreateOrConnectWithoutManagerBillingInput = {
  where: Prisma.PlatformBillingWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.PlatformBillingCreateWithoutManagerBillingInput,
    Prisma.PlatformBillingUncheckedCreateWithoutManagerBillingInput
  >;
};

export type PlatformBillingCreateManyManagerBillingInputEnvelope = {
  data:
    | Prisma.PlatformBillingCreateManyManagerBillingInput
    | Prisma.PlatformBillingCreateManyManagerBillingInput[];
  skipDuplicates?: boolean;
};

export type PlatformBillingUpsertWithoutManagedBillingsInput = {
  update: Prisma.XOR<
    Prisma.PlatformBillingUpdateWithoutManagedBillingsInput,
    Prisma.PlatformBillingUncheckedUpdateWithoutManagedBillingsInput
  >;
  create: Prisma.XOR<
    Prisma.PlatformBillingCreateWithoutManagedBillingsInput,
    Prisma.PlatformBillingUncheckedCreateWithoutManagedBillingsInput
  >;
  where?: Prisma.PlatformBillingWhereInput;
};

export type PlatformBillingUpdateToOneWithWhereWithoutManagedBillingsInput = {
  where?: Prisma.PlatformBillingWhereInput;
  data: Prisma.XOR<
    Prisma.PlatformBillingUpdateWithoutManagedBillingsInput,
    Prisma.PlatformBillingUncheckedUpdateWithoutManagedBillingsInput
  >;
};

export type PlatformBillingUpdateWithoutManagedBillingsInput = {
  customerId?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  priceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  plan?: Prisma.StringFieldUpdateOperationsInput | string;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  billingCycleEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  overdue?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  managerBilling?: Prisma.PlatformBillingUpdateOneWithoutManagedBillingsNestedInput;
  team?: Prisma.TeamUpdateOneRequiredWithoutPlatformBillingNestedInput;
};

export type PlatformBillingUncheckedUpdateWithoutManagedBillingsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  customerId?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  priceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  plan?: Prisma.StringFieldUpdateOperationsInput | string;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  billingCycleEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  overdue?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  managerBillingId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type PlatformBillingUpsertWithWhereUniqueWithoutManagerBillingInput = {
  where: Prisma.PlatformBillingWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.PlatformBillingUpdateWithoutManagerBillingInput,
    Prisma.PlatformBillingUncheckedUpdateWithoutManagerBillingInput
  >;
  create: Prisma.XOR<
    Prisma.PlatformBillingCreateWithoutManagerBillingInput,
    Prisma.PlatformBillingUncheckedCreateWithoutManagerBillingInput
  >;
};

export type PlatformBillingUpdateWithWhereUniqueWithoutManagerBillingInput = {
  where: Prisma.PlatformBillingWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.PlatformBillingUpdateWithoutManagerBillingInput,
    Prisma.PlatformBillingUncheckedUpdateWithoutManagerBillingInput
  >;
};

export type PlatformBillingUpdateManyWithWhereWithoutManagerBillingInput = {
  where: Prisma.PlatformBillingScalarWhereInput;
  data: Prisma.XOR<
    Prisma.PlatformBillingUpdateManyMutationInput,
    Prisma.PlatformBillingUncheckedUpdateManyWithoutManagerBillingInput
  >;
};

export type PlatformBillingScalarWhereInput = {
  AND?: Prisma.PlatformBillingScalarWhereInput | Prisma.PlatformBillingScalarWhereInput[];
  OR?: Prisma.PlatformBillingScalarWhereInput[];
  NOT?: Prisma.PlatformBillingScalarWhereInput | Prisma.PlatformBillingScalarWhereInput[];
  id?: Prisma.IntFilter<"PlatformBilling"> | number;
  customerId?: Prisma.StringFilter<"PlatformBilling"> | string;
  subscriptionId?: Prisma.StringNullableFilter<"PlatformBilling"> | string | null;
  priceId?: Prisma.StringNullableFilter<"PlatformBilling"> | string | null;
  plan?: Prisma.StringFilter<"PlatformBilling"> | string;
  billingCycleStart?: Prisma.IntNullableFilter<"PlatformBilling"> | number | null;
  billingCycleEnd?: Prisma.IntNullableFilter<"PlatformBilling"> | number | null;
  overdue?: Prisma.BoolNullableFilter<"PlatformBilling"> | boolean | null;
  managerBillingId?: Prisma.IntNullableFilter<"PlatformBilling"> | number | null;
};

export type PlatformBillingCreateManyManagerBillingInput = {
  id: number;
  customerId: string;
  subscriptionId?: string | null;
  priceId?: string | null;
  plan?: string;
  billingCycleStart?: number | null;
  billingCycleEnd?: number | null;
  overdue?: boolean | null;
};

export type PlatformBillingUpdateWithoutManagerBillingInput = {
  customerId?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  priceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  plan?: Prisma.StringFieldUpdateOperationsInput | string;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  billingCycleEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  overdue?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  managedBillings?: Prisma.PlatformBillingUpdateManyWithoutManagerBillingNestedInput;
  team?: Prisma.TeamUpdateOneRequiredWithoutPlatformBillingNestedInput;
};

export type PlatformBillingUncheckedUpdateWithoutManagerBillingInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  customerId?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  priceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  plan?: Prisma.StringFieldUpdateOperationsInput | string;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  billingCycleEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  overdue?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  managedBillings?: Prisma.PlatformBillingUncheckedUpdateManyWithoutManagerBillingNestedInput;
};

export type PlatformBillingUncheckedUpdateManyWithoutManagerBillingInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  customerId?: Prisma.StringFieldUpdateOperationsInput | string;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  priceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  plan?: Prisma.StringFieldUpdateOperationsInput | string;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  billingCycleEnd?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  overdue?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
};

/**
 * Count Type PlatformBillingCountOutputType
 */

export type PlatformBillingCountOutputType = {
  managedBillings: number;
};

export type PlatformBillingCountOutputTypeSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  managedBillings?: boolean | PlatformBillingCountOutputTypeCountManagedBillingsArgs;
};

/**
 * PlatformBillingCountOutputType without action
 */
export type PlatformBillingCountOutputTypeDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformBillingCountOutputType
   */
  select?: Prisma.PlatformBillingCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * PlatformBillingCountOutputType without action
 */
export type PlatformBillingCountOutputTypeCountManagedBillingsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.PlatformBillingWhereInput;
};

export type PlatformBillingSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    customerId?: boolean;
    subscriptionId?: boolean;
    priceId?: boolean;
    plan?: boolean;
    billingCycleStart?: boolean;
    billingCycleEnd?: boolean;
    overdue?: boolean;
    managerBillingId?: boolean;
    managerBilling?: boolean | Prisma.PlatformBilling$managerBillingArgs<ExtArgs>;
    managedBillings?: boolean | Prisma.PlatformBilling$managedBillingsArgs<ExtArgs>;
    team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
    _count?: boolean | Prisma.PlatformBillingCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["platformBilling"]
>;

export type PlatformBillingSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    customerId?: boolean;
    subscriptionId?: boolean;
    priceId?: boolean;
    plan?: boolean;
    billingCycleStart?: boolean;
    billingCycleEnd?: boolean;
    overdue?: boolean;
    managerBillingId?: boolean;
    managerBilling?: boolean | Prisma.PlatformBilling$managerBillingArgs<ExtArgs>;
    team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["platformBilling"]
>;

export type PlatformBillingSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    customerId?: boolean;
    subscriptionId?: boolean;
    priceId?: boolean;
    plan?: boolean;
    billingCycleStart?: boolean;
    billingCycleEnd?: boolean;
    overdue?: boolean;
    managerBillingId?: boolean;
    managerBilling?: boolean | Prisma.PlatformBilling$managerBillingArgs<ExtArgs>;
    team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["platformBilling"]
>;

export type PlatformBillingSelectScalar = {
  id?: boolean;
  customerId?: boolean;
  subscriptionId?: boolean;
  priceId?: boolean;
  plan?: boolean;
  billingCycleStart?: boolean;
  billingCycleEnd?: boolean;
  overdue?: boolean;
  managerBillingId?: boolean;
};

export type PlatformBillingOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "customerId"
  | "subscriptionId"
  | "priceId"
  | "plan"
  | "billingCycleStart"
  | "billingCycleEnd"
  | "overdue"
  | "managerBillingId",
  ExtArgs["result"]["platformBilling"]
>;
export type PlatformBillingInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  managerBilling?: boolean | Prisma.PlatformBilling$managerBillingArgs<ExtArgs>;
  managedBillings?: boolean | Prisma.PlatformBilling$managedBillingsArgs<ExtArgs>;
  team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
  _count?: boolean | Prisma.PlatformBillingCountOutputTypeDefaultArgs<ExtArgs>;
};
export type PlatformBillingIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  managerBilling?: boolean | Prisma.PlatformBilling$managerBillingArgs<ExtArgs>;
  team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
};
export type PlatformBillingIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  managerBilling?: boolean | Prisma.PlatformBilling$managerBillingArgs<ExtArgs>;
  team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
};

export type $PlatformBillingPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "PlatformBilling";
  objects: {
    managerBilling: Prisma.$PlatformBillingPayload<ExtArgs> | null;
    managedBillings: Prisma.$PlatformBillingPayload<ExtArgs>[];
    team: Prisma.$TeamPayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      customerId: string;
      subscriptionId: string | null;
      priceId: string | null;
      plan: string;
      billingCycleStart: number | null;
      billingCycleEnd: number | null;
      overdue: boolean | null;
      managerBillingId: number | null;
    },
    ExtArgs["result"]["platformBilling"]
  >;
  composites: {};
};

export type PlatformBillingGetPayload<S extends boolean | null | undefined | PlatformBillingDefaultArgs> =
  runtime.Types.Result.GetResult<Prisma.$PlatformBillingPayload, S>;

export type PlatformBillingCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<PlatformBillingFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: PlatformBillingCountAggregateInputType | true;
};

export interface PlatformBillingDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["PlatformBilling"];
    meta: { name: "PlatformBilling" };
  };
  /**
   * Find zero or one PlatformBilling that matches the filter.
   * @param {PlatformBillingFindUniqueArgs} args - Arguments to find a PlatformBilling
   * @example
   * // Get one PlatformBilling
   * const platformBilling = await prisma.platformBilling.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends PlatformBillingFindUniqueArgs>(
    args: Prisma.SelectSubset<T, PlatformBillingFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformBillingClient<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformBillingPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one PlatformBilling that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {PlatformBillingFindUniqueOrThrowArgs} args - Arguments to find a PlatformBilling
   * @example
   * // Get one PlatformBilling
   * const platformBilling = await prisma.platformBilling.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends PlatformBillingFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, PlatformBillingFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformBillingClient<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformBillingPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first PlatformBilling that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformBillingFindFirstArgs} args - Arguments to find a PlatformBilling
   * @example
   * // Get one PlatformBilling
   * const platformBilling = await prisma.platformBilling.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends PlatformBillingFindFirstArgs>(
    args?: Prisma.SelectSubset<T, PlatformBillingFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformBillingClient<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformBillingPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first PlatformBilling that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformBillingFindFirstOrThrowArgs} args - Arguments to find a PlatformBilling
   * @example
   * // Get one PlatformBilling
   * const platformBilling = await prisma.platformBilling.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends PlatformBillingFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, PlatformBillingFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformBillingClient<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformBillingPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more PlatformBillings that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformBillingFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all PlatformBillings
   * const platformBillings = await prisma.platformBilling.findMany()
   *
   * // Get first 10 PlatformBillings
   * const platformBillings = await prisma.platformBilling.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const platformBillingWithIdOnly = await prisma.platformBilling.findMany({ select: { id: true } })
   *
   */
  findMany<T extends PlatformBillingFindManyArgs>(
    args?: Prisma.SelectSubset<T, PlatformBillingFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$PlatformBillingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>
  >;

  /**
   * Create a PlatformBilling.
   * @param {PlatformBillingCreateArgs} args - Arguments to create a PlatformBilling.
   * @example
   * // Create one PlatformBilling
   * const PlatformBilling = await prisma.platformBilling.create({
   *   data: {
   *     // ... data to create a PlatformBilling
   *   }
   * })
   *
   */
  create<T extends PlatformBillingCreateArgs>(
    args: Prisma.SelectSubset<T, PlatformBillingCreateArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformBillingClient<
    runtime.Types.Result.GetResult<Prisma.$PlatformBillingPayload<ExtArgs>, T, "create", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many PlatformBillings.
   * @param {PlatformBillingCreateManyArgs} args - Arguments to create many PlatformBillings.
   * @example
   * // Create many PlatformBillings
   * const platformBilling = await prisma.platformBilling.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends PlatformBillingCreateManyArgs>(
    args?: Prisma.SelectSubset<T, PlatformBillingCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many PlatformBillings and returns the data saved in the database.
   * @param {PlatformBillingCreateManyAndReturnArgs} args - Arguments to create many PlatformBillings.
   * @example
   * // Create many PlatformBillings
   * const platformBilling = await prisma.platformBilling.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many PlatformBillings and only return the `id`
   * const platformBillingWithIdOnly = await prisma.platformBilling.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends PlatformBillingCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, PlatformBillingCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformBillingPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a PlatformBilling.
   * @param {PlatformBillingDeleteArgs} args - Arguments to delete one PlatformBilling.
   * @example
   * // Delete one PlatformBilling
   * const PlatformBilling = await prisma.platformBilling.delete({
   *   where: {
   *     // ... filter to delete one PlatformBilling
   *   }
   * })
   *
   */
  delete<T extends PlatformBillingDeleteArgs>(
    args: Prisma.SelectSubset<T, PlatformBillingDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformBillingClient<
    runtime.Types.Result.GetResult<Prisma.$PlatformBillingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one PlatformBilling.
   * @param {PlatformBillingUpdateArgs} args - Arguments to update one PlatformBilling.
   * @example
   * // Update one PlatformBilling
   * const platformBilling = await prisma.platformBilling.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends PlatformBillingUpdateArgs>(
    args: Prisma.SelectSubset<T, PlatformBillingUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformBillingClient<
    runtime.Types.Result.GetResult<Prisma.$PlatformBillingPayload<ExtArgs>, T, "update", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more PlatformBillings.
   * @param {PlatformBillingDeleteManyArgs} args - Arguments to filter PlatformBillings to delete.
   * @example
   * // Delete a few PlatformBillings
   * const { count } = await prisma.platformBilling.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends PlatformBillingDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, PlatformBillingDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more PlatformBillings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformBillingUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many PlatformBillings
   * const platformBilling = await prisma.platformBilling.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends PlatformBillingUpdateManyArgs>(
    args: Prisma.SelectSubset<T, PlatformBillingUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more PlatformBillings and returns the data updated in the database.
   * @param {PlatformBillingUpdateManyAndReturnArgs} args - Arguments to update many PlatformBillings.
   * @example
   * // Update many PlatformBillings
   * const platformBilling = await prisma.platformBilling.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more PlatformBillings and only return the `id`
   * const platformBillingWithIdOnly = await prisma.platformBilling.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends PlatformBillingUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, PlatformBillingUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformBillingPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one PlatformBilling.
   * @param {PlatformBillingUpsertArgs} args - Arguments to update or create a PlatformBilling.
   * @example
   * // Update or create a PlatformBilling
   * const platformBilling = await prisma.platformBilling.upsert({
   *   create: {
   *     // ... data to create a PlatformBilling
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the PlatformBilling we want to update
   *   }
   * })
   */
  upsert<T extends PlatformBillingUpsertArgs>(
    args: Prisma.SelectSubset<T, PlatformBillingUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformBillingClient<
    runtime.Types.Result.GetResult<Prisma.$PlatformBillingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of PlatformBillings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformBillingCountArgs} args - Arguments to filter PlatformBillings to count.
   * @example
   * // Count the number of PlatformBillings
   * const count = await prisma.platformBilling.count({
   *   where: {
   *     // ... the filter for the PlatformBillings we want to count
   *   }
   * })
   **/
  count<T extends PlatformBillingCountArgs>(
    args?: Prisma.Subset<T, PlatformBillingCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], PlatformBillingCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a PlatformBilling.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformBillingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends PlatformBillingAggregateArgs>(
    args: Prisma.Subset<T, PlatformBillingAggregateArgs>
  ): Prisma.PrismaPromise<GetPlatformBillingAggregateType<T>>;

  /**
   * Group by PlatformBilling.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformBillingGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends PlatformBillingGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: PlatformBillingGroupByArgs["orderBy"] }
      : { orderBy?: PlatformBillingGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, PlatformBillingGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetPlatformBillingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the PlatformBilling model
   */
  readonly fields: PlatformBillingFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for PlatformBilling.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__PlatformBillingClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  managerBilling<T extends Prisma.PlatformBilling$managerBillingArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.PlatformBilling$managerBillingArgs<ExtArgs>>
  ): Prisma.Prisma__PlatformBillingClient<
    runtime.Types.Result.GetResult<
      Prisma.$PlatformBillingPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  managedBillings<T extends Prisma.PlatformBilling$managedBillingsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.PlatformBilling$managedBillingsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$PlatformBillingPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  team<T extends Prisma.TeamDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.TeamDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__TeamClient<
    | runtime.Types.Result.GetResult<Prisma.$TeamPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the PlatformBilling model
 */
export interface PlatformBillingFieldRefs {
  readonly id: Prisma.FieldRef<"PlatformBilling", "Int">;
  readonly customerId: Prisma.FieldRef<"PlatformBilling", "String">;
  readonly subscriptionId: Prisma.FieldRef<"PlatformBilling", "String">;
  readonly priceId: Prisma.FieldRef<"PlatformBilling", "String">;
  readonly plan: Prisma.FieldRef<"PlatformBilling", "String">;
  readonly billingCycleStart: Prisma.FieldRef<"PlatformBilling", "Int">;
  readonly billingCycleEnd: Prisma.FieldRef<"PlatformBilling", "Int">;
  readonly overdue: Prisma.FieldRef<"PlatformBilling", "Boolean">;
  readonly managerBillingId: Prisma.FieldRef<"PlatformBilling", "Int">;
}

// Custom InputTypes
/**
 * PlatformBilling findUnique
 */
export type PlatformBillingFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformBilling
   */
  select?: Prisma.PlatformBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformBilling
   */
  omit?: Prisma.PlatformBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformBillingInclude<ExtArgs> | null;
  /**
   * Filter, which PlatformBilling to fetch.
   */
  where: Prisma.PlatformBillingWhereUniqueInput;
};

/**
 * PlatformBilling findUniqueOrThrow
 */
export type PlatformBillingFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformBilling
   */
  select?: Prisma.PlatformBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformBilling
   */
  omit?: Prisma.PlatformBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformBillingInclude<ExtArgs> | null;
  /**
   * Filter, which PlatformBilling to fetch.
   */
  where: Prisma.PlatformBillingWhereUniqueInput;
};

/**
 * PlatformBilling findFirst
 */
export type PlatformBillingFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformBilling
   */
  select?: Prisma.PlatformBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformBilling
   */
  omit?: Prisma.PlatformBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformBillingInclude<ExtArgs> | null;
  /**
   * Filter, which PlatformBilling to fetch.
   */
  where?: Prisma.PlatformBillingWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of PlatformBillings to fetch.
   */
  orderBy?: Prisma.PlatformBillingOrderByWithRelationInput | Prisma.PlatformBillingOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for PlatformBillings.
   */
  cursor?: Prisma.PlatformBillingWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` PlatformBillings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` PlatformBillings.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of PlatformBillings.
   */
  distinct?: Prisma.PlatformBillingScalarFieldEnum | Prisma.PlatformBillingScalarFieldEnum[];
};

/**
 * PlatformBilling findFirstOrThrow
 */
export type PlatformBillingFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformBilling
   */
  select?: Prisma.PlatformBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformBilling
   */
  omit?: Prisma.PlatformBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformBillingInclude<ExtArgs> | null;
  /**
   * Filter, which PlatformBilling to fetch.
   */
  where?: Prisma.PlatformBillingWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of PlatformBillings to fetch.
   */
  orderBy?: Prisma.PlatformBillingOrderByWithRelationInput | Prisma.PlatformBillingOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for PlatformBillings.
   */
  cursor?: Prisma.PlatformBillingWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` PlatformBillings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` PlatformBillings.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of PlatformBillings.
   */
  distinct?: Prisma.PlatformBillingScalarFieldEnum | Prisma.PlatformBillingScalarFieldEnum[];
};

/**
 * PlatformBilling findMany
 */
export type PlatformBillingFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformBilling
   */
  select?: Prisma.PlatformBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformBilling
   */
  omit?: Prisma.PlatformBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformBillingInclude<ExtArgs> | null;
  /**
   * Filter, which PlatformBillings to fetch.
   */
  where?: Prisma.PlatformBillingWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of PlatformBillings to fetch.
   */
  orderBy?: Prisma.PlatformBillingOrderByWithRelationInput | Prisma.PlatformBillingOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing PlatformBillings.
   */
  cursor?: Prisma.PlatformBillingWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` PlatformBillings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` PlatformBillings.
   */
  skip?: number;
  distinct?: Prisma.PlatformBillingScalarFieldEnum | Prisma.PlatformBillingScalarFieldEnum[];
};

/**
 * PlatformBilling create
 */
export type PlatformBillingCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformBilling
   */
  select?: Prisma.PlatformBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformBilling
   */
  omit?: Prisma.PlatformBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformBillingInclude<ExtArgs> | null;
  /**
   * The data needed to create a PlatformBilling.
   */
  data: Prisma.XOR<Prisma.PlatformBillingCreateInput, Prisma.PlatformBillingUncheckedCreateInput>;
};

/**
 * PlatformBilling createMany
 */
export type PlatformBillingCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many PlatformBillings.
   */
  data: Prisma.PlatformBillingCreateManyInput | Prisma.PlatformBillingCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * PlatformBilling createManyAndReturn
 */
export type PlatformBillingCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformBilling
   */
  select?: Prisma.PlatformBillingSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformBilling
   */
  omit?: Prisma.PlatformBillingOmit<ExtArgs> | null;
  /**
   * The data used to create many PlatformBillings.
   */
  data: Prisma.PlatformBillingCreateManyInput | Prisma.PlatformBillingCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformBillingIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * PlatformBilling update
 */
export type PlatformBillingUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformBilling
   */
  select?: Prisma.PlatformBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformBilling
   */
  omit?: Prisma.PlatformBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformBillingInclude<ExtArgs> | null;
  /**
   * The data needed to update a PlatformBilling.
   */
  data: Prisma.XOR<Prisma.PlatformBillingUpdateInput, Prisma.PlatformBillingUncheckedUpdateInput>;
  /**
   * Choose, which PlatformBilling to update.
   */
  where: Prisma.PlatformBillingWhereUniqueInput;
};

/**
 * PlatformBilling updateMany
 */
export type PlatformBillingUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update PlatformBillings.
   */
  data: Prisma.XOR<
    Prisma.PlatformBillingUpdateManyMutationInput,
    Prisma.PlatformBillingUncheckedUpdateManyInput
  >;
  /**
   * Filter which PlatformBillings to update
   */
  where?: Prisma.PlatformBillingWhereInput;
  /**
   * Limit how many PlatformBillings to update.
   */
  limit?: number;
};

/**
 * PlatformBilling updateManyAndReturn
 */
export type PlatformBillingUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformBilling
   */
  select?: Prisma.PlatformBillingSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformBilling
   */
  omit?: Prisma.PlatformBillingOmit<ExtArgs> | null;
  /**
   * The data used to update PlatformBillings.
   */
  data: Prisma.XOR<
    Prisma.PlatformBillingUpdateManyMutationInput,
    Prisma.PlatformBillingUncheckedUpdateManyInput
  >;
  /**
   * Filter which PlatformBillings to update
   */
  where?: Prisma.PlatformBillingWhereInput;
  /**
   * Limit how many PlatformBillings to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformBillingIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * PlatformBilling upsert
 */
export type PlatformBillingUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformBilling
   */
  select?: Prisma.PlatformBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformBilling
   */
  omit?: Prisma.PlatformBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformBillingInclude<ExtArgs> | null;
  /**
   * The filter to search for the PlatformBilling to update in case it exists.
   */
  where: Prisma.PlatformBillingWhereUniqueInput;
  /**
   * In case the PlatformBilling found by the `where` argument doesn't exist, create a new PlatformBilling with this data.
   */
  create: Prisma.XOR<Prisma.PlatformBillingCreateInput, Prisma.PlatformBillingUncheckedCreateInput>;
  /**
   * In case the PlatformBilling was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.PlatformBillingUpdateInput, Prisma.PlatformBillingUncheckedUpdateInput>;
};

/**
 * PlatformBilling delete
 */
export type PlatformBillingDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformBilling
   */
  select?: Prisma.PlatformBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformBilling
   */
  omit?: Prisma.PlatformBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformBillingInclude<ExtArgs> | null;
  /**
   * Filter which PlatformBilling to delete.
   */
  where: Prisma.PlatformBillingWhereUniqueInput;
};

/**
 * PlatformBilling deleteMany
 */
export type PlatformBillingDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which PlatformBillings to delete
   */
  where?: Prisma.PlatformBillingWhereInput;
  /**
   * Limit how many PlatformBillings to delete.
   */
  limit?: number;
};

/**
 * PlatformBilling.managerBilling
 */
export type PlatformBilling$managerBillingArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformBilling
   */
  select?: Prisma.PlatformBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformBilling
   */
  omit?: Prisma.PlatformBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformBillingInclude<ExtArgs> | null;
  where?: Prisma.PlatformBillingWhereInput;
};

/**
 * PlatformBilling.managedBillings
 */
export type PlatformBilling$managedBillingsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformBilling
   */
  select?: Prisma.PlatformBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformBilling
   */
  omit?: Prisma.PlatformBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformBillingInclude<ExtArgs> | null;
  where?: Prisma.PlatformBillingWhereInput;
  orderBy?: Prisma.PlatformBillingOrderByWithRelationInput | Prisma.PlatformBillingOrderByWithRelationInput[];
  cursor?: Prisma.PlatformBillingWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.PlatformBillingScalarFieldEnum | Prisma.PlatformBillingScalarFieldEnum[];
};

/**
 * PlatformBilling without action
 */
export type PlatformBillingDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the PlatformBilling
   */
  select?: Prisma.PlatformBillingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the PlatformBilling
   */
  omit?: Prisma.PlatformBillingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformBillingInclude<ExtArgs> | null;
};
