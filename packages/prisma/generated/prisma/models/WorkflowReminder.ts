/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `WorkflowReminder` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model WorkflowReminder
 *
 */
export type WorkflowReminderModel = runtime.Types.Result.DefaultSelection<Prisma.$WorkflowReminderPayload>;

export type AggregateWorkflowReminder = {
  _count: WorkflowReminderCountAggregateOutputType | null;
  _avg: WorkflowReminderAvgAggregateOutputType | null;
  _sum: WorkflowReminderSumAggregateOutputType | null;
  _min: WorkflowReminderMinAggregateOutputType | null;
  _max: WorkflowReminderMaxAggregateOutputType | null;
};

export type WorkflowReminderAvgAggregateOutputType = {
  id: number | null;
  workflowStepId: number | null;
  retryCount: number | null;
};

export type WorkflowReminderSumAggregateOutputType = {
  id: number | null;
  workflowStepId: number | null;
  retryCount: number | null;
};

export type WorkflowReminderMinAggregateOutputType = {
  id: number | null;
  uuid: string | null;
  bookingUid: string | null;
  method: $Enums.WorkflowMethods | null;
  scheduledDate: Date | null;
  referenceId: string | null;
  scheduled: boolean | null;
  workflowStepId: number | null;
  cancelled: boolean | null;
  seatReferenceId: string | null;
  isMandatoryReminder: boolean | null;
  retryCount: number | null;
};

export type WorkflowReminderMaxAggregateOutputType = {
  id: number | null;
  uuid: string | null;
  bookingUid: string | null;
  method: $Enums.WorkflowMethods | null;
  scheduledDate: Date | null;
  referenceId: string | null;
  scheduled: boolean | null;
  workflowStepId: number | null;
  cancelled: boolean | null;
  seatReferenceId: string | null;
  isMandatoryReminder: boolean | null;
  retryCount: number | null;
};

export type WorkflowReminderCountAggregateOutputType = {
  id: number;
  uuid: number;
  bookingUid: number;
  method: number;
  scheduledDate: number;
  referenceId: number;
  scheduled: number;
  workflowStepId: number;
  cancelled: number;
  seatReferenceId: number;
  isMandatoryReminder: number;
  retryCount: number;
  _all: number;
};

export type WorkflowReminderAvgAggregateInputType = {
  id?: true;
  workflowStepId?: true;
  retryCount?: true;
};

export type WorkflowReminderSumAggregateInputType = {
  id?: true;
  workflowStepId?: true;
  retryCount?: true;
};

export type WorkflowReminderMinAggregateInputType = {
  id?: true;
  uuid?: true;
  bookingUid?: true;
  method?: true;
  scheduledDate?: true;
  referenceId?: true;
  scheduled?: true;
  workflowStepId?: true;
  cancelled?: true;
  seatReferenceId?: true;
  isMandatoryReminder?: true;
  retryCount?: true;
};

export type WorkflowReminderMaxAggregateInputType = {
  id?: true;
  uuid?: true;
  bookingUid?: true;
  method?: true;
  scheduledDate?: true;
  referenceId?: true;
  scheduled?: true;
  workflowStepId?: true;
  cancelled?: true;
  seatReferenceId?: true;
  isMandatoryReminder?: true;
  retryCount?: true;
};

export type WorkflowReminderCountAggregateInputType = {
  id?: true;
  uuid?: true;
  bookingUid?: true;
  method?: true;
  scheduledDate?: true;
  referenceId?: true;
  scheduled?: true;
  workflowStepId?: true;
  cancelled?: true;
  seatReferenceId?: true;
  isMandatoryReminder?: true;
  retryCount?: true;
  _all?: true;
};

export type WorkflowReminderAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which WorkflowReminder to aggregate.
   */
  where?: Prisma.WorkflowReminderWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WorkflowReminders to fetch.
   */
  orderBy?:
    | Prisma.WorkflowReminderOrderByWithRelationInput
    | Prisma.WorkflowReminderOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.WorkflowReminderWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` WorkflowReminders from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WorkflowReminders.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned WorkflowReminders
   **/
  _count?: true | WorkflowReminderCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: WorkflowReminderAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: WorkflowReminderSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: WorkflowReminderMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: WorkflowReminderMaxAggregateInputType;
};

export type GetWorkflowReminderAggregateType<T extends WorkflowReminderAggregateArgs> = {
  [P in keyof T & keyof AggregateWorkflowReminder]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWorkflowReminder[P]>
    : Prisma.GetScalarType<T[P], AggregateWorkflowReminder[P]>;
};

export type WorkflowReminderGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.WorkflowReminderWhereInput;
  orderBy?:
    | Prisma.WorkflowReminderOrderByWithAggregationInput
    | Prisma.WorkflowReminderOrderByWithAggregationInput[];
  by: Prisma.WorkflowReminderScalarFieldEnum[] | Prisma.WorkflowReminderScalarFieldEnum;
  having?: Prisma.WorkflowReminderScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: WorkflowReminderCountAggregateInputType | true;
  _avg?: WorkflowReminderAvgAggregateInputType;
  _sum?: WorkflowReminderSumAggregateInputType;
  _min?: WorkflowReminderMinAggregateInputType;
  _max?: WorkflowReminderMaxAggregateInputType;
};

export type WorkflowReminderGroupByOutputType = {
  id: number;
  uuid: string | null;
  bookingUid: string | null;
  method: $Enums.WorkflowMethods;
  scheduledDate: Date;
  referenceId: string | null;
  scheduled: boolean;
  workflowStepId: number | null;
  cancelled: boolean | null;
  seatReferenceId: string | null;
  isMandatoryReminder: boolean | null;
  retryCount: number;
  _count: WorkflowReminderCountAggregateOutputType | null;
  _avg: WorkflowReminderAvgAggregateOutputType | null;
  _sum: WorkflowReminderSumAggregateOutputType | null;
  _min: WorkflowReminderMinAggregateOutputType | null;
  _max: WorkflowReminderMaxAggregateOutputType | null;
};

type GetWorkflowReminderGroupByPayload<T extends WorkflowReminderGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<WorkflowReminderGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof WorkflowReminderGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], WorkflowReminderGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], WorkflowReminderGroupByOutputType[P]>;
    }
  >
>;

export type WorkflowReminderWhereInput = {
  AND?: Prisma.WorkflowReminderWhereInput | Prisma.WorkflowReminderWhereInput[];
  OR?: Prisma.WorkflowReminderWhereInput[];
  NOT?: Prisma.WorkflowReminderWhereInput | Prisma.WorkflowReminderWhereInput[];
  id?: Prisma.IntFilter<"WorkflowReminder"> | number;
  uuid?: Prisma.StringNullableFilter<"WorkflowReminder"> | string | null;
  bookingUid?: Prisma.StringNullableFilter<"WorkflowReminder"> | string | null;
  method?: Prisma.EnumWorkflowMethodsFilter<"WorkflowReminder"> | $Enums.WorkflowMethods;
  scheduledDate?: Prisma.DateTimeFilter<"WorkflowReminder"> | Date | string;
  referenceId?: Prisma.StringNullableFilter<"WorkflowReminder"> | string | null;
  scheduled?: Prisma.BoolFilter<"WorkflowReminder"> | boolean;
  workflowStepId?: Prisma.IntNullableFilter<"WorkflowReminder"> | number | null;
  cancelled?: Prisma.BoolNullableFilter<"WorkflowReminder"> | boolean | null;
  seatReferenceId?: Prisma.StringNullableFilter<"WorkflowReminder"> | string | null;
  isMandatoryReminder?: Prisma.BoolNullableFilter<"WorkflowReminder"> | boolean | null;
  retryCount?: Prisma.IntFilter<"WorkflowReminder"> | number;
  booking?: Prisma.XOR<Prisma.BookingNullableScalarRelationFilter, Prisma.BookingWhereInput> | null;
  workflowStep?: Prisma.XOR<
    Prisma.WorkflowStepNullableScalarRelationFilter,
    Prisma.WorkflowStepWhereInput
  > | null;
};

export type WorkflowReminderOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  uuid?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingUid?: Prisma.SortOrderInput | Prisma.SortOrder;
  method?: Prisma.SortOrder;
  scheduledDate?: Prisma.SortOrder;
  referenceId?: Prisma.SortOrderInput | Prisma.SortOrder;
  scheduled?: Prisma.SortOrder;
  workflowStepId?: Prisma.SortOrderInput | Prisma.SortOrder;
  cancelled?: Prisma.SortOrderInput | Prisma.SortOrder;
  seatReferenceId?: Prisma.SortOrderInput | Prisma.SortOrder;
  isMandatoryReminder?: Prisma.SortOrderInput | Prisma.SortOrder;
  retryCount?: Prisma.SortOrder;
  booking?: Prisma.BookingOrderByWithRelationInput;
  workflowStep?: Prisma.WorkflowStepOrderByWithRelationInput;
};

export type WorkflowReminderWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    uuid?: string;
    referenceId?: string;
    AND?: Prisma.WorkflowReminderWhereInput | Prisma.WorkflowReminderWhereInput[];
    OR?: Prisma.WorkflowReminderWhereInput[];
    NOT?: Prisma.WorkflowReminderWhereInput | Prisma.WorkflowReminderWhereInput[];
    bookingUid?: Prisma.StringNullableFilter<"WorkflowReminder"> | string | null;
    method?: Prisma.EnumWorkflowMethodsFilter<"WorkflowReminder"> | $Enums.WorkflowMethods;
    scheduledDate?: Prisma.DateTimeFilter<"WorkflowReminder"> | Date | string;
    scheduled?: Prisma.BoolFilter<"WorkflowReminder"> | boolean;
    workflowStepId?: Prisma.IntNullableFilter<"WorkflowReminder"> | number | null;
    cancelled?: Prisma.BoolNullableFilter<"WorkflowReminder"> | boolean | null;
    seatReferenceId?: Prisma.StringNullableFilter<"WorkflowReminder"> | string | null;
    isMandatoryReminder?: Prisma.BoolNullableFilter<"WorkflowReminder"> | boolean | null;
    retryCount?: Prisma.IntFilter<"WorkflowReminder"> | number;
    booking?: Prisma.XOR<Prisma.BookingNullableScalarRelationFilter, Prisma.BookingWhereInput> | null;
    workflowStep?: Prisma.XOR<
      Prisma.WorkflowStepNullableScalarRelationFilter,
      Prisma.WorkflowStepWhereInput
    > | null;
  },
  "id" | "uuid" | "referenceId"
>;

export type WorkflowReminderOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  uuid?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingUid?: Prisma.SortOrderInput | Prisma.SortOrder;
  method?: Prisma.SortOrder;
  scheduledDate?: Prisma.SortOrder;
  referenceId?: Prisma.SortOrderInput | Prisma.SortOrder;
  scheduled?: Prisma.SortOrder;
  workflowStepId?: Prisma.SortOrderInput | Prisma.SortOrder;
  cancelled?: Prisma.SortOrderInput | Prisma.SortOrder;
  seatReferenceId?: Prisma.SortOrderInput | Prisma.SortOrder;
  isMandatoryReminder?: Prisma.SortOrderInput | Prisma.SortOrder;
  retryCount?: Prisma.SortOrder;
  _count?: Prisma.WorkflowReminderCountOrderByAggregateInput;
  _avg?: Prisma.WorkflowReminderAvgOrderByAggregateInput;
  _max?: Prisma.WorkflowReminderMaxOrderByAggregateInput;
  _min?: Prisma.WorkflowReminderMinOrderByAggregateInput;
  _sum?: Prisma.WorkflowReminderSumOrderByAggregateInput;
};

export type WorkflowReminderScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.WorkflowReminderScalarWhereWithAggregatesInput
    | Prisma.WorkflowReminderScalarWhereWithAggregatesInput[];
  OR?: Prisma.WorkflowReminderScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.WorkflowReminderScalarWhereWithAggregatesInput
    | Prisma.WorkflowReminderScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"WorkflowReminder"> | number;
  uuid?: Prisma.StringNullableWithAggregatesFilter<"WorkflowReminder"> | string | null;
  bookingUid?: Prisma.StringNullableWithAggregatesFilter<"WorkflowReminder"> | string | null;
  method?: Prisma.EnumWorkflowMethodsWithAggregatesFilter<"WorkflowReminder"> | $Enums.WorkflowMethods;
  scheduledDate?: Prisma.DateTimeWithAggregatesFilter<"WorkflowReminder"> | Date | string;
  referenceId?: Prisma.StringNullableWithAggregatesFilter<"WorkflowReminder"> | string | null;
  scheduled?: Prisma.BoolWithAggregatesFilter<"WorkflowReminder"> | boolean;
  workflowStepId?: Prisma.IntNullableWithAggregatesFilter<"WorkflowReminder"> | number | null;
  cancelled?: Prisma.BoolNullableWithAggregatesFilter<"WorkflowReminder"> | boolean | null;
  seatReferenceId?: Prisma.StringNullableWithAggregatesFilter<"WorkflowReminder"> | string | null;
  isMandatoryReminder?: Prisma.BoolNullableWithAggregatesFilter<"WorkflowReminder"> | boolean | null;
  retryCount?: Prisma.IntWithAggregatesFilter<"WorkflowReminder"> | number;
};

export type WorkflowReminderCreateInput = {
  uuid?: string | null;
  method: $Enums.WorkflowMethods;
  scheduledDate: Date | string;
  referenceId?: string | null;
  scheduled: boolean;
  cancelled?: boolean | null;
  seatReferenceId?: string | null;
  isMandatoryReminder?: boolean | null;
  retryCount?: number;
  booking?: Prisma.BookingCreateNestedOneWithoutWorkflowRemindersInput;
  workflowStep?: Prisma.WorkflowStepCreateNestedOneWithoutWorkflowRemindersInput;
};

export type WorkflowReminderUncheckedCreateInput = {
  id?: number;
  uuid?: string | null;
  bookingUid?: string | null;
  method: $Enums.WorkflowMethods;
  scheduledDate: Date | string;
  referenceId?: string | null;
  scheduled: boolean;
  workflowStepId?: number | null;
  cancelled?: boolean | null;
  seatReferenceId?: string | null;
  isMandatoryReminder?: boolean | null;
  retryCount?: number;
};

export type WorkflowReminderUpdateInput = {
  uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  method?: Prisma.EnumWorkflowMethodsFieldUpdateOperationsInput | $Enums.WorkflowMethods;
  scheduledDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  referenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  scheduled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  cancelled?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  seatReferenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isMandatoryReminder?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  retryCount?: Prisma.IntFieldUpdateOperationsInput | number;
  booking?: Prisma.BookingUpdateOneWithoutWorkflowRemindersNestedInput;
  workflowStep?: Prisma.WorkflowStepUpdateOneWithoutWorkflowRemindersNestedInput;
};

export type WorkflowReminderUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bookingUid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  method?: Prisma.EnumWorkflowMethodsFieldUpdateOperationsInput | $Enums.WorkflowMethods;
  scheduledDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  referenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  scheduled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  workflowStepId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  cancelled?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  seatReferenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isMandatoryReminder?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  retryCount?: Prisma.IntFieldUpdateOperationsInput | number;
};

export type WorkflowReminderCreateManyInput = {
  id?: number;
  uuid?: string | null;
  bookingUid?: string | null;
  method: $Enums.WorkflowMethods;
  scheduledDate: Date | string;
  referenceId?: string | null;
  scheduled: boolean;
  workflowStepId?: number | null;
  cancelled?: boolean | null;
  seatReferenceId?: string | null;
  isMandatoryReminder?: boolean | null;
  retryCount?: number;
};

export type WorkflowReminderUpdateManyMutationInput = {
  uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  method?: Prisma.EnumWorkflowMethodsFieldUpdateOperationsInput | $Enums.WorkflowMethods;
  scheduledDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  referenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  scheduled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  cancelled?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  seatReferenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isMandatoryReminder?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  retryCount?: Prisma.IntFieldUpdateOperationsInput | number;
};

export type WorkflowReminderUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bookingUid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  method?: Prisma.EnumWorkflowMethodsFieldUpdateOperationsInput | $Enums.WorkflowMethods;
  scheduledDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  referenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  scheduled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  workflowStepId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  cancelled?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  seatReferenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isMandatoryReminder?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  retryCount?: Prisma.IntFieldUpdateOperationsInput | number;
};

export type WorkflowReminderListRelationFilter = {
  every?: Prisma.WorkflowReminderWhereInput;
  some?: Prisma.WorkflowReminderWhereInput;
  none?: Prisma.WorkflowReminderWhereInput;
};

export type WorkflowReminderOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type WorkflowReminderCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  uuid?: Prisma.SortOrder;
  bookingUid?: Prisma.SortOrder;
  method?: Prisma.SortOrder;
  scheduledDate?: Prisma.SortOrder;
  referenceId?: Prisma.SortOrder;
  scheduled?: Prisma.SortOrder;
  workflowStepId?: Prisma.SortOrder;
  cancelled?: Prisma.SortOrder;
  seatReferenceId?: Prisma.SortOrder;
  isMandatoryReminder?: Prisma.SortOrder;
  retryCount?: Prisma.SortOrder;
};

export type WorkflowReminderAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  workflowStepId?: Prisma.SortOrder;
  retryCount?: Prisma.SortOrder;
};

export type WorkflowReminderMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  uuid?: Prisma.SortOrder;
  bookingUid?: Prisma.SortOrder;
  method?: Prisma.SortOrder;
  scheduledDate?: Prisma.SortOrder;
  referenceId?: Prisma.SortOrder;
  scheduled?: Prisma.SortOrder;
  workflowStepId?: Prisma.SortOrder;
  cancelled?: Prisma.SortOrder;
  seatReferenceId?: Prisma.SortOrder;
  isMandatoryReminder?: Prisma.SortOrder;
  retryCount?: Prisma.SortOrder;
};

export type WorkflowReminderMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  uuid?: Prisma.SortOrder;
  bookingUid?: Prisma.SortOrder;
  method?: Prisma.SortOrder;
  scheduledDate?: Prisma.SortOrder;
  referenceId?: Prisma.SortOrder;
  scheduled?: Prisma.SortOrder;
  workflowStepId?: Prisma.SortOrder;
  cancelled?: Prisma.SortOrder;
  seatReferenceId?: Prisma.SortOrder;
  isMandatoryReminder?: Prisma.SortOrder;
  retryCount?: Prisma.SortOrder;
};

export type WorkflowReminderSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  workflowStepId?: Prisma.SortOrder;
  retryCount?: Prisma.SortOrder;
};

export type WorkflowReminderCreateNestedManyWithoutBookingInput = {
  create?:
    | Prisma.XOR<
        Prisma.WorkflowReminderCreateWithoutBookingInput,
        Prisma.WorkflowReminderUncheckedCreateWithoutBookingInput
      >
    | Prisma.WorkflowReminderCreateWithoutBookingInput[]
    | Prisma.WorkflowReminderUncheckedCreateWithoutBookingInput[];
  connectOrCreate?:
    | Prisma.WorkflowReminderCreateOrConnectWithoutBookingInput
    | Prisma.WorkflowReminderCreateOrConnectWithoutBookingInput[];
  createMany?: Prisma.WorkflowReminderCreateManyBookingInputEnvelope;
  connect?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
};

export type WorkflowReminderUncheckedCreateNestedManyWithoutBookingInput = {
  create?:
    | Prisma.XOR<
        Prisma.WorkflowReminderCreateWithoutBookingInput,
        Prisma.WorkflowReminderUncheckedCreateWithoutBookingInput
      >
    | Prisma.WorkflowReminderCreateWithoutBookingInput[]
    | Prisma.WorkflowReminderUncheckedCreateWithoutBookingInput[];
  connectOrCreate?:
    | Prisma.WorkflowReminderCreateOrConnectWithoutBookingInput
    | Prisma.WorkflowReminderCreateOrConnectWithoutBookingInput[];
  createMany?: Prisma.WorkflowReminderCreateManyBookingInputEnvelope;
  connect?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
};

export type WorkflowReminderUpdateManyWithoutBookingNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.WorkflowReminderCreateWithoutBookingInput,
        Prisma.WorkflowReminderUncheckedCreateWithoutBookingInput
      >
    | Prisma.WorkflowReminderCreateWithoutBookingInput[]
    | Prisma.WorkflowReminderUncheckedCreateWithoutBookingInput[];
  connectOrCreate?:
    | Prisma.WorkflowReminderCreateOrConnectWithoutBookingInput
    | Prisma.WorkflowReminderCreateOrConnectWithoutBookingInput[];
  upsert?:
    | Prisma.WorkflowReminderUpsertWithWhereUniqueWithoutBookingInput
    | Prisma.WorkflowReminderUpsertWithWhereUniqueWithoutBookingInput[];
  createMany?: Prisma.WorkflowReminderCreateManyBookingInputEnvelope;
  set?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
  disconnect?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
  delete?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
  connect?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
  update?:
    | Prisma.WorkflowReminderUpdateWithWhereUniqueWithoutBookingInput
    | Prisma.WorkflowReminderUpdateWithWhereUniqueWithoutBookingInput[];
  updateMany?:
    | Prisma.WorkflowReminderUpdateManyWithWhereWithoutBookingInput
    | Prisma.WorkflowReminderUpdateManyWithWhereWithoutBookingInput[];
  deleteMany?: Prisma.WorkflowReminderScalarWhereInput | Prisma.WorkflowReminderScalarWhereInput[];
};

export type WorkflowReminderUncheckedUpdateManyWithoutBookingNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.WorkflowReminderCreateWithoutBookingInput,
        Prisma.WorkflowReminderUncheckedCreateWithoutBookingInput
      >
    | Prisma.WorkflowReminderCreateWithoutBookingInput[]
    | Prisma.WorkflowReminderUncheckedCreateWithoutBookingInput[];
  connectOrCreate?:
    | Prisma.WorkflowReminderCreateOrConnectWithoutBookingInput
    | Prisma.WorkflowReminderCreateOrConnectWithoutBookingInput[];
  upsert?:
    | Prisma.WorkflowReminderUpsertWithWhereUniqueWithoutBookingInput
    | Prisma.WorkflowReminderUpsertWithWhereUniqueWithoutBookingInput[];
  createMany?: Prisma.WorkflowReminderCreateManyBookingInputEnvelope;
  set?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
  disconnect?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
  delete?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
  connect?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
  update?:
    | Prisma.WorkflowReminderUpdateWithWhereUniqueWithoutBookingInput
    | Prisma.WorkflowReminderUpdateWithWhereUniqueWithoutBookingInput[];
  updateMany?:
    | Prisma.WorkflowReminderUpdateManyWithWhereWithoutBookingInput
    | Prisma.WorkflowReminderUpdateManyWithWhereWithoutBookingInput[];
  deleteMany?: Prisma.WorkflowReminderScalarWhereInput | Prisma.WorkflowReminderScalarWhereInput[];
};

export type WorkflowReminderCreateNestedManyWithoutWorkflowStepInput = {
  create?:
    | Prisma.XOR<
        Prisma.WorkflowReminderCreateWithoutWorkflowStepInput,
        Prisma.WorkflowReminderUncheckedCreateWithoutWorkflowStepInput
      >
    | Prisma.WorkflowReminderCreateWithoutWorkflowStepInput[]
    | Prisma.WorkflowReminderUncheckedCreateWithoutWorkflowStepInput[];
  connectOrCreate?:
    | Prisma.WorkflowReminderCreateOrConnectWithoutWorkflowStepInput
    | Prisma.WorkflowReminderCreateOrConnectWithoutWorkflowStepInput[];
  createMany?: Prisma.WorkflowReminderCreateManyWorkflowStepInputEnvelope;
  connect?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
};

export type WorkflowReminderUncheckedCreateNestedManyWithoutWorkflowStepInput = {
  create?:
    | Prisma.XOR<
        Prisma.WorkflowReminderCreateWithoutWorkflowStepInput,
        Prisma.WorkflowReminderUncheckedCreateWithoutWorkflowStepInput
      >
    | Prisma.WorkflowReminderCreateWithoutWorkflowStepInput[]
    | Prisma.WorkflowReminderUncheckedCreateWithoutWorkflowStepInput[];
  connectOrCreate?:
    | Prisma.WorkflowReminderCreateOrConnectWithoutWorkflowStepInput
    | Prisma.WorkflowReminderCreateOrConnectWithoutWorkflowStepInput[];
  createMany?: Prisma.WorkflowReminderCreateManyWorkflowStepInputEnvelope;
  connect?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
};

export type WorkflowReminderUpdateManyWithoutWorkflowStepNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.WorkflowReminderCreateWithoutWorkflowStepInput,
        Prisma.WorkflowReminderUncheckedCreateWithoutWorkflowStepInput
      >
    | Prisma.WorkflowReminderCreateWithoutWorkflowStepInput[]
    | Prisma.WorkflowReminderUncheckedCreateWithoutWorkflowStepInput[];
  connectOrCreate?:
    | Prisma.WorkflowReminderCreateOrConnectWithoutWorkflowStepInput
    | Prisma.WorkflowReminderCreateOrConnectWithoutWorkflowStepInput[];
  upsert?:
    | Prisma.WorkflowReminderUpsertWithWhereUniqueWithoutWorkflowStepInput
    | Prisma.WorkflowReminderUpsertWithWhereUniqueWithoutWorkflowStepInput[];
  createMany?: Prisma.WorkflowReminderCreateManyWorkflowStepInputEnvelope;
  set?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
  disconnect?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
  delete?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
  connect?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
  update?:
    | Prisma.WorkflowReminderUpdateWithWhereUniqueWithoutWorkflowStepInput
    | Prisma.WorkflowReminderUpdateWithWhereUniqueWithoutWorkflowStepInput[];
  updateMany?:
    | Prisma.WorkflowReminderUpdateManyWithWhereWithoutWorkflowStepInput
    | Prisma.WorkflowReminderUpdateManyWithWhereWithoutWorkflowStepInput[];
  deleteMany?: Prisma.WorkflowReminderScalarWhereInput | Prisma.WorkflowReminderScalarWhereInput[];
};

export type WorkflowReminderUncheckedUpdateManyWithoutWorkflowStepNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.WorkflowReminderCreateWithoutWorkflowStepInput,
        Prisma.WorkflowReminderUncheckedCreateWithoutWorkflowStepInput
      >
    | Prisma.WorkflowReminderCreateWithoutWorkflowStepInput[]
    | Prisma.WorkflowReminderUncheckedCreateWithoutWorkflowStepInput[];
  connectOrCreate?:
    | Prisma.WorkflowReminderCreateOrConnectWithoutWorkflowStepInput
    | Prisma.WorkflowReminderCreateOrConnectWithoutWorkflowStepInput[];
  upsert?:
    | Prisma.WorkflowReminderUpsertWithWhereUniqueWithoutWorkflowStepInput
    | Prisma.WorkflowReminderUpsertWithWhereUniqueWithoutWorkflowStepInput[];
  createMany?: Prisma.WorkflowReminderCreateManyWorkflowStepInputEnvelope;
  set?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
  disconnect?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
  delete?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
  connect?: Prisma.WorkflowReminderWhereUniqueInput | Prisma.WorkflowReminderWhereUniqueInput[];
  update?:
    | Prisma.WorkflowReminderUpdateWithWhereUniqueWithoutWorkflowStepInput
    | Prisma.WorkflowReminderUpdateWithWhereUniqueWithoutWorkflowStepInput[];
  updateMany?:
    | Prisma.WorkflowReminderUpdateManyWithWhereWithoutWorkflowStepInput
    | Prisma.WorkflowReminderUpdateManyWithWhereWithoutWorkflowStepInput[];
  deleteMany?: Prisma.WorkflowReminderScalarWhereInput | Prisma.WorkflowReminderScalarWhereInput[];
};

export type EnumWorkflowMethodsFieldUpdateOperationsInput = {
  set?: $Enums.WorkflowMethods;
};

export type WorkflowReminderCreateWithoutBookingInput = {
  uuid?: string | null;
  method: $Enums.WorkflowMethods;
  scheduledDate: Date | string;
  referenceId?: string | null;
  scheduled: boolean;
  cancelled?: boolean | null;
  seatReferenceId?: string | null;
  isMandatoryReminder?: boolean | null;
  retryCount?: number;
  workflowStep?: Prisma.WorkflowStepCreateNestedOneWithoutWorkflowRemindersInput;
};

export type WorkflowReminderUncheckedCreateWithoutBookingInput = {
  id?: number;
  uuid?: string | null;
  method: $Enums.WorkflowMethods;
  scheduledDate: Date | string;
  referenceId?: string | null;
  scheduled: boolean;
  workflowStepId?: number | null;
  cancelled?: boolean | null;
  seatReferenceId?: string | null;
  isMandatoryReminder?: boolean | null;
  retryCount?: number;
};

export type WorkflowReminderCreateOrConnectWithoutBookingInput = {
  where: Prisma.WorkflowReminderWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.WorkflowReminderCreateWithoutBookingInput,
    Prisma.WorkflowReminderUncheckedCreateWithoutBookingInput
  >;
};

export type WorkflowReminderCreateManyBookingInputEnvelope = {
  data: Prisma.WorkflowReminderCreateManyBookingInput | Prisma.WorkflowReminderCreateManyBookingInput[];
  skipDuplicates?: boolean;
};

export type WorkflowReminderUpsertWithWhereUniqueWithoutBookingInput = {
  where: Prisma.WorkflowReminderWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.WorkflowReminderUpdateWithoutBookingInput,
    Prisma.WorkflowReminderUncheckedUpdateWithoutBookingInput
  >;
  create: Prisma.XOR<
    Prisma.WorkflowReminderCreateWithoutBookingInput,
    Prisma.WorkflowReminderUncheckedCreateWithoutBookingInput
  >;
};

export type WorkflowReminderUpdateWithWhereUniqueWithoutBookingInput = {
  where: Prisma.WorkflowReminderWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.WorkflowReminderUpdateWithoutBookingInput,
    Prisma.WorkflowReminderUncheckedUpdateWithoutBookingInput
  >;
};

export type WorkflowReminderUpdateManyWithWhereWithoutBookingInput = {
  where: Prisma.WorkflowReminderScalarWhereInput;
  data: Prisma.XOR<
    Prisma.WorkflowReminderUpdateManyMutationInput,
    Prisma.WorkflowReminderUncheckedUpdateManyWithoutBookingInput
  >;
};

export type WorkflowReminderScalarWhereInput = {
  AND?: Prisma.WorkflowReminderScalarWhereInput | Prisma.WorkflowReminderScalarWhereInput[];
  OR?: Prisma.WorkflowReminderScalarWhereInput[];
  NOT?: Prisma.WorkflowReminderScalarWhereInput | Prisma.WorkflowReminderScalarWhereInput[];
  id?: Prisma.IntFilter<"WorkflowReminder"> | number;
  uuid?: Prisma.StringNullableFilter<"WorkflowReminder"> | string | null;
  bookingUid?: Prisma.StringNullableFilter<"WorkflowReminder"> | string | null;
  method?: Prisma.EnumWorkflowMethodsFilter<"WorkflowReminder"> | $Enums.WorkflowMethods;
  scheduledDate?: Prisma.DateTimeFilter<"WorkflowReminder"> | Date | string;
  referenceId?: Prisma.StringNullableFilter<"WorkflowReminder"> | string | null;
  scheduled?: Prisma.BoolFilter<"WorkflowReminder"> | boolean;
  workflowStepId?: Prisma.IntNullableFilter<"WorkflowReminder"> | number | null;
  cancelled?: Prisma.BoolNullableFilter<"WorkflowReminder"> | boolean | null;
  seatReferenceId?: Prisma.StringNullableFilter<"WorkflowReminder"> | string | null;
  isMandatoryReminder?: Prisma.BoolNullableFilter<"WorkflowReminder"> | boolean | null;
  retryCount?: Prisma.IntFilter<"WorkflowReminder"> | number;
};

export type WorkflowReminderCreateWithoutWorkflowStepInput = {
  uuid?: string | null;
  method: $Enums.WorkflowMethods;
  scheduledDate: Date | string;
  referenceId?: string | null;
  scheduled: boolean;
  cancelled?: boolean | null;
  seatReferenceId?: string | null;
  isMandatoryReminder?: boolean | null;
  retryCount?: number;
  booking?: Prisma.BookingCreateNestedOneWithoutWorkflowRemindersInput;
};

export type WorkflowReminderUncheckedCreateWithoutWorkflowStepInput = {
  id?: number;
  uuid?: string | null;
  bookingUid?: string | null;
  method: $Enums.WorkflowMethods;
  scheduledDate: Date | string;
  referenceId?: string | null;
  scheduled: boolean;
  cancelled?: boolean | null;
  seatReferenceId?: string | null;
  isMandatoryReminder?: boolean | null;
  retryCount?: number;
};

export type WorkflowReminderCreateOrConnectWithoutWorkflowStepInput = {
  where: Prisma.WorkflowReminderWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.WorkflowReminderCreateWithoutWorkflowStepInput,
    Prisma.WorkflowReminderUncheckedCreateWithoutWorkflowStepInput
  >;
};

export type WorkflowReminderCreateManyWorkflowStepInputEnvelope = {
  data:
    | Prisma.WorkflowReminderCreateManyWorkflowStepInput
    | Prisma.WorkflowReminderCreateManyWorkflowStepInput[];
  skipDuplicates?: boolean;
};

export type WorkflowReminderUpsertWithWhereUniqueWithoutWorkflowStepInput = {
  where: Prisma.WorkflowReminderWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.WorkflowReminderUpdateWithoutWorkflowStepInput,
    Prisma.WorkflowReminderUncheckedUpdateWithoutWorkflowStepInput
  >;
  create: Prisma.XOR<
    Prisma.WorkflowReminderCreateWithoutWorkflowStepInput,
    Prisma.WorkflowReminderUncheckedCreateWithoutWorkflowStepInput
  >;
};

export type WorkflowReminderUpdateWithWhereUniqueWithoutWorkflowStepInput = {
  where: Prisma.WorkflowReminderWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.WorkflowReminderUpdateWithoutWorkflowStepInput,
    Prisma.WorkflowReminderUncheckedUpdateWithoutWorkflowStepInput
  >;
};

export type WorkflowReminderUpdateManyWithWhereWithoutWorkflowStepInput = {
  where: Prisma.WorkflowReminderScalarWhereInput;
  data: Prisma.XOR<
    Prisma.WorkflowReminderUpdateManyMutationInput,
    Prisma.WorkflowReminderUncheckedUpdateManyWithoutWorkflowStepInput
  >;
};

export type WorkflowReminderCreateManyBookingInput = {
  id?: number;
  uuid?: string | null;
  method: $Enums.WorkflowMethods;
  scheduledDate: Date | string;
  referenceId?: string | null;
  scheduled: boolean;
  workflowStepId?: number | null;
  cancelled?: boolean | null;
  seatReferenceId?: string | null;
  isMandatoryReminder?: boolean | null;
  retryCount?: number;
};

export type WorkflowReminderUpdateWithoutBookingInput = {
  uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  method?: Prisma.EnumWorkflowMethodsFieldUpdateOperationsInput | $Enums.WorkflowMethods;
  scheduledDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  referenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  scheduled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  cancelled?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  seatReferenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isMandatoryReminder?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  retryCount?: Prisma.IntFieldUpdateOperationsInput | number;
  workflowStep?: Prisma.WorkflowStepUpdateOneWithoutWorkflowRemindersNestedInput;
};

export type WorkflowReminderUncheckedUpdateWithoutBookingInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  method?: Prisma.EnumWorkflowMethodsFieldUpdateOperationsInput | $Enums.WorkflowMethods;
  scheduledDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  referenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  scheduled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  workflowStepId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  cancelled?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  seatReferenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isMandatoryReminder?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  retryCount?: Prisma.IntFieldUpdateOperationsInput | number;
};

export type WorkflowReminderUncheckedUpdateManyWithoutBookingInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  method?: Prisma.EnumWorkflowMethodsFieldUpdateOperationsInput | $Enums.WorkflowMethods;
  scheduledDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  referenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  scheduled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  workflowStepId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  cancelled?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  seatReferenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isMandatoryReminder?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  retryCount?: Prisma.IntFieldUpdateOperationsInput | number;
};

export type WorkflowReminderCreateManyWorkflowStepInput = {
  id?: number;
  uuid?: string | null;
  bookingUid?: string | null;
  method: $Enums.WorkflowMethods;
  scheduledDate: Date | string;
  referenceId?: string | null;
  scheduled: boolean;
  cancelled?: boolean | null;
  seatReferenceId?: string | null;
  isMandatoryReminder?: boolean | null;
  retryCount?: number;
};

export type WorkflowReminderUpdateWithoutWorkflowStepInput = {
  uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  method?: Prisma.EnumWorkflowMethodsFieldUpdateOperationsInput | $Enums.WorkflowMethods;
  scheduledDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  referenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  scheduled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  cancelled?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  seatReferenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isMandatoryReminder?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  retryCount?: Prisma.IntFieldUpdateOperationsInput | number;
  booking?: Prisma.BookingUpdateOneWithoutWorkflowRemindersNestedInput;
};

export type WorkflowReminderUncheckedUpdateWithoutWorkflowStepInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bookingUid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  method?: Prisma.EnumWorkflowMethodsFieldUpdateOperationsInput | $Enums.WorkflowMethods;
  scheduledDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  referenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  scheduled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  cancelled?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  seatReferenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isMandatoryReminder?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  retryCount?: Prisma.IntFieldUpdateOperationsInput | number;
};

export type WorkflowReminderUncheckedUpdateManyWithoutWorkflowStepInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bookingUid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  method?: Prisma.EnumWorkflowMethodsFieldUpdateOperationsInput | $Enums.WorkflowMethods;
  scheduledDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  referenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  scheduled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  cancelled?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  seatReferenceId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isMandatoryReminder?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  retryCount?: Prisma.IntFieldUpdateOperationsInput | number;
};

export type WorkflowReminderSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    uuid?: boolean;
    bookingUid?: boolean;
    method?: boolean;
    scheduledDate?: boolean;
    referenceId?: boolean;
    scheduled?: boolean;
    workflowStepId?: boolean;
    cancelled?: boolean;
    seatReferenceId?: boolean;
    isMandatoryReminder?: boolean;
    retryCount?: boolean;
    booking?: boolean | Prisma.WorkflowReminder$bookingArgs<ExtArgs>;
    workflowStep?: boolean | Prisma.WorkflowReminder$workflowStepArgs<ExtArgs>;
  },
  ExtArgs["result"]["workflowReminder"]
>;

export type WorkflowReminderSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    uuid?: boolean;
    bookingUid?: boolean;
    method?: boolean;
    scheduledDate?: boolean;
    referenceId?: boolean;
    scheduled?: boolean;
    workflowStepId?: boolean;
    cancelled?: boolean;
    seatReferenceId?: boolean;
    isMandatoryReminder?: boolean;
    retryCount?: boolean;
    booking?: boolean | Prisma.WorkflowReminder$bookingArgs<ExtArgs>;
    workflowStep?: boolean | Prisma.WorkflowReminder$workflowStepArgs<ExtArgs>;
  },
  ExtArgs["result"]["workflowReminder"]
>;

export type WorkflowReminderSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    uuid?: boolean;
    bookingUid?: boolean;
    method?: boolean;
    scheduledDate?: boolean;
    referenceId?: boolean;
    scheduled?: boolean;
    workflowStepId?: boolean;
    cancelled?: boolean;
    seatReferenceId?: boolean;
    isMandatoryReminder?: boolean;
    retryCount?: boolean;
    booking?: boolean | Prisma.WorkflowReminder$bookingArgs<ExtArgs>;
    workflowStep?: boolean | Prisma.WorkflowReminder$workflowStepArgs<ExtArgs>;
  },
  ExtArgs["result"]["workflowReminder"]
>;

export type WorkflowReminderSelectScalar = {
  id?: boolean;
  uuid?: boolean;
  bookingUid?: boolean;
  method?: boolean;
  scheduledDate?: boolean;
  referenceId?: boolean;
  scheduled?: boolean;
  workflowStepId?: boolean;
  cancelled?: boolean;
  seatReferenceId?: boolean;
  isMandatoryReminder?: boolean;
  retryCount?: boolean;
};

export type WorkflowReminderOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "uuid"
  | "bookingUid"
  | "method"
  | "scheduledDate"
  | "referenceId"
  | "scheduled"
  | "workflowStepId"
  | "cancelled"
  | "seatReferenceId"
  | "isMandatoryReminder"
  | "retryCount",
  ExtArgs["result"]["workflowReminder"]
>;
export type WorkflowReminderInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  booking?: boolean | Prisma.WorkflowReminder$bookingArgs<ExtArgs>;
  workflowStep?: boolean | Prisma.WorkflowReminder$workflowStepArgs<ExtArgs>;
};
export type WorkflowReminderIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  booking?: boolean | Prisma.WorkflowReminder$bookingArgs<ExtArgs>;
  workflowStep?: boolean | Prisma.WorkflowReminder$workflowStepArgs<ExtArgs>;
};
export type WorkflowReminderIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  booking?: boolean | Prisma.WorkflowReminder$bookingArgs<ExtArgs>;
  workflowStep?: boolean | Prisma.WorkflowReminder$workflowStepArgs<ExtArgs>;
};

export type $WorkflowReminderPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "WorkflowReminder";
  objects: {
    booking: Prisma.$BookingPayload<ExtArgs> | null;
    workflowStep: Prisma.$WorkflowStepPayload<ExtArgs> | null;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      uuid: string | null;
      bookingUid: string | null;
      method: $Enums.WorkflowMethods;
      scheduledDate: Date;
      referenceId: string | null;
      scheduled: boolean;
      workflowStepId: number | null;
      cancelled: boolean | null;
      seatReferenceId: string | null;
      isMandatoryReminder: boolean | null;
      retryCount: number;
    },
    ExtArgs["result"]["workflowReminder"]
  >;
  composites: {};
};

export type WorkflowReminderGetPayload<S extends boolean | null | undefined | WorkflowReminderDefaultArgs> =
  runtime.Types.Result.GetResult<Prisma.$WorkflowReminderPayload, S>;

export type WorkflowReminderCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<WorkflowReminderFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: WorkflowReminderCountAggregateInputType | true;
};

export interface WorkflowReminderDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["WorkflowReminder"];
    meta: { name: "WorkflowReminder" };
  };
  /**
   * Find zero or one WorkflowReminder that matches the filter.
   * @param {WorkflowReminderFindUniqueArgs} args - Arguments to find a WorkflowReminder
   * @example
   * // Get one WorkflowReminder
   * const workflowReminder = await prisma.workflowReminder.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends WorkflowReminderFindUniqueArgs>(
    args: Prisma.SelectSubset<T, WorkflowReminderFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowReminderClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowReminderPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one WorkflowReminder that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {WorkflowReminderFindUniqueOrThrowArgs} args - Arguments to find a WorkflowReminder
   * @example
   * // Get one WorkflowReminder
   * const workflowReminder = await prisma.workflowReminder.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends WorkflowReminderFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, WorkflowReminderFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowReminderClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowReminderPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first WorkflowReminder that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowReminderFindFirstArgs} args - Arguments to find a WorkflowReminder
   * @example
   * // Get one WorkflowReminder
   * const workflowReminder = await prisma.workflowReminder.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends WorkflowReminderFindFirstArgs>(
    args?: Prisma.SelectSubset<T, WorkflowReminderFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowReminderClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowReminderPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first WorkflowReminder that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowReminderFindFirstOrThrowArgs} args - Arguments to find a WorkflowReminder
   * @example
   * // Get one WorkflowReminder
   * const workflowReminder = await prisma.workflowReminder.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends WorkflowReminderFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, WorkflowReminderFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowReminderClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowReminderPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more WorkflowReminders that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowReminderFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all WorkflowReminders
   * const workflowReminders = await prisma.workflowReminder.findMany()
   *
   * // Get first 10 WorkflowReminders
   * const workflowReminders = await prisma.workflowReminder.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const workflowReminderWithIdOnly = await prisma.workflowReminder.findMany({ select: { id: true } })
   *
   */
  findMany<T extends WorkflowReminderFindManyArgs>(
    args?: Prisma.SelectSubset<T, WorkflowReminderFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$WorkflowReminderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>
  >;

  /**
   * Create a WorkflowReminder.
   * @param {WorkflowReminderCreateArgs} args - Arguments to create a WorkflowReminder.
   * @example
   * // Create one WorkflowReminder
   * const WorkflowReminder = await prisma.workflowReminder.create({
   *   data: {
   *     // ... data to create a WorkflowReminder
   *   }
   * })
   *
   */
  create<T extends WorkflowReminderCreateArgs>(
    args: Prisma.SelectSubset<T, WorkflowReminderCreateArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowReminderClient<
    runtime.Types.Result.GetResult<Prisma.$WorkflowReminderPayload<ExtArgs>, T, "create", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many WorkflowReminders.
   * @param {WorkflowReminderCreateManyArgs} args - Arguments to create many WorkflowReminders.
   * @example
   * // Create many WorkflowReminders
   * const workflowReminder = await prisma.workflowReminder.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends WorkflowReminderCreateManyArgs>(
    args?: Prisma.SelectSubset<T, WorkflowReminderCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many WorkflowReminders and returns the data saved in the database.
   * @param {WorkflowReminderCreateManyAndReturnArgs} args - Arguments to create many WorkflowReminders.
   * @example
   * // Create many WorkflowReminders
   * const workflowReminder = await prisma.workflowReminder.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many WorkflowReminders and only return the `id`
   * const workflowReminderWithIdOnly = await prisma.workflowReminder.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends WorkflowReminderCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, WorkflowReminderCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowReminderPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a WorkflowReminder.
   * @param {WorkflowReminderDeleteArgs} args - Arguments to delete one WorkflowReminder.
   * @example
   * // Delete one WorkflowReminder
   * const WorkflowReminder = await prisma.workflowReminder.delete({
   *   where: {
   *     // ... filter to delete one WorkflowReminder
   *   }
   * })
   *
   */
  delete<T extends WorkflowReminderDeleteArgs>(
    args: Prisma.SelectSubset<T, WorkflowReminderDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowReminderClient<
    runtime.Types.Result.GetResult<Prisma.$WorkflowReminderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one WorkflowReminder.
   * @param {WorkflowReminderUpdateArgs} args - Arguments to update one WorkflowReminder.
   * @example
   * // Update one WorkflowReminder
   * const workflowReminder = await prisma.workflowReminder.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends WorkflowReminderUpdateArgs>(
    args: Prisma.SelectSubset<T, WorkflowReminderUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowReminderClient<
    runtime.Types.Result.GetResult<Prisma.$WorkflowReminderPayload<ExtArgs>, T, "update", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more WorkflowReminders.
   * @param {WorkflowReminderDeleteManyArgs} args - Arguments to filter WorkflowReminders to delete.
   * @example
   * // Delete a few WorkflowReminders
   * const { count } = await prisma.workflowReminder.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends WorkflowReminderDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, WorkflowReminderDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more WorkflowReminders.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowReminderUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many WorkflowReminders
   * const workflowReminder = await prisma.workflowReminder.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends WorkflowReminderUpdateManyArgs>(
    args: Prisma.SelectSubset<T, WorkflowReminderUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more WorkflowReminders and returns the data updated in the database.
   * @param {WorkflowReminderUpdateManyAndReturnArgs} args - Arguments to update many WorkflowReminders.
   * @example
   * // Update many WorkflowReminders
   * const workflowReminder = await prisma.workflowReminder.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more WorkflowReminders and only return the `id`
   * const workflowReminderWithIdOnly = await prisma.workflowReminder.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends WorkflowReminderUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, WorkflowReminderUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowReminderPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one WorkflowReminder.
   * @param {WorkflowReminderUpsertArgs} args - Arguments to update or create a WorkflowReminder.
   * @example
   * // Update or create a WorkflowReminder
   * const workflowReminder = await prisma.workflowReminder.upsert({
   *   create: {
   *     // ... data to create a WorkflowReminder
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the WorkflowReminder we want to update
   *   }
   * })
   */
  upsert<T extends WorkflowReminderUpsertArgs>(
    args: Prisma.SelectSubset<T, WorkflowReminderUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowReminderClient<
    runtime.Types.Result.GetResult<Prisma.$WorkflowReminderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of WorkflowReminders.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowReminderCountArgs} args - Arguments to filter WorkflowReminders to count.
   * @example
   * // Count the number of WorkflowReminders
   * const count = await prisma.workflowReminder.count({
   *   where: {
   *     // ... the filter for the WorkflowReminders we want to count
   *   }
   * })
   **/
  count<T extends WorkflowReminderCountArgs>(
    args?: Prisma.Subset<T, WorkflowReminderCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], WorkflowReminderCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a WorkflowReminder.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowReminderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends WorkflowReminderAggregateArgs>(
    args: Prisma.Subset<T, WorkflowReminderAggregateArgs>
  ): Prisma.PrismaPromise<GetWorkflowReminderAggregateType<T>>;

  /**
   * Group by WorkflowReminder.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowReminderGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends WorkflowReminderGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: WorkflowReminderGroupByArgs["orderBy"] }
      : { orderBy?: WorkflowReminderGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, WorkflowReminderGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetWorkflowReminderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the WorkflowReminder model
   */
  readonly fields: WorkflowReminderFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for WorkflowReminder.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__WorkflowReminderClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  booking<T extends Prisma.WorkflowReminder$bookingArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.WorkflowReminder$bookingArgs<ExtArgs>>
  ): Prisma.Prisma__BookingClient<
    runtime.Types.Result.GetResult<
      Prisma.$BookingPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  workflowStep<T extends Prisma.WorkflowReminder$workflowStepArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.WorkflowReminder$workflowStepArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowStepClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowStepPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the WorkflowReminder model
 */
export interface WorkflowReminderFieldRefs {
  readonly id: Prisma.FieldRef<"WorkflowReminder", "Int">;
  readonly uuid: Prisma.FieldRef<"WorkflowReminder", "String">;
  readonly bookingUid: Prisma.FieldRef<"WorkflowReminder", "String">;
  readonly method: Prisma.FieldRef<"WorkflowReminder", "WorkflowMethods">;
  readonly scheduledDate: Prisma.FieldRef<"WorkflowReminder", "DateTime">;
  readonly referenceId: Prisma.FieldRef<"WorkflowReminder", "String">;
  readonly scheduled: Prisma.FieldRef<"WorkflowReminder", "Boolean">;
  readonly workflowStepId: Prisma.FieldRef<"WorkflowReminder", "Int">;
  readonly cancelled: Prisma.FieldRef<"WorkflowReminder", "Boolean">;
  readonly seatReferenceId: Prisma.FieldRef<"WorkflowReminder", "String">;
  readonly isMandatoryReminder: Prisma.FieldRef<"WorkflowReminder", "Boolean">;
  readonly retryCount: Prisma.FieldRef<"WorkflowReminder", "Int">;
}

// Custom InputTypes
/**
 * WorkflowReminder findUnique
 */
export type WorkflowReminderFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowReminder
   */
  select?: Prisma.WorkflowReminderSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowReminder
   */
  omit?: Prisma.WorkflowReminderOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowReminderInclude<ExtArgs> | null;
  /**
   * Filter, which WorkflowReminder to fetch.
   */
  where: Prisma.WorkflowReminderWhereUniqueInput;
};

/**
 * WorkflowReminder findUniqueOrThrow
 */
export type WorkflowReminderFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowReminder
   */
  select?: Prisma.WorkflowReminderSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowReminder
   */
  omit?: Prisma.WorkflowReminderOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowReminderInclude<ExtArgs> | null;
  /**
   * Filter, which WorkflowReminder to fetch.
   */
  where: Prisma.WorkflowReminderWhereUniqueInput;
};

/**
 * WorkflowReminder findFirst
 */
export type WorkflowReminderFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowReminder
   */
  select?: Prisma.WorkflowReminderSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowReminder
   */
  omit?: Prisma.WorkflowReminderOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowReminderInclude<ExtArgs> | null;
  /**
   * Filter, which WorkflowReminder to fetch.
   */
  where?: Prisma.WorkflowReminderWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WorkflowReminders to fetch.
   */
  orderBy?:
    | Prisma.WorkflowReminderOrderByWithRelationInput
    | Prisma.WorkflowReminderOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for WorkflowReminders.
   */
  cursor?: Prisma.WorkflowReminderWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` WorkflowReminders from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WorkflowReminders.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of WorkflowReminders.
   */
  distinct?: Prisma.WorkflowReminderScalarFieldEnum | Prisma.WorkflowReminderScalarFieldEnum[];
};

/**
 * WorkflowReminder findFirstOrThrow
 */
export type WorkflowReminderFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowReminder
   */
  select?: Prisma.WorkflowReminderSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowReminder
   */
  omit?: Prisma.WorkflowReminderOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowReminderInclude<ExtArgs> | null;
  /**
   * Filter, which WorkflowReminder to fetch.
   */
  where?: Prisma.WorkflowReminderWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WorkflowReminders to fetch.
   */
  orderBy?:
    | Prisma.WorkflowReminderOrderByWithRelationInput
    | Prisma.WorkflowReminderOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for WorkflowReminders.
   */
  cursor?: Prisma.WorkflowReminderWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` WorkflowReminders from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WorkflowReminders.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of WorkflowReminders.
   */
  distinct?: Prisma.WorkflowReminderScalarFieldEnum | Prisma.WorkflowReminderScalarFieldEnum[];
};

/**
 * WorkflowReminder findMany
 */
export type WorkflowReminderFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowReminder
   */
  select?: Prisma.WorkflowReminderSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowReminder
   */
  omit?: Prisma.WorkflowReminderOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowReminderInclude<ExtArgs> | null;
  /**
   * Filter, which WorkflowReminders to fetch.
   */
  where?: Prisma.WorkflowReminderWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WorkflowReminders to fetch.
   */
  orderBy?:
    | Prisma.WorkflowReminderOrderByWithRelationInput
    | Prisma.WorkflowReminderOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing WorkflowReminders.
   */
  cursor?: Prisma.WorkflowReminderWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` WorkflowReminders from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WorkflowReminders.
   */
  skip?: number;
  distinct?: Prisma.WorkflowReminderScalarFieldEnum | Prisma.WorkflowReminderScalarFieldEnum[];
};

/**
 * WorkflowReminder create
 */
export type WorkflowReminderCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowReminder
   */
  select?: Prisma.WorkflowReminderSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowReminder
   */
  omit?: Prisma.WorkflowReminderOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowReminderInclude<ExtArgs> | null;
  /**
   * The data needed to create a WorkflowReminder.
   */
  data: Prisma.XOR<Prisma.WorkflowReminderCreateInput, Prisma.WorkflowReminderUncheckedCreateInput>;
};

/**
 * WorkflowReminder createMany
 */
export type WorkflowReminderCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many WorkflowReminders.
   */
  data: Prisma.WorkflowReminderCreateManyInput | Prisma.WorkflowReminderCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * WorkflowReminder createManyAndReturn
 */
export type WorkflowReminderCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowReminder
   */
  select?: Prisma.WorkflowReminderSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowReminder
   */
  omit?: Prisma.WorkflowReminderOmit<ExtArgs> | null;
  /**
   * The data used to create many WorkflowReminders.
   */
  data: Prisma.WorkflowReminderCreateManyInput | Prisma.WorkflowReminderCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowReminderIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * WorkflowReminder update
 */
export type WorkflowReminderUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowReminder
   */
  select?: Prisma.WorkflowReminderSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowReminder
   */
  omit?: Prisma.WorkflowReminderOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowReminderInclude<ExtArgs> | null;
  /**
   * The data needed to update a WorkflowReminder.
   */
  data: Prisma.XOR<Prisma.WorkflowReminderUpdateInput, Prisma.WorkflowReminderUncheckedUpdateInput>;
  /**
   * Choose, which WorkflowReminder to update.
   */
  where: Prisma.WorkflowReminderWhereUniqueInput;
};

/**
 * WorkflowReminder updateMany
 */
export type WorkflowReminderUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update WorkflowReminders.
   */
  data: Prisma.XOR<
    Prisma.WorkflowReminderUpdateManyMutationInput,
    Prisma.WorkflowReminderUncheckedUpdateManyInput
  >;
  /**
   * Filter which WorkflowReminders to update
   */
  where?: Prisma.WorkflowReminderWhereInput;
  /**
   * Limit how many WorkflowReminders to update.
   */
  limit?: number;
};

/**
 * WorkflowReminder updateManyAndReturn
 */
export type WorkflowReminderUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowReminder
   */
  select?: Prisma.WorkflowReminderSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowReminder
   */
  omit?: Prisma.WorkflowReminderOmit<ExtArgs> | null;
  /**
   * The data used to update WorkflowReminders.
   */
  data: Prisma.XOR<
    Prisma.WorkflowReminderUpdateManyMutationInput,
    Prisma.WorkflowReminderUncheckedUpdateManyInput
  >;
  /**
   * Filter which WorkflowReminders to update
   */
  where?: Prisma.WorkflowReminderWhereInput;
  /**
   * Limit how many WorkflowReminders to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowReminderIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * WorkflowReminder upsert
 */
export type WorkflowReminderUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowReminder
   */
  select?: Prisma.WorkflowReminderSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowReminder
   */
  omit?: Prisma.WorkflowReminderOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowReminderInclude<ExtArgs> | null;
  /**
   * The filter to search for the WorkflowReminder to update in case it exists.
   */
  where: Prisma.WorkflowReminderWhereUniqueInput;
  /**
   * In case the WorkflowReminder found by the `where` argument doesn't exist, create a new WorkflowReminder with this data.
   */
  create: Prisma.XOR<Prisma.WorkflowReminderCreateInput, Prisma.WorkflowReminderUncheckedCreateInput>;
  /**
   * In case the WorkflowReminder was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.WorkflowReminderUpdateInput, Prisma.WorkflowReminderUncheckedUpdateInput>;
};

/**
 * WorkflowReminder delete
 */
export type WorkflowReminderDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowReminder
   */
  select?: Prisma.WorkflowReminderSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowReminder
   */
  omit?: Prisma.WorkflowReminderOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowReminderInclude<ExtArgs> | null;
  /**
   * Filter which WorkflowReminder to delete.
   */
  where: Prisma.WorkflowReminderWhereUniqueInput;
};

/**
 * WorkflowReminder deleteMany
 */
export type WorkflowReminderDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which WorkflowReminders to delete
   */
  where?: Prisma.WorkflowReminderWhereInput;
  /**
   * Limit how many WorkflowReminders to delete.
   */
  limit?: number;
};

/**
 * WorkflowReminder.booking
 */
export type WorkflowReminder$bookingArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Booking
   */
  select?: Prisma.BookingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Booking
   */
  omit?: Prisma.BookingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BookingInclude<ExtArgs> | null;
  where?: Prisma.BookingWhereInput;
};

/**
 * WorkflowReminder.workflowStep
 */
export type WorkflowReminder$workflowStepArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowStep
   */
  select?: Prisma.WorkflowStepSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowStep
   */
  omit?: Prisma.WorkflowStepOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowStepInclude<ExtArgs> | null;
  where?: Prisma.WorkflowStepWhereInput;
};

/**
 * WorkflowReminder without action
 */
export type WorkflowReminderDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowReminder
   */
  select?: Prisma.WorkflowReminderSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowReminder
   */
  omit?: Prisma.WorkflowReminderOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowReminderInclude<ExtArgs> | null;
};
