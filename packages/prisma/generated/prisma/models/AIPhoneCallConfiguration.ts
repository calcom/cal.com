/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `AIPhoneCallConfiguration` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model AIPhoneCallConfiguration
 *
 */
export type AIPhoneCallConfigurationModel =
  runtime.Types.Result.DefaultSelection<Prisma.$AIPhoneCallConfigurationPayload>;

export type AggregateAIPhoneCallConfiguration = {
  _count: AIPhoneCallConfigurationCountAggregateOutputType | null;
  _avg: AIPhoneCallConfigurationAvgAggregateOutputType | null;
  _sum: AIPhoneCallConfigurationSumAggregateOutputType | null;
  _min: AIPhoneCallConfigurationMinAggregateOutputType | null;
  _max: AIPhoneCallConfigurationMaxAggregateOutputType | null;
};

export type AIPhoneCallConfigurationAvgAggregateOutputType = {
  id: number | null;
  eventTypeId: number | null;
};

export type AIPhoneCallConfigurationSumAggregateOutputType = {
  id: number | null;
  eventTypeId: number | null;
};

export type AIPhoneCallConfigurationMinAggregateOutputType = {
  id: number | null;
  eventTypeId: number | null;
  templateType: string | null;
  schedulerName: string | null;
  generalPrompt: string | null;
  yourPhoneNumber: string | null;
  numberToCall: string | null;
  guestName: string | null;
  guestEmail: string | null;
  guestCompany: string | null;
  enabled: boolean | null;
  beginMessage: string | null;
  llmId: string | null;
};

export type AIPhoneCallConfigurationMaxAggregateOutputType = {
  id: number | null;
  eventTypeId: number | null;
  templateType: string | null;
  schedulerName: string | null;
  generalPrompt: string | null;
  yourPhoneNumber: string | null;
  numberToCall: string | null;
  guestName: string | null;
  guestEmail: string | null;
  guestCompany: string | null;
  enabled: boolean | null;
  beginMessage: string | null;
  llmId: string | null;
};

export type AIPhoneCallConfigurationCountAggregateOutputType = {
  id: number;
  eventTypeId: number;
  templateType: number;
  schedulerName: number;
  generalPrompt: number;
  yourPhoneNumber: number;
  numberToCall: number;
  guestName: number;
  guestEmail: number;
  guestCompany: number;
  enabled: number;
  beginMessage: number;
  llmId: number;
  _all: number;
};

export type AIPhoneCallConfigurationAvgAggregateInputType = {
  id?: true;
  eventTypeId?: true;
};

export type AIPhoneCallConfigurationSumAggregateInputType = {
  id?: true;
  eventTypeId?: true;
};

export type AIPhoneCallConfigurationMinAggregateInputType = {
  id?: true;
  eventTypeId?: true;
  templateType?: true;
  schedulerName?: true;
  generalPrompt?: true;
  yourPhoneNumber?: true;
  numberToCall?: true;
  guestName?: true;
  guestEmail?: true;
  guestCompany?: true;
  enabled?: true;
  beginMessage?: true;
  llmId?: true;
};

export type AIPhoneCallConfigurationMaxAggregateInputType = {
  id?: true;
  eventTypeId?: true;
  templateType?: true;
  schedulerName?: true;
  generalPrompt?: true;
  yourPhoneNumber?: true;
  numberToCall?: true;
  guestName?: true;
  guestEmail?: true;
  guestCompany?: true;
  enabled?: true;
  beginMessage?: true;
  llmId?: true;
};

export type AIPhoneCallConfigurationCountAggregateInputType = {
  id?: true;
  eventTypeId?: true;
  templateType?: true;
  schedulerName?: true;
  generalPrompt?: true;
  yourPhoneNumber?: true;
  numberToCall?: true;
  guestName?: true;
  guestEmail?: true;
  guestCompany?: true;
  enabled?: true;
  beginMessage?: true;
  llmId?: true;
  _all?: true;
};

export type AIPhoneCallConfigurationAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which AIPhoneCallConfiguration to aggregate.
   */
  where?: Prisma.AIPhoneCallConfigurationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AIPhoneCallConfigurations to fetch.
   */
  orderBy?:
    | Prisma.AIPhoneCallConfigurationOrderByWithRelationInput
    | Prisma.AIPhoneCallConfigurationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.AIPhoneCallConfigurationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AIPhoneCallConfigurations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AIPhoneCallConfigurations.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned AIPhoneCallConfigurations
   **/
  _count?: true | AIPhoneCallConfigurationCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: AIPhoneCallConfigurationAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: AIPhoneCallConfigurationSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: AIPhoneCallConfigurationMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: AIPhoneCallConfigurationMaxAggregateInputType;
};

export type GetAIPhoneCallConfigurationAggregateType<T extends AIPhoneCallConfigurationAggregateArgs> = {
  [P in keyof T & keyof AggregateAIPhoneCallConfiguration]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAIPhoneCallConfiguration[P]>
    : Prisma.GetScalarType<T[P], AggregateAIPhoneCallConfiguration[P]>;
};

export type AIPhoneCallConfigurationGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.AIPhoneCallConfigurationWhereInput;
  orderBy?:
    | Prisma.AIPhoneCallConfigurationOrderByWithAggregationInput
    | Prisma.AIPhoneCallConfigurationOrderByWithAggregationInput[];
  by: Prisma.AIPhoneCallConfigurationScalarFieldEnum[] | Prisma.AIPhoneCallConfigurationScalarFieldEnum;
  having?: Prisma.AIPhoneCallConfigurationScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: AIPhoneCallConfigurationCountAggregateInputType | true;
  _avg?: AIPhoneCallConfigurationAvgAggregateInputType;
  _sum?: AIPhoneCallConfigurationSumAggregateInputType;
  _min?: AIPhoneCallConfigurationMinAggregateInputType;
  _max?: AIPhoneCallConfigurationMaxAggregateInputType;
};

export type AIPhoneCallConfigurationGroupByOutputType = {
  id: number;
  eventTypeId: number;
  templateType: string;
  schedulerName: string | null;
  generalPrompt: string | null;
  yourPhoneNumber: string;
  numberToCall: string;
  guestName: string | null;
  guestEmail: string | null;
  guestCompany: string | null;
  enabled: boolean;
  beginMessage: string | null;
  llmId: string | null;
  _count: AIPhoneCallConfigurationCountAggregateOutputType | null;
  _avg: AIPhoneCallConfigurationAvgAggregateOutputType | null;
  _sum: AIPhoneCallConfigurationSumAggregateOutputType | null;
  _min: AIPhoneCallConfigurationMinAggregateOutputType | null;
  _max: AIPhoneCallConfigurationMaxAggregateOutputType | null;
};

type GetAIPhoneCallConfigurationGroupByPayload<T extends AIPhoneCallConfigurationGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<AIPhoneCallConfigurationGroupByOutputType, T["by"]> & {
        [P in keyof T & keyof AIPhoneCallConfigurationGroupByOutputType]: P extends "_count"
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], AIPhoneCallConfigurationGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], AIPhoneCallConfigurationGroupByOutputType[P]>;
      }
    >
  >;

export type AIPhoneCallConfigurationWhereInput = {
  AND?: Prisma.AIPhoneCallConfigurationWhereInput | Prisma.AIPhoneCallConfigurationWhereInput[];
  OR?: Prisma.AIPhoneCallConfigurationWhereInput[];
  NOT?: Prisma.AIPhoneCallConfigurationWhereInput | Prisma.AIPhoneCallConfigurationWhereInput[];
  id?: Prisma.IntFilter<"AIPhoneCallConfiguration"> | number;
  eventTypeId?: Prisma.IntFilter<"AIPhoneCallConfiguration"> | number;
  templateType?: Prisma.StringFilter<"AIPhoneCallConfiguration"> | string;
  schedulerName?: Prisma.StringNullableFilter<"AIPhoneCallConfiguration"> | string | null;
  generalPrompt?: Prisma.StringNullableFilter<"AIPhoneCallConfiguration"> | string | null;
  yourPhoneNumber?: Prisma.StringFilter<"AIPhoneCallConfiguration"> | string;
  numberToCall?: Prisma.StringFilter<"AIPhoneCallConfiguration"> | string;
  guestName?: Prisma.StringNullableFilter<"AIPhoneCallConfiguration"> | string | null;
  guestEmail?: Prisma.StringNullableFilter<"AIPhoneCallConfiguration"> | string | null;
  guestCompany?: Prisma.StringNullableFilter<"AIPhoneCallConfiguration"> | string | null;
  enabled?: Prisma.BoolFilter<"AIPhoneCallConfiguration"> | boolean;
  beginMessage?: Prisma.StringNullableFilter<"AIPhoneCallConfiguration"> | string | null;
  llmId?: Prisma.StringNullableFilter<"AIPhoneCallConfiguration"> | string | null;
  eventType?: Prisma.XOR<Prisma.EventTypeScalarRelationFilter, Prisma.EventTypeWhereInput>;
};

export type AIPhoneCallConfigurationOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  templateType?: Prisma.SortOrder;
  schedulerName?: Prisma.SortOrderInput | Prisma.SortOrder;
  generalPrompt?: Prisma.SortOrderInput | Prisma.SortOrder;
  yourPhoneNumber?: Prisma.SortOrder;
  numberToCall?: Prisma.SortOrder;
  guestName?: Prisma.SortOrderInput | Prisma.SortOrder;
  guestEmail?: Prisma.SortOrderInput | Prisma.SortOrder;
  guestCompany?: Prisma.SortOrderInput | Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  beginMessage?: Prisma.SortOrderInput | Prisma.SortOrder;
  llmId?: Prisma.SortOrderInput | Prisma.SortOrder;
  eventType?: Prisma.EventTypeOrderByWithRelationInput;
};

export type AIPhoneCallConfigurationWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    eventTypeId?: number;
    AND?: Prisma.AIPhoneCallConfigurationWhereInput | Prisma.AIPhoneCallConfigurationWhereInput[];
    OR?: Prisma.AIPhoneCallConfigurationWhereInput[];
    NOT?: Prisma.AIPhoneCallConfigurationWhereInput | Prisma.AIPhoneCallConfigurationWhereInput[];
    templateType?: Prisma.StringFilter<"AIPhoneCallConfiguration"> | string;
    schedulerName?: Prisma.StringNullableFilter<"AIPhoneCallConfiguration"> | string | null;
    generalPrompt?: Prisma.StringNullableFilter<"AIPhoneCallConfiguration"> | string | null;
    yourPhoneNumber?: Prisma.StringFilter<"AIPhoneCallConfiguration"> | string;
    numberToCall?: Prisma.StringFilter<"AIPhoneCallConfiguration"> | string;
    guestName?: Prisma.StringNullableFilter<"AIPhoneCallConfiguration"> | string | null;
    guestEmail?: Prisma.StringNullableFilter<"AIPhoneCallConfiguration"> | string | null;
    guestCompany?: Prisma.StringNullableFilter<"AIPhoneCallConfiguration"> | string | null;
    enabled?: Prisma.BoolFilter<"AIPhoneCallConfiguration"> | boolean;
    beginMessage?: Prisma.StringNullableFilter<"AIPhoneCallConfiguration"> | string | null;
    llmId?: Prisma.StringNullableFilter<"AIPhoneCallConfiguration"> | string | null;
    eventType?: Prisma.XOR<Prisma.EventTypeScalarRelationFilter, Prisma.EventTypeWhereInput>;
  },
  "id" | "eventTypeId"
>;

export type AIPhoneCallConfigurationOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  templateType?: Prisma.SortOrder;
  schedulerName?: Prisma.SortOrderInput | Prisma.SortOrder;
  generalPrompt?: Prisma.SortOrderInput | Prisma.SortOrder;
  yourPhoneNumber?: Prisma.SortOrder;
  numberToCall?: Prisma.SortOrder;
  guestName?: Prisma.SortOrderInput | Prisma.SortOrder;
  guestEmail?: Prisma.SortOrderInput | Prisma.SortOrder;
  guestCompany?: Prisma.SortOrderInput | Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  beginMessage?: Prisma.SortOrderInput | Prisma.SortOrder;
  llmId?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.AIPhoneCallConfigurationCountOrderByAggregateInput;
  _avg?: Prisma.AIPhoneCallConfigurationAvgOrderByAggregateInput;
  _max?: Prisma.AIPhoneCallConfigurationMaxOrderByAggregateInput;
  _min?: Prisma.AIPhoneCallConfigurationMinOrderByAggregateInput;
  _sum?: Prisma.AIPhoneCallConfigurationSumOrderByAggregateInput;
};

export type AIPhoneCallConfigurationScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.AIPhoneCallConfigurationScalarWhereWithAggregatesInput
    | Prisma.AIPhoneCallConfigurationScalarWhereWithAggregatesInput[];
  OR?: Prisma.AIPhoneCallConfigurationScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.AIPhoneCallConfigurationScalarWhereWithAggregatesInput
    | Prisma.AIPhoneCallConfigurationScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"AIPhoneCallConfiguration"> | number;
  eventTypeId?: Prisma.IntWithAggregatesFilter<"AIPhoneCallConfiguration"> | number;
  templateType?: Prisma.StringWithAggregatesFilter<"AIPhoneCallConfiguration"> | string;
  schedulerName?: Prisma.StringNullableWithAggregatesFilter<"AIPhoneCallConfiguration"> | string | null;
  generalPrompt?: Prisma.StringNullableWithAggregatesFilter<"AIPhoneCallConfiguration"> | string | null;
  yourPhoneNumber?: Prisma.StringWithAggregatesFilter<"AIPhoneCallConfiguration"> | string;
  numberToCall?: Prisma.StringWithAggregatesFilter<"AIPhoneCallConfiguration"> | string;
  guestName?: Prisma.StringNullableWithAggregatesFilter<"AIPhoneCallConfiguration"> | string | null;
  guestEmail?: Prisma.StringNullableWithAggregatesFilter<"AIPhoneCallConfiguration"> | string | null;
  guestCompany?: Prisma.StringNullableWithAggregatesFilter<"AIPhoneCallConfiguration"> | string | null;
  enabled?: Prisma.BoolWithAggregatesFilter<"AIPhoneCallConfiguration"> | boolean;
  beginMessage?: Prisma.StringNullableWithAggregatesFilter<"AIPhoneCallConfiguration"> | string | null;
  llmId?: Prisma.StringNullableWithAggregatesFilter<"AIPhoneCallConfiguration"> | string | null;
};

export type AIPhoneCallConfigurationCreateInput = {
  templateType?: string;
  schedulerName?: string | null;
  generalPrompt?: string | null;
  yourPhoneNumber: string;
  numberToCall: string;
  guestName?: string | null;
  guestEmail?: string | null;
  guestCompany?: string | null;
  enabled?: boolean;
  beginMessage?: string | null;
  llmId?: string | null;
  eventType: Prisma.EventTypeCreateNestedOneWithoutAiPhoneCallConfigInput;
};

export type AIPhoneCallConfigurationUncheckedCreateInput = {
  id?: number;
  eventTypeId: number;
  templateType?: string;
  schedulerName?: string | null;
  generalPrompt?: string | null;
  yourPhoneNumber: string;
  numberToCall: string;
  guestName?: string | null;
  guestEmail?: string | null;
  guestCompany?: string | null;
  enabled?: boolean;
  beginMessage?: string | null;
  llmId?: string | null;
};

export type AIPhoneCallConfigurationUpdateInput = {
  templateType?: Prisma.StringFieldUpdateOperationsInput | string;
  schedulerName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  generalPrompt?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  yourPhoneNumber?: Prisma.StringFieldUpdateOperationsInput | string;
  numberToCall?: Prisma.StringFieldUpdateOperationsInput | string;
  guestName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  guestEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  guestCompany?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  beginMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  llmId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  eventType?: Prisma.EventTypeUpdateOneRequiredWithoutAiPhoneCallConfigNestedInput;
};

export type AIPhoneCallConfigurationUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  templateType?: Prisma.StringFieldUpdateOperationsInput | string;
  schedulerName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  generalPrompt?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  yourPhoneNumber?: Prisma.StringFieldUpdateOperationsInput | string;
  numberToCall?: Prisma.StringFieldUpdateOperationsInput | string;
  guestName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  guestEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  guestCompany?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  beginMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  llmId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type AIPhoneCallConfigurationCreateManyInput = {
  id?: number;
  eventTypeId: number;
  templateType?: string;
  schedulerName?: string | null;
  generalPrompt?: string | null;
  yourPhoneNumber: string;
  numberToCall: string;
  guestName?: string | null;
  guestEmail?: string | null;
  guestCompany?: string | null;
  enabled?: boolean;
  beginMessage?: string | null;
  llmId?: string | null;
};

export type AIPhoneCallConfigurationUpdateManyMutationInput = {
  templateType?: Prisma.StringFieldUpdateOperationsInput | string;
  schedulerName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  generalPrompt?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  yourPhoneNumber?: Prisma.StringFieldUpdateOperationsInput | string;
  numberToCall?: Prisma.StringFieldUpdateOperationsInput | string;
  guestName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  guestEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  guestCompany?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  beginMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  llmId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type AIPhoneCallConfigurationUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  templateType?: Prisma.StringFieldUpdateOperationsInput | string;
  schedulerName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  generalPrompt?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  yourPhoneNumber?: Prisma.StringFieldUpdateOperationsInput | string;
  numberToCall?: Prisma.StringFieldUpdateOperationsInput | string;
  guestName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  guestEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  guestCompany?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  beginMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  llmId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type AIPhoneCallConfigurationNullableScalarRelationFilter = {
  is?: Prisma.AIPhoneCallConfigurationWhereInput | null;
  isNot?: Prisma.AIPhoneCallConfigurationWhereInput | null;
};

export type AIPhoneCallConfigurationCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  templateType?: Prisma.SortOrder;
  schedulerName?: Prisma.SortOrder;
  generalPrompt?: Prisma.SortOrder;
  yourPhoneNumber?: Prisma.SortOrder;
  numberToCall?: Prisma.SortOrder;
  guestName?: Prisma.SortOrder;
  guestEmail?: Prisma.SortOrder;
  guestCompany?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  beginMessage?: Prisma.SortOrder;
  llmId?: Prisma.SortOrder;
};

export type AIPhoneCallConfigurationAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
};

export type AIPhoneCallConfigurationMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  templateType?: Prisma.SortOrder;
  schedulerName?: Prisma.SortOrder;
  generalPrompt?: Prisma.SortOrder;
  yourPhoneNumber?: Prisma.SortOrder;
  numberToCall?: Prisma.SortOrder;
  guestName?: Prisma.SortOrder;
  guestEmail?: Prisma.SortOrder;
  guestCompany?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  beginMessage?: Prisma.SortOrder;
  llmId?: Prisma.SortOrder;
};

export type AIPhoneCallConfigurationMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  templateType?: Prisma.SortOrder;
  schedulerName?: Prisma.SortOrder;
  generalPrompt?: Prisma.SortOrder;
  yourPhoneNumber?: Prisma.SortOrder;
  numberToCall?: Prisma.SortOrder;
  guestName?: Prisma.SortOrder;
  guestEmail?: Prisma.SortOrder;
  guestCompany?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  beginMessage?: Prisma.SortOrder;
  llmId?: Prisma.SortOrder;
};

export type AIPhoneCallConfigurationSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
};

export type AIPhoneCallConfigurationCreateNestedOneWithoutEventTypeInput = {
  create?: Prisma.XOR<
    Prisma.AIPhoneCallConfigurationCreateWithoutEventTypeInput,
    Prisma.AIPhoneCallConfigurationUncheckedCreateWithoutEventTypeInput
  >;
  connectOrCreate?: Prisma.AIPhoneCallConfigurationCreateOrConnectWithoutEventTypeInput;
  connect?: Prisma.AIPhoneCallConfigurationWhereUniqueInput;
};

export type AIPhoneCallConfigurationUncheckedCreateNestedOneWithoutEventTypeInput = {
  create?: Prisma.XOR<
    Prisma.AIPhoneCallConfigurationCreateWithoutEventTypeInput,
    Prisma.AIPhoneCallConfigurationUncheckedCreateWithoutEventTypeInput
  >;
  connectOrCreate?: Prisma.AIPhoneCallConfigurationCreateOrConnectWithoutEventTypeInput;
  connect?: Prisma.AIPhoneCallConfigurationWhereUniqueInput;
};

export type AIPhoneCallConfigurationUpdateOneWithoutEventTypeNestedInput = {
  create?: Prisma.XOR<
    Prisma.AIPhoneCallConfigurationCreateWithoutEventTypeInput,
    Prisma.AIPhoneCallConfigurationUncheckedCreateWithoutEventTypeInput
  >;
  connectOrCreate?: Prisma.AIPhoneCallConfigurationCreateOrConnectWithoutEventTypeInput;
  upsert?: Prisma.AIPhoneCallConfigurationUpsertWithoutEventTypeInput;
  disconnect?: Prisma.AIPhoneCallConfigurationWhereInput | boolean;
  delete?: Prisma.AIPhoneCallConfigurationWhereInput | boolean;
  connect?: Prisma.AIPhoneCallConfigurationWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.AIPhoneCallConfigurationUpdateToOneWithWhereWithoutEventTypeInput,
      Prisma.AIPhoneCallConfigurationUpdateWithoutEventTypeInput
    >,
    Prisma.AIPhoneCallConfigurationUncheckedUpdateWithoutEventTypeInput
  >;
};

export type AIPhoneCallConfigurationUncheckedUpdateOneWithoutEventTypeNestedInput = {
  create?: Prisma.XOR<
    Prisma.AIPhoneCallConfigurationCreateWithoutEventTypeInput,
    Prisma.AIPhoneCallConfigurationUncheckedCreateWithoutEventTypeInput
  >;
  connectOrCreate?: Prisma.AIPhoneCallConfigurationCreateOrConnectWithoutEventTypeInput;
  upsert?: Prisma.AIPhoneCallConfigurationUpsertWithoutEventTypeInput;
  disconnect?: Prisma.AIPhoneCallConfigurationWhereInput | boolean;
  delete?: Prisma.AIPhoneCallConfigurationWhereInput | boolean;
  connect?: Prisma.AIPhoneCallConfigurationWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.AIPhoneCallConfigurationUpdateToOneWithWhereWithoutEventTypeInput,
      Prisma.AIPhoneCallConfigurationUpdateWithoutEventTypeInput
    >,
    Prisma.AIPhoneCallConfigurationUncheckedUpdateWithoutEventTypeInput
  >;
};

export type AIPhoneCallConfigurationCreateWithoutEventTypeInput = {
  templateType?: string;
  schedulerName?: string | null;
  generalPrompt?: string | null;
  yourPhoneNumber: string;
  numberToCall: string;
  guestName?: string | null;
  guestEmail?: string | null;
  guestCompany?: string | null;
  enabled?: boolean;
  beginMessage?: string | null;
  llmId?: string | null;
};

export type AIPhoneCallConfigurationUncheckedCreateWithoutEventTypeInput = {
  id?: number;
  templateType?: string;
  schedulerName?: string | null;
  generalPrompt?: string | null;
  yourPhoneNumber: string;
  numberToCall: string;
  guestName?: string | null;
  guestEmail?: string | null;
  guestCompany?: string | null;
  enabled?: boolean;
  beginMessage?: string | null;
  llmId?: string | null;
};

export type AIPhoneCallConfigurationCreateOrConnectWithoutEventTypeInput = {
  where: Prisma.AIPhoneCallConfigurationWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AIPhoneCallConfigurationCreateWithoutEventTypeInput,
    Prisma.AIPhoneCallConfigurationUncheckedCreateWithoutEventTypeInput
  >;
};

export type AIPhoneCallConfigurationUpsertWithoutEventTypeInput = {
  update: Prisma.XOR<
    Prisma.AIPhoneCallConfigurationUpdateWithoutEventTypeInput,
    Prisma.AIPhoneCallConfigurationUncheckedUpdateWithoutEventTypeInput
  >;
  create: Prisma.XOR<
    Prisma.AIPhoneCallConfigurationCreateWithoutEventTypeInput,
    Prisma.AIPhoneCallConfigurationUncheckedCreateWithoutEventTypeInput
  >;
  where?: Prisma.AIPhoneCallConfigurationWhereInput;
};

export type AIPhoneCallConfigurationUpdateToOneWithWhereWithoutEventTypeInput = {
  where?: Prisma.AIPhoneCallConfigurationWhereInput;
  data: Prisma.XOR<
    Prisma.AIPhoneCallConfigurationUpdateWithoutEventTypeInput,
    Prisma.AIPhoneCallConfigurationUncheckedUpdateWithoutEventTypeInput
  >;
};

export type AIPhoneCallConfigurationUpdateWithoutEventTypeInput = {
  templateType?: Prisma.StringFieldUpdateOperationsInput | string;
  schedulerName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  generalPrompt?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  yourPhoneNumber?: Prisma.StringFieldUpdateOperationsInput | string;
  numberToCall?: Prisma.StringFieldUpdateOperationsInput | string;
  guestName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  guestEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  guestCompany?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  beginMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  llmId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type AIPhoneCallConfigurationUncheckedUpdateWithoutEventTypeInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  templateType?: Prisma.StringFieldUpdateOperationsInput | string;
  schedulerName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  generalPrompt?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  yourPhoneNumber?: Prisma.StringFieldUpdateOperationsInput | string;
  numberToCall?: Prisma.StringFieldUpdateOperationsInput | string;
  guestName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  guestEmail?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  guestCompany?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  beginMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  llmId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type AIPhoneCallConfigurationSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    eventTypeId?: boolean;
    templateType?: boolean;
    schedulerName?: boolean;
    generalPrompt?: boolean;
    yourPhoneNumber?: boolean;
    numberToCall?: boolean;
    guestName?: boolean;
    guestEmail?: boolean;
    guestCompany?: boolean;
    enabled?: boolean;
    beginMessage?: boolean;
    llmId?: boolean;
    eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["aIPhoneCallConfiguration"]
>;

export type AIPhoneCallConfigurationSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    eventTypeId?: boolean;
    templateType?: boolean;
    schedulerName?: boolean;
    generalPrompt?: boolean;
    yourPhoneNumber?: boolean;
    numberToCall?: boolean;
    guestName?: boolean;
    guestEmail?: boolean;
    guestCompany?: boolean;
    enabled?: boolean;
    beginMessage?: boolean;
    llmId?: boolean;
    eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["aIPhoneCallConfiguration"]
>;

export type AIPhoneCallConfigurationSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    eventTypeId?: boolean;
    templateType?: boolean;
    schedulerName?: boolean;
    generalPrompt?: boolean;
    yourPhoneNumber?: boolean;
    numberToCall?: boolean;
    guestName?: boolean;
    guestEmail?: boolean;
    guestCompany?: boolean;
    enabled?: boolean;
    beginMessage?: boolean;
    llmId?: boolean;
    eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["aIPhoneCallConfiguration"]
>;

export type AIPhoneCallConfigurationSelectScalar = {
  id?: boolean;
  eventTypeId?: boolean;
  templateType?: boolean;
  schedulerName?: boolean;
  generalPrompt?: boolean;
  yourPhoneNumber?: boolean;
  numberToCall?: boolean;
  guestName?: boolean;
  guestEmail?: boolean;
  guestCompany?: boolean;
  enabled?: boolean;
  beginMessage?: boolean;
  llmId?: boolean;
};

export type AIPhoneCallConfigurationOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "eventTypeId"
  | "templateType"
  | "schedulerName"
  | "generalPrompt"
  | "yourPhoneNumber"
  | "numberToCall"
  | "guestName"
  | "guestEmail"
  | "guestCompany"
  | "enabled"
  | "beginMessage"
  | "llmId",
  ExtArgs["result"]["aIPhoneCallConfiguration"]
>;
export type AIPhoneCallConfigurationInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
};
export type AIPhoneCallConfigurationIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
};
export type AIPhoneCallConfigurationIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
};

export type $AIPhoneCallConfigurationPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "AIPhoneCallConfiguration";
  objects: {
    eventType: Prisma.$EventTypePayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      eventTypeId: number;
      templateType: string;
      schedulerName: string | null;
      generalPrompt: string | null;
      yourPhoneNumber: string;
      numberToCall: string;
      guestName: string | null;
      guestEmail: string | null;
      guestCompany: string | null;
      enabled: boolean;
      beginMessage: string | null;
      llmId: string | null;
    },
    ExtArgs["result"]["aIPhoneCallConfiguration"]
  >;
  composites: {};
};

export type AIPhoneCallConfigurationGetPayload<
  S extends boolean | null | undefined | AIPhoneCallConfigurationDefaultArgs
> = runtime.Types.Result.GetResult<Prisma.$AIPhoneCallConfigurationPayload, S>;

export type AIPhoneCallConfigurationCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<AIPhoneCallConfigurationFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: AIPhoneCallConfigurationCountAggregateInputType | true;
};

export interface AIPhoneCallConfigurationDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["AIPhoneCallConfiguration"];
    meta: { name: "AIPhoneCallConfiguration" };
  };
  /**
   * Find zero or one AIPhoneCallConfiguration that matches the filter.
   * @param {AIPhoneCallConfigurationFindUniqueArgs} args - Arguments to find a AIPhoneCallConfiguration
   * @example
   * // Get one AIPhoneCallConfiguration
   * const aIPhoneCallConfiguration = await prisma.aIPhoneCallConfiguration.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AIPhoneCallConfigurationFindUniqueArgs>(
    args: Prisma.SelectSubset<T, AIPhoneCallConfigurationFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__AIPhoneCallConfigurationClient<
    runtime.Types.Result.GetResult<
      Prisma.$AIPhoneCallConfigurationPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one AIPhoneCallConfiguration that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AIPhoneCallConfigurationFindUniqueOrThrowArgs} args - Arguments to find a AIPhoneCallConfiguration
   * @example
   * // Get one AIPhoneCallConfiguration
   * const aIPhoneCallConfiguration = await prisma.aIPhoneCallConfiguration.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AIPhoneCallConfigurationFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, AIPhoneCallConfigurationFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__AIPhoneCallConfigurationClient<
    runtime.Types.Result.GetResult<
      Prisma.$AIPhoneCallConfigurationPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first AIPhoneCallConfiguration that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AIPhoneCallConfigurationFindFirstArgs} args - Arguments to find a AIPhoneCallConfiguration
   * @example
   * // Get one AIPhoneCallConfiguration
   * const aIPhoneCallConfiguration = await prisma.aIPhoneCallConfiguration.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AIPhoneCallConfigurationFindFirstArgs>(
    args?: Prisma.SelectSubset<T, AIPhoneCallConfigurationFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__AIPhoneCallConfigurationClient<
    runtime.Types.Result.GetResult<
      Prisma.$AIPhoneCallConfigurationPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first AIPhoneCallConfiguration that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AIPhoneCallConfigurationFindFirstOrThrowArgs} args - Arguments to find a AIPhoneCallConfiguration
   * @example
   * // Get one AIPhoneCallConfiguration
   * const aIPhoneCallConfiguration = await prisma.aIPhoneCallConfiguration.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AIPhoneCallConfigurationFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, AIPhoneCallConfigurationFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__AIPhoneCallConfigurationClient<
    runtime.Types.Result.GetResult<
      Prisma.$AIPhoneCallConfigurationPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more AIPhoneCallConfigurations that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AIPhoneCallConfigurationFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all AIPhoneCallConfigurations
   * const aIPhoneCallConfigurations = await prisma.aIPhoneCallConfiguration.findMany()
   *
   * // Get first 10 AIPhoneCallConfigurations
   * const aIPhoneCallConfigurations = await prisma.aIPhoneCallConfiguration.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const aIPhoneCallConfigurationWithIdOnly = await prisma.aIPhoneCallConfiguration.findMany({ select: { id: true } })
   *
   */
  findMany<T extends AIPhoneCallConfigurationFindManyArgs>(
    args?: Prisma.SelectSubset<T, AIPhoneCallConfigurationFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AIPhoneCallConfigurationPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a AIPhoneCallConfiguration.
   * @param {AIPhoneCallConfigurationCreateArgs} args - Arguments to create a AIPhoneCallConfiguration.
   * @example
   * // Create one AIPhoneCallConfiguration
   * const AIPhoneCallConfiguration = await prisma.aIPhoneCallConfiguration.create({
   *   data: {
   *     // ... data to create a AIPhoneCallConfiguration
   *   }
   * })
   *
   */
  create<T extends AIPhoneCallConfigurationCreateArgs>(
    args: Prisma.SelectSubset<T, AIPhoneCallConfigurationCreateArgs<ExtArgs>>
  ): Prisma.Prisma__AIPhoneCallConfigurationClient<
    runtime.Types.Result.GetResult<
      Prisma.$AIPhoneCallConfigurationPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many AIPhoneCallConfigurations.
   * @param {AIPhoneCallConfigurationCreateManyArgs} args - Arguments to create many AIPhoneCallConfigurations.
   * @example
   * // Create many AIPhoneCallConfigurations
   * const aIPhoneCallConfiguration = await prisma.aIPhoneCallConfiguration.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends AIPhoneCallConfigurationCreateManyArgs>(
    args?: Prisma.SelectSubset<T, AIPhoneCallConfigurationCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many AIPhoneCallConfigurations and returns the data saved in the database.
   * @param {AIPhoneCallConfigurationCreateManyAndReturnArgs} args - Arguments to create many AIPhoneCallConfigurations.
   * @example
   * // Create many AIPhoneCallConfigurations
   * const aIPhoneCallConfiguration = await prisma.aIPhoneCallConfiguration.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many AIPhoneCallConfigurations and only return the `id`
   * const aIPhoneCallConfigurationWithIdOnly = await prisma.aIPhoneCallConfiguration.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends AIPhoneCallConfigurationCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, AIPhoneCallConfigurationCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AIPhoneCallConfigurationPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a AIPhoneCallConfiguration.
   * @param {AIPhoneCallConfigurationDeleteArgs} args - Arguments to delete one AIPhoneCallConfiguration.
   * @example
   * // Delete one AIPhoneCallConfiguration
   * const AIPhoneCallConfiguration = await prisma.aIPhoneCallConfiguration.delete({
   *   where: {
   *     // ... filter to delete one AIPhoneCallConfiguration
   *   }
   * })
   *
   */
  delete<T extends AIPhoneCallConfigurationDeleteArgs>(
    args: Prisma.SelectSubset<T, AIPhoneCallConfigurationDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__AIPhoneCallConfigurationClient<
    runtime.Types.Result.GetResult<
      Prisma.$AIPhoneCallConfigurationPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one AIPhoneCallConfiguration.
   * @param {AIPhoneCallConfigurationUpdateArgs} args - Arguments to update one AIPhoneCallConfiguration.
   * @example
   * // Update one AIPhoneCallConfiguration
   * const aIPhoneCallConfiguration = await prisma.aIPhoneCallConfiguration.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends AIPhoneCallConfigurationUpdateArgs>(
    args: Prisma.SelectSubset<T, AIPhoneCallConfigurationUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__AIPhoneCallConfigurationClient<
    runtime.Types.Result.GetResult<
      Prisma.$AIPhoneCallConfigurationPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more AIPhoneCallConfigurations.
   * @param {AIPhoneCallConfigurationDeleteManyArgs} args - Arguments to filter AIPhoneCallConfigurations to delete.
   * @example
   * // Delete a few AIPhoneCallConfigurations
   * const { count } = await prisma.aIPhoneCallConfiguration.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends AIPhoneCallConfigurationDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, AIPhoneCallConfigurationDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more AIPhoneCallConfigurations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AIPhoneCallConfigurationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many AIPhoneCallConfigurations
   * const aIPhoneCallConfiguration = await prisma.aIPhoneCallConfiguration.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends AIPhoneCallConfigurationUpdateManyArgs>(
    args: Prisma.SelectSubset<T, AIPhoneCallConfigurationUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more AIPhoneCallConfigurations and returns the data updated in the database.
   * @param {AIPhoneCallConfigurationUpdateManyAndReturnArgs} args - Arguments to update many AIPhoneCallConfigurations.
   * @example
   * // Update many AIPhoneCallConfigurations
   * const aIPhoneCallConfiguration = await prisma.aIPhoneCallConfiguration.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more AIPhoneCallConfigurations and only return the `id`
   * const aIPhoneCallConfigurationWithIdOnly = await prisma.aIPhoneCallConfiguration.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends AIPhoneCallConfigurationUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, AIPhoneCallConfigurationUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AIPhoneCallConfigurationPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one AIPhoneCallConfiguration.
   * @param {AIPhoneCallConfigurationUpsertArgs} args - Arguments to update or create a AIPhoneCallConfiguration.
   * @example
   * // Update or create a AIPhoneCallConfiguration
   * const aIPhoneCallConfiguration = await prisma.aIPhoneCallConfiguration.upsert({
   *   create: {
   *     // ... data to create a AIPhoneCallConfiguration
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the AIPhoneCallConfiguration we want to update
   *   }
   * })
   */
  upsert<T extends AIPhoneCallConfigurationUpsertArgs>(
    args: Prisma.SelectSubset<T, AIPhoneCallConfigurationUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__AIPhoneCallConfigurationClient<
    runtime.Types.Result.GetResult<
      Prisma.$AIPhoneCallConfigurationPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of AIPhoneCallConfigurations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AIPhoneCallConfigurationCountArgs} args - Arguments to filter AIPhoneCallConfigurations to count.
   * @example
   * // Count the number of AIPhoneCallConfigurations
   * const count = await prisma.aIPhoneCallConfiguration.count({
   *   where: {
   *     // ... the filter for the AIPhoneCallConfigurations we want to count
   *   }
   * })
   **/
  count<T extends AIPhoneCallConfigurationCountArgs>(
    args?: Prisma.Subset<T, AIPhoneCallConfigurationCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], AIPhoneCallConfigurationCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a AIPhoneCallConfiguration.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AIPhoneCallConfigurationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends AIPhoneCallConfigurationAggregateArgs>(
    args: Prisma.Subset<T, AIPhoneCallConfigurationAggregateArgs>
  ): Prisma.PrismaPromise<GetAIPhoneCallConfigurationAggregateType<T>>;

  /**
   * Group by AIPhoneCallConfiguration.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AIPhoneCallConfigurationGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends AIPhoneCallConfigurationGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AIPhoneCallConfigurationGroupByArgs["orderBy"] }
      : { orderBy?: AIPhoneCallConfigurationGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, AIPhoneCallConfigurationGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors
    ? GetAIPhoneCallConfigurationGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the AIPhoneCallConfiguration model
   */
  readonly fields: AIPhoneCallConfigurationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for AIPhoneCallConfiguration.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AIPhoneCallConfigurationClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  eventType<T extends Prisma.EventTypeDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.EventTypeDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeClient<
    | runtime.Types.Result.GetResult<
        Prisma.$EventTypePayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the AIPhoneCallConfiguration model
 */
export interface AIPhoneCallConfigurationFieldRefs {
  readonly id: Prisma.FieldRef<"AIPhoneCallConfiguration", "Int">;
  readonly eventTypeId: Prisma.FieldRef<"AIPhoneCallConfiguration", "Int">;
  readonly templateType: Prisma.FieldRef<"AIPhoneCallConfiguration", "String">;
  readonly schedulerName: Prisma.FieldRef<"AIPhoneCallConfiguration", "String">;
  readonly generalPrompt: Prisma.FieldRef<"AIPhoneCallConfiguration", "String">;
  readonly yourPhoneNumber: Prisma.FieldRef<"AIPhoneCallConfiguration", "String">;
  readonly numberToCall: Prisma.FieldRef<"AIPhoneCallConfiguration", "String">;
  readonly guestName: Prisma.FieldRef<"AIPhoneCallConfiguration", "String">;
  readonly guestEmail: Prisma.FieldRef<"AIPhoneCallConfiguration", "String">;
  readonly guestCompany: Prisma.FieldRef<"AIPhoneCallConfiguration", "String">;
  readonly enabled: Prisma.FieldRef<"AIPhoneCallConfiguration", "Boolean">;
  readonly beginMessage: Prisma.FieldRef<"AIPhoneCallConfiguration", "String">;
  readonly llmId: Prisma.FieldRef<"AIPhoneCallConfiguration", "String">;
}

// Custom InputTypes
/**
 * AIPhoneCallConfiguration findUnique
 */
export type AIPhoneCallConfigurationFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AIPhoneCallConfiguration
   */
  select?: Prisma.AIPhoneCallConfigurationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AIPhoneCallConfiguration
   */
  omit?: Prisma.AIPhoneCallConfigurationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AIPhoneCallConfigurationInclude<ExtArgs> | null;
  /**
   * Filter, which AIPhoneCallConfiguration to fetch.
   */
  where: Prisma.AIPhoneCallConfigurationWhereUniqueInput;
};

/**
 * AIPhoneCallConfiguration findUniqueOrThrow
 */
export type AIPhoneCallConfigurationFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AIPhoneCallConfiguration
   */
  select?: Prisma.AIPhoneCallConfigurationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AIPhoneCallConfiguration
   */
  omit?: Prisma.AIPhoneCallConfigurationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AIPhoneCallConfigurationInclude<ExtArgs> | null;
  /**
   * Filter, which AIPhoneCallConfiguration to fetch.
   */
  where: Prisma.AIPhoneCallConfigurationWhereUniqueInput;
};

/**
 * AIPhoneCallConfiguration findFirst
 */
export type AIPhoneCallConfigurationFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AIPhoneCallConfiguration
   */
  select?: Prisma.AIPhoneCallConfigurationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AIPhoneCallConfiguration
   */
  omit?: Prisma.AIPhoneCallConfigurationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AIPhoneCallConfigurationInclude<ExtArgs> | null;
  /**
   * Filter, which AIPhoneCallConfiguration to fetch.
   */
  where?: Prisma.AIPhoneCallConfigurationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AIPhoneCallConfigurations to fetch.
   */
  orderBy?:
    | Prisma.AIPhoneCallConfigurationOrderByWithRelationInput
    | Prisma.AIPhoneCallConfigurationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for AIPhoneCallConfigurations.
   */
  cursor?: Prisma.AIPhoneCallConfigurationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AIPhoneCallConfigurations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AIPhoneCallConfigurations.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of AIPhoneCallConfigurations.
   */
  distinct?:
    | Prisma.AIPhoneCallConfigurationScalarFieldEnum
    | Prisma.AIPhoneCallConfigurationScalarFieldEnum[];
};

/**
 * AIPhoneCallConfiguration findFirstOrThrow
 */
export type AIPhoneCallConfigurationFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AIPhoneCallConfiguration
   */
  select?: Prisma.AIPhoneCallConfigurationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AIPhoneCallConfiguration
   */
  omit?: Prisma.AIPhoneCallConfigurationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AIPhoneCallConfigurationInclude<ExtArgs> | null;
  /**
   * Filter, which AIPhoneCallConfiguration to fetch.
   */
  where?: Prisma.AIPhoneCallConfigurationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AIPhoneCallConfigurations to fetch.
   */
  orderBy?:
    | Prisma.AIPhoneCallConfigurationOrderByWithRelationInput
    | Prisma.AIPhoneCallConfigurationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for AIPhoneCallConfigurations.
   */
  cursor?: Prisma.AIPhoneCallConfigurationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AIPhoneCallConfigurations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AIPhoneCallConfigurations.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of AIPhoneCallConfigurations.
   */
  distinct?:
    | Prisma.AIPhoneCallConfigurationScalarFieldEnum
    | Prisma.AIPhoneCallConfigurationScalarFieldEnum[];
};

/**
 * AIPhoneCallConfiguration findMany
 */
export type AIPhoneCallConfigurationFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AIPhoneCallConfiguration
   */
  select?: Prisma.AIPhoneCallConfigurationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AIPhoneCallConfiguration
   */
  omit?: Prisma.AIPhoneCallConfigurationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AIPhoneCallConfigurationInclude<ExtArgs> | null;
  /**
   * Filter, which AIPhoneCallConfigurations to fetch.
   */
  where?: Prisma.AIPhoneCallConfigurationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AIPhoneCallConfigurations to fetch.
   */
  orderBy?:
    | Prisma.AIPhoneCallConfigurationOrderByWithRelationInput
    | Prisma.AIPhoneCallConfigurationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing AIPhoneCallConfigurations.
   */
  cursor?: Prisma.AIPhoneCallConfigurationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AIPhoneCallConfigurations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AIPhoneCallConfigurations.
   */
  skip?: number;
  distinct?:
    | Prisma.AIPhoneCallConfigurationScalarFieldEnum
    | Prisma.AIPhoneCallConfigurationScalarFieldEnum[];
};

/**
 * AIPhoneCallConfiguration create
 */
export type AIPhoneCallConfigurationCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AIPhoneCallConfiguration
   */
  select?: Prisma.AIPhoneCallConfigurationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AIPhoneCallConfiguration
   */
  omit?: Prisma.AIPhoneCallConfigurationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AIPhoneCallConfigurationInclude<ExtArgs> | null;
  /**
   * The data needed to create a AIPhoneCallConfiguration.
   */
  data: Prisma.XOR<
    Prisma.AIPhoneCallConfigurationCreateInput,
    Prisma.AIPhoneCallConfigurationUncheckedCreateInput
  >;
};

/**
 * AIPhoneCallConfiguration createMany
 */
export type AIPhoneCallConfigurationCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many AIPhoneCallConfigurations.
   */
  data: Prisma.AIPhoneCallConfigurationCreateManyInput | Prisma.AIPhoneCallConfigurationCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * AIPhoneCallConfiguration createManyAndReturn
 */
export type AIPhoneCallConfigurationCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AIPhoneCallConfiguration
   */
  select?: Prisma.AIPhoneCallConfigurationSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the AIPhoneCallConfiguration
   */
  omit?: Prisma.AIPhoneCallConfigurationOmit<ExtArgs> | null;
  /**
   * The data used to create many AIPhoneCallConfigurations.
   */
  data: Prisma.AIPhoneCallConfigurationCreateManyInput | Prisma.AIPhoneCallConfigurationCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AIPhoneCallConfigurationIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * AIPhoneCallConfiguration update
 */
export type AIPhoneCallConfigurationUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AIPhoneCallConfiguration
   */
  select?: Prisma.AIPhoneCallConfigurationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AIPhoneCallConfiguration
   */
  omit?: Prisma.AIPhoneCallConfigurationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AIPhoneCallConfigurationInclude<ExtArgs> | null;
  /**
   * The data needed to update a AIPhoneCallConfiguration.
   */
  data: Prisma.XOR<
    Prisma.AIPhoneCallConfigurationUpdateInput,
    Prisma.AIPhoneCallConfigurationUncheckedUpdateInput
  >;
  /**
   * Choose, which AIPhoneCallConfiguration to update.
   */
  where: Prisma.AIPhoneCallConfigurationWhereUniqueInput;
};

/**
 * AIPhoneCallConfiguration updateMany
 */
export type AIPhoneCallConfigurationUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update AIPhoneCallConfigurations.
   */
  data: Prisma.XOR<
    Prisma.AIPhoneCallConfigurationUpdateManyMutationInput,
    Prisma.AIPhoneCallConfigurationUncheckedUpdateManyInput
  >;
  /**
   * Filter which AIPhoneCallConfigurations to update
   */
  where?: Prisma.AIPhoneCallConfigurationWhereInput;
  /**
   * Limit how many AIPhoneCallConfigurations to update.
   */
  limit?: number;
};

/**
 * AIPhoneCallConfiguration updateManyAndReturn
 */
export type AIPhoneCallConfigurationUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AIPhoneCallConfiguration
   */
  select?: Prisma.AIPhoneCallConfigurationSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the AIPhoneCallConfiguration
   */
  omit?: Prisma.AIPhoneCallConfigurationOmit<ExtArgs> | null;
  /**
   * The data used to update AIPhoneCallConfigurations.
   */
  data: Prisma.XOR<
    Prisma.AIPhoneCallConfigurationUpdateManyMutationInput,
    Prisma.AIPhoneCallConfigurationUncheckedUpdateManyInput
  >;
  /**
   * Filter which AIPhoneCallConfigurations to update
   */
  where?: Prisma.AIPhoneCallConfigurationWhereInput;
  /**
   * Limit how many AIPhoneCallConfigurations to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AIPhoneCallConfigurationIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * AIPhoneCallConfiguration upsert
 */
export type AIPhoneCallConfigurationUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AIPhoneCallConfiguration
   */
  select?: Prisma.AIPhoneCallConfigurationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AIPhoneCallConfiguration
   */
  omit?: Prisma.AIPhoneCallConfigurationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AIPhoneCallConfigurationInclude<ExtArgs> | null;
  /**
   * The filter to search for the AIPhoneCallConfiguration to update in case it exists.
   */
  where: Prisma.AIPhoneCallConfigurationWhereUniqueInput;
  /**
   * In case the AIPhoneCallConfiguration found by the `where` argument doesn't exist, create a new AIPhoneCallConfiguration with this data.
   */
  create: Prisma.XOR<
    Prisma.AIPhoneCallConfigurationCreateInput,
    Prisma.AIPhoneCallConfigurationUncheckedCreateInput
  >;
  /**
   * In case the AIPhoneCallConfiguration was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.AIPhoneCallConfigurationUpdateInput,
    Prisma.AIPhoneCallConfigurationUncheckedUpdateInput
  >;
};

/**
 * AIPhoneCallConfiguration delete
 */
export type AIPhoneCallConfigurationDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AIPhoneCallConfiguration
   */
  select?: Prisma.AIPhoneCallConfigurationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AIPhoneCallConfiguration
   */
  omit?: Prisma.AIPhoneCallConfigurationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AIPhoneCallConfigurationInclude<ExtArgs> | null;
  /**
   * Filter which AIPhoneCallConfiguration to delete.
   */
  where: Prisma.AIPhoneCallConfigurationWhereUniqueInput;
};

/**
 * AIPhoneCallConfiguration deleteMany
 */
export type AIPhoneCallConfigurationDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which AIPhoneCallConfigurations to delete
   */
  where?: Prisma.AIPhoneCallConfigurationWhereInput;
  /**
   * Limit how many AIPhoneCallConfigurations to delete.
   */
  limit?: number;
};

/**
 * AIPhoneCallConfiguration without action
 */
export type AIPhoneCallConfigurationDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AIPhoneCallConfiguration
   */
  select?: Prisma.AIPhoneCallConfigurationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AIPhoneCallConfiguration
   */
  omit?: Prisma.AIPhoneCallConfigurationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AIPhoneCallConfigurationInclude<ExtArgs> | null;
};
