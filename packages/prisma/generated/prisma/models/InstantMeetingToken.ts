/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `InstantMeetingToken` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model InstantMeetingToken
 *
 */
export type InstantMeetingTokenModel =
  runtime.Types.Result.DefaultSelection<Prisma.$InstantMeetingTokenPayload>;

export type AggregateInstantMeetingToken = {
  _count: InstantMeetingTokenCountAggregateOutputType | null;
  _avg: InstantMeetingTokenAvgAggregateOutputType | null;
  _sum: InstantMeetingTokenSumAggregateOutputType | null;
  _min: InstantMeetingTokenMinAggregateOutputType | null;
  _max: InstantMeetingTokenMaxAggregateOutputType | null;
};

export type InstantMeetingTokenAvgAggregateOutputType = {
  id: number | null;
  teamId: number | null;
  bookingId: number | null;
};

export type InstantMeetingTokenSumAggregateOutputType = {
  id: number | null;
  teamId: number | null;
  bookingId: number | null;
};

export type InstantMeetingTokenMinAggregateOutputType = {
  id: number | null;
  token: string | null;
  expires: Date | null;
  teamId: number | null;
  bookingId: number | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type InstantMeetingTokenMaxAggregateOutputType = {
  id: number | null;
  token: string | null;
  expires: Date | null;
  teamId: number | null;
  bookingId: number | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type InstantMeetingTokenCountAggregateOutputType = {
  id: number;
  token: number;
  expires: number;
  teamId: number;
  bookingId: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type InstantMeetingTokenAvgAggregateInputType = {
  id?: true;
  teamId?: true;
  bookingId?: true;
};

export type InstantMeetingTokenSumAggregateInputType = {
  id?: true;
  teamId?: true;
  bookingId?: true;
};

export type InstantMeetingTokenMinAggregateInputType = {
  id?: true;
  token?: true;
  expires?: true;
  teamId?: true;
  bookingId?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type InstantMeetingTokenMaxAggregateInputType = {
  id?: true;
  token?: true;
  expires?: true;
  teamId?: true;
  bookingId?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type InstantMeetingTokenCountAggregateInputType = {
  id?: true;
  token?: true;
  expires?: true;
  teamId?: true;
  bookingId?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type InstantMeetingTokenAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which InstantMeetingToken to aggregate.
   */
  where?: Prisma.InstantMeetingTokenWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of InstantMeetingTokens to fetch.
   */
  orderBy?:
    | Prisma.InstantMeetingTokenOrderByWithRelationInput
    | Prisma.InstantMeetingTokenOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.InstantMeetingTokenWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` InstantMeetingTokens from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` InstantMeetingTokens.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned InstantMeetingTokens
   **/
  _count?: true | InstantMeetingTokenCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: InstantMeetingTokenAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: InstantMeetingTokenSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: InstantMeetingTokenMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: InstantMeetingTokenMaxAggregateInputType;
};

export type GetInstantMeetingTokenAggregateType<T extends InstantMeetingTokenAggregateArgs> = {
  [P in keyof T & keyof AggregateInstantMeetingToken]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateInstantMeetingToken[P]>
    : Prisma.GetScalarType<T[P], AggregateInstantMeetingToken[P]>;
};

export type InstantMeetingTokenGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.InstantMeetingTokenWhereInput;
  orderBy?:
    | Prisma.InstantMeetingTokenOrderByWithAggregationInput
    | Prisma.InstantMeetingTokenOrderByWithAggregationInput[];
  by: Prisma.InstantMeetingTokenScalarFieldEnum[] | Prisma.InstantMeetingTokenScalarFieldEnum;
  having?: Prisma.InstantMeetingTokenScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: InstantMeetingTokenCountAggregateInputType | true;
  _avg?: InstantMeetingTokenAvgAggregateInputType;
  _sum?: InstantMeetingTokenSumAggregateInputType;
  _min?: InstantMeetingTokenMinAggregateInputType;
  _max?: InstantMeetingTokenMaxAggregateInputType;
};

export type InstantMeetingTokenGroupByOutputType = {
  id: number;
  token: string;
  expires: Date;
  teamId: number;
  bookingId: number | null;
  createdAt: Date;
  updatedAt: Date;
  _count: InstantMeetingTokenCountAggregateOutputType | null;
  _avg: InstantMeetingTokenAvgAggregateOutputType | null;
  _sum: InstantMeetingTokenSumAggregateOutputType | null;
  _min: InstantMeetingTokenMinAggregateOutputType | null;
  _max: InstantMeetingTokenMaxAggregateOutputType | null;
};

type GetInstantMeetingTokenGroupByPayload<T extends InstantMeetingTokenGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<InstantMeetingTokenGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof InstantMeetingTokenGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], InstantMeetingTokenGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], InstantMeetingTokenGroupByOutputType[P]>;
    }
  >
>;

export type InstantMeetingTokenWhereInput = {
  AND?: Prisma.InstantMeetingTokenWhereInput | Prisma.InstantMeetingTokenWhereInput[];
  OR?: Prisma.InstantMeetingTokenWhereInput[];
  NOT?: Prisma.InstantMeetingTokenWhereInput | Prisma.InstantMeetingTokenWhereInput[];
  id?: Prisma.IntFilter<"InstantMeetingToken"> | number;
  token?: Prisma.StringFilter<"InstantMeetingToken"> | string;
  expires?: Prisma.DateTimeFilter<"InstantMeetingToken"> | Date | string;
  teamId?: Prisma.IntFilter<"InstantMeetingToken"> | number;
  bookingId?: Prisma.IntNullableFilter<"InstantMeetingToken"> | number | null;
  createdAt?: Prisma.DateTimeFilter<"InstantMeetingToken"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"InstantMeetingToken"> | Date | string;
  team?: Prisma.XOR<Prisma.TeamScalarRelationFilter, Prisma.TeamWhereInput>;
  booking?: Prisma.XOR<Prisma.BookingNullableScalarRelationFilter, Prisma.BookingWhereInput> | null;
};

export type InstantMeetingTokenOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  token?: Prisma.SortOrder;
  expires?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  bookingId?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  team?: Prisma.TeamOrderByWithRelationInput;
  booking?: Prisma.BookingOrderByWithRelationInput;
};

export type InstantMeetingTokenWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    token?: string;
    bookingId?: number;
    AND?: Prisma.InstantMeetingTokenWhereInput | Prisma.InstantMeetingTokenWhereInput[];
    OR?: Prisma.InstantMeetingTokenWhereInput[];
    NOT?: Prisma.InstantMeetingTokenWhereInput | Prisma.InstantMeetingTokenWhereInput[];
    expires?: Prisma.DateTimeFilter<"InstantMeetingToken"> | Date | string;
    teamId?: Prisma.IntFilter<"InstantMeetingToken"> | number;
    createdAt?: Prisma.DateTimeFilter<"InstantMeetingToken"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"InstantMeetingToken"> | Date | string;
    team?: Prisma.XOR<Prisma.TeamScalarRelationFilter, Prisma.TeamWhereInput>;
    booking?: Prisma.XOR<Prisma.BookingNullableScalarRelationFilter, Prisma.BookingWhereInput> | null;
  },
  "id" | "token" | "bookingId"
>;

export type InstantMeetingTokenOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  token?: Prisma.SortOrder;
  expires?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  bookingId?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.InstantMeetingTokenCountOrderByAggregateInput;
  _avg?: Prisma.InstantMeetingTokenAvgOrderByAggregateInput;
  _max?: Prisma.InstantMeetingTokenMaxOrderByAggregateInput;
  _min?: Prisma.InstantMeetingTokenMinOrderByAggregateInput;
  _sum?: Prisma.InstantMeetingTokenSumOrderByAggregateInput;
};

export type InstantMeetingTokenScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.InstantMeetingTokenScalarWhereWithAggregatesInput
    | Prisma.InstantMeetingTokenScalarWhereWithAggregatesInput[];
  OR?: Prisma.InstantMeetingTokenScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.InstantMeetingTokenScalarWhereWithAggregatesInput
    | Prisma.InstantMeetingTokenScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"InstantMeetingToken"> | number;
  token?: Prisma.StringWithAggregatesFilter<"InstantMeetingToken"> | string;
  expires?: Prisma.DateTimeWithAggregatesFilter<"InstantMeetingToken"> | Date | string;
  teamId?: Prisma.IntWithAggregatesFilter<"InstantMeetingToken"> | number;
  bookingId?: Prisma.IntNullableWithAggregatesFilter<"InstantMeetingToken"> | number | null;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"InstantMeetingToken"> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"InstantMeetingToken"> | Date | string;
};

export type InstantMeetingTokenCreateInput = {
  token: string;
  expires: Date | string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  team: Prisma.TeamCreateNestedOneWithoutInstantMeetingTokensInput;
  booking?: Prisma.BookingCreateNestedOneWithoutInstantMeetingTokenInput;
};

export type InstantMeetingTokenUncheckedCreateInput = {
  id?: number;
  token: string;
  expires: Date | string;
  teamId: number;
  bookingId?: number | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type InstantMeetingTokenUpdateInput = {
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  team?: Prisma.TeamUpdateOneRequiredWithoutInstantMeetingTokensNestedInput;
  booking?: Prisma.BookingUpdateOneWithoutInstantMeetingTokenNestedInput;
};

export type InstantMeetingTokenUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  teamId?: Prisma.IntFieldUpdateOperationsInput | number;
  bookingId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type InstantMeetingTokenCreateManyInput = {
  id?: number;
  token: string;
  expires: Date | string;
  teamId: number;
  bookingId?: number | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type InstantMeetingTokenUpdateManyMutationInput = {
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type InstantMeetingTokenUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  teamId?: Prisma.IntFieldUpdateOperationsInput | number;
  bookingId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type InstantMeetingTokenListRelationFilter = {
  every?: Prisma.InstantMeetingTokenWhereInput;
  some?: Prisma.InstantMeetingTokenWhereInput;
  none?: Prisma.InstantMeetingTokenWhereInput;
};

export type InstantMeetingTokenOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type InstantMeetingTokenCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  token?: Prisma.SortOrder;
  expires?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  bookingId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type InstantMeetingTokenAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  bookingId?: Prisma.SortOrder;
};

export type InstantMeetingTokenMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  token?: Prisma.SortOrder;
  expires?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  bookingId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type InstantMeetingTokenMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  token?: Prisma.SortOrder;
  expires?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  bookingId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type InstantMeetingTokenSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  bookingId?: Prisma.SortOrder;
};

export type InstantMeetingTokenNullableScalarRelationFilter = {
  is?: Prisma.InstantMeetingTokenWhereInput | null;
  isNot?: Prisma.InstantMeetingTokenWhereInput | null;
};

export type InstantMeetingTokenCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<
        Prisma.InstantMeetingTokenCreateWithoutTeamInput,
        Prisma.InstantMeetingTokenUncheckedCreateWithoutTeamInput
      >
    | Prisma.InstantMeetingTokenCreateWithoutTeamInput[]
    | Prisma.InstantMeetingTokenUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.InstantMeetingTokenCreateOrConnectWithoutTeamInput
    | Prisma.InstantMeetingTokenCreateOrConnectWithoutTeamInput[];
  createMany?: Prisma.InstantMeetingTokenCreateManyTeamInputEnvelope;
  connect?: Prisma.InstantMeetingTokenWhereUniqueInput | Prisma.InstantMeetingTokenWhereUniqueInput[];
};

export type InstantMeetingTokenUncheckedCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<
        Prisma.InstantMeetingTokenCreateWithoutTeamInput,
        Prisma.InstantMeetingTokenUncheckedCreateWithoutTeamInput
      >
    | Prisma.InstantMeetingTokenCreateWithoutTeamInput[]
    | Prisma.InstantMeetingTokenUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.InstantMeetingTokenCreateOrConnectWithoutTeamInput
    | Prisma.InstantMeetingTokenCreateOrConnectWithoutTeamInput[];
  createMany?: Prisma.InstantMeetingTokenCreateManyTeamInputEnvelope;
  connect?: Prisma.InstantMeetingTokenWhereUniqueInput | Prisma.InstantMeetingTokenWhereUniqueInput[];
};

export type InstantMeetingTokenUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.InstantMeetingTokenCreateWithoutTeamInput,
        Prisma.InstantMeetingTokenUncheckedCreateWithoutTeamInput
      >
    | Prisma.InstantMeetingTokenCreateWithoutTeamInput[]
    | Prisma.InstantMeetingTokenUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.InstantMeetingTokenCreateOrConnectWithoutTeamInput
    | Prisma.InstantMeetingTokenCreateOrConnectWithoutTeamInput[];
  upsert?:
    | Prisma.InstantMeetingTokenUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.InstantMeetingTokenUpsertWithWhereUniqueWithoutTeamInput[];
  createMany?: Prisma.InstantMeetingTokenCreateManyTeamInputEnvelope;
  set?: Prisma.InstantMeetingTokenWhereUniqueInput | Prisma.InstantMeetingTokenWhereUniqueInput[];
  disconnect?: Prisma.InstantMeetingTokenWhereUniqueInput | Prisma.InstantMeetingTokenWhereUniqueInput[];
  delete?: Prisma.InstantMeetingTokenWhereUniqueInput | Prisma.InstantMeetingTokenWhereUniqueInput[];
  connect?: Prisma.InstantMeetingTokenWhereUniqueInput | Prisma.InstantMeetingTokenWhereUniqueInput[];
  update?:
    | Prisma.InstantMeetingTokenUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.InstantMeetingTokenUpdateWithWhereUniqueWithoutTeamInput[];
  updateMany?:
    | Prisma.InstantMeetingTokenUpdateManyWithWhereWithoutTeamInput
    | Prisma.InstantMeetingTokenUpdateManyWithWhereWithoutTeamInput[];
  deleteMany?: Prisma.InstantMeetingTokenScalarWhereInput | Prisma.InstantMeetingTokenScalarWhereInput[];
};

export type InstantMeetingTokenUncheckedUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.InstantMeetingTokenCreateWithoutTeamInput,
        Prisma.InstantMeetingTokenUncheckedCreateWithoutTeamInput
      >
    | Prisma.InstantMeetingTokenCreateWithoutTeamInput[]
    | Prisma.InstantMeetingTokenUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.InstantMeetingTokenCreateOrConnectWithoutTeamInput
    | Prisma.InstantMeetingTokenCreateOrConnectWithoutTeamInput[];
  upsert?:
    | Prisma.InstantMeetingTokenUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.InstantMeetingTokenUpsertWithWhereUniqueWithoutTeamInput[];
  createMany?: Prisma.InstantMeetingTokenCreateManyTeamInputEnvelope;
  set?: Prisma.InstantMeetingTokenWhereUniqueInput | Prisma.InstantMeetingTokenWhereUniqueInput[];
  disconnect?: Prisma.InstantMeetingTokenWhereUniqueInput | Prisma.InstantMeetingTokenWhereUniqueInput[];
  delete?: Prisma.InstantMeetingTokenWhereUniqueInput | Prisma.InstantMeetingTokenWhereUniqueInput[];
  connect?: Prisma.InstantMeetingTokenWhereUniqueInput | Prisma.InstantMeetingTokenWhereUniqueInput[];
  update?:
    | Prisma.InstantMeetingTokenUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.InstantMeetingTokenUpdateWithWhereUniqueWithoutTeamInput[];
  updateMany?:
    | Prisma.InstantMeetingTokenUpdateManyWithWhereWithoutTeamInput
    | Prisma.InstantMeetingTokenUpdateManyWithWhereWithoutTeamInput[];
  deleteMany?: Prisma.InstantMeetingTokenScalarWhereInput | Prisma.InstantMeetingTokenScalarWhereInput[];
};

export type InstantMeetingTokenCreateNestedOneWithoutBookingInput = {
  create?: Prisma.XOR<
    Prisma.InstantMeetingTokenCreateWithoutBookingInput,
    Prisma.InstantMeetingTokenUncheckedCreateWithoutBookingInput
  >;
  connectOrCreate?: Prisma.InstantMeetingTokenCreateOrConnectWithoutBookingInput;
  connect?: Prisma.InstantMeetingTokenWhereUniqueInput;
};

export type InstantMeetingTokenUncheckedCreateNestedOneWithoutBookingInput = {
  create?: Prisma.XOR<
    Prisma.InstantMeetingTokenCreateWithoutBookingInput,
    Prisma.InstantMeetingTokenUncheckedCreateWithoutBookingInput
  >;
  connectOrCreate?: Prisma.InstantMeetingTokenCreateOrConnectWithoutBookingInput;
  connect?: Prisma.InstantMeetingTokenWhereUniqueInput;
};

export type InstantMeetingTokenUpdateOneWithoutBookingNestedInput = {
  create?: Prisma.XOR<
    Prisma.InstantMeetingTokenCreateWithoutBookingInput,
    Prisma.InstantMeetingTokenUncheckedCreateWithoutBookingInput
  >;
  connectOrCreate?: Prisma.InstantMeetingTokenCreateOrConnectWithoutBookingInput;
  upsert?: Prisma.InstantMeetingTokenUpsertWithoutBookingInput;
  disconnect?: Prisma.InstantMeetingTokenWhereInput | boolean;
  delete?: Prisma.InstantMeetingTokenWhereInput | boolean;
  connect?: Prisma.InstantMeetingTokenWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.InstantMeetingTokenUpdateToOneWithWhereWithoutBookingInput,
      Prisma.InstantMeetingTokenUpdateWithoutBookingInput
    >,
    Prisma.InstantMeetingTokenUncheckedUpdateWithoutBookingInput
  >;
};

export type InstantMeetingTokenUncheckedUpdateOneWithoutBookingNestedInput = {
  create?: Prisma.XOR<
    Prisma.InstantMeetingTokenCreateWithoutBookingInput,
    Prisma.InstantMeetingTokenUncheckedCreateWithoutBookingInput
  >;
  connectOrCreate?: Prisma.InstantMeetingTokenCreateOrConnectWithoutBookingInput;
  upsert?: Prisma.InstantMeetingTokenUpsertWithoutBookingInput;
  disconnect?: Prisma.InstantMeetingTokenWhereInput | boolean;
  delete?: Prisma.InstantMeetingTokenWhereInput | boolean;
  connect?: Prisma.InstantMeetingTokenWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.InstantMeetingTokenUpdateToOneWithWhereWithoutBookingInput,
      Prisma.InstantMeetingTokenUpdateWithoutBookingInput
    >,
    Prisma.InstantMeetingTokenUncheckedUpdateWithoutBookingInput
  >;
};

export type InstantMeetingTokenCreateWithoutTeamInput = {
  token: string;
  expires: Date | string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  booking?: Prisma.BookingCreateNestedOneWithoutInstantMeetingTokenInput;
};

export type InstantMeetingTokenUncheckedCreateWithoutTeamInput = {
  id?: number;
  token: string;
  expires: Date | string;
  bookingId?: number | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type InstantMeetingTokenCreateOrConnectWithoutTeamInput = {
  where: Prisma.InstantMeetingTokenWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.InstantMeetingTokenCreateWithoutTeamInput,
    Prisma.InstantMeetingTokenUncheckedCreateWithoutTeamInput
  >;
};

export type InstantMeetingTokenCreateManyTeamInputEnvelope = {
  data: Prisma.InstantMeetingTokenCreateManyTeamInput | Prisma.InstantMeetingTokenCreateManyTeamInput[];
  skipDuplicates?: boolean;
};

export type InstantMeetingTokenUpsertWithWhereUniqueWithoutTeamInput = {
  where: Prisma.InstantMeetingTokenWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.InstantMeetingTokenUpdateWithoutTeamInput,
    Prisma.InstantMeetingTokenUncheckedUpdateWithoutTeamInput
  >;
  create: Prisma.XOR<
    Prisma.InstantMeetingTokenCreateWithoutTeamInput,
    Prisma.InstantMeetingTokenUncheckedCreateWithoutTeamInput
  >;
};

export type InstantMeetingTokenUpdateWithWhereUniqueWithoutTeamInput = {
  where: Prisma.InstantMeetingTokenWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.InstantMeetingTokenUpdateWithoutTeamInput,
    Prisma.InstantMeetingTokenUncheckedUpdateWithoutTeamInput
  >;
};

export type InstantMeetingTokenUpdateManyWithWhereWithoutTeamInput = {
  where: Prisma.InstantMeetingTokenScalarWhereInput;
  data: Prisma.XOR<
    Prisma.InstantMeetingTokenUpdateManyMutationInput,
    Prisma.InstantMeetingTokenUncheckedUpdateManyWithoutTeamInput
  >;
};

export type InstantMeetingTokenScalarWhereInput = {
  AND?: Prisma.InstantMeetingTokenScalarWhereInput | Prisma.InstantMeetingTokenScalarWhereInput[];
  OR?: Prisma.InstantMeetingTokenScalarWhereInput[];
  NOT?: Prisma.InstantMeetingTokenScalarWhereInput | Prisma.InstantMeetingTokenScalarWhereInput[];
  id?: Prisma.IntFilter<"InstantMeetingToken"> | number;
  token?: Prisma.StringFilter<"InstantMeetingToken"> | string;
  expires?: Prisma.DateTimeFilter<"InstantMeetingToken"> | Date | string;
  teamId?: Prisma.IntFilter<"InstantMeetingToken"> | number;
  bookingId?: Prisma.IntNullableFilter<"InstantMeetingToken"> | number | null;
  createdAt?: Prisma.DateTimeFilter<"InstantMeetingToken"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"InstantMeetingToken"> | Date | string;
};

export type InstantMeetingTokenCreateWithoutBookingInput = {
  token: string;
  expires: Date | string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  team: Prisma.TeamCreateNestedOneWithoutInstantMeetingTokensInput;
};

export type InstantMeetingTokenUncheckedCreateWithoutBookingInput = {
  id?: number;
  token: string;
  expires: Date | string;
  teamId: number;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type InstantMeetingTokenCreateOrConnectWithoutBookingInput = {
  where: Prisma.InstantMeetingTokenWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.InstantMeetingTokenCreateWithoutBookingInput,
    Prisma.InstantMeetingTokenUncheckedCreateWithoutBookingInput
  >;
};

export type InstantMeetingTokenUpsertWithoutBookingInput = {
  update: Prisma.XOR<
    Prisma.InstantMeetingTokenUpdateWithoutBookingInput,
    Prisma.InstantMeetingTokenUncheckedUpdateWithoutBookingInput
  >;
  create: Prisma.XOR<
    Prisma.InstantMeetingTokenCreateWithoutBookingInput,
    Prisma.InstantMeetingTokenUncheckedCreateWithoutBookingInput
  >;
  where?: Prisma.InstantMeetingTokenWhereInput;
};

export type InstantMeetingTokenUpdateToOneWithWhereWithoutBookingInput = {
  where?: Prisma.InstantMeetingTokenWhereInput;
  data: Prisma.XOR<
    Prisma.InstantMeetingTokenUpdateWithoutBookingInput,
    Prisma.InstantMeetingTokenUncheckedUpdateWithoutBookingInput
  >;
};

export type InstantMeetingTokenUpdateWithoutBookingInput = {
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  team?: Prisma.TeamUpdateOneRequiredWithoutInstantMeetingTokensNestedInput;
};

export type InstantMeetingTokenUncheckedUpdateWithoutBookingInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  teamId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type InstantMeetingTokenCreateManyTeamInput = {
  id?: number;
  token: string;
  expires: Date | string;
  bookingId?: number | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type InstantMeetingTokenUpdateWithoutTeamInput = {
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  booking?: Prisma.BookingUpdateOneWithoutInstantMeetingTokenNestedInput;
};

export type InstantMeetingTokenUncheckedUpdateWithoutTeamInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  bookingId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type InstantMeetingTokenUncheckedUpdateManyWithoutTeamInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  bookingId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type InstantMeetingTokenSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    token?: boolean;
    expires?: boolean;
    teamId?: boolean;
    bookingId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
    booking?: boolean | Prisma.InstantMeetingToken$bookingArgs<ExtArgs>;
  },
  ExtArgs["result"]["instantMeetingToken"]
>;

export type InstantMeetingTokenSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    token?: boolean;
    expires?: boolean;
    teamId?: boolean;
    bookingId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
    booking?: boolean | Prisma.InstantMeetingToken$bookingArgs<ExtArgs>;
  },
  ExtArgs["result"]["instantMeetingToken"]
>;

export type InstantMeetingTokenSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    token?: boolean;
    expires?: boolean;
    teamId?: boolean;
    bookingId?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
    booking?: boolean | Prisma.InstantMeetingToken$bookingArgs<ExtArgs>;
  },
  ExtArgs["result"]["instantMeetingToken"]
>;

export type InstantMeetingTokenSelectScalar = {
  id?: boolean;
  token?: boolean;
  expires?: boolean;
  teamId?: boolean;
  bookingId?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type InstantMeetingTokenOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  "id" | "token" | "expires" | "teamId" | "bookingId" | "createdAt" | "updatedAt",
  ExtArgs["result"]["instantMeetingToken"]
>;
export type InstantMeetingTokenInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
  booking?: boolean | Prisma.InstantMeetingToken$bookingArgs<ExtArgs>;
};
export type InstantMeetingTokenIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
  booking?: boolean | Prisma.InstantMeetingToken$bookingArgs<ExtArgs>;
};
export type InstantMeetingTokenIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
  booking?: boolean | Prisma.InstantMeetingToken$bookingArgs<ExtArgs>;
};

export type $InstantMeetingTokenPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "InstantMeetingToken";
  objects: {
    team: Prisma.$TeamPayload<ExtArgs>;
    booking: Prisma.$BookingPayload<ExtArgs> | null;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      token: string;
      expires: Date;
      teamId: number;
      bookingId: number | null;
      createdAt: Date;
      updatedAt: Date;
    },
    ExtArgs["result"]["instantMeetingToken"]
  >;
  composites: {};
};

export type InstantMeetingTokenGetPayload<
  S extends boolean | null | undefined | InstantMeetingTokenDefaultArgs
> = runtime.Types.Result.GetResult<Prisma.$InstantMeetingTokenPayload, S>;

export type InstantMeetingTokenCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<InstantMeetingTokenFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: InstantMeetingTokenCountAggregateInputType | true;
};

export interface InstantMeetingTokenDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["InstantMeetingToken"];
    meta: { name: "InstantMeetingToken" };
  };
  /**
   * Find zero or one InstantMeetingToken that matches the filter.
   * @param {InstantMeetingTokenFindUniqueArgs} args - Arguments to find a InstantMeetingToken
   * @example
   * // Get one InstantMeetingToken
   * const instantMeetingToken = await prisma.instantMeetingToken.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends InstantMeetingTokenFindUniqueArgs>(
    args: Prisma.SelectSubset<T, InstantMeetingTokenFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__InstantMeetingTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$InstantMeetingTokenPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one InstantMeetingToken that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {InstantMeetingTokenFindUniqueOrThrowArgs} args - Arguments to find a InstantMeetingToken
   * @example
   * // Get one InstantMeetingToken
   * const instantMeetingToken = await prisma.instantMeetingToken.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends InstantMeetingTokenFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, InstantMeetingTokenFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__InstantMeetingTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$InstantMeetingTokenPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first InstantMeetingToken that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstantMeetingTokenFindFirstArgs} args - Arguments to find a InstantMeetingToken
   * @example
   * // Get one InstantMeetingToken
   * const instantMeetingToken = await prisma.instantMeetingToken.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends InstantMeetingTokenFindFirstArgs>(
    args?: Prisma.SelectSubset<T, InstantMeetingTokenFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__InstantMeetingTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$InstantMeetingTokenPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first InstantMeetingToken that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstantMeetingTokenFindFirstOrThrowArgs} args - Arguments to find a InstantMeetingToken
   * @example
   * // Get one InstantMeetingToken
   * const instantMeetingToken = await prisma.instantMeetingToken.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends InstantMeetingTokenFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, InstantMeetingTokenFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__InstantMeetingTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$InstantMeetingTokenPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more InstantMeetingTokens that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstantMeetingTokenFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all InstantMeetingTokens
   * const instantMeetingTokens = await prisma.instantMeetingToken.findMany()
   *
   * // Get first 10 InstantMeetingTokens
   * const instantMeetingTokens = await prisma.instantMeetingToken.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const instantMeetingTokenWithIdOnly = await prisma.instantMeetingToken.findMany({ select: { id: true } })
   *
   */
  findMany<T extends InstantMeetingTokenFindManyArgs>(
    args?: Prisma.SelectSubset<T, InstantMeetingTokenFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$InstantMeetingTokenPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a InstantMeetingToken.
   * @param {InstantMeetingTokenCreateArgs} args - Arguments to create a InstantMeetingToken.
   * @example
   * // Create one InstantMeetingToken
   * const InstantMeetingToken = await prisma.instantMeetingToken.create({
   *   data: {
   *     // ... data to create a InstantMeetingToken
   *   }
   * })
   *
   */
  create<T extends InstantMeetingTokenCreateArgs>(
    args: Prisma.SelectSubset<T, InstantMeetingTokenCreateArgs<ExtArgs>>
  ): Prisma.Prisma__InstantMeetingTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$InstantMeetingTokenPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many InstantMeetingTokens.
   * @param {InstantMeetingTokenCreateManyArgs} args - Arguments to create many InstantMeetingTokens.
   * @example
   * // Create many InstantMeetingTokens
   * const instantMeetingToken = await prisma.instantMeetingToken.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends InstantMeetingTokenCreateManyArgs>(
    args?: Prisma.SelectSubset<T, InstantMeetingTokenCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many InstantMeetingTokens and returns the data saved in the database.
   * @param {InstantMeetingTokenCreateManyAndReturnArgs} args - Arguments to create many InstantMeetingTokens.
   * @example
   * // Create many InstantMeetingTokens
   * const instantMeetingToken = await prisma.instantMeetingToken.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many InstantMeetingTokens and only return the `id`
   * const instantMeetingTokenWithIdOnly = await prisma.instantMeetingToken.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends InstantMeetingTokenCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, InstantMeetingTokenCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$InstantMeetingTokenPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a InstantMeetingToken.
   * @param {InstantMeetingTokenDeleteArgs} args - Arguments to delete one InstantMeetingToken.
   * @example
   * // Delete one InstantMeetingToken
   * const InstantMeetingToken = await prisma.instantMeetingToken.delete({
   *   where: {
   *     // ... filter to delete one InstantMeetingToken
   *   }
   * })
   *
   */
  delete<T extends InstantMeetingTokenDeleteArgs>(
    args: Prisma.SelectSubset<T, InstantMeetingTokenDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__InstantMeetingTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$InstantMeetingTokenPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one InstantMeetingToken.
   * @param {InstantMeetingTokenUpdateArgs} args - Arguments to update one InstantMeetingToken.
   * @example
   * // Update one InstantMeetingToken
   * const instantMeetingToken = await prisma.instantMeetingToken.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends InstantMeetingTokenUpdateArgs>(
    args: Prisma.SelectSubset<T, InstantMeetingTokenUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__InstantMeetingTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$InstantMeetingTokenPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more InstantMeetingTokens.
   * @param {InstantMeetingTokenDeleteManyArgs} args - Arguments to filter InstantMeetingTokens to delete.
   * @example
   * // Delete a few InstantMeetingTokens
   * const { count } = await prisma.instantMeetingToken.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends InstantMeetingTokenDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, InstantMeetingTokenDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more InstantMeetingTokens.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstantMeetingTokenUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many InstantMeetingTokens
   * const instantMeetingToken = await prisma.instantMeetingToken.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends InstantMeetingTokenUpdateManyArgs>(
    args: Prisma.SelectSubset<T, InstantMeetingTokenUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more InstantMeetingTokens and returns the data updated in the database.
   * @param {InstantMeetingTokenUpdateManyAndReturnArgs} args - Arguments to update many InstantMeetingTokens.
   * @example
   * // Update many InstantMeetingTokens
   * const instantMeetingToken = await prisma.instantMeetingToken.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more InstantMeetingTokens and only return the `id`
   * const instantMeetingTokenWithIdOnly = await prisma.instantMeetingToken.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends InstantMeetingTokenUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, InstantMeetingTokenUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$InstantMeetingTokenPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one InstantMeetingToken.
   * @param {InstantMeetingTokenUpsertArgs} args - Arguments to update or create a InstantMeetingToken.
   * @example
   * // Update or create a InstantMeetingToken
   * const instantMeetingToken = await prisma.instantMeetingToken.upsert({
   *   create: {
   *     // ... data to create a InstantMeetingToken
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the InstantMeetingToken we want to update
   *   }
   * })
   */
  upsert<T extends InstantMeetingTokenUpsertArgs>(
    args: Prisma.SelectSubset<T, InstantMeetingTokenUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__InstantMeetingTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$InstantMeetingTokenPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of InstantMeetingTokens.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstantMeetingTokenCountArgs} args - Arguments to filter InstantMeetingTokens to count.
   * @example
   * // Count the number of InstantMeetingTokens
   * const count = await prisma.instantMeetingToken.count({
   *   where: {
   *     // ... the filter for the InstantMeetingTokens we want to count
   *   }
   * })
   **/
  count<T extends InstantMeetingTokenCountArgs>(
    args?: Prisma.Subset<T, InstantMeetingTokenCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], InstantMeetingTokenCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a InstantMeetingToken.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstantMeetingTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends InstantMeetingTokenAggregateArgs>(
    args: Prisma.Subset<T, InstantMeetingTokenAggregateArgs>
  ): Prisma.PrismaPromise<GetInstantMeetingTokenAggregateType<T>>;

  /**
   * Group by InstantMeetingToken.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InstantMeetingTokenGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends InstantMeetingTokenGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: InstantMeetingTokenGroupByArgs["orderBy"] }
      : { orderBy?: InstantMeetingTokenGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, InstantMeetingTokenGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetInstantMeetingTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the InstantMeetingToken model
   */
  readonly fields: InstantMeetingTokenFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for InstantMeetingToken.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__InstantMeetingTokenClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  team<T extends Prisma.TeamDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.TeamDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__TeamClient<
    | runtime.Types.Result.GetResult<Prisma.$TeamPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  booking<T extends Prisma.InstantMeetingToken$bookingArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.InstantMeetingToken$bookingArgs<ExtArgs>>
  ): Prisma.Prisma__BookingClient<
    runtime.Types.Result.GetResult<
      Prisma.$BookingPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the InstantMeetingToken model
 */
export interface InstantMeetingTokenFieldRefs {
  readonly id: Prisma.FieldRef<"InstantMeetingToken", "Int">;
  readonly token: Prisma.FieldRef<"InstantMeetingToken", "String">;
  readonly expires: Prisma.FieldRef<"InstantMeetingToken", "DateTime">;
  readonly teamId: Prisma.FieldRef<"InstantMeetingToken", "Int">;
  readonly bookingId: Prisma.FieldRef<"InstantMeetingToken", "Int">;
  readonly createdAt: Prisma.FieldRef<"InstantMeetingToken", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"InstantMeetingToken", "DateTime">;
}

// Custom InputTypes
/**
 * InstantMeetingToken findUnique
 */
export type InstantMeetingTokenFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InstantMeetingToken
   */
  select?: Prisma.InstantMeetingTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InstantMeetingToken
   */
  omit?: Prisma.InstantMeetingTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstantMeetingTokenInclude<ExtArgs> | null;
  /**
   * Filter, which InstantMeetingToken to fetch.
   */
  where: Prisma.InstantMeetingTokenWhereUniqueInput;
};

/**
 * InstantMeetingToken findUniqueOrThrow
 */
export type InstantMeetingTokenFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InstantMeetingToken
   */
  select?: Prisma.InstantMeetingTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InstantMeetingToken
   */
  omit?: Prisma.InstantMeetingTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstantMeetingTokenInclude<ExtArgs> | null;
  /**
   * Filter, which InstantMeetingToken to fetch.
   */
  where: Prisma.InstantMeetingTokenWhereUniqueInput;
};

/**
 * InstantMeetingToken findFirst
 */
export type InstantMeetingTokenFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InstantMeetingToken
   */
  select?: Prisma.InstantMeetingTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InstantMeetingToken
   */
  omit?: Prisma.InstantMeetingTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstantMeetingTokenInclude<ExtArgs> | null;
  /**
   * Filter, which InstantMeetingToken to fetch.
   */
  where?: Prisma.InstantMeetingTokenWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of InstantMeetingTokens to fetch.
   */
  orderBy?:
    | Prisma.InstantMeetingTokenOrderByWithRelationInput
    | Prisma.InstantMeetingTokenOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for InstantMeetingTokens.
   */
  cursor?: Prisma.InstantMeetingTokenWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` InstantMeetingTokens from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` InstantMeetingTokens.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of InstantMeetingTokens.
   */
  distinct?: Prisma.InstantMeetingTokenScalarFieldEnum | Prisma.InstantMeetingTokenScalarFieldEnum[];
};

/**
 * InstantMeetingToken findFirstOrThrow
 */
export type InstantMeetingTokenFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InstantMeetingToken
   */
  select?: Prisma.InstantMeetingTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InstantMeetingToken
   */
  omit?: Prisma.InstantMeetingTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstantMeetingTokenInclude<ExtArgs> | null;
  /**
   * Filter, which InstantMeetingToken to fetch.
   */
  where?: Prisma.InstantMeetingTokenWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of InstantMeetingTokens to fetch.
   */
  orderBy?:
    | Prisma.InstantMeetingTokenOrderByWithRelationInput
    | Prisma.InstantMeetingTokenOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for InstantMeetingTokens.
   */
  cursor?: Prisma.InstantMeetingTokenWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` InstantMeetingTokens from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` InstantMeetingTokens.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of InstantMeetingTokens.
   */
  distinct?: Prisma.InstantMeetingTokenScalarFieldEnum | Prisma.InstantMeetingTokenScalarFieldEnum[];
};

/**
 * InstantMeetingToken findMany
 */
export type InstantMeetingTokenFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InstantMeetingToken
   */
  select?: Prisma.InstantMeetingTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InstantMeetingToken
   */
  omit?: Prisma.InstantMeetingTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstantMeetingTokenInclude<ExtArgs> | null;
  /**
   * Filter, which InstantMeetingTokens to fetch.
   */
  where?: Prisma.InstantMeetingTokenWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of InstantMeetingTokens to fetch.
   */
  orderBy?:
    | Prisma.InstantMeetingTokenOrderByWithRelationInput
    | Prisma.InstantMeetingTokenOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing InstantMeetingTokens.
   */
  cursor?: Prisma.InstantMeetingTokenWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` InstantMeetingTokens from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` InstantMeetingTokens.
   */
  skip?: number;
  distinct?: Prisma.InstantMeetingTokenScalarFieldEnum | Prisma.InstantMeetingTokenScalarFieldEnum[];
};

/**
 * InstantMeetingToken create
 */
export type InstantMeetingTokenCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InstantMeetingToken
   */
  select?: Prisma.InstantMeetingTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InstantMeetingToken
   */
  omit?: Prisma.InstantMeetingTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstantMeetingTokenInclude<ExtArgs> | null;
  /**
   * The data needed to create a InstantMeetingToken.
   */
  data: Prisma.XOR<Prisma.InstantMeetingTokenCreateInput, Prisma.InstantMeetingTokenUncheckedCreateInput>;
};

/**
 * InstantMeetingToken createMany
 */
export type InstantMeetingTokenCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many InstantMeetingTokens.
   */
  data: Prisma.InstantMeetingTokenCreateManyInput | Prisma.InstantMeetingTokenCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * InstantMeetingToken createManyAndReturn
 */
export type InstantMeetingTokenCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InstantMeetingToken
   */
  select?: Prisma.InstantMeetingTokenSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the InstantMeetingToken
   */
  omit?: Prisma.InstantMeetingTokenOmit<ExtArgs> | null;
  /**
   * The data used to create many InstantMeetingTokens.
   */
  data: Prisma.InstantMeetingTokenCreateManyInput | Prisma.InstantMeetingTokenCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstantMeetingTokenIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * InstantMeetingToken update
 */
export type InstantMeetingTokenUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InstantMeetingToken
   */
  select?: Prisma.InstantMeetingTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InstantMeetingToken
   */
  omit?: Prisma.InstantMeetingTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstantMeetingTokenInclude<ExtArgs> | null;
  /**
   * The data needed to update a InstantMeetingToken.
   */
  data: Prisma.XOR<Prisma.InstantMeetingTokenUpdateInput, Prisma.InstantMeetingTokenUncheckedUpdateInput>;
  /**
   * Choose, which InstantMeetingToken to update.
   */
  where: Prisma.InstantMeetingTokenWhereUniqueInput;
};

/**
 * InstantMeetingToken updateMany
 */
export type InstantMeetingTokenUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update InstantMeetingTokens.
   */
  data: Prisma.XOR<
    Prisma.InstantMeetingTokenUpdateManyMutationInput,
    Prisma.InstantMeetingTokenUncheckedUpdateManyInput
  >;
  /**
   * Filter which InstantMeetingTokens to update
   */
  where?: Prisma.InstantMeetingTokenWhereInput;
  /**
   * Limit how many InstantMeetingTokens to update.
   */
  limit?: number;
};

/**
 * InstantMeetingToken updateManyAndReturn
 */
export type InstantMeetingTokenUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InstantMeetingToken
   */
  select?: Prisma.InstantMeetingTokenSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the InstantMeetingToken
   */
  omit?: Prisma.InstantMeetingTokenOmit<ExtArgs> | null;
  /**
   * The data used to update InstantMeetingTokens.
   */
  data: Prisma.XOR<
    Prisma.InstantMeetingTokenUpdateManyMutationInput,
    Prisma.InstantMeetingTokenUncheckedUpdateManyInput
  >;
  /**
   * Filter which InstantMeetingTokens to update
   */
  where?: Prisma.InstantMeetingTokenWhereInput;
  /**
   * Limit how many InstantMeetingTokens to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstantMeetingTokenIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * InstantMeetingToken upsert
 */
export type InstantMeetingTokenUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InstantMeetingToken
   */
  select?: Prisma.InstantMeetingTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InstantMeetingToken
   */
  omit?: Prisma.InstantMeetingTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstantMeetingTokenInclude<ExtArgs> | null;
  /**
   * The filter to search for the InstantMeetingToken to update in case it exists.
   */
  where: Prisma.InstantMeetingTokenWhereUniqueInput;
  /**
   * In case the InstantMeetingToken found by the `where` argument doesn't exist, create a new InstantMeetingToken with this data.
   */
  create: Prisma.XOR<Prisma.InstantMeetingTokenCreateInput, Prisma.InstantMeetingTokenUncheckedCreateInput>;
  /**
   * In case the InstantMeetingToken was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.InstantMeetingTokenUpdateInput, Prisma.InstantMeetingTokenUncheckedUpdateInput>;
};

/**
 * InstantMeetingToken delete
 */
export type InstantMeetingTokenDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InstantMeetingToken
   */
  select?: Prisma.InstantMeetingTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InstantMeetingToken
   */
  omit?: Prisma.InstantMeetingTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstantMeetingTokenInclude<ExtArgs> | null;
  /**
   * Filter which InstantMeetingToken to delete.
   */
  where: Prisma.InstantMeetingTokenWhereUniqueInput;
};

/**
 * InstantMeetingToken deleteMany
 */
export type InstantMeetingTokenDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which InstantMeetingTokens to delete
   */
  where?: Prisma.InstantMeetingTokenWhereInput;
  /**
   * Limit how many InstantMeetingTokens to delete.
   */
  limit?: number;
};

/**
 * InstantMeetingToken.booking
 */
export type InstantMeetingToken$bookingArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Booking
   */
  select?: Prisma.BookingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Booking
   */
  omit?: Prisma.BookingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BookingInclude<ExtArgs> | null;
  where?: Prisma.BookingWhereInput;
};

/**
 * InstantMeetingToken without action
 */
export type InstantMeetingTokenDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InstantMeetingToken
   */
  select?: Prisma.InstantMeetingTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InstantMeetingToken
   */
  omit?: Prisma.InstantMeetingTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InstantMeetingTokenInclude<ExtArgs> | null;
};
