/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `SecondaryEmail` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model SecondaryEmail
 *
 */
export type SecondaryEmailModel = runtime.Types.Result.DefaultSelection<Prisma.$SecondaryEmailPayload>;

export type AggregateSecondaryEmail = {
  _count: SecondaryEmailCountAggregateOutputType | null;
  _avg: SecondaryEmailAvgAggregateOutputType | null;
  _sum: SecondaryEmailSumAggregateOutputType | null;
  _min: SecondaryEmailMinAggregateOutputType | null;
  _max: SecondaryEmailMaxAggregateOutputType | null;
};

export type SecondaryEmailAvgAggregateOutputType = {
  id: number | null;
  userId: number | null;
};

export type SecondaryEmailSumAggregateOutputType = {
  id: number | null;
  userId: number | null;
};

export type SecondaryEmailMinAggregateOutputType = {
  id: number | null;
  userId: number | null;
  email: string | null;
  emailVerified: Date | null;
};

export type SecondaryEmailMaxAggregateOutputType = {
  id: number | null;
  userId: number | null;
  email: string | null;
  emailVerified: Date | null;
};

export type SecondaryEmailCountAggregateOutputType = {
  id: number;
  userId: number;
  email: number;
  emailVerified: number;
  _all: number;
};

export type SecondaryEmailAvgAggregateInputType = {
  id?: true;
  userId?: true;
};

export type SecondaryEmailSumAggregateInputType = {
  id?: true;
  userId?: true;
};

export type SecondaryEmailMinAggregateInputType = {
  id?: true;
  userId?: true;
  email?: true;
  emailVerified?: true;
};

export type SecondaryEmailMaxAggregateInputType = {
  id?: true;
  userId?: true;
  email?: true;
  emailVerified?: true;
};

export type SecondaryEmailCountAggregateInputType = {
  id?: true;
  userId?: true;
  email?: true;
  emailVerified?: true;
  _all?: true;
};

export type SecondaryEmailAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which SecondaryEmail to aggregate.
   */
  where?: Prisma.SecondaryEmailWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of SecondaryEmails to fetch.
   */
  orderBy?: Prisma.SecondaryEmailOrderByWithRelationInput | Prisma.SecondaryEmailOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.SecondaryEmailWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` SecondaryEmails from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` SecondaryEmails.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned SecondaryEmails
   **/
  _count?: true | SecondaryEmailCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: SecondaryEmailAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: SecondaryEmailSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: SecondaryEmailMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: SecondaryEmailMaxAggregateInputType;
};

export type GetSecondaryEmailAggregateType<T extends SecondaryEmailAggregateArgs> = {
  [P in keyof T & keyof AggregateSecondaryEmail]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateSecondaryEmail[P]>
    : Prisma.GetScalarType<T[P], AggregateSecondaryEmail[P]>;
};

export type SecondaryEmailGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.SecondaryEmailWhereInput;
  orderBy?:
    | Prisma.SecondaryEmailOrderByWithAggregationInput
    | Prisma.SecondaryEmailOrderByWithAggregationInput[];
  by: Prisma.SecondaryEmailScalarFieldEnum[] | Prisma.SecondaryEmailScalarFieldEnum;
  having?: Prisma.SecondaryEmailScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: SecondaryEmailCountAggregateInputType | true;
  _avg?: SecondaryEmailAvgAggregateInputType;
  _sum?: SecondaryEmailSumAggregateInputType;
  _min?: SecondaryEmailMinAggregateInputType;
  _max?: SecondaryEmailMaxAggregateInputType;
};

export type SecondaryEmailGroupByOutputType = {
  id: number;
  userId: number;
  email: string;
  emailVerified: Date | null;
  _count: SecondaryEmailCountAggregateOutputType | null;
  _avg: SecondaryEmailAvgAggregateOutputType | null;
  _sum: SecondaryEmailSumAggregateOutputType | null;
  _min: SecondaryEmailMinAggregateOutputType | null;
  _max: SecondaryEmailMaxAggregateOutputType | null;
};

type GetSecondaryEmailGroupByPayload<T extends SecondaryEmailGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<SecondaryEmailGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof SecondaryEmailGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], SecondaryEmailGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], SecondaryEmailGroupByOutputType[P]>;
    }
  >
>;

export type SecondaryEmailWhereInput = {
  AND?: Prisma.SecondaryEmailWhereInput | Prisma.SecondaryEmailWhereInput[];
  OR?: Prisma.SecondaryEmailWhereInput[];
  NOT?: Prisma.SecondaryEmailWhereInput | Prisma.SecondaryEmailWhereInput[];
  id?: Prisma.IntFilter<"SecondaryEmail"> | number;
  userId?: Prisma.IntFilter<"SecondaryEmail"> | number;
  email?: Prisma.StringFilter<"SecondaryEmail"> | string;
  emailVerified?: Prisma.DateTimeNullableFilter<"SecondaryEmail"> | Date | string | null;
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
  verificationTokens?: Prisma.VerificationTokenListRelationFilter;
  eventTypes?: Prisma.EventTypeListRelationFilter;
};

export type SecondaryEmailOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  emailVerified?: Prisma.SortOrderInput | Prisma.SortOrder;
  user?: Prisma.UserOrderByWithRelationInput;
  verificationTokens?: Prisma.VerificationTokenOrderByRelationAggregateInput;
  eventTypes?: Prisma.EventTypeOrderByRelationAggregateInput;
};

export type SecondaryEmailWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    email?: string;
    userId_email?: Prisma.SecondaryEmailUserIdEmailCompoundUniqueInput;
    AND?: Prisma.SecondaryEmailWhereInput | Prisma.SecondaryEmailWhereInput[];
    OR?: Prisma.SecondaryEmailWhereInput[];
    NOT?: Prisma.SecondaryEmailWhereInput | Prisma.SecondaryEmailWhereInput[];
    userId?: Prisma.IntFilter<"SecondaryEmail"> | number;
    emailVerified?: Prisma.DateTimeNullableFilter<"SecondaryEmail"> | Date | string | null;
    user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
    verificationTokens?: Prisma.VerificationTokenListRelationFilter;
    eventTypes?: Prisma.EventTypeListRelationFilter;
  },
  "id" | "email" | "userId_email"
>;

export type SecondaryEmailOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  emailVerified?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.SecondaryEmailCountOrderByAggregateInput;
  _avg?: Prisma.SecondaryEmailAvgOrderByAggregateInput;
  _max?: Prisma.SecondaryEmailMaxOrderByAggregateInput;
  _min?: Prisma.SecondaryEmailMinOrderByAggregateInput;
  _sum?: Prisma.SecondaryEmailSumOrderByAggregateInput;
};

export type SecondaryEmailScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.SecondaryEmailScalarWhereWithAggregatesInput
    | Prisma.SecondaryEmailScalarWhereWithAggregatesInput[];
  OR?: Prisma.SecondaryEmailScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.SecondaryEmailScalarWhereWithAggregatesInput
    | Prisma.SecondaryEmailScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"SecondaryEmail"> | number;
  userId?: Prisma.IntWithAggregatesFilter<"SecondaryEmail"> | number;
  email?: Prisma.StringWithAggregatesFilter<"SecondaryEmail"> | string;
  emailVerified?: Prisma.DateTimeNullableWithAggregatesFilter<"SecondaryEmail"> | Date | string | null;
};

export type SecondaryEmailCreateInput = {
  email: string;
  emailVerified?: Date | string | null;
  user: Prisma.UserCreateNestedOneWithoutSecondaryEmailsInput;
  verificationTokens?: Prisma.VerificationTokenCreateNestedManyWithoutSecondaryEmailInput;
  eventTypes?: Prisma.EventTypeCreateNestedManyWithoutSecondaryEmailInput;
};

export type SecondaryEmailUncheckedCreateInput = {
  id?: number;
  userId: number;
  email: string;
  emailVerified?: Date | string | null;
  verificationTokens?: Prisma.VerificationTokenUncheckedCreateNestedManyWithoutSecondaryEmailInput;
  eventTypes?: Prisma.EventTypeUncheckedCreateNestedManyWithoutSecondaryEmailInput;
};

export type SecondaryEmailUpdateInput = {
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  user?: Prisma.UserUpdateOneRequiredWithoutSecondaryEmailsNestedInput;
  verificationTokens?: Prisma.VerificationTokenUpdateManyWithoutSecondaryEmailNestedInput;
  eventTypes?: Prisma.EventTypeUpdateManyWithoutSecondaryEmailNestedInput;
};

export type SecondaryEmailUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  verificationTokens?: Prisma.VerificationTokenUncheckedUpdateManyWithoutSecondaryEmailNestedInput;
  eventTypes?: Prisma.EventTypeUncheckedUpdateManyWithoutSecondaryEmailNestedInput;
};

export type SecondaryEmailCreateManyInput = {
  id?: number;
  userId: number;
  email: string;
  emailVerified?: Date | string | null;
};

export type SecondaryEmailUpdateManyMutationInput = {
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
};

export type SecondaryEmailUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
};

export type SecondaryEmailNullableScalarRelationFilter = {
  is?: Prisma.SecondaryEmailWhereInput | null;
  isNot?: Prisma.SecondaryEmailWhereInput | null;
};

export type SecondaryEmailListRelationFilter = {
  every?: Prisma.SecondaryEmailWhereInput;
  some?: Prisma.SecondaryEmailWhereInput;
  none?: Prisma.SecondaryEmailWhereInput;
};

export type SecondaryEmailOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type SecondaryEmailUserIdEmailCompoundUniqueInput = {
  userId: number;
  email: string;
};

export type SecondaryEmailCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  emailVerified?: Prisma.SortOrder;
};

export type SecondaryEmailAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
};

export type SecondaryEmailMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  emailVerified?: Prisma.SortOrder;
};

export type SecondaryEmailMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  emailVerified?: Prisma.SortOrder;
};

export type SecondaryEmailSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
};

export type SecondaryEmailCreateNestedOneWithoutEventTypesInput = {
  create?: Prisma.XOR<
    Prisma.SecondaryEmailCreateWithoutEventTypesInput,
    Prisma.SecondaryEmailUncheckedCreateWithoutEventTypesInput
  >;
  connectOrCreate?: Prisma.SecondaryEmailCreateOrConnectWithoutEventTypesInput;
  connect?: Prisma.SecondaryEmailWhereUniqueInput;
};

export type SecondaryEmailUpdateOneWithoutEventTypesNestedInput = {
  create?: Prisma.XOR<
    Prisma.SecondaryEmailCreateWithoutEventTypesInput,
    Prisma.SecondaryEmailUncheckedCreateWithoutEventTypesInput
  >;
  connectOrCreate?: Prisma.SecondaryEmailCreateOrConnectWithoutEventTypesInput;
  upsert?: Prisma.SecondaryEmailUpsertWithoutEventTypesInput;
  disconnect?: Prisma.SecondaryEmailWhereInput | boolean;
  delete?: Prisma.SecondaryEmailWhereInput | boolean;
  connect?: Prisma.SecondaryEmailWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SecondaryEmailUpdateToOneWithWhereWithoutEventTypesInput,
      Prisma.SecondaryEmailUpdateWithoutEventTypesInput
    >,
    Prisma.SecondaryEmailUncheckedUpdateWithoutEventTypesInput
  >;
};

export type SecondaryEmailCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.SecondaryEmailCreateWithoutUserInput,
        Prisma.SecondaryEmailUncheckedCreateWithoutUserInput
      >
    | Prisma.SecondaryEmailCreateWithoutUserInput[]
    | Prisma.SecondaryEmailUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.SecondaryEmailCreateOrConnectWithoutUserInput
    | Prisma.SecondaryEmailCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.SecondaryEmailCreateManyUserInputEnvelope;
  connect?: Prisma.SecondaryEmailWhereUniqueInput | Prisma.SecondaryEmailWhereUniqueInput[];
};

export type SecondaryEmailUncheckedCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<
        Prisma.SecondaryEmailCreateWithoutUserInput,
        Prisma.SecondaryEmailUncheckedCreateWithoutUserInput
      >
    | Prisma.SecondaryEmailCreateWithoutUserInput[]
    | Prisma.SecondaryEmailUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.SecondaryEmailCreateOrConnectWithoutUserInput
    | Prisma.SecondaryEmailCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.SecondaryEmailCreateManyUserInputEnvelope;
  connect?: Prisma.SecondaryEmailWhereUniqueInput | Prisma.SecondaryEmailWhereUniqueInput[];
};

export type SecondaryEmailUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.SecondaryEmailCreateWithoutUserInput,
        Prisma.SecondaryEmailUncheckedCreateWithoutUserInput
      >
    | Prisma.SecondaryEmailCreateWithoutUserInput[]
    | Prisma.SecondaryEmailUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.SecondaryEmailCreateOrConnectWithoutUserInput
    | Prisma.SecondaryEmailCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.SecondaryEmailUpsertWithWhereUniqueWithoutUserInput
    | Prisma.SecondaryEmailUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.SecondaryEmailCreateManyUserInputEnvelope;
  set?: Prisma.SecondaryEmailWhereUniqueInput | Prisma.SecondaryEmailWhereUniqueInput[];
  disconnect?: Prisma.SecondaryEmailWhereUniqueInput | Prisma.SecondaryEmailWhereUniqueInput[];
  delete?: Prisma.SecondaryEmailWhereUniqueInput | Prisma.SecondaryEmailWhereUniqueInput[];
  connect?: Prisma.SecondaryEmailWhereUniqueInput | Prisma.SecondaryEmailWhereUniqueInput[];
  update?:
    | Prisma.SecondaryEmailUpdateWithWhereUniqueWithoutUserInput
    | Prisma.SecondaryEmailUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.SecondaryEmailUpdateManyWithWhereWithoutUserInput
    | Prisma.SecondaryEmailUpdateManyWithWhereWithoutUserInput[];
  deleteMany?: Prisma.SecondaryEmailScalarWhereInput | Prisma.SecondaryEmailScalarWhereInput[];
};

export type SecondaryEmailUncheckedUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.SecondaryEmailCreateWithoutUserInput,
        Prisma.SecondaryEmailUncheckedCreateWithoutUserInput
      >
    | Prisma.SecondaryEmailCreateWithoutUserInput[]
    | Prisma.SecondaryEmailUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.SecondaryEmailCreateOrConnectWithoutUserInput
    | Prisma.SecondaryEmailCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.SecondaryEmailUpsertWithWhereUniqueWithoutUserInput
    | Prisma.SecondaryEmailUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.SecondaryEmailCreateManyUserInputEnvelope;
  set?: Prisma.SecondaryEmailWhereUniqueInput | Prisma.SecondaryEmailWhereUniqueInput[];
  disconnect?: Prisma.SecondaryEmailWhereUniqueInput | Prisma.SecondaryEmailWhereUniqueInput[];
  delete?: Prisma.SecondaryEmailWhereUniqueInput | Prisma.SecondaryEmailWhereUniqueInput[];
  connect?: Prisma.SecondaryEmailWhereUniqueInput | Prisma.SecondaryEmailWhereUniqueInput[];
  update?:
    | Prisma.SecondaryEmailUpdateWithWhereUniqueWithoutUserInput
    | Prisma.SecondaryEmailUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.SecondaryEmailUpdateManyWithWhereWithoutUserInput
    | Prisma.SecondaryEmailUpdateManyWithWhereWithoutUserInput[];
  deleteMany?: Prisma.SecondaryEmailScalarWhereInput | Prisma.SecondaryEmailScalarWhereInput[];
};

export type SecondaryEmailCreateNestedOneWithoutVerificationTokensInput = {
  create?: Prisma.XOR<
    Prisma.SecondaryEmailCreateWithoutVerificationTokensInput,
    Prisma.SecondaryEmailUncheckedCreateWithoutVerificationTokensInput
  >;
  connectOrCreate?: Prisma.SecondaryEmailCreateOrConnectWithoutVerificationTokensInput;
  connect?: Prisma.SecondaryEmailWhereUniqueInput;
};

export type SecondaryEmailUpdateOneWithoutVerificationTokensNestedInput = {
  create?: Prisma.XOR<
    Prisma.SecondaryEmailCreateWithoutVerificationTokensInput,
    Prisma.SecondaryEmailUncheckedCreateWithoutVerificationTokensInput
  >;
  connectOrCreate?: Prisma.SecondaryEmailCreateOrConnectWithoutVerificationTokensInput;
  upsert?: Prisma.SecondaryEmailUpsertWithoutVerificationTokensInput;
  disconnect?: Prisma.SecondaryEmailWhereInput | boolean;
  delete?: Prisma.SecondaryEmailWhereInput | boolean;
  connect?: Prisma.SecondaryEmailWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.SecondaryEmailUpdateToOneWithWhereWithoutVerificationTokensInput,
      Prisma.SecondaryEmailUpdateWithoutVerificationTokensInput
    >,
    Prisma.SecondaryEmailUncheckedUpdateWithoutVerificationTokensInput
  >;
};

export type SecondaryEmailCreateWithoutEventTypesInput = {
  email: string;
  emailVerified?: Date | string | null;
  user: Prisma.UserCreateNestedOneWithoutSecondaryEmailsInput;
  verificationTokens?: Prisma.VerificationTokenCreateNestedManyWithoutSecondaryEmailInput;
};

export type SecondaryEmailUncheckedCreateWithoutEventTypesInput = {
  id?: number;
  userId: number;
  email: string;
  emailVerified?: Date | string | null;
  verificationTokens?: Prisma.VerificationTokenUncheckedCreateNestedManyWithoutSecondaryEmailInput;
};

export type SecondaryEmailCreateOrConnectWithoutEventTypesInput = {
  where: Prisma.SecondaryEmailWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SecondaryEmailCreateWithoutEventTypesInput,
    Prisma.SecondaryEmailUncheckedCreateWithoutEventTypesInput
  >;
};

export type SecondaryEmailUpsertWithoutEventTypesInput = {
  update: Prisma.XOR<
    Prisma.SecondaryEmailUpdateWithoutEventTypesInput,
    Prisma.SecondaryEmailUncheckedUpdateWithoutEventTypesInput
  >;
  create: Prisma.XOR<
    Prisma.SecondaryEmailCreateWithoutEventTypesInput,
    Prisma.SecondaryEmailUncheckedCreateWithoutEventTypesInput
  >;
  where?: Prisma.SecondaryEmailWhereInput;
};

export type SecondaryEmailUpdateToOneWithWhereWithoutEventTypesInput = {
  where?: Prisma.SecondaryEmailWhereInput;
  data: Prisma.XOR<
    Prisma.SecondaryEmailUpdateWithoutEventTypesInput,
    Prisma.SecondaryEmailUncheckedUpdateWithoutEventTypesInput
  >;
};

export type SecondaryEmailUpdateWithoutEventTypesInput = {
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  user?: Prisma.UserUpdateOneRequiredWithoutSecondaryEmailsNestedInput;
  verificationTokens?: Prisma.VerificationTokenUpdateManyWithoutSecondaryEmailNestedInput;
};

export type SecondaryEmailUncheckedUpdateWithoutEventTypesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  verificationTokens?: Prisma.VerificationTokenUncheckedUpdateManyWithoutSecondaryEmailNestedInput;
};

export type SecondaryEmailCreateWithoutUserInput = {
  email: string;
  emailVerified?: Date | string | null;
  verificationTokens?: Prisma.VerificationTokenCreateNestedManyWithoutSecondaryEmailInput;
  eventTypes?: Prisma.EventTypeCreateNestedManyWithoutSecondaryEmailInput;
};

export type SecondaryEmailUncheckedCreateWithoutUserInput = {
  id?: number;
  email: string;
  emailVerified?: Date | string | null;
  verificationTokens?: Prisma.VerificationTokenUncheckedCreateNestedManyWithoutSecondaryEmailInput;
  eventTypes?: Prisma.EventTypeUncheckedCreateNestedManyWithoutSecondaryEmailInput;
};

export type SecondaryEmailCreateOrConnectWithoutUserInput = {
  where: Prisma.SecondaryEmailWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SecondaryEmailCreateWithoutUserInput,
    Prisma.SecondaryEmailUncheckedCreateWithoutUserInput
  >;
};

export type SecondaryEmailCreateManyUserInputEnvelope = {
  data: Prisma.SecondaryEmailCreateManyUserInput | Prisma.SecondaryEmailCreateManyUserInput[];
  skipDuplicates?: boolean;
};

export type SecondaryEmailUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.SecondaryEmailWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.SecondaryEmailUpdateWithoutUserInput,
    Prisma.SecondaryEmailUncheckedUpdateWithoutUserInput
  >;
  create: Prisma.XOR<
    Prisma.SecondaryEmailCreateWithoutUserInput,
    Prisma.SecondaryEmailUncheckedCreateWithoutUserInput
  >;
};

export type SecondaryEmailUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.SecondaryEmailWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.SecondaryEmailUpdateWithoutUserInput,
    Prisma.SecondaryEmailUncheckedUpdateWithoutUserInput
  >;
};

export type SecondaryEmailUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.SecondaryEmailScalarWhereInput;
  data: Prisma.XOR<
    Prisma.SecondaryEmailUpdateManyMutationInput,
    Prisma.SecondaryEmailUncheckedUpdateManyWithoutUserInput
  >;
};

export type SecondaryEmailScalarWhereInput = {
  AND?: Prisma.SecondaryEmailScalarWhereInput | Prisma.SecondaryEmailScalarWhereInput[];
  OR?: Prisma.SecondaryEmailScalarWhereInput[];
  NOT?: Prisma.SecondaryEmailScalarWhereInput | Prisma.SecondaryEmailScalarWhereInput[];
  id?: Prisma.IntFilter<"SecondaryEmail"> | number;
  userId?: Prisma.IntFilter<"SecondaryEmail"> | number;
  email?: Prisma.StringFilter<"SecondaryEmail"> | string;
  emailVerified?: Prisma.DateTimeNullableFilter<"SecondaryEmail"> | Date | string | null;
};

export type SecondaryEmailCreateWithoutVerificationTokensInput = {
  email: string;
  emailVerified?: Date | string | null;
  user: Prisma.UserCreateNestedOneWithoutSecondaryEmailsInput;
  eventTypes?: Prisma.EventTypeCreateNestedManyWithoutSecondaryEmailInput;
};

export type SecondaryEmailUncheckedCreateWithoutVerificationTokensInput = {
  id?: number;
  userId: number;
  email: string;
  emailVerified?: Date | string | null;
  eventTypes?: Prisma.EventTypeUncheckedCreateNestedManyWithoutSecondaryEmailInput;
};

export type SecondaryEmailCreateOrConnectWithoutVerificationTokensInput = {
  where: Prisma.SecondaryEmailWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.SecondaryEmailCreateWithoutVerificationTokensInput,
    Prisma.SecondaryEmailUncheckedCreateWithoutVerificationTokensInput
  >;
};

export type SecondaryEmailUpsertWithoutVerificationTokensInput = {
  update: Prisma.XOR<
    Prisma.SecondaryEmailUpdateWithoutVerificationTokensInput,
    Prisma.SecondaryEmailUncheckedUpdateWithoutVerificationTokensInput
  >;
  create: Prisma.XOR<
    Prisma.SecondaryEmailCreateWithoutVerificationTokensInput,
    Prisma.SecondaryEmailUncheckedCreateWithoutVerificationTokensInput
  >;
  where?: Prisma.SecondaryEmailWhereInput;
};

export type SecondaryEmailUpdateToOneWithWhereWithoutVerificationTokensInput = {
  where?: Prisma.SecondaryEmailWhereInput;
  data: Prisma.XOR<
    Prisma.SecondaryEmailUpdateWithoutVerificationTokensInput,
    Prisma.SecondaryEmailUncheckedUpdateWithoutVerificationTokensInput
  >;
};

export type SecondaryEmailUpdateWithoutVerificationTokensInput = {
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  user?: Prisma.UserUpdateOneRequiredWithoutSecondaryEmailsNestedInput;
  eventTypes?: Prisma.EventTypeUpdateManyWithoutSecondaryEmailNestedInput;
};

export type SecondaryEmailUncheckedUpdateWithoutVerificationTokensInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  eventTypes?: Prisma.EventTypeUncheckedUpdateManyWithoutSecondaryEmailNestedInput;
};

export type SecondaryEmailCreateManyUserInput = {
  id?: number;
  email: string;
  emailVerified?: Date | string | null;
};

export type SecondaryEmailUpdateWithoutUserInput = {
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  verificationTokens?: Prisma.VerificationTokenUpdateManyWithoutSecondaryEmailNestedInput;
  eventTypes?: Prisma.EventTypeUpdateManyWithoutSecondaryEmailNestedInput;
};

export type SecondaryEmailUncheckedUpdateWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  verificationTokens?: Prisma.VerificationTokenUncheckedUpdateManyWithoutSecondaryEmailNestedInput;
  eventTypes?: Prisma.EventTypeUncheckedUpdateManyWithoutSecondaryEmailNestedInput;
};

export type SecondaryEmailUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  emailVerified?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
};

/**
 * Count Type SecondaryEmailCountOutputType
 */

export type SecondaryEmailCountOutputType = {
  verificationTokens: number;
  eventTypes: number;
};

export type SecondaryEmailCountOutputTypeSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  verificationTokens?: boolean | SecondaryEmailCountOutputTypeCountVerificationTokensArgs;
  eventTypes?: boolean | SecondaryEmailCountOutputTypeCountEventTypesArgs;
};

/**
 * SecondaryEmailCountOutputType without action
 */
export type SecondaryEmailCountOutputTypeDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the SecondaryEmailCountOutputType
   */
  select?: Prisma.SecondaryEmailCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * SecondaryEmailCountOutputType without action
 */
export type SecondaryEmailCountOutputTypeCountVerificationTokensArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.VerificationTokenWhereInput;
};

/**
 * SecondaryEmailCountOutputType without action
 */
export type SecondaryEmailCountOutputTypeCountEventTypesArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.EventTypeWhereInput;
};

export type SecondaryEmailSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    userId?: boolean;
    email?: boolean;
    emailVerified?: boolean;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    verificationTokens?: boolean | Prisma.SecondaryEmail$verificationTokensArgs<ExtArgs>;
    eventTypes?: boolean | Prisma.SecondaryEmail$eventTypesArgs<ExtArgs>;
    _count?: boolean | Prisma.SecondaryEmailCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["secondaryEmail"]
>;

export type SecondaryEmailSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    userId?: boolean;
    email?: boolean;
    emailVerified?: boolean;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["secondaryEmail"]
>;

export type SecondaryEmailSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    userId?: boolean;
    email?: boolean;
    emailVerified?: boolean;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["secondaryEmail"]
>;

export type SecondaryEmailSelectScalar = {
  id?: boolean;
  userId?: boolean;
  email?: boolean;
  emailVerified?: boolean;
};

export type SecondaryEmailOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  "id" | "userId" | "email" | "emailVerified",
  ExtArgs["result"]["secondaryEmail"]
>;
export type SecondaryEmailInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  verificationTokens?: boolean | Prisma.SecondaryEmail$verificationTokensArgs<ExtArgs>;
  eventTypes?: boolean | Prisma.SecondaryEmail$eventTypesArgs<ExtArgs>;
  _count?: boolean | Prisma.SecondaryEmailCountOutputTypeDefaultArgs<ExtArgs>;
};
export type SecondaryEmailIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
};
export type SecondaryEmailIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
};

export type $SecondaryEmailPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "SecondaryEmail";
  objects: {
    user: Prisma.$UserPayload<ExtArgs>;
    verificationTokens: Prisma.$VerificationTokenPayload<ExtArgs>[];
    eventTypes: Prisma.$EventTypePayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      userId: number;
      email: string;
      emailVerified: Date | null;
    },
    ExtArgs["result"]["secondaryEmail"]
  >;
  composites: {};
};

export type SecondaryEmailGetPayload<S extends boolean | null | undefined | SecondaryEmailDefaultArgs> =
  runtime.Types.Result.GetResult<Prisma.$SecondaryEmailPayload, S>;

export type SecondaryEmailCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<SecondaryEmailFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: SecondaryEmailCountAggregateInputType | true;
};

export interface SecondaryEmailDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["SecondaryEmail"];
    meta: { name: "SecondaryEmail" };
  };
  /**
   * Find zero or one SecondaryEmail that matches the filter.
   * @param {SecondaryEmailFindUniqueArgs} args - Arguments to find a SecondaryEmail
   * @example
   * // Get one SecondaryEmail
   * const secondaryEmail = await prisma.secondaryEmail.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends SecondaryEmailFindUniqueArgs>(
    args: Prisma.SelectSubset<T, SecondaryEmailFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__SecondaryEmailClient<
    runtime.Types.Result.GetResult<
      Prisma.$SecondaryEmailPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one SecondaryEmail that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {SecondaryEmailFindUniqueOrThrowArgs} args - Arguments to find a SecondaryEmail
   * @example
   * // Get one SecondaryEmail
   * const secondaryEmail = await prisma.secondaryEmail.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends SecondaryEmailFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, SecondaryEmailFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__SecondaryEmailClient<
    runtime.Types.Result.GetResult<
      Prisma.$SecondaryEmailPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first SecondaryEmail that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SecondaryEmailFindFirstArgs} args - Arguments to find a SecondaryEmail
   * @example
   * // Get one SecondaryEmail
   * const secondaryEmail = await prisma.secondaryEmail.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends SecondaryEmailFindFirstArgs>(
    args?: Prisma.SelectSubset<T, SecondaryEmailFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__SecondaryEmailClient<
    runtime.Types.Result.GetResult<
      Prisma.$SecondaryEmailPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first SecondaryEmail that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SecondaryEmailFindFirstOrThrowArgs} args - Arguments to find a SecondaryEmail
   * @example
   * // Get one SecondaryEmail
   * const secondaryEmail = await prisma.secondaryEmail.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends SecondaryEmailFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, SecondaryEmailFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__SecondaryEmailClient<
    runtime.Types.Result.GetResult<
      Prisma.$SecondaryEmailPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more SecondaryEmails that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SecondaryEmailFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all SecondaryEmails
   * const secondaryEmails = await prisma.secondaryEmail.findMany()
   *
   * // Get first 10 SecondaryEmails
   * const secondaryEmails = await prisma.secondaryEmail.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const secondaryEmailWithIdOnly = await prisma.secondaryEmail.findMany({ select: { id: true } })
   *
   */
  findMany<T extends SecondaryEmailFindManyArgs>(
    args?: Prisma.SelectSubset<T, SecondaryEmailFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$SecondaryEmailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>
  >;

  /**
   * Create a SecondaryEmail.
   * @param {SecondaryEmailCreateArgs} args - Arguments to create a SecondaryEmail.
   * @example
   * // Create one SecondaryEmail
   * const SecondaryEmail = await prisma.secondaryEmail.create({
   *   data: {
   *     // ... data to create a SecondaryEmail
   *   }
   * })
   *
   */
  create<T extends SecondaryEmailCreateArgs>(
    args: Prisma.SelectSubset<T, SecondaryEmailCreateArgs<ExtArgs>>
  ): Prisma.Prisma__SecondaryEmailClient<
    runtime.Types.Result.GetResult<Prisma.$SecondaryEmailPayload<ExtArgs>, T, "create", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many SecondaryEmails.
   * @param {SecondaryEmailCreateManyArgs} args - Arguments to create many SecondaryEmails.
   * @example
   * // Create many SecondaryEmails
   * const secondaryEmail = await prisma.secondaryEmail.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends SecondaryEmailCreateManyArgs>(
    args?: Prisma.SelectSubset<T, SecondaryEmailCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many SecondaryEmails and returns the data saved in the database.
   * @param {SecondaryEmailCreateManyAndReturnArgs} args - Arguments to create many SecondaryEmails.
   * @example
   * // Create many SecondaryEmails
   * const secondaryEmail = await prisma.secondaryEmail.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many SecondaryEmails and only return the `id`
   * const secondaryEmailWithIdOnly = await prisma.secondaryEmail.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends SecondaryEmailCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, SecondaryEmailCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$SecondaryEmailPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a SecondaryEmail.
   * @param {SecondaryEmailDeleteArgs} args - Arguments to delete one SecondaryEmail.
   * @example
   * // Delete one SecondaryEmail
   * const SecondaryEmail = await prisma.secondaryEmail.delete({
   *   where: {
   *     // ... filter to delete one SecondaryEmail
   *   }
   * })
   *
   */
  delete<T extends SecondaryEmailDeleteArgs>(
    args: Prisma.SelectSubset<T, SecondaryEmailDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__SecondaryEmailClient<
    runtime.Types.Result.GetResult<Prisma.$SecondaryEmailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one SecondaryEmail.
   * @param {SecondaryEmailUpdateArgs} args - Arguments to update one SecondaryEmail.
   * @example
   * // Update one SecondaryEmail
   * const secondaryEmail = await prisma.secondaryEmail.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends SecondaryEmailUpdateArgs>(
    args: Prisma.SelectSubset<T, SecondaryEmailUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__SecondaryEmailClient<
    runtime.Types.Result.GetResult<Prisma.$SecondaryEmailPayload<ExtArgs>, T, "update", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more SecondaryEmails.
   * @param {SecondaryEmailDeleteManyArgs} args - Arguments to filter SecondaryEmails to delete.
   * @example
   * // Delete a few SecondaryEmails
   * const { count } = await prisma.secondaryEmail.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends SecondaryEmailDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, SecondaryEmailDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more SecondaryEmails.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SecondaryEmailUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many SecondaryEmails
   * const secondaryEmail = await prisma.secondaryEmail.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends SecondaryEmailUpdateManyArgs>(
    args: Prisma.SelectSubset<T, SecondaryEmailUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more SecondaryEmails and returns the data updated in the database.
   * @param {SecondaryEmailUpdateManyAndReturnArgs} args - Arguments to update many SecondaryEmails.
   * @example
   * // Update many SecondaryEmails
   * const secondaryEmail = await prisma.secondaryEmail.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more SecondaryEmails and only return the `id`
   * const secondaryEmailWithIdOnly = await prisma.secondaryEmail.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends SecondaryEmailUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, SecondaryEmailUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$SecondaryEmailPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one SecondaryEmail.
   * @param {SecondaryEmailUpsertArgs} args - Arguments to update or create a SecondaryEmail.
   * @example
   * // Update or create a SecondaryEmail
   * const secondaryEmail = await prisma.secondaryEmail.upsert({
   *   create: {
   *     // ... data to create a SecondaryEmail
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the SecondaryEmail we want to update
   *   }
   * })
   */
  upsert<T extends SecondaryEmailUpsertArgs>(
    args: Prisma.SelectSubset<T, SecondaryEmailUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__SecondaryEmailClient<
    runtime.Types.Result.GetResult<Prisma.$SecondaryEmailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of SecondaryEmails.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SecondaryEmailCountArgs} args - Arguments to filter SecondaryEmails to count.
   * @example
   * // Count the number of SecondaryEmails
   * const count = await prisma.secondaryEmail.count({
   *   where: {
   *     // ... the filter for the SecondaryEmails we want to count
   *   }
   * })
   **/
  count<T extends SecondaryEmailCountArgs>(
    args?: Prisma.Subset<T, SecondaryEmailCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], SecondaryEmailCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a SecondaryEmail.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SecondaryEmailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends SecondaryEmailAggregateArgs>(
    args: Prisma.Subset<T, SecondaryEmailAggregateArgs>
  ): Prisma.PrismaPromise<GetSecondaryEmailAggregateType<T>>;

  /**
   * Group by SecondaryEmail.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SecondaryEmailGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends SecondaryEmailGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: SecondaryEmailGroupByArgs["orderBy"] }
      : { orderBy?: SecondaryEmailGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, SecondaryEmailGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetSecondaryEmailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the SecondaryEmail model
   */
  readonly fields: SecondaryEmailFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for SecondaryEmail.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__SecondaryEmailClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    | runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  verificationTokens<T extends Prisma.SecondaryEmail$verificationTokensArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.SecondaryEmail$verificationTokensArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$VerificationTokenPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  eventTypes<T extends Prisma.SecondaryEmail$eventTypesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.SecondaryEmail$eventTypesArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$EventTypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the SecondaryEmail model
 */
export interface SecondaryEmailFieldRefs {
  readonly id: Prisma.FieldRef<"SecondaryEmail", "Int">;
  readonly userId: Prisma.FieldRef<"SecondaryEmail", "Int">;
  readonly email: Prisma.FieldRef<"SecondaryEmail", "String">;
  readonly emailVerified: Prisma.FieldRef<"SecondaryEmail", "DateTime">;
}

// Custom InputTypes
/**
 * SecondaryEmail findUnique
 */
export type SecondaryEmailFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the SecondaryEmail
   */
  select?: Prisma.SecondaryEmailSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SecondaryEmail
   */
  omit?: Prisma.SecondaryEmailOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SecondaryEmailInclude<ExtArgs> | null;
  /**
   * Filter, which SecondaryEmail to fetch.
   */
  where: Prisma.SecondaryEmailWhereUniqueInput;
};

/**
 * SecondaryEmail findUniqueOrThrow
 */
export type SecondaryEmailFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the SecondaryEmail
   */
  select?: Prisma.SecondaryEmailSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SecondaryEmail
   */
  omit?: Prisma.SecondaryEmailOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SecondaryEmailInclude<ExtArgs> | null;
  /**
   * Filter, which SecondaryEmail to fetch.
   */
  where: Prisma.SecondaryEmailWhereUniqueInput;
};

/**
 * SecondaryEmail findFirst
 */
export type SecondaryEmailFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the SecondaryEmail
   */
  select?: Prisma.SecondaryEmailSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SecondaryEmail
   */
  omit?: Prisma.SecondaryEmailOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SecondaryEmailInclude<ExtArgs> | null;
  /**
   * Filter, which SecondaryEmail to fetch.
   */
  where?: Prisma.SecondaryEmailWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of SecondaryEmails to fetch.
   */
  orderBy?: Prisma.SecondaryEmailOrderByWithRelationInput | Prisma.SecondaryEmailOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for SecondaryEmails.
   */
  cursor?: Prisma.SecondaryEmailWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` SecondaryEmails from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` SecondaryEmails.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of SecondaryEmails.
   */
  distinct?: Prisma.SecondaryEmailScalarFieldEnum | Prisma.SecondaryEmailScalarFieldEnum[];
};

/**
 * SecondaryEmail findFirstOrThrow
 */
export type SecondaryEmailFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the SecondaryEmail
   */
  select?: Prisma.SecondaryEmailSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SecondaryEmail
   */
  omit?: Prisma.SecondaryEmailOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SecondaryEmailInclude<ExtArgs> | null;
  /**
   * Filter, which SecondaryEmail to fetch.
   */
  where?: Prisma.SecondaryEmailWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of SecondaryEmails to fetch.
   */
  orderBy?: Prisma.SecondaryEmailOrderByWithRelationInput | Prisma.SecondaryEmailOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for SecondaryEmails.
   */
  cursor?: Prisma.SecondaryEmailWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` SecondaryEmails from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` SecondaryEmails.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of SecondaryEmails.
   */
  distinct?: Prisma.SecondaryEmailScalarFieldEnum | Prisma.SecondaryEmailScalarFieldEnum[];
};

/**
 * SecondaryEmail findMany
 */
export type SecondaryEmailFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the SecondaryEmail
   */
  select?: Prisma.SecondaryEmailSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SecondaryEmail
   */
  omit?: Prisma.SecondaryEmailOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SecondaryEmailInclude<ExtArgs> | null;
  /**
   * Filter, which SecondaryEmails to fetch.
   */
  where?: Prisma.SecondaryEmailWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of SecondaryEmails to fetch.
   */
  orderBy?: Prisma.SecondaryEmailOrderByWithRelationInput | Prisma.SecondaryEmailOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing SecondaryEmails.
   */
  cursor?: Prisma.SecondaryEmailWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` SecondaryEmails from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` SecondaryEmails.
   */
  skip?: number;
  distinct?: Prisma.SecondaryEmailScalarFieldEnum | Prisma.SecondaryEmailScalarFieldEnum[];
};

/**
 * SecondaryEmail create
 */
export type SecondaryEmailCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the SecondaryEmail
   */
  select?: Prisma.SecondaryEmailSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SecondaryEmail
   */
  omit?: Prisma.SecondaryEmailOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SecondaryEmailInclude<ExtArgs> | null;
  /**
   * The data needed to create a SecondaryEmail.
   */
  data: Prisma.XOR<Prisma.SecondaryEmailCreateInput, Prisma.SecondaryEmailUncheckedCreateInput>;
};

/**
 * SecondaryEmail createMany
 */
export type SecondaryEmailCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many SecondaryEmails.
   */
  data: Prisma.SecondaryEmailCreateManyInput | Prisma.SecondaryEmailCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * SecondaryEmail createManyAndReturn
 */
export type SecondaryEmailCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the SecondaryEmail
   */
  select?: Prisma.SecondaryEmailSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the SecondaryEmail
   */
  omit?: Prisma.SecondaryEmailOmit<ExtArgs> | null;
  /**
   * The data used to create many SecondaryEmails.
   */
  data: Prisma.SecondaryEmailCreateManyInput | Prisma.SecondaryEmailCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SecondaryEmailIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * SecondaryEmail update
 */
export type SecondaryEmailUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the SecondaryEmail
   */
  select?: Prisma.SecondaryEmailSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SecondaryEmail
   */
  omit?: Prisma.SecondaryEmailOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SecondaryEmailInclude<ExtArgs> | null;
  /**
   * The data needed to update a SecondaryEmail.
   */
  data: Prisma.XOR<Prisma.SecondaryEmailUpdateInput, Prisma.SecondaryEmailUncheckedUpdateInput>;
  /**
   * Choose, which SecondaryEmail to update.
   */
  where: Prisma.SecondaryEmailWhereUniqueInput;
};

/**
 * SecondaryEmail updateMany
 */
export type SecondaryEmailUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update SecondaryEmails.
   */
  data: Prisma.XOR<
    Prisma.SecondaryEmailUpdateManyMutationInput,
    Prisma.SecondaryEmailUncheckedUpdateManyInput
  >;
  /**
   * Filter which SecondaryEmails to update
   */
  where?: Prisma.SecondaryEmailWhereInput;
  /**
   * Limit how many SecondaryEmails to update.
   */
  limit?: number;
};

/**
 * SecondaryEmail updateManyAndReturn
 */
export type SecondaryEmailUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the SecondaryEmail
   */
  select?: Prisma.SecondaryEmailSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the SecondaryEmail
   */
  omit?: Prisma.SecondaryEmailOmit<ExtArgs> | null;
  /**
   * The data used to update SecondaryEmails.
   */
  data: Prisma.XOR<
    Prisma.SecondaryEmailUpdateManyMutationInput,
    Prisma.SecondaryEmailUncheckedUpdateManyInput
  >;
  /**
   * Filter which SecondaryEmails to update
   */
  where?: Prisma.SecondaryEmailWhereInput;
  /**
   * Limit how many SecondaryEmails to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SecondaryEmailIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * SecondaryEmail upsert
 */
export type SecondaryEmailUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the SecondaryEmail
   */
  select?: Prisma.SecondaryEmailSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SecondaryEmail
   */
  omit?: Prisma.SecondaryEmailOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SecondaryEmailInclude<ExtArgs> | null;
  /**
   * The filter to search for the SecondaryEmail to update in case it exists.
   */
  where: Prisma.SecondaryEmailWhereUniqueInput;
  /**
   * In case the SecondaryEmail found by the `where` argument doesn't exist, create a new SecondaryEmail with this data.
   */
  create: Prisma.XOR<Prisma.SecondaryEmailCreateInput, Prisma.SecondaryEmailUncheckedCreateInput>;
  /**
   * In case the SecondaryEmail was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.SecondaryEmailUpdateInput, Prisma.SecondaryEmailUncheckedUpdateInput>;
};

/**
 * SecondaryEmail delete
 */
export type SecondaryEmailDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the SecondaryEmail
   */
  select?: Prisma.SecondaryEmailSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SecondaryEmail
   */
  omit?: Prisma.SecondaryEmailOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SecondaryEmailInclude<ExtArgs> | null;
  /**
   * Filter which SecondaryEmail to delete.
   */
  where: Prisma.SecondaryEmailWhereUniqueInput;
};

/**
 * SecondaryEmail deleteMany
 */
export type SecondaryEmailDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which SecondaryEmails to delete
   */
  where?: Prisma.SecondaryEmailWhereInput;
  /**
   * Limit how many SecondaryEmails to delete.
   */
  limit?: number;
};

/**
 * SecondaryEmail.verificationTokens
 */
export type SecondaryEmail$verificationTokensArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the VerificationToken
   */
  select?: Prisma.VerificationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VerificationToken
   */
  omit?: Prisma.VerificationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VerificationTokenInclude<ExtArgs> | null;
  where?: Prisma.VerificationTokenWhereInput;
  orderBy?:
    | Prisma.VerificationTokenOrderByWithRelationInput
    | Prisma.VerificationTokenOrderByWithRelationInput[];
  cursor?: Prisma.VerificationTokenWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.VerificationTokenScalarFieldEnum | Prisma.VerificationTokenScalarFieldEnum[];
};

/**
 * SecondaryEmail.eventTypes
 */
export type SecondaryEmail$eventTypesArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventType
   */
  select?: Prisma.EventTypeSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventType
   */
  omit?: Prisma.EventTypeOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeInclude<ExtArgs> | null;
  where?: Prisma.EventTypeWhereInput;
  orderBy?: Prisma.EventTypeOrderByWithRelationInput | Prisma.EventTypeOrderByWithRelationInput[];
  cursor?: Prisma.EventTypeWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.EventTypeScalarFieldEnum | Prisma.EventTypeScalarFieldEnum[];
};

/**
 * SecondaryEmail without action
 */
export type SecondaryEmailDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the SecondaryEmail
   */
  select?: Prisma.SecondaryEmailSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SecondaryEmail
   */
  omit?: Prisma.SecondaryEmailOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SecondaryEmailInclude<ExtArgs> | null;
};
