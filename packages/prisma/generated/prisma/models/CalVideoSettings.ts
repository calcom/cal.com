/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `CalVideoSettings` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model CalVideoSettings
 *
 */
export type CalVideoSettingsModel = runtime.Types.Result.DefaultSelection<Prisma.$CalVideoSettingsPayload>;

export type AggregateCalVideoSettings = {
  _count: CalVideoSettingsCountAggregateOutputType | null;
  _avg: CalVideoSettingsAvgAggregateOutputType | null;
  _sum: CalVideoSettingsSumAggregateOutputType | null;
  _min: CalVideoSettingsMinAggregateOutputType | null;
  _max: CalVideoSettingsMaxAggregateOutputType | null;
};

export type CalVideoSettingsAvgAggregateOutputType = {
  eventTypeId: number | null;
};

export type CalVideoSettingsSumAggregateOutputType = {
  eventTypeId: number | null;
};

export type CalVideoSettingsMinAggregateOutputType = {
  eventTypeId: number | null;
  disableRecordingForOrganizer: boolean | null;
  disableRecordingForGuests: boolean | null;
  enableAutomaticTranscription: boolean | null;
  enableAutomaticRecordingForOrganizer: boolean | null;
  redirectUrlOnExit: string | null;
  disableTranscriptionForGuests: boolean | null;
  disableTranscriptionForOrganizer: boolean | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type CalVideoSettingsMaxAggregateOutputType = {
  eventTypeId: number | null;
  disableRecordingForOrganizer: boolean | null;
  disableRecordingForGuests: boolean | null;
  enableAutomaticTranscription: boolean | null;
  enableAutomaticRecordingForOrganizer: boolean | null;
  redirectUrlOnExit: string | null;
  disableTranscriptionForGuests: boolean | null;
  disableTranscriptionForOrganizer: boolean | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type CalVideoSettingsCountAggregateOutputType = {
  eventTypeId: number;
  disableRecordingForOrganizer: number;
  disableRecordingForGuests: number;
  enableAutomaticTranscription: number;
  enableAutomaticRecordingForOrganizer: number;
  redirectUrlOnExit: number;
  disableTranscriptionForGuests: number;
  disableTranscriptionForOrganizer: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type CalVideoSettingsAvgAggregateInputType = {
  eventTypeId?: true;
};

export type CalVideoSettingsSumAggregateInputType = {
  eventTypeId?: true;
};

export type CalVideoSettingsMinAggregateInputType = {
  eventTypeId?: true;
  disableRecordingForOrganizer?: true;
  disableRecordingForGuests?: true;
  enableAutomaticTranscription?: true;
  enableAutomaticRecordingForOrganizer?: true;
  redirectUrlOnExit?: true;
  disableTranscriptionForGuests?: true;
  disableTranscriptionForOrganizer?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type CalVideoSettingsMaxAggregateInputType = {
  eventTypeId?: true;
  disableRecordingForOrganizer?: true;
  disableRecordingForGuests?: true;
  enableAutomaticTranscription?: true;
  enableAutomaticRecordingForOrganizer?: true;
  redirectUrlOnExit?: true;
  disableTranscriptionForGuests?: true;
  disableTranscriptionForOrganizer?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type CalVideoSettingsCountAggregateInputType = {
  eventTypeId?: true;
  disableRecordingForOrganizer?: true;
  disableRecordingForGuests?: true;
  enableAutomaticTranscription?: true;
  enableAutomaticRecordingForOrganizer?: true;
  redirectUrlOnExit?: true;
  disableTranscriptionForGuests?: true;
  disableTranscriptionForOrganizer?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type CalVideoSettingsAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which CalVideoSettings to aggregate.
   */
  where?: Prisma.CalVideoSettingsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of CalVideoSettings to fetch.
   */
  orderBy?:
    | Prisma.CalVideoSettingsOrderByWithRelationInput
    | Prisma.CalVideoSettingsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.CalVideoSettingsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` CalVideoSettings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` CalVideoSettings.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned CalVideoSettings
   **/
  _count?: true | CalVideoSettingsCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: CalVideoSettingsAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: CalVideoSettingsSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: CalVideoSettingsMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: CalVideoSettingsMaxAggregateInputType;
};

export type GetCalVideoSettingsAggregateType<T extends CalVideoSettingsAggregateArgs> = {
  [P in keyof T & keyof AggregateCalVideoSettings]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateCalVideoSettings[P]>
    : Prisma.GetScalarType<T[P], AggregateCalVideoSettings[P]>;
};

export type CalVideoSettingsGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.CalVideoSettingsWhereInput;
  orderBy?:
    | Prisma.CalVideoSettingsOrderByWithAggregationInput
    | Prisma.CalVideoSettingsOrderByWithAggregationInput[];
  by: Prisma.CalVideoSettingsScalarFieldEnum[] | Prisma.CalVideoSettingsScalarFieldEnum;
  having?: Prisma.CalVideoSettingsScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: CalVideoSettingsCountAggregateInputType | true;
  _avg?: CalVideoSettingsAvgAggregateInputType;
  _sum?: CalVideoSettingsSumAggregateInputType;
  _min?: CalVideoSettingsMinAggregateInputType;
  _max?: CalVideoSettingsMaxAggregateInputType;
};

export type CalVideoSettingsGroupByOutputType = {
  eventTypeId: number;
  disableRecordingForOrganizer: boolean;
  disableRecordingForGuests: boolean;
  enableAutomaticTranscription: boolean;
  enableAutomaticRecordingForOrganizer: boolean;
  redirectUrlOnExit: string | null;
  disableTranscriptionForGuests: boolean;
  disableTranscriptionForOrganizer: boolean;
  createdAt: Date;
  updatedAt: Date;
  _count: CalVideoSettingsCountAggregateOutputType | null;
  _avg: CalVideoSettingsAvgAggregateOutputType | null;
  _sum: CalVideoSettingsSumAggregateOutputType | null;
  _min: CalVideoSettingsMinAggregateOutputType | null;
  _max: CalVideoSettingsMaxAggregateOutputType | null;
};

type GetCalVideoSettingsGroupByPayload<T extends CalVideoSettingsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<CalVideoSettingsGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof CalVideoSettingsGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], CalVideoSettingsGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], CalVideoSettingsGroupByOutputType[P]>;
    }
  >
>;

export type CalVideoSettingsWhereInput = {
  AND?: Prisma.CalVideoSettingsWhereInput | Prisma.CalVideoSettingsWhereInput[];
  OR?: Prisma.CalVideoSettingsWhereInput[];
  NOT?: Prisma.CalVideoSettingsWhereInput | Prisma.CalVideoSettingsWhereInput[];
  eventTypeId?: Prisma.IntFilter<"CalVideoSettings"> | number;
  disableRecordingForOrganizer?: Prisma.BoolFilter<"CalVideoSettings"> | boolean;
  disableRecordingForGuests?: Prisma.BoolFilter<"CalVideoSettings"> | boolean;
  enableAutomaticTranscription?: Prisma.BoolFilter<"CalVideoSettings"> | boolean;
  enableAutomaticRecordingForOrganizer?: Prisma.BoolFilter<"CalVideoSettings"> | boolean;
  redirectUrlOnExit?: Prisma.StringNullableFilter<"CalVideoSettings"> | string | null;
  disableTranscriptionForGuests?: Prisma.BoolFilter<"CalVideoSettings"> | boolean;
  disableTranscriptionForOrganizer?: Prisma.BoolFilter<"CalVideoSettings"> | boolean;
  createdAt?: Prisma.DateTimeFilter<"CalVideoSettings"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"CalVideoSettings"> | Date | string;
  eventType?: Prisma.XOR<Prisma.EventTypeScalarRelationFilter, Prisma.EventTypeWhereInput>;
};

export type CalVideoSettingsOrderByWithRelationInput = {
  eventTypeId?: Prisma.SortOrder;
  disableRecordingForOrganizer?: Prisma.SortOrder;
  disableRecordingForGuests?: Prisma.SortOrder;
  enableAutomaticTranscription?: Prisma.SortOrder;
  enableAutomaticRecordingForOrganizer?: Prisma.SortOrder;
  redirectUrlOnExit?: Prisma.SortOrderInput | Prisma.SortOrder;
  disableTranscriptionForGuests?: Prisma.SortOrder;
  disableTranscriptionForOrganizer?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  eventType?: Prisma.EventTypeOrderByWithRelationInput;
};

export type CalVideoSettingsWhereUniqueInput = Prisma.AtLeast<
  {
    eventTypeId?: number;
    AND?: Prisma.CalVideoSettingsWhereInput | Prisma.CalVideoSettingsWhereInput[];
    OR?: Prisma.CalVideoSettingsWhereInput[];
    NOT?: Prisma.CalVideoSettingsWhereInput | Prisma.CalVideoSettingsWhereInput[];
    disableRecordingForOrganizer?: Prisma.BoolFilter<"CalVideoSettings"> | boolean;
    disableRecordingForGuests?: Prisma.BoolFilter<"CalVideoSettings"> | boolean;
    enableAutomaticTranscription?: Prisma.BoolFilter<"CalVideoSettings"> | boolean;
    enableAutomaticRecordingForOrganizer?: Prisma.BoolFilter<"CalVideoSettings"> | boolean;
    redirectUrlOnExit?: Prisma.StringNullableFilter<"CalVideoSettings"> | string | null;
    disableTranscriptionForGuests?: Prisma.BoolFilter<"CalVideoSettings"> | boolean;
    disableTranscriptionForOrganizer?: Prisma.BoolFilter<"CalVideoSettings"> | boolean;
    createdAt?: Prisma.DateTimeFilter<"CalVideoSettings"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"CalVideoSettings"> | Date | string;
    eventType?: Prisma.XOR<Prisma.EventTypeScalarRelationFilter, Prisma.EventTypeWhereInput>;
  },
  "eventTypeId"
>;

export type CalVideoSettingsOrderByWithAggregationInput = {
  eventTypeId?: Prisma.SortOrder;
  disableRecordingForOrganizer?: Prisma.SortOrder;
  disableRecordingForGuests?: Prisma.SortOrder;
  enableAutomaticTranscription?: Prisma.SortOrder;
  enableAutomaticRecordingForOrganizer?: Prisma.SortOrder;
  redirectUrlOnExit?: Prisma.SortOrderInput | Prisma.SortOrder;
  disableTranscriptionForGuests?: Prisma.SortOrder;
  disableTranscriptionForOrganizer?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.CalVideoSettingsCountOrderByAggregateInput;
  _avg?: Prisma.CalVideoSettingsAvgOrderByAggregateInput;
  _max?: Prisma.CalVideoSettingsMaxOrderByAggregateInput;
  _min?: Prisma.CalVideoSettingsMinOrderByAggregateInput;
  _sum?: Prisma.CalVideoSettingsSumOrderByAggregateInput;
};

export type CalVideoSettingsScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.CalVideoSettingsScalarWhereWithAggregatesInput
    | Prisma.CalVideoSettingsScalarWhereWithAggregatesInput[];
  OR?: Prisma.CalVideoSettingsScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.CalVideoSettingsScalarWhereWithAggregatesInput
    | Prisma.CalVideoSettingsScalarWhereWithAggregatesInput[];
  eventTypeId?: Prisma.IntWithAggregatesFilter<"CalVideoSettings"> | number;
  disableRecordingForOrganizer?: Prisma.BoolWithAggregatesFilter<"CalVideoSettings"> | boolean;
  disableRecordingForGuests?: Prisma.BoolWithAggregatesFilter<"CalVideoSettings"> | boolean;
  enableAutomaticTranscription?: Prisma.BoolWithAggregatesFilter<"CalVideoSettings"> | boolean;
  enableAutomaticRecordingForOrganizer?: Prisma.BoolWithAggregatesFilter<"CalVideoSettings"> | boolean;
  redirectUrlOnExit?: Prisma.StringNullableWithAggregatesFilter<"CalVideoSettings"> | string | null;
  disableTranscriptionForGuests?: Prisma.BoolWithAggregatesFilter<"CalVideoSettings"> | boolean;
  disableTranscriptionForOrganizer?: Prisma.BoolWithAggregatesFilter<"CalVideoSettings"> | boolean;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"CalVideoSettings"> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"CalVideoSettings"> | Date | string;
};

export type CalVideoSettingsCreateInput = {
  disableRecordingForOrganizer?: boolean;
  disableRecordingForGuests?: boolean;
  enableAutomaticTranscription?: boolean;
  enableAutomaticRecordingForOrganizer?: boolean;
  redirectUrlOnExit?: string | null;
  disableTranscriptionForGuests?: boolean;
  disableTranscriptionForOrganizer?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  eventType: Prisma.EventTypeCreateNestedOneWithoutCalVideoSettingsInput;
};

export type CalVideoSettingsUncheckedCreateInput = {
  eventTypeId: number;
  disableRecordingForOrganizer?: boolean;
  disableRecordingForGuests?: boolean;
  enableAutomaticTranscription?: boolean;
  enableAutomaticRecordingForOrganizer?: boolean;
  redirectUrlOnExit?: string | null;
  disableTranscriptionForGuests?: boolean;
  disableTranscriptionForOrganizer?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type CalVideoSettingsUpdateInput = {
  disableRecordingForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  disableRecordingForGuests?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  enableAutomaticTranscription?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  enableAutomaticRecordingForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  redirectUrlOnExit?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disableTranscriptionForGuests?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  disableTranscriptionForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  eventType?: Prisma.EventTypeUpdateOneRequiredWithoutCalVideoSettingsNestedInput;
};

export type CalVideoSettingsUncheckedUpdateInput = {
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  disableRecordingForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  disableRecordingForGuests?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  enableAutomaticTranscription?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  enableAutomaticRecordingForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  redirectUrlOnExit?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disableTranscriptionForGuests?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  disableTranscriptionForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CalVideoSettingsCreateManyInput = {
  eventTypeId: number;
  disableRecordingForOrganizer?: boolean;
  disableRecordingForGuests?: boolean;
  enableAutomaticTranscription?: boolean;
  enableAutomaticRecordingForOrganizer?: boolean;
  redirectUrlOnExit?: string | null;
  disableTranscriptionForGuests?: boolean;
  disableTranscriptionForOrganizer?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type CalVideoSettingsUpdateManyMutationInput = {
  disableRecordingForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  disableRecordingForGuests?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  enableAutomaticTranscription?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  enableAutomaticRecordingForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  redirectUrlOnExit?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disableTranscriptionForGuests?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  disableTranscriptionForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CalVideoSettingsUncheckedUpdateManyInput = {
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  disableRecordingForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  disableRecordingForGuests?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  enableAutomaticTranscription?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  enableAutomaticRecordingForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  redirectUrlOnExit?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disableTranscriptionForGuests?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  disableTranscriptionForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CalVideoSettingsCountOrderByAggregateInput = {
  eventTypeId?: Prisma.SortOrder;
  disableRecordingForOrganizer?: Prisma.SortOrder;
  disableRecordingForGuests?: Prisma.SortOrder;
  enableAutomaticTranscription?: Prisma.SortOrder;
  enableAutomaticRecordingForOrganizer?: Prisma.SortOrder;
  redirectUrlOnExit?: Prisma.SortOrder;
  disableTranscriptionForGuests?: Prisma.SortOrder;
  disableTranscriptionForOrganizer?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type CalVideoSettingsAvgOrderByAggregateInput = {
  eventTypeId?: Prisma.SortOrder;
};

export type CalVideoSettingsMaxOrderByAggregateInput = {
  eventTypeId?: Prisma.SortOrder;
  disableRecordingForOrganizer?: Prisma.SortOrder;
  disableRecordingForGuests?: Prisma.SortOrder;
  enableAutomaticTranscription?: Prisma.SortOrder;
  enableAutomaticRecordingForOrganizer?: Prisma.SortOrder;
  redirectUrlOnExit?: Prisma.SortOrder;
  disableTranscriptionForGuests?: Prisma.SortOrder;
  disableTranscriptionForOrganizer?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type CalVideoSettingsMinOrderByAggregateInput = {
  eventTypeId?: Prisma.SortOrder;
  disableRecordingForOrganizer?: Prisma.SortOrder;
  disableRecordingForGuests?: Prisma.SortOrder;
  enableAutomaticTranscription?: Prisma.SortOrder;
  enableAutomaticRecordingForOrganizer?: Prisma.SortOrder;
  redirectUrlOnExit?: Prisma.SortOrder;
  disableTranscriptionForGuests?: Prisma.SortOrder;
  disableTranscriptionForOrganizer?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type CalVideoSettingsSumOrderByAggregateInput = {
  eventTypeId?: Prisma.SortOrder;
};

export type CalVideoSettingsNullableScalarRelationFilter = {
  is?: Prisma.CalVideoSettingsWhereInput | null;
  isNot?: Prisma.CalVideoSettingsWhereInput | null;
};

export type CalVideoSettingsCreateNestedOneWithoutEventTypeInput = {
  create?: Prisma.XOR<
    Prisma.CalVideoSettingsCreateWithoutEventTypeInput,
    Prisma.CalVideoSettingsUncheckedCreateWithoutEventTypeInput
  >;
  connectOrCreate?: Prisma.CalVideoSettingsCreateOrConnectWithoutEventTypeInput;
  connect?: Prisma.CalVideoSettingsWhereUniqueInput;
};

export type CalVideoSettingsUncheckedCreateNestedOneWithoutEventTypeInput = {
  create?: Prisma.XOR<
    Prisma.CalVideoSettingsCreateWithoutEventTypeInput,
    Prisma.CalVideoSettingsUncheckedCreateWithoutEventTypeInput
  >;
  connectOrCreate?: Prisma.CalVideoSettingsCreateOrConnectWithoutEventTypeInput;
  connect?: Prisma.CalVideoSettingsWhereUniqueInput;
};

export type CalVideoSettingsUpdateOneWithoutEventTypeNestedInput = {
  create?: Prisma.XOR<
    Prisma.CalVideoSettingsCreateWithoutEventTypeInput,
    Prisma.CalVideoSettingsUncheckedCreateWithoutEventTypeInput
  >;
  connectOrCreate?: Prisma.CalVideoSettingsCreateOrConnectWithoutEventTypeInput;
  upsert?: Prisma.CalVideoSettingsUpsertWithoutEventTypeInput;
  disconnect?: Prisma.CalVideoSettingsWhereInput | boolean;
  delete?: Prisma.CalVideoSettingsWhereInput | boolean;
  connect?: Prisma.CalVideoSettingsWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.CalVideoSettingsUpdateToOneWithWhereWithoutEventTypeInput,
      Prisma.CalVideoSettingsUpdateWithoutEventTypeInput
    >,
    Prisma.CalVideoSettingsUncheckedUpdateWithoutEventTypeInput
  >;
};

export type CalVideoSettingsUncheckedUpdateOneWithoutEventTypeNestedInput = {
  create?: Prisma.XOR<
    Prisma.CalVideoSettingsCreateWithoutEventTypeInput,
    Prisma.CalVideoSettingsUncheckedCreateWithoutEventTypeInput
  >;
  connectOrCreate?: Prisma.CalVideoSettingsCreateOrConnectWithoutEventTypeInput;
  upsert?: Prisma.CalVideoSettingsUpsertWithoutEventTypeInput;
  disconnect?: Prisma.CalVideoSettingsWhereInput | boolean;
  delete?: Prisma.CalVideoSettingsWhereInput | boolean;
  connect?: Prisma.CalVideoSettingsWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.CalVideoSettingsUpdateToOneWithWhereWithoutEventTypeInput,
      Prisma.CalVideoSettingsUpdateWithoutEventTypeInput
    >,
    Prisma.CalVideoSettingsUncheckedUpdateWithoutEventTypeInput
  >;
};

export type CalVideoSettingsCreateWithoutEventTypeInput = {
  disableRecordingForOrganizer?: boolean;
  disableRecordingForGuests?: boolean;
  enableAutomaticTranscription?: boolean;
  enableAutomaticRecordingForOrganizer?: boolean;
  redirectUrlOnExit?: string | null;
  disableTranscriptionForGuests?: boolean;
  disableTranscriptionForOrganizer?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type CalVideoSettingsUncheckedCreateWithoutEventTypeInput = {
  disableRecordingForOrganizer?: boolean;
  disableRecordingForGuests?: boolean;
  enableAutomaticTranscription?: boolean;
  enableAutomaticRecordingForOrganizer?: boolean;
  redirectUrlOnExit?: string | null;
  disableTranscriptionForGuests?: boolean;
  disableTranscriptionForOrganizer?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type CalVideoSettingsCreateOrConnectWithoutEventTypeInput = {
  where: Prisma.CalVideoSettingsWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.CalVideoSettingsCreateWithoutEventTypeInput,
    Prisma.CalVideoSettingsUncheckedCreateWithoutEventTypeInput
  >;
};

export type CalVideoSettingsUpsertWithoutEventTypeInput = {
  update: Prisma.XOR<
    Prisma.CalVideoSettingsUpdateWithoutEventTypeInput,
    Prisma.CalVideoSettingsUncheckedUpdateWithoutEventTypeInput
  >;
  create: Prisma.XOR<
    Prisma.CalVideoSettingsCreateWithoutEventTypeInput,
    Prisma.CalVideoSettingsUncheckedCreateWithoutEventTypeInput
  >;
  where?: Prisma.CalVideoSettingsWhereInput;
};

export type CalVideoSettingsUpdateToOneWithWhereWithoutEventTypeInput = {
  where?: Prisma.CalVideoSettingsWhereInput;
  data: Prisma.XOR<
    Prisma.CalVideoSettingsUpdateWithoutEventTypeInput,
    Prisma.CalVideoSettingsUncheckedUpdateWithoutEventTypeInput
  >;
};

export type CalVideoSettingsUpdateWithoutEventTypeInput = {
  disableRecordingForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  disableRecordingForGuests?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  enableAutomaticTranscription?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  enableAutomaticRecordingForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  redirectUrlOnExit?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disableTranscriptionForGuests?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  disableTranscriptionForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CalVideoSettingsUncheckedUpdateWithoutEventTypeInput = {
  disableRecordingForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  disableRecordingForGuests?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  enableAutomaticTranscription?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  enableAutomaticRecordingForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  redirectUrlOnExit?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  disableTranscriptionForGuests?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  disableTranscriptionForOrganizer?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CalVideoSettingsSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    eventTypeId?: boolean;
    disableRecordingForOrganizer?: boolean;
    disableRecordingForGuests?: boolean;
    enableAutomaticTranscription?: boolean;
    enableAutomaticRecordingForOrganizer?: boolean;
    redirectUrlOnExit?: boolean;
    disableTranscriptionForGuests?: boolean;
    disableTranscriptionForOrganizer?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["calVideoSettings"]
>;

export type CalVideoSettingsSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    eventTypeId?: boolean;
    disableRecordingForOrganizer?: boolean;
    disableRecordingForGuests?: boolean;
    enableAutomaticTranscription?: boolean;
    enableAutomaticRecordingForOrganizer?: boolean;
    redirectUrlOnExit?: boolean;
    disableTranscriptionForGuests?: boolean;
    disableTranscriptionForOrganizer?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["calVideoSettings"]
>;

export type CalVideoSettingsSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    eventTypeId?: boolean;
    disableRecordingForOrganizer?: boolean;
    disableRecordingForGuests?: boolean;
    enableAutomaticTranscription?: boolean;
    enableAutomaticRecordingForOrganizer?: boolean;
    redirectUrlOnExit?: boolean;
    disableTranscriptionForGuests?: boolean;
    disableTranscriptionForOrganizer?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["calVideoSettings"]
>;

export type CalVideoSettingsSelectScalar = {
  eventTypeId?: boolean;
  disableRecordingForOrganizer?: boolean;
  disableRecordingForGuests?: boolean;
  enableAutomaticTranscription?: boolean;
  enableAutomaticRecordingForOrganizer?: boolean;
  redirectUrlOnExit?: boolean;
  disableTranscriptionForGuests?: boolean;
  disableTranscriptionForOrganizer?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type CalVideoSettingsOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  | "eventTypeId"
  | "disableRecordingForOrganizer"
  | "disableRecordingForGuests"
  | "enableAutomaticTranscription"
  | "enableAutomaticRecordingForOrganizer"
  | "redirectUrlOnExit"
  | "disableTranscriptionForGuests"
  | "disableTranscriptionForOrganizer"
  | "createdAt"
  | "updatedAt",
  ExtArgs["result"]["calVideoSettings"]
>;
export type CalVideoSettingsInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
};
export type CalVideoSettingsIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
};
export type CalVideoSettingsIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
};

export type $CalVideoSettingsPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "CalVideoSettings";
  objects: {
    eventType: Prisma.$EventTypePayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      eventTypeId: number;
      disableRecordingForOrganizer: boolean;
      disableRecordingForGuests: boolean;
      enableAutomaticTranscription: boolean;
      enableAutomaticRecordingForOrganizer: boolean;
      redirectUrlOnExit: string | null;
      disableTranscriptionForGuests: boolean;
      disableTranscriptionForOrganizer: boolean;
      createdAt: Date;
      updatedAt: Date;
    },
    ExtArgs["result"]["calVideoSettings"]
  >;
  composites: {};
};

export type CalVideoSettingsGetPayload<S extends boolean | null | undefined | CalVideoSettingsDefaultArgs> =
  runtime.Types.Result.GetResult<Prisma.$CalVideoSettingsPayload, S>;

export type CalVideoSettingsCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<CalVideoSettingsFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: CalVideoSettingsCountAggregateInputType | true;
};

export interface CalVideoSettingsDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["CalVideoSettings"];
    meta: { name: "CalVideoSettings" };
  };
  /**
   * Find zero or one CalVideoSettings that matches the filter.
   * @param {CalVideoSettingsFindUniqueArgs} args - Arguments to find a CalVideoSettings
   * @example
   * // Get one CalVideoSettings
   * const calVideoSettings = await prisma.calVideoSettings.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends CalVideoSettingsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, CalVideoSettingsFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__CalVideoSettingsClient<
    runtime.Types.Result.GetResult<
      Prisma.$CalVideoSettingsPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one CalVideoSettings that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {CalVideoSettingsFindUniqueOrThrowArgs} args - Arguments to find a CalVideoSettings
   * @example
   * // Get one CalVideoSettings
   * const calVideoSettings = await prisma.calVideoSettings.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends CalVideoSettingsFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, CalVideoSettingsFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__CalVideoSettingsClient<
    runtime.Types.Result.GetResult<
      Prisma.$CalVideoSettingsPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first CalVideoSettings that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CalVideoSettingsFindFirstArgs} args - Arguments to find a CalVideoSettings
   * @example
   * // Get one CalVideoSettings
   * const calVideoSettings = await prisma.calVideoSettings.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends CalVideoSettingsFindFirstArgs>(
    args?: Prisma.SelectSubset<T, CalVideoSettingsFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__CalVideoSettingsClient<
    runtime.Types.Result.GetResult<
      Prisma.$CalVideoSettingsPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first CalVideoSettings that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CalVideoSettingsFindFirstOrThrowArgs} args - Arguments to find a CalVideoSettings
   * @example
   * // Get one CalVideoSettings
   * const calVideoSettings = await prisma.calVideoSettings.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends CalVideoSettingsFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, CalVideoSettingsFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__CalVideoSettingsClient<
    runtime.Types.Result.GetResult<
      Prisma.$CalVideoSettingsPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more CalVideoSettings that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CalVideoSettingsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all CalVideoSettings
   * const calVideoSettings = await prisma.calVideoSettings.findMany()
   *
   * // Get first 10 CalVideoSettings
   * const calVideoSettings = await prisma.calVideoSettings.findMany({ take: 10 })
   *
   * // Only select the `eventTypeId`
   * const calVideoSettingsWithEventTypeIdOnly = await prisma.calVideoSettings.findMany({ select: { eventTypeId: true } })
   *
   */
  findMany<T extends CalVideoSettingsFindManyArgs>(
    args?: Prisma.SelectSubset<T, CalVideoSettingsFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$CalVideoSettingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>
  >;

  /**
   * Create a CalVideoSettings.
   * @param {CalVideoSettingsCreateArgs} args - Arguments to create a CalVideoSettings.
   * @example
   * // Create one CalVideoSettings
   * const CalVideoSettings = await prisma.calVideoSettings.create({
   *   data: {
   *     // ... data to create a CalVideoSettings
   *   }
   * })
   *
   */
  create<T extends CalVideoSettingsCreateArgs>(
    args: Prisma.SelectSubset<T, CalVideoSettingsCreateArgs<ExtArgs>>
  ): Prisma.Prisma__CalVideoSettingsClient<
    runtime.Types.Result.GetResult<Prisma.$CalVideoSettingsPayload<ExtArgs>, T, "create", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many CalVideoSettings.
   * @param {CalVideoSettingsCreateManyArgs} args - Arguments to create many CalVideoSettings.
   * @example
   * // Create many CalVideoSettings
   * const calVideoSettings = await prisma.calVideoSettings.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends CalVideoSettingsCreateManyArgs>(
    args?: Prisma.SelectSubset<T, CalVideoSettingsCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many CalVideoSettings and returns the data saved in the database.
   * @param {CalVideoSettingsCreateManyAndReturnArgs} args - Arguments to create many CalVideoSettings.
   * @example
   * // Create many CalVideoSettings
   * const calVideoSettings = await prisma.calVideoSettings.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many CalVideoSettings and only return the `eventTypeId`
   * const calVideoSettingsWithEventTypeIdOnly = await prisma.calVideoSettings.createManyAndReturn({
   *   select: { eventTypeId: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends CalVideoSettingsCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, CalVideoSettingsCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$CalVideoSettingsPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a CalVideoSettings.
   * @param {CalVideoSettingsDeleteArgs} args - Arguments to delete one CalVideoSettings.
   * @example
   * // Delete one CalVideoSettings
   * const CalVideoSettings = await prisma.calVideoSettings.delete({
   *   where: {
   *     // ... filter to delete one CalVideoSettings
   *   }
   * })
   *
   */
  delete<T extends CalVideoSettingsDeleteArgs>(
    args: Prisma.SelectSubset<T, CalVideoSettingsDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__CalVideoSettingsClient<
    runtime.Types.Result.GetResult<Prisma.$CalVideoSettingsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one CalVideoSettings.
   * @param {CalVideoSettingsUpdateArgs} args - Arguments to update one CalVideoSettings.
   * @example
   * // Update one CalVideoSettings
   * const calVideoSettings = await prisma.calVideoSettings.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends CalVideoSettingsUpdateArgs>(
    args: Prisma.SelectSubset<T, CalVideoSettingsUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__CalVideoSettingsClient<
    runtime.Types.Result.GetResult<Prisma.$CalVideoSettingsPayload<ExtArgs>, T, "update", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more CalVideoSettings.
   * @param {CalVideoSettingsDeleteManyArgs} args - Arguments to filter CalVideoSettings to delete.
   * @example
   * // Delete a few CalVideoSettings
   * const { count } = await prisma.calVideoSettings.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends CalVideoSettingsDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, CalVideoSettingsDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more CalVideoSettings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CalVideoSettingsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many CalVideoSettings
   * const calVideoSettings = await prisma.calVideoSettings.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends CalVideoSettingsUpdateManyArgs>(
    args: Prisma.SelectSubset<T, CalVideoSettingsUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more CalVideoSettings and returns the data updated in the database.
   * @param {CalVideoSettingsUpdateManyAndReturnArgs} args - Arguments to update many CalVideoSettings.
   * @example
   * // Update many CalVideoSettings
   * const calVideoSettings = await prisma.calVideoSettings.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more CalVideoSettings and only return the `eventTypeId`
   * const calVideoSettingsWithEventTypeIdOnly = await prisma.calVideoSettings.updateManyAndReturn({
   *   select: { eventTypeId: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends CalVideoSettingsUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, CalVideoSettingsUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$CalVideoSettingsPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one CalVideoSettings.
   * @param {CalVideoSettingsUpsertArgs} args - Arguments to update or create a CalVideoSettings.
   * @example
   * // Update or create a CalVideoSettings
   * const calVideoSettings = await prisma.calVideoSettings.upsert({
   *   create: {
   *     // ... data to create a CalVideoSettings
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the CalVideoSettings we want to update
   *   }
   * })
   */
  upsert<T extends CalVideoSettingsUpsertArgs>(
    args: Prisma.SelectSubset<T, CalVideoSettingsUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__CalVideoSettingsClient<
    runtime.Types.Result.GetResult<Prisma.$CalVideoSettingsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of CalVideoSettings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CalVideoSettingsCountArgs} args - Arguments to filter CalVideoSettings to count.
   * @example
   * // Count the number of CalVideoSettings
   * const count = await prisma.calVideoSettings.count({
   *   where: {
   *     // ... the filter for the CalVideoSettings we want to count
   *   }
   * })
   **/
  count<T extends CalVideoSettingsCountArgs>(
    args?: Prisma.Subset<T, CalVideoSettingsCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], CalVideoSettingsCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a CalVideoSettings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CalVideoSettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends CalVideoSettingsAggregateArgs>(
    args: Prisma.Subset<T, CalVideoSettingsAggregateArgs>
  ): Prisma.PrismaPromise<GetCalVideoSettingsAggregateType<T>>;

  /**
   * Group by CalVideoSettings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CalVideoSettingsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends CalVideoSettingsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: CalVideoSettingsGroupByArgs["orderBy"] }
      : { orderBy?: CalVideoSettingsGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, CalVideoSettingsGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetCalVideoSettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the CalVideoSettings model
   */
  readonly fields: CalVideoSettingsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for CalVideoSettings.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__CalVideoSettingsClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  eventType<T extends Prisma.EventTypeDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.EventTypeDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeClient<
    | runtime.Types.Result.GetResult<
        Prisma.$EventTypePayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the CalVideoSettings model
 */
export interface CalVideoSettingsFieldRefs {
  readonly eventTypeId: Prisma.FieldRef<"CalVideoSettings", "Int">;
  readonly disableRecordingForOrganizer: Prisma.FieldRef<"CalVideoSettings", "Boolean">;
  readonly disableRecordingForGuests: Prisma.FieldRef<"CalVideoSettings", "Boolean">;
  readonly enableAutomaticTranscription: Prisma.FieldRef<"CalVideoSettings", "Boolean">;
  readonly enableAutomaticRecordingForOrganizer: Prisma.FieldRef<"CalVideoSettings", "Boolean">;
  readonly redirectUrlOnExit: Prisma.FieldRef<"CalVideoSettings", "String">;
  readonly disableTranscriptionForGuests: Prisma.FieldRef<"CalVideoSettings", "Boolean">;
  readonly disableTranscriptionForOrganizer: Prisma.FieldRef<"CalVideoSettings", "Boolean">;
  readonly createdAt: Prisma.FieldRef<"CalVideoSettings", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"CalVideoSettings", "DateTime">;
}

// Custom InputTypes
/**
 * CalVideoSettings findUnique
 */
export type CalVideoSettingsFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CalVideoSettings
   */
  select?: Prisma.CalVideoSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CalVideoSettings
   */
  omit?: Prisma.CalVideoSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CalVideoSettingsInclude<ExtArgs> | null;
  /**
   * Filter, which CalVideoSettings to fetch.
   */
  where: Prisma.CalVideoSettingsWhereUniqueInput;
};

/**
 * CalVideoSettings findUniqueOrThrow
 */
export type CalVideoSettingsFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CalVideoSettings
   */
  select?: Prisma.CalVideoSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CalVideoSettings
   */
  omit?: Prisma.CalVideoSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CalVideoSettingsInclude<ExtArgs> | null;
  /**
   * Filter, which CalVideoSettings to fetch.
   */
  where: Prisma.CalVideoSettingsWhereUniqueInput;
};

/**
 * CalVideoSettings findFirst
 */
export type CalVideoSettingsFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CalVideoSettings
   */
  select?: Prisma.CalVideoSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CalVideoSettings
   */
  omit?: Prisma.CalVideoSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CalVideoSettingsInclude<ExtArgs> | null;
  /**
   * Filter, which CalVideoSettings to fetch.
   */
  where?: Prisma.CalVideoSettingsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of CalVideoSettings to fetch.
   */
  orderBy?:
    | Prisma.CalVideoSettingsOrderByWithRelationInput
    | Prisma.CalVideoSettingsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for CalVideoSettings.
   */
  cursor?: Prisma.CalVideoSettingsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` CalVideoSettings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` CalVideoSettings.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of CalVideoSettings.
   */
  distinct?: Prisma.CalVideoSettingsScalarFieldEnum | Prisma.CalVideoSettingsScalarFieldEnum[];
};

/**
 * CalVideoSettings findFirstOrThrow
 */
export type CalVideoSettingsFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CalVideoSettings
   */
  select?: Prisma.CalVideoSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CalVideoSettings
   */
  omit?: Prisma.CalVideoSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CalVideoSettingsInclude<ExtArgs> | null;
  /**
   * Filter, which CalVideoSettings to fetch.
   */
  where?: Prisma.CalVideoSettingsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of CalVideoSettings to fetch.
   */
  orderBy?:
    | Prisma.CalVideoSettingsOrderByWithRelationInput
    | Prisma.CalVideoSettingsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for CalVideoSettings.
   */
  cursor?: Prisma.CalVideoSettingsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` CalVideoSettings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` CalVideoSettings.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of CalVideoSettings.
   */
  distinct?: Prisma.CalVideoSettingsScalarFieldEnum | Prisma.CalVideoSettingsScalarFieldEnum[];
};

/**
 * CalVideoSettings findMany
 */
export type CalVideoSettingsFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CalVideoSettings
   */
  select?: Prisma.CalVideoSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CalVideoSettings
   */
  omit?: Prisma.CalVideoSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CalVideoSettingsInclude<ExtArgs> | null;
  /**
   * Filter, which CalVideoSettings to fetch.
   */
  where?: Prisma.CalVideoSettingsWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of CalVideoSettings to fetch.
   */
  orderBy?:
    | Prisma.CalVideoSettingsOrderByWithRelationInput
    | Prisma.CalVideoSettingsOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing CalVideoSettings.
   */
  cursor?: Prisma.CalVideoSettingsWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` CalVideoSettings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` CalVideoSettings.
   */
  skip?: number;
  distinct?: Prisma.CalVideoSettingsScalarFieldEnum | Prisma.CalVideoSettingsScalarFieldEnum[];
};

/**
 * CalVideoSettings create
 */
export type CalVideoSettingsCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CalVideoSettings
   */
  select?: Prisma.CalVideoSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CalVideoSettings
   */
  omit?: Prisma.CalVideoSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CalVideoSettingsInclude<ExtArgs> | null;
  /**
   * The data needed to create a CalVideoSettings.
   */
  data: Prisma.XOR<Prisma.CalVideoSettingsCreateInput, Prisma.CalVideoSettingsUncheckedCreateInput>;
};

/**
 * CalVideoSettings createMany
 */
export type CalVideoSettingsCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many CalVideoSettings.
   */
  data: Prisma.CalVideoSettingsCreateManyInput | Prisma.CalVideoSettingsCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * CalVideoSettings createManyAndReturn
 */
export type CalVideoSettingsCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CalVideoSettings
   */
  select?: Prisma.CalVideoSettingsSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the CalVideoSettings
   */
  omit?: Prisma.CalVideoSettingsOmit<ExtArgs> | null;
  /**
   * The data used to create many CalVideoSettings.
   */
  data: Prisma.CalVideoSettingsCreateManyInput | Prisma.CalVideoSettingsCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CalVideoSettingsIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * CalVideoSettings update
 */
export type CalVideoSettingsUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CalVideoSettings
   */
  select?: Prisma.CalVideoSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CalVideoSettings
   */
  omit?: Prisma.CalVideoSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CalVideoSettingsInclude<ExtArgs> | null;
  /**
   * The data needed to update a CalVideoSettings.
   */
  data: Prisma.XOR<Prisma.CalVideoSettingsUpdateInput, Prisma.CalVideoSettingsUncheckedUpdateInput>;
  /**
   * Choose, which CalVideoSettings to update.
   */
  where: Prisma.CalVideoSettingsWhereUniqueInput;
};

/**
 * CalVideoSettings updateMany
 */
export type CalVideoSettingsUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update CalVideoSettings.
   */
  data: Prisma.XOR<
    Prisma.CalVideoSettingsUpdateManyMutationInput,
    Prisma.CalVideoSettingsUncheckedUpdateManyInput
  >;
  /**
   * Filter which CalVideoSettings to update
   */
  where?: Prisma.CalVideoSettingsWhereInput;
  /**
   * Limit how many CalVideoSettings to update.
   */
  limit?: number;
};

/**
 * CalVideoSettings updateManyAndReturn
 */
export type CalVideoSettingsUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CalVideoSettings
   */
  select?: Prisma.CalVideoSettingsSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the CalVideoSettings
   */
  omit?: Prisma.CalVideoSettingsOmit<ExtArgs> | null;
  /**
   * The data used to update CalVideoSettings.
   */
  data: Prisma.XOR<
    Prisma.CalVideoSettingsUpdateManyMutationInput,
    Prisma.CalVideoSettingsUncheckedUpdateManyInput
  >;
  /**
   * Filter which CalVideoSettings to update
   */
  where?: Prisma.CalVideoSettingsWhereInput;
  /**
   * Limit how many CalVideoSettings to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CalVideoSettingsIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * CalVideoSettings upsert
 */
export type CalVideoSettingsUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CalVideoSettings
   */
  select?: Prisma.CalVideoSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CalVideoSettings
   */
  omit?: Prisma.CalVideoSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CalVideoSettingsInclude<ExtArgs> | null;
  /**
   * The filter to search for the CalVideoSettings to update in case it exists.
   */
  where: Prisma.CalVideoSettingsWhereUniqueInput;
  /**
   * In case the CalVideoSettings found by the `where` argument doesn't exist, create a new CalVideoSettings with this data.
   */
  create: Prisma.XOR<Prisma.CalVideoSettingsCreateInput, Prisma.CalVideoSettingsUncheckedCreateInput>;
  /**
   * In case the CalVideoSettings was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.CalVideoSettingsUpdateInput, Prisma.CalVideoSettingsUncheckedUpdateInput>;
};

/**
 * CalVideoSettings delete
 */
export type CalVideoSettingsDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CalVideoSettings
   */
  select?: Prisma.CalVideoSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CalVideoSettings
   */
  omit?: Prisma.CalVideoSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CalVideoSettingsInclude<ExtArgs> | null;
  /**
   * Filter which CalVideoSettings to delete.
   */
  where: Prisma.CalVideoSettingsWhereUniqueInput;
};

/**
 * CalVideoSettings deleteMany
 */
export type CalVideoSettingsDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which CalVideoSettings to delete
   */
  where?: Prisma.CalVideoSettingsWhereInput;
  /**
   * Limit how many CalVideoSettings to delete.
   */
  limit?: number;
};

/**
 * CalVideoSettings without action
 */
export type CalVideoSettingsDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CalVideoSettings
   */
  select?: Prisma.CalVideoSettingsSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CalVideoSettings
   */
  omit?: Prisma.CalVideoSettingsOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CalVideoSettingsInclude<ExtArgs> | null;
};
