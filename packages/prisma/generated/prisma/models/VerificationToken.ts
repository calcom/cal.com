/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `VerificationToken` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model VerificationToken
 *
 */
export type VerificationTokenModel = runtime.Types.Result.DefaultSelection<Prisma.$VerificationTokenPayload>;

export type AggregateVerificationToken = {
  _count: VerificationTokenCountAggregateOutputType | null;
  _avg: VerificationTokenAvgAggregateOutputType | null;
  _sum: VerificationTokenSumAggregateOutputType | null;
  _min: VerificationTokenMinAggregateOutputType | null;
  _max: VerificationTokenMaxAggregateOutputType | null;
};

export type VerificationTokenAvgAggregateOutputType = {
  id: number | null;
  expiresInDays: number | null;
  teamId: number | null;
  secondaryEmailId: number | null;
};

export type VerificationTokenSumAggregateOutputType = {
  id: number | null;
  expiresInDays: number | null;
  teamId: number | null;
  secondaryEmailId: number | null;
};

export type VerificationTokenMinAggregateOutputType = {
  id: number | null;
  identifier: string | null;
  token: string | null;
  expires: Date | null;
  expiresInDays: number | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  teamId: number | null;
  secondaryEmailId: number | null;
};

export type VerificationTokenMaxAggregateOutputType = {
  id: number | null;
  identifier: string | null;
  token: string | null;
  expires: Date | null;
  expiresInDays: number | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  teamId: number | null;
  secondaryEmailId: number | null;
};

export type VerificationTokenCountAggregateOutputType = {
  id: number;
  identifier: number;
  token: number;
  expires: number;
  expiresInDays: number;
  createdAt: number;
  updatedAt: number;
  teamId: number;
  secondaryEmailId: number;
  _all: number;
};

export type VerificationTokenAvgAggregateInputType = {
  id?: true;
  expiresInDays?: true;
  teamId?: true;
  secondaryEmailId?: true;
};

export type VerificationTokenSumAggregateInputType = {
  id?: true;
  expiresInDays?: true;
  teamId?: true;
  secondaryEmailId?: true;
};

export type VerificationTokenMinAggregateInputType = {
  id?: true;
  identifier?: true;
  token?: true;
  expires?: true;
  expiresInDays?: true;
  createdAt?: true;
  updatedAt?: true;
  teamId?: true;
  secondaryEmailId?: true;
};

export type VerificationTokenMaxAggregateInputType = {
  id?: true;
  identifier?: true;
  token?: true;
  expires?: true;
  expiresInDays?: true;
  createdAt?: true;
  updatedAt?: true;
  teamId?: true;
  secondaryEmailId?: true;
};

export type VerificationTokenCountAggregateInputType = {
  id?: true;
  identifier?: true;
  token?: true;
  expires?: true;
  expiresInDays?: true;
  createdAt?: true;
  updatedAt?: true;
  teamId?: true;
  secondaryEmailId?: true;
  _all?: true;
};

export type VerificationTokenAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which VerificationToken to aggregate.
   */
  where?: Prisma.VerificationTokenWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of VerificationTokens to fetch.
   */
  orderBy?:
    | Prisma.VerificationTokenOrderByWithRelationInput
    | Prisma.VerificationTokenOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.VerificationTokenWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` VerificationTokens from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` VerificationTokens.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned VerificationTokens
   **/
  _count?: true | VerificationTokenCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: VerificationTokenAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: VerificationTokenSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: VerificationTokenMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: VerificationTokenMaxAggregateInputType;
};

export type GetVerificationTokenAggregateType<T extends VerificationTokenAggregateArgs> = {
  [P in keyof T & keyof AggregateVerificationToken]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateVerificationToken[P]>
    : Prisma.GetScalarType<T[P], AggregateVerificationToken[P]>;
};

export type VerificationTokenGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.VerificationTokenWhereInput;
  orderBy?:
    | Prisma.VerificationTokenOrderByWithAggregationInput
    | Prisma.VerificationTokenOrderByWithAggregationInput[];
  by: Prisma.VerificationTokenScalarFieldEnum[] | Prisma.VerificationTokenScalarFieldEnum;
  having?: Prisma.VerificationTokenScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: VerificationTokenCountAggregateInputType | true;
  _avg?: VerificationTokenAvgAggregateInputType;
  _sum?: VerificationTokenSumAggregateInputType;
  _min?: VerificationTokenMinAggregateInputType;
  _max?: VerificationTokenMaxAggregateInputType;
};

export type VerificationTokenGroupByOutputType = {
  id: number;
  identifier: string;
  token: string;
  expires: Date;
  expiresInDays: number | null;
  createdAt: Date;
  updatedAt: Date;
  teamId: number | null;
  secondaryEmailId: number | null;
  _count: VerificationTokenCountAggregateOutputType | null;
  _avg: VerificationTokenAvgAggregateOutputType | null;
  _sum: VerificationTokenSumAggregateOutputType | null;
  _min: VerificationTokenMinAggregateOutputType | null;
  _max: VerificationTokenMaxAggregateOutputType | null;
};

type GetVerificationTokenGroupByPayload<T extends VerificationTokenGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<VerificationTokenGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof VerificationTokenGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], VerificationTokenGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], VerificationTokenGroupByOutputType[P]>;
    }
  >
>;

export type VerificationTokenWhereInput = {
  AND?: Prisma.VerificationTokenWhereInput | Prisma.VerificationTokenWhereInput[];
  OR?: Prisma.VerificationTokenWhereInput[];
  NOT?: Prisma.VerificationTokenWhereInput | Prisma.VerificationTokenWhereInput[];
  id?: Prisma.IntFilter<"VerificationToken"> | number;
  identifier?: Prisma.StringFilter<"VerificationToken"> | string;
  token?: Prisma.StringFilter<"VerificationToken"> | string;
  expires?: Prisma.DateTimeFilter<"VerificationToken"> | Date | string;
  expiresInDays?: Prisma.IntNullableFilter<"VerificationToken"> | number | null;
  createdAt?: Prisma.DateTimeFilter<"VerificationToken"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"VerificationToken"> | Date | string;
  teamId?: Prisma.IntNullableFilter<"VerificationToken"> | number | null;
  secondaryEmailId?: Prisma.IntNullableFilter<"VerificationToken"> | number | null;
  team?: Prisma.XOR<Prisma.TeamNullableScalarRelationFilter, Prisma.TeamWhereInput> | null;
  secondaryEmail?: Prisma.XOR<
    Prisma.SecondaryEmailNullableScalarRelationFilter,
    Prisma.SecondaryEmailWhereInput
  > | null;
};

export type VerificationTokenOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  identifier?: Prisma.SortOrder;
  token?: Prisma.SortOrder;
  expires?: Prisma.SortOrder;
  expiresInDays?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  teamId?: Prisma.SortOrderInput | Prisma.SortOrder;
  secondaryEmailId?: Prisma.SortOrderInput | Prisma.SortOrder;
  team?: Prisma.TeamOrderByWithRelationInput;
  secondaryEmail?: Prisma.SecondaryEmailOrderByWithRelationInput;
};

export type VerificationTokenWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    token?: string;
    identifier_token?: Prisma.VerificationTokenIdentifierTokenCompoundUniqueInput;
    AND?: Prisma.VerificationTokenWhereInput | Prisma.VerificationTokenWhereInput[];
    OR?: Prisma.VerificationTokenWhereInput[];
    NOT?: Prisma.VerificationTokenWhereInput | Prisma.VerificationTokenWhereInput[];
    identifier?: Prisma.StringFilter<"VerificationToken"> | string;
    expires?: Prisma.DateTimeFilter<"VerificationToken"> | Date | string;
    expiresInDays?: Prisma.IntNullableFilter<"VerificationToken"> | number | null;
    createdAt?: Prisma.DateTimeFilter<"VerificationToken"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"VerificationToken"> | Date | string;
    teamId?: Prisma.IntNullableFilter<"VerificationToken"> | number | null;
    secondaryEmailId?: Prisma.IntNullableFilter<"VerificationToken"> | number | null;
    team?: Prisma.XOR<Prisma.TeamNullableScalarRelationFilter, Prisma.TeamWhereInput> | null;
    secondaryEmail?: Prisma.XOR<
      Prisma.SecondaryEmailNullableScalarRelationFilter,
      Prisma.SecondaryEmailWhereInput
    > | null;
  },
  "id" | "token" | "identifier_token"
>;

export type VerificationTokenOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  identifier?: Prisma.SortOrder;
  token?: Prisma.SortOrder;
  expires?: Prisma.SortOrder;
  expiresInDays?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  teamId?: Prisma.SortOrderInput | Prisma.SortOrder;
  secondaryEmailId?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.VerificationTokenCountOrderByAggregateInput;
  _avg?: Prisma.VerificationTokenAvgOrderByAggregateInput;
  _max?: Prisma.VerificationTokenMaxOrderByAggregateInput;
  _min?: Prisma.VerificationTokenMinOrderByAggregateInput;
  _sum?: Prisma.VerificationTokenSumOrderByAggregateInput;
};

export type VerificationTokenScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.VerificationTokenScalarWhereWithAggregatesInput
    | Prisma.VerificationTokenScalarWhereWithAggregatesInput[];
  OR?: Prisma.VerificationTokenScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.VerificationTokenScalarWhereWithAggregatesInput
    | Prisma.VerificationTokenScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"VerificationToken"> | number;
  identifier?: Prisma.StringWithAggregatesFilter<"VerificationToken"> | string;
  token?: Prisma.StringWithAggregatesFilter<"VerificationToken"> | string;
  expires?: Prisma.DateTimeWithAggregatesFilter<"VerificationToken"> | Date | string;
  expiresInDays?: Prisma.IntNullableWithAggregatesFilter<"VerificationToken"> | number | null;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"VerificationToken"> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"VerificationToken"> | Date | string;
  teamId?: Prisma.IntNullableWithAggregatesFilter<"VerificationToken"> | number | null;
  secondaryEmailId?: Prisma.IntNullableWithAggregatesFilter<"VerificationToken"> | number | null;
};

export type VerificationTokenCreateInput = {
  identifier: string;
  token: string;
  expires: Date | string;
  expiresInDays?: number | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  team?: Prisma.TeamCreateNestedOneWithoutInviteTokensInput;
  secondaryEmail?: Prisma.SecondaryEmailCreateNestedOneWithoutVerificationTokensInput;
};

export type VerificationTokenUncheckedCreateInput = {
  id?: number;
  identifier: string;
  token: string;
  expires: Date | string;
  expiresInDays?: number | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  teamId?: number | null;
  secondaryEmailId?: number | null;
};

export type VerificationTokenUpdateInput = {
  identifier?: Prisma.StringFieldUpdateOperationsInput | string;
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresInDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  team?: Prisma.TeamUpdateOneWithoutInviteTokensNestedInput;
  secondaryEmail?: Prisma.SecondaryEmailUpdateOneWithoutVerificationTokensNestedInput;
};

export type VerificationTokenUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  identifier?: Prisma.StringFieldUpdateOperationsInput | string;
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresInDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  secondaryEmailId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type VerificationTokenCreateManyInput = {
  id?: number;
  identifier: string;
  token: string;
  expires: Date | string;
  expiresInDays?: number | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  teamId?: number | null;
  secondaryEmailId?: number | null;
};

export type VerificationTokenUpdateManyMutationInput = {
  identifier?: Prisma.StringFieldUpdateOperationsInput | string;
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresInDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type VerificationTokenUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  identifier?: Prisma.StringFieldUpdateOperationsInput | string;
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresInDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  secondaryEmailId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type VerificationTokenListRelationFilter = {
  every?: Prisma.VerificationTokenWhereInput;
  some?: Prisma.VerificationTokenWhereInput;
  none?: Prisma.VerificationTokenWhereInput;
};

export type VerificationTokenOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type VerificationTokenIdentifierTokenCompoundUniqueInput = {
  identifier: string;
  token: string;
};

export type VerificationTokenCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  identifier?: Prisma.SortOrder;
  token?: Prisma.SortOrder;
  expires?: Prisma.SortOrder;
  expiresInDays?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  secondaryEmailId?: Prisma.SortOrder;
};

export type VerificationTokenAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  expiresInDays?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  secondaryEmailId?: Prisma.SortOrder;
};

export type VerificationTokenMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  identifier?: Prisma.SortOrder;
  token?: Prisma.SortOrder;
  expires?: Prisma.SortOrder;
  expiresInDays?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  secondaryEmailId?: Prisma.SortOrder;
};

export type VerificationTokenMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  identifier?: Prisma.SortOrder;
  token?: Prisma.SortOrder;
  expires?: Prisma.SortOrder;
  expiresInDays?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  secondaryEmailId?: Prisma.SortOrder;
};

export type VerificationTokenSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  expiresInDays?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  secondaryEmailId?: Prisma.SortOrder;
};

export type VerificationTokenCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<
        Prisma.VerificationTokenCreateWithoutTeamInput,
        Prisma.VerificationTokenUncheckedCreateWithoutTeamInput
      >
    | Prisma.VerificationTokenCreateWithoutTeamInput[]
    | Prisma.VerificationTokenUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.VerificationTokenCreateOrConnectWithoutTeamInput
    | Prisma.VerificationTokenCreateOrConnectWithoutTeamInput[];
  createMany?: Prisma.VerificationTokenCreateManyTeamInputEnvelope;
  connect?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
};

export type VerificationTokenUncheckedCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<
        Prisma.VerificationTokenCreateWithoutTeamInput,
        Prisma.VerificationTokenUncheckedCreateWithoutTeamInput
      >
    | Prisma.VerificationTokenCreateWithoutTeamInput[]
    | Prisma.VerificationTokenUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.VerificationTokenCreateOrConnectWithoutTeamInput
    | Prisma.VerificationTokenCreateOrConnectWithoutTeamInput[];
  createMany?: Prisma.VerificationTokenCreateManyTeamInputEnvelope;
  connect?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
};

export type VerificationTokenUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.VerificationTokenCreateWithoutTeamInput,
        Prisma.VerificationTokenUncheckedCreateWithoutTeamInput
      >
    | Prisma.VerificationTokenCreateWithoutTeamInput[]
    | Prisma.VerificationTokenUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.VerificationTokenCreateOrConnectWithoutTeamInput
    | Prisma.VerificationTokenCreateOrConnectWithoutTeamInput[];
  upsert?:
    | Prisma.VerificationTokenUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.VerificationTokenUpsertWithWhereUniqueWithoutTeamInput[];
  createMany?: Prisma.VerificationTokenCreateManyTeamInputEnvelope;
  set?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
  disconnect?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
  delete?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
  connect?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
  update?:
    | Prisma.VerificationTokenUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.VerificationTokenUpdateWithWhereUniqueWithoutTeamInput[];
  updateMany?:
    | Prisma.VerificationTokenUpdateManyWithWhereWithoutTeamInput
    | Prisma.VerificationTokenUpdateManyWithWhereWithoutTeamInput[];
  deleteMany?: Prisma.VerificationTokenScalarWhereInput | Prisma.VerificationTokenScalarWhereInput[];
};

export type VerificationTokenUncheckedUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.VerificationTokenCreateWithoutTeamInput,
        Prisma.VerificationTokenUncheckedCreateWithoutTeamInput
      >
    | Prisma.VerificationTokenCreateWithoutTeamInput[]
    | Prisma.VerificationTokenUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.VerificationTokenCreateOrConnectWithoutTeamInput
    | Prisma.VerificationTokenCreateOrConnectWithoutTeamInput[];
  upsert?:
    | Prisma.VerificationTokenUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.VerificationTokenUpsertWithWhereUniqueWithoutTeamInput[];
  createMany?: Prisma.VerificationTokenCreateManyTeamInputEnvelope;
  set?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
  disconnect?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
  delete?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
  connect?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
  update?:
    | Prisma.VerificationTokenUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.VerificationTokenUpdateWithWhereUniqueWithoutTeamInput[];
  updateMany?:
    | Prisma.VerificationTokenUpdateManyWithWhereWithoutTeamInput
    | Prisma.VerificationTokenUpdateManyWithWhereWithoutTeamInput[];
  deleteMany?: Prisma.VerificationTokenScalarWhereInput | Prisma.VerificationTokenScalarWhereInput[];
};

export type VerificationTokenCreateNestedManyWithoutSecondaryEmailInput = {
  create?:
    | Prisma.XOR<
        Prisma.VerificationTokenCreateWithoutSecondaryEmailInput,
        Prisma.VerificationTokenUncheckedCreateWithoutSecondaryEmailInput
      >
    | Prisma.VerificationTokenCreateWithoutSecondaryEmailInput[]
    | Prisma.VerificationTokenUncheckedCreateWithoutSecondaryEmailInput[];
  connectOrCreate?:
    | Prisma.VerificationTokenCreateOrConnectWithoutSecondaryEmailInput
    | Prisma.VerificationTokenCreateOrConnectWithoutSecondaryEmailInput[];
  createMany?: Prisma.VerificationTokenCreateManySecondaryEmailInputEnvelope;
  connect?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
};

export type VerificationTokenUncheckedCreateNestedManyWithoutSecondaryEmailInput = {
  create?:
    | Prisma.XOR<
        Prisma.VerificationTokenCreateWithoutSecondaryEmailInput,
        Prisma.VerificationTokenUncheckedCreateWithoutSecondaryEmailInput
      >
    | Prisma.VerificationTokenCreateWithoutSecondaryEmailInput[]
    | Prisma.VerificationTokenUncheckedCreateWithoutSecondaryEmailInput[];
  connectOrCreate?:
    | Prisma.VerificationTokenCreateOrConnectWithoutSecondaryEmailInput
    | Prisma.VerificationTokenCreateOrConnectWithoutSecondaryEmailInput[];
  createMany?: Prisma.VerificationTokenCreateManySecondaryEmailInputEnvelope;
  connect?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
};

export type VerificationTokenUpdateManyWithoutSecondaryEmailNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.VerificationTokenCreateWithoutSecondaryEmailInput,
        Prisma.VerificationTokenUncheckedCreateWithoutSecondaryEmailInput
      >
    | Prisma.VerificationTokenCreateWithoutSecondaryEmailInput[]
    | Prisma.VerificationTokenUncheckedCreateWithoutSecondaryEmailInput[];
  connectOrCreate?:
    | Prisma.VerificationTokenCreateOrConnectWithoutSecondaryEmailInput
    | Prisma.VerificationTokenCreateOrConnectWithoutSecondaryEmailInput[];
  upsert?:
    | Prisma.VerificationTokenUpsertWithWhereUniqueWithoutSecondaryEmailInput
    | Prisma.VerificationTokenUpsertWithWhereUniqueWithoutSecondaryEmailInput[];
  createMany?: Prisma.VerificationTokenCreateManySecondaryEmailInputEnvelope;
  set?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
  disconnect?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
  delete?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
  connect?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
  update?:
    | Prisma.VerificationTokenUpdateWithWhereUniqueWithoutSecondaryEmailInput
    | Prisma.VerificationTokenUpdateWithWhereUniqueWithoutSecondaryEmailInput[];
  updateMany?:
    | Prisma.VerificationTokenUpdateManyWithWhereWithoutSecondaryEmailInput
    | Prisma.VerificationTokenUpdateManyWithWhereWithoutSecondaryEmailInput[];
  deleteMany?: Prisma.VerificationTokenScalarWhereInput | Prisma.VerificationTokenScalarWhereInput[];
};

export type VerificationTokenUncheckedUpdateManyWithoutSecondaryEmailNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.VerificationTokenCreateWithoutSecondaryEmailInput,
        Prisma.VerificationTokenUncheckedCreateWithoutSecondaryEmailInput
      >
    | Prisma.VerificationTokenCreateWithoutSecondaryEmailInput[]
    | Prisma.VerificationTokenUncheckedCreateWithoutSecondaryEmailInput[];
  connectOrCreate?:
    | Prisma.VerificationTokenCreateOrConnectWithoutSecondaryEmailInput
    | Prisma.VerificationTokenCreateOrConnectWithoutSecondaryEmailInput[];
  upsert?:
    | Prisma.VerificationTokenUpsertWithWhereUniqueWithoutSecondaryEmailInput
    | Prisma.VerificationTokenUpsertWithWhereUniqueWithoutSecondaryEmailInput[];
  createMany?: Prisma.VerificationTokenCreateManySecondaryEmailInputEnvelope;
  set?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
  disconnect?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
  delete?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
  connect?: Prisma.VerificationTokenWhereUniqueInput | Prisma.VerificationTokenWhereUniqueInput[];
  update?:
    | Prisma.VerificationTokenUpdateWithWhereUniqueWithoutSecondaryEmailInput
    | Prisma.VerificationTokenUpdateWithWhereUniqueWithoutSecondaryEmailInput[];
  updateMany?:
    | Prisma.VerificationTokenUpdateManyWithWhereWithoutSecondaryEmailInput
    | Prisma.VerificationTokenUpdateManyWithWhereWithoutSecondaryEmailInput[];
  deleteMany?: Prisma.VerificationTokenScalarWhereInput | Prisma.VerificationTokenScalarWhereInput[];
};

export type VerificationTokenCreateWithoutTeamInput = {
  identifier: string;
  token: string;
  expires: Date | string;
  expiresInDays?: number | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  secondaryEmail?: Prisma.SecondaryEmailCreateNestedOneWithoutVerificationTokensInput;
};

export type VerificationTokenUncheckedCreateWithoutTeamInput = {
  id?: number;
  identifier: string;
  token: string;
  expires: Date | string;
  expiresInDays?: number | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  secondaryEmailId?: number | null;
};

export type VerificationTokenCreateOrConnectWithoutTeamInput = {
  where: Prisma.VerificationTokenWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.VerificationTokenCreateWithoutTeamInput,
    Prisma.VerificationTokenUncheckedCreateWithoutTeamInput
  >;
};

export type VerificationTokenCreateManyTeamInputEnvelope = {
  data: Prisma.VerificationTokenCreateManyTeamInput | Prisma.VerificationTokenCreateManyTeamInput[];
  skipDuplicates?: boolean;
};

export type VerificationTokenUpsertWithWhereUniqueWithoutTeamInput = {
  where: Prisma.VerificationTokenWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.VerificationTokenUpdateWithoutTeamInput,
    Prisma.VerificationTokenUncheckedUpdateWithoutTeamInput
  >;
  create: Prisma.XOR<
    Prisma.VerificationTokenCreateWithoutTeamInput,
    Prisma.VerificationTokenUncheckedCreateWithoutTeamInput
  >;
};

export type VerificationTokenUpdateWithWhereUniqueWithoutTeamInput = {
  where: Prisma.VerificationTokenWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.VerificationTokenUpdateWithoutTeamInput,
    Prisma.VerificationTokenUncheckedUpdateWithoutTeamInput
  >;
};

export type VerificationTokenUpdateManyWithWhereWithoutTeamInput = {
  where: Prisma.VerificationTokenScalarWhereInput;
  data: Prisma.XOR<
    Prisma.VerificationTokenUpdateManyMutationInput,
    Prisma.VerificationTokenUncheckedUpdateManyWithoutTeamInput
  >;
};

export type VerificationTokenScalarWhereInput = {
  AND?: Prisma.VerificationTokenScalarWhereInput | Prisma.VerificationTokenScalarWhereInput[];
  OR?: Prisma.VerificationTokenScalarWhereInput[];
  NOT?: Prisma.VerificationTokenScalarWhereInput | Prisma.VerificationTokenScalarWhereInput[];
  id?: Prisma.IntFilter<"VerificationToken"> | number;
  identifier?: Prisma.StringFilter<"VerificationToken"> | string;
  token?: Prisma.StringFilter<"VerificationToken"> | string;
  expires?: Prisma.DateTimeFilter<"VerificationToken"> | Date | string;
  expiresInDays?: Prisma.IntNullableFilter<"VerificationToken"> | number | null;
  createdAt?: Prisma.DateTimeFilter<"VerificationToken"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"VerificationToken"> | Date | string;
  teamId?: Prisma.IntNullableFilter<"VerificationToken"> | number | null;
  secondaryEmailId?: Prisma.IntNullableFilter<"VerificationToken"> | number | null;
};

export type VerificationTokenCreateWithoutSecondaryEmailInput = {
  identifier: string;
  token: string;
  expires: Date | string;
  expiresInDays?: number | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  team?: Prisma.TeamCreateNestedOneWithoutInviteTokensInput;
};

export type VerificationTokenUncheckedCreateWithoutSecondaryEmailInput = {
  id?: number;
  identifier: string;
  token: string;
  expires: Date | string;
  expiresInDays?: number | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  teamId?: number | null;
};

export type VerificationTokenCreateOrConnectWithoutSecondaryEmailInput = {
  where: Prisma.VerificationTokenWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.VerificationTokenCreateWithoutSecondaryEmailInput,
    Prisma.VerificationTokenUncheckedCreateWithoutSecondaryEmailInput
  >;
};

export type VerificationTokenCreateManySecondaryEmailInputEnvelope = {
  data:
    | Prisma.VerificationTokenCreateManySecondaryEmailInput
    | Prisma.VerificationTokenCreateManySecondaryEmailInput[];
  skipDuplicates?: boolean;
};

export type VerificationTokenUpsertWithWhereUniqueWithoutSecondaryEmailInput = {
  where: Prisma.VerificationTokenWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.VerificationTokenUpdateWithoutSecondaryEmailInput,
    Prisma.VerificationTokenUncheckedUpdateWithoutSecondaryEmailInput
  >;
  create: Prisma.XOR<
    Prisma.VerificationTokenCreateWithoutSecondaryEmailInput,
    Prisma.VerificationTokenUncheckedCreateWithoutSecondaryEmailInput
  >;
};

export type VerificationTokenUpdateWithWhereUniqueWithoutSecondaryEmailInput = {
  where: Prisma.VerificationTokenWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.VerificationTokenUpdateWithoutSecondaryEmailInput,
    Prisma.VerificationTokenUncheckedUpdateWithoutSecondaryEmailInput
  >;
};

export type VerificationTokenUpdateManyWithWhereWithoutSecondaryEmailInput = {
  where: Prisma.VerificationTokenScalarWhereInput;
  data: Prisma.XOR<
    Prisma.VerificationTokenUpdateManyMutationInput,
    Prisma.VerificationTokenUncheckedUpdateManyWithoutSecondaryEmailInput
  >;
};

export type VerificationTokenCreateManyTeamInput = {
  id?: number;
  identifier: string;
  token: string;
  expires: Date | string;
  expiresInDays?: number | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  secondaryEmailId?: number | null;
};

export type VerificationTokenUpdateWithoutTeamInput = {
  identifier?: Prisma.StringFieldUpdateOperationsInput | string;
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresInDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  secondaryEmail?: Prisma.SecondaryEmailUpdateOneWithoutVerificationTokensNestedInput;
};

export type VerificationTokenUncheckedUpdateWithoutTeamInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  identifier?: Prisma.StringFieldUpdateOperationsInput | string;
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresInDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  secondaryEmailId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type VerificationTokenUncheckedUpdateManyWithoutTeamInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  identifier?: Prisma.StringFieldUpdateOperationsInput | string;
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresInDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  secondaryEmailId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type VerificationTokenCreateManySecondaryEmailInput = {
  id?: number;
  identifier: string;
  token: string;
  expires: Date | string;
  expiresInDays?: number | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  teamId?: number | null;
};

export type VerificationTokenUpdateWithoutSecondaryEmailInput = {
  identifier?: Prisma.StringFieldUpdateOperationsInput | string;
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresInDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  team?: Prisma.TeamUpdateOneWithoutInviteTokensNestedInput;
};

export type VerificationTokenUncheckedUpdateWithoutSecondaryEmailInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  identifier?: Prisma.StringFieldUpdateOperationsInput | string;
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresInDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type VerificationTokenUncheckedUpdateManyWithoutSecondaryEmailInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  identifier?: Prisma.StringFieldUpdateOperationsInput | string;
  token?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresInDays?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type VerificationTokenSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    identifier?: boolean;
    token?: boolean;
    expires?: boolean;
    expiresInDays?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    teamId?: boolean;
    secondaryEmailId?: boolean;
    team?: boolean | Prisma.VerificationToken$teamArgs<ExtArgs>;
    secondaryEmail?: boolean | Prisma.VerificationToken$secondaryEmailArgs<ExtArgs>;
  },
  ExtArgs["result"]["verificationToken"]
>;

export type VerificationTokenSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    identifier?: boolean;
    token?: boolean;
    expires?: boolean;
    expiresInDays?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    teamId?: boolean;
    secondaryEmailId?: boolean;
    team?: boolean | Prisma.VerificationToken$teamArgs<ExtArgs>;
    secondaryEmail?: boolean | Prisma.VerificationToken$secondaryEmailArgs<ExtArgs>;
  },
  ExtArgs["result"]["verificationToken"]
>;

export type VerificationTokenSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    identifier?: boolean;
    token?: boolean;
    expires?: boolean;
    expiresInDays?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    teamId?: boolean;
    secondaryEmailId?: boolean;
    team?: boolean | Prisma.VerificationToken$teamArgs<ExtArgs>;
    secondaryEmail?: boolean | Prisma.VerificationToken$secondaryEmailArgs<ExtArgs>;
  },
  ExtArgs["result"]["verificationToken"]
>;

export type VerificationTokenSelectScalar = {
  id?: boolean;
  identifier?: boolean;
  token?: boolean;
  expires?: boolean;
  expiresInDays?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
  teamId?: boolean;
  secondaryEmailId?: boolean;
};

export type VerificationTokenOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "identifier"
  | "token"
  | "expires"
  | "expiresInDays"
  | "createdAt"
  | "updatedAt"
  | "teamId"
  | "secondaryEmailId",
  ExtArgs["result"]["verificationToken"]
>;
export type VerificationTokenInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  team?: boolean | Prisma.VerificationToken$teamArgs<ExtArgs>;
  secondaryEmail?: boolean | Prisma.VerificationToken$secondaryEmailArgs<ExtArgs>;
};
export type VerificationTokenIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  team?: boolean | Prisma.VerificationToken$teamArgs<ExtArgs>;
  secondaryEmail?: boolean | Prisma.VerificationToken$secondaryEmailArgs<ExtArgs>;
};
export type VerificationTokenIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  team?: boolean | Prisma.VerificationToken$teamArgs<ExtArgs>;
  secondaryEmail?: boolean | Prisma.VerificationToken$secondaryEmailArgs<ExtArgs>;
};

export type $VerificationTokenPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "VerificationToken";
  objects: {
    team: Prisma.$TeamPayload<ExtArgs> | null;
    secondaryEmail: Prisma.$SecondaryEmailPayload<ExtArgs> | null;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      identifier: string;
      token: string;
      expires: Date;
      expiresInDays: number | null;
      createdAt: Date;
      updatedAt: Date;
      teamId: number | null;
      secondaryEmailId: number | null;
    },
    ExtArgs["result"]["verificationToken"]
  >;
  composites: {};
};

export type VerificationTokenGetPayload<S extends boolean | null | undefined | VerificationTokenDefaultArgs> =
  runtime.Types.Result.GetResult<Prisma.$VerificationTokenPayload, S>;

export type VerificationTokenCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<VerificationTokenFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: VerificationTokenCountAggregateInputType | true;
};

export interface VerificationTokenDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["VerificationToken"];
    meta: { name: "VerificationToken" };
  };
  /**
   * Find zero or one VerificationToken that matches the filter.
   * @param {VerificationTokenFindUniqueArgs} args - Arguments to find a VerificationToken
   * @example
   * // Get one VerificationToken
   * const verificationToken = await prisma.verificationToken.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends VerificationTokenFindUniqueArgs>(
    args: Prisma.SelectSubset<T, VerificationTokenFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__VerificationTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$VerificationTokenPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one VerificationToken that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {VerificationTokenFindUniqueOrThrowArgs} args - Arguments to find a VerificationToken
   * @example
   * // Get one VerificationToken
   * const verificationToken = await prisma.verificationToken.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends VerificationTokenFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, VerificationTokenFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__VerificationTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$VerificationTokenPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first VerificationToken that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VerificationTokenFindFirstArgs} args - Arguments to find a VerificationToken
   * @example
   * // Get one VerificationToken
   * const verificationToken = await prisma.verificationToken.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends VerificationTokenFindFirstArgs>(
    args?: Prisma.SelectSubset<T, VerificationTokenFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__VerificationTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$VerificationTokenPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first VerificationToken that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VerificationTokenFindFirstOrThrowArgs} args - Arguments to find a VerificationToken
   * @example
   * // Get one VerificationToken
   * const verificationToken = await prisma.verificationToken.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends VerificationTokenFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, VerificationTokenFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__VerificationTokenClient<
    runtime.Types.Result.GetResult<
      Prisma.$VerificationTokenPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more VerificationTokens that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VerificationTokenFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all VerificationTokens
   * const verificationTokens = await prisma.verificationToken.findMany()
   *
   * // Get first 10 VerificationTokens
   * const verificationTokens = await prisma.verificationToken.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const verificationTokenWithIdOnly = await prisma.verificationToken.findMany({ select: { id: true } })
   *
   */
  findMany<T extends VerificationTokenFindManyArgs>(
    args?: Prisma.SelectSubset<T, VerificationTokenFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$VerificationTokenPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a VerificationToken.
   * @param {VerificationTokenCreateArgs} args - Arguments to create a VerificationToken.
   * @example
   * // Create one VerificationToken
   * const VerificationToken = await prisma.verificationToken.create({
   *   data: {
   *     // ... data to create a VerificationToken
   *   }
   * })
   *
   */
  create<T extends VerificationTokenCreateArgs>(
    args: Prisma.SelectSubset<T, VerificationTokenCreateArgs<ExtArgs>>
  ): Prisma.Prisma__VerificationTokenClient<
    runtime.Types.Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many VerificationTokens.
   * @param {VerificationTokenCreateManyArgs} args - Arguments to create many VerificationTokens.
   * @example
   * // Create many VerificationTokens
   * const verificationToken = await prisma.verificationToken.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends VerificationTokenCreateManyArgs>(
    args?: Prisma.SelectSubset<T, VerificationTokenCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many VerificationTokens and returns the data saved in the database.
   * @param {VerificationTokenCreateManyAndReturnArgs} args - Arguments to create many VerificationTokens.
   * @example
   * // Create many VerificationTokens
   * const verificationToken = await prisma.verificationToken.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many VerificationTokens and only return the `id`
   * const verificationTokenWithIdOnly = await prisma.verificationToken.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends VerificationTokenCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, VerificationTokenCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$VerificationTokenPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a VerificationToken.
   * @param {VerificationTokenDeleteArgs} args - Arguments to delete one VerificationToken.
   * @example
   * // Delete one VerificationToken
   * const VerificationToken = await prisma.verificationToken.delete({
   *   where: {
   *     // ... filter to delete one VerificationToken
   *   }
   * })
   *
   */
  delete<T extends VerificationTokenDeleteArgs>(
    args: Prisma.SelectSubset<T, VerificationTokenDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__VerificationTokenClient<
    runtime.Types.Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one VerificationToken.
   * @param {VerificationTokenUpdateArgs} args - Arguments to update one VerificationToken.
   * @example
   * // Update one VerificationToken
   * const verificationToken = await prisma.verificationToken.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends VerificationTokenUpdateArgs>(
    args: Prisma.SelectSubset<T, VerificationTokenUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__VerificationTokenClient<
    runtime.Types.Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more VerificationTokens.
   * @param {VerificationTokenDeleteManyArgs} args - Arguments to filter VerificationTokens to delete.
   * @example
   * // Delete a few VerificationTokens
   * const { count } = await prisma.verificationToken.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends VerificationTokenDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, VerificationTokenDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more VerificationTokens.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VerificationTokenUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many VerificationTokens
   * const verificationToken = await prisma.verificationToken.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends VerificationTokenUpdateManyArgs>(
    args: Prisma.SelectSubset<T, VerificationTokenUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more VerificationTokens and returns the data updated in the database.
   * @param {VerificationTokenUpdateManyAndReturnArgs} args - Arguments to update many VerificationTokens.
   * @example
   * // Update many VerificationTokens
   * const verificationToken = await prisma.verificationToken.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more VerificationTokens and only return the `id`
   * const verificationTokenWithIdOnly = await prisma.verificationToken.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends VerificationTokenUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, VerificationTokenUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$VerificationTokenPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one VerificationToken.
   * @param {VerificationTokenUpsertArgs} args - Arguments to update or create a VerificationToken.
   * @example
   * // Update or create a VerificationToken
   * const verificationToken = await prisma.verificationToken.upsert({
   *   create: {
   *     // ... data to create a VerificationToken
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the VerificationToken we want to update
   *   }
   * })
   */
  upsert<T extends VerificationTokenUpsertArgs>(
    args: Prisma.SelectSubset<T, VerificationTokenUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__VerificationTokenClient<
    runtime.Types.Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of VerificationTokens.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VerificationTokenCountArgs} args - Arguments to filter VerificationTokens to count.
   * @example
   * // Count the number of VerificationTokens
   * const count = await prisma.verificationToken.count({
   *   where: {
   *     // ... the filter for the VerificationTokens we want to count
   *   }
   * })
   **/
  count<T extends VerificationTokenCountArgs>(
    args?: Prisma.Subset<T, VerificationTokenCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], VerificationTokenCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a VerificationToken.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VerificationTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends VerificationTokenAggregateArgs>(
    args: Prisma.Subset<T, VerificationTokenAggregateArgs>
  ): Prisma.PrismaPromise<GetVerificationTokenAggregateType<T>>;

  /**
   * Group by VerificationToken.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VerificationTokenGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends VerificationTokenGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: VerificationTokenGroupByArgs["orderBy"] }
      : { orderBy?: VerificationTokenGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, VerificationTokenGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetVerificationTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the VerificationToken model
   */
  readonly fields: VerificationTokenFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for VerificationToken.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__VerificationTokenClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  team<T extends Prisma.VerificationToken$teamArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.VerificationToken$teamArgs<ExtArgs>>
  ): Prisma.Prisma__TeamClient<
    runtime.Types.Result.GetResult<
      Prisma.$TeamPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  secondaryEmail<T extends Prisma.VerificationToken$secondaryEmailArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.VerificationToken$secondaryEmailArgs<ExtArgs>>
  ): Prisma.Prisma__SecondaryEmailClient<
    runtime.Types.Result.GetResult<
      Prisma.$SecondaryEmailPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the VerificationToken model
 */
export interface VerificationTokenFieldRefs {
  readonly id: Prisma.FieldRef<"VerificationToken", "Int">;
  readonly identifier: Prisma.FieldRef<"VerificationToken", "String">;
  readonly token: Prisma.FieldRef<"VerificationToken", "String">;
  readonly expires: Prisma.FieldRef<"VerificationToken", "DateTime">;
  readonly expiresInDays: Prisma.FieldRef<"VerificationToken", "Int">;
  readonly createdAt: Prisma.FieldRef<"VerificationToken", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"VerificationToken", "DateTime">;
  readonly teamId: Prisma.FieldRef<"VerificationToken", "Int">;
  readonly secondaryEmailId: Prisma.FieldRef<"VerificationToken", "Int">;
}

// Custom InputTypes
/**
 * VerificationToken findUnique
 */
export type VerificationTokenFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the VerificationToken
   */
  select?: Prisma.VerificationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VerificationToken
   */
  omit?: Prisma.VerificationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VerificationTokenInclude<ExtArgs> | null;
  /**
   * Filter, which VerificationToken to fetch.
   */
  where: Prisma.VerificationTokenWhereUniqueInput;
};

/**
 * VerificationToken findUniqueOrThrow
 */
export type VerificationTokenFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the VerificationToken
   */
  select?: Prisma.VerificationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VerificationToken
   */
  omit?: Prisma.VerificationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VerificationTokenInclude<ExtArgs> | null;
  /**
   * Filter, which VerificationToken to fetch.
   */
  where: Prisma.VerificationTokenWhereUniqueInput;
};

/**
 * VerificationToken findFirst
 */
export type VerificationTokenFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the VerificationToken
   */
  select?: Prisma.VerificationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VerificationToken
   */
  omit?: Prisma.VerificationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VerificationTokenInclude<ExtArgs> | null;
  /**
   * Filter, which VerificationToken to fetch.
   */
  where?: Prisma.VerificationTokenWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of VerificationTokens to fetch.
   */
  orderBy?:
    | Prisma.VerificationTokenOrderByWithRelationInput
    | Prisma.VerificationTokenOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for VerificationTokens.
   */
  cursor?: Prisma.VerificationTokenWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` VerificationTokens from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` VerificationTokens.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of VerificationTokens.
   */
  distinct?: Prisma.VerificationTokenScalarFieldEnum | Prisma.VerificationTokenScalarFieldEnum[];
};

/**
 * VerificationToken findFirstOrThrow
 */
export type VerificationTokenFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the VerificationToken
   */
  select?: Prisma.VerificationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VerificationToken
   */
  omit?: Prisma.VerificationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VerificationTokenInclude<ExtArgs> | null;
  /**
   * Filter, which VerificationToken to fetch.
   */
  where?: Prisma.VerificationTokenWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of VerificationTokens to fetch.
   */
  orderBy?:
    | Prisma.VerificationTokenOrderByWithRelationInput
    | Prisma.VerificationTokenOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for VerificationTokens.
   */
  cursor?: Prisma.VerificationTokenWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` VerificationTokens from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` VerificationTokens.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of VerificationTokens.
   */
  distinct?: Prisma.VerificationTokenScalarFieldEnum | Prisma.VerificationTokenScalarFieldEnum[];
};

/**
 * VerificationToken findMany
 */
export type VerificationTokenFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the VerificationToken
   */
  select?: Prisma.VerificationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VerificationToken
   */
  omit?: Prisma.VerificationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VerificationTokenInclude<ExtArgs> | null;
  /**
   * Filter, which VerificationTokens to fetch.
   */
  where?: Prisma.VerificationTokenWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of VerificationTokens to fetch.
   */
  orderBy?:
    | Prisma.VerificationTokenOrderByWithRelationInput
    | Prisma.VerificationTokenOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing VerificationTokens.
   */
  cursor?: Prisma.VerificationTokenWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` VerificationTokens from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` VerificationTokens.
   */
  skip?: number;
  distinct?: Prisma.VerificationTokenScalarFieldEnum | Prisma.VerificationTokenScalarFieldEnum[];
};

/**
 * VerificationToken create
 */
export type VerificationTokenCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the VerificationToken
   */
  select?: Prisma.VerificationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VerificationToken
   */
  omit?: Prisma.VerificationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VerificationTokenInclude<ExtArgs> | null;
  /**
   * The data needed to create a VerificationToken.
   */
  data: Prisma.XOR<Prisma.VerificationTokenCreateInput, Prisma.VerificationTokenUncheckedCreateInput>;
};

/**
 * VerificationToken createMany
 */
export type VerificationTokenCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many VerificationTokens.
   */
  data: Prisma.VerificationTokenCreateManyInput | Prisma.VerificationTokenCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * VerificationToken createManyAndReturn
 */
export type VerificationTokenCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the VerificationToken
   */
  select?: Prisma.VerificationTokenSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the VerificationToken
   */
  omit?: Prisma.VerificationTokenOmit<ExtArgs> | null;
  /**
   * The data used to create many VerificationTokens.
   */
  data: Prisma.VerificationTokenCreateManyInput | Prisma.VerificationTokenCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VerificationTokenIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * VerificationToken update
 */
export type VerificationTokenUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the VerificationToken
   */
  select?: Prisma.VerificationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VerificationToken
   */
  omit?: Prisma.VerificationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VerificationTokenInclude<ExtArgs> | null;
  /**
   * The data needed to update a VerificationToken.
   */
  data: Prisma.XOR<Prisma.VerificationTokenUpdateInput, Prisma.VerificationTokenUncheckedUpdateInput>;
  /**
   * Choose, which VerificationToken to update.
   */
  where: Prisma.VerificationTokenWhereUniqueInput;
};

/**
 * VerificationToken updateMany
 */
export type VerificationTokenUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update VerificationTokens.
   */
  data: Prisma.XOR<
    Prisma.VerificationTokenUpdateManyMutationInput,
    Prisma.VerificationTokenUncheckedUpdateManyInput
  >;
  /**
   * Filter which VerificationTokens to update
   */
  where?: Prisma.VerificationTokenWhereInput;
  /**
   * Limit how many VerificationTokens to update.
   */
  limit?: number;
};

/**
 * VerificationToken updateManyAndReturn
 */
export type VerificationTokenUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the VerificationToken
   */
  select?: Prisma.VerificationTokenSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the VerificationToken
   */
  omit?: Prisma.VerificationTokenOmit<ExtArgs> | null;
  /**
   * The data used to update VerificationTokens.
   */
  data: Prisma.XOR<
    Prisma.VerificationTokenUpdateManyMutationInput,
    Prisma.VerificationTokenUncheckedUpdateManyInput
  >;
  /**
   * Filter which VerificationTokens to update
   */
  where?: Prisma.VerificationTokenWhereInput;
  /**
   * Limit how many VerificationTokens to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VerificationTokenIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * VerificationToken upsert
 */
export type VerificationTokenUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the VerificationToken
   */
  select?: Prisma.VerificationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VerificationToken
   */
  omit?: Prisma.VerificationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VerificationTokenInclude<ExtArgs> | null;
  /**
   * The filter to search for the VerificationToken to update in case it exists.
   */
  where: Prisma.VerificationTokenWhereUniqueInput;
  /**
   * In case the VerificationToken found by the `where` argument doesn't exist, create a new VerificationToken with this data.
   */
  create: Prisma.XOR<Prisma.VerificationTokenCreateInput, Prisma.VerificationTokenUncheckedCreateInput>;
  /**
   * In case the VerificationToken was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.VerificationTokenUpdateInput, Prisma.VerificationTokenUncheckedUpdateInput>;
};

/**
 * VerificationToken delete
 */
export type VerificationTokenDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the VerificationToken
   */
  select?: Prisma.VerificationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VerificationToken
   */
  omit?: Prisma.VerificationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VerificationTokenInclude<ExtArgs> | null;
  /**
   * Filter which VerificationToken to delete.
   */
  where: Prisma.VerificationTokenWhereUniqueInput;
};

/**
 * VerificationToken deleteMany
 */
export type VerificationTokenDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which VerificationTokens to delete
   */
  where?: Prisma.VerificationTokenWhereInput;
  /**
   * Limit how many VerificationTokens to delete.
   */
  limit?: number;
};

/**
 * VerificationToken.team
 */
export type VerificationToken$teamArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Team
   */
  select?: Prisma.TeamSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Team
   */
  omit?: Prisma.TeamOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TeamInclude<ExtArgs> | null;
  where?: Prisma.TeamWhereInput;
};

/**
 * VerificationToken.secondaryEmail
 */
export type VerificationToken$secondaryEmailArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the SecondaryEmail
   */
  select?: Prisma.SecondaryEmailSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SecondaryEmail
   */
  omit?: Prisma.SecondaryEmailOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SecondaryEmailInclude<ExtArgs> | null;
  where?: Prisma.SecondaryEmailWhereInput;
};

/**
 * VerificationToken without action
 */
export type VerificationTokenDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the VerificationToken
   */
  select?: Prisma.VerificationTokenSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the VerificationToken
   */
  omit?: Prisma.VerificationTokenOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VerificationTokenInclude<ExtArgs> | null;
};
