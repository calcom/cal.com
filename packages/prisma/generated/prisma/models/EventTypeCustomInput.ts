/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `EventTypeCustomInput` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model EventTypeCustomInput
 *
 */
export type EventTypeCustomInputModel =
  runtime.Types.Result.DefaultSelection<Prisma.$EventTypeCustomInputPayload>;

export type AggregateEventTypeCustomInput = {
  _count: EventTypeCustomInputCountAggregateOutputType | null;
  _avg: EventTypeCustomInputAvgAggregateOutputType | null;
  _sum: EventTypeCustomInputSumAggregateOutputType | null;
  _min: EventTypeCustomInputMinAggregateOutputType | null;
  _max: EventTypeCustomInputMaxAggregateOutputType | null;
};

export type EventTypeCustomInputAvgAggregateOutputType = {
  id: number | null;
  eventTypeId: number | null;
};

export type EventTypeCustomInputSumAggregateOutputType = {
  id: number | null;
  eventTypeId: number | null;
};

export type EventTypeCustomInputMinAggregateOutputType = {
  id: number | null;
  eventTypeId: number | null;
  label: string | null;
  type: $Enums.EventTypeCustomInputType | null;
  required: boolean | null;
  placeholder: string | null;
};

export type EventTypeCustomInputMaxAggregateOutputType = {
  id: number | null;
  eventTypeId: number | null;
  label: string | null;
  type: $Enums.EventTypeCustomInputType | null;
  required: boolean | null;
  placeholder: string | null;
};

export type EventTypeCustomInputCountAggregateOutputType = {
  id: number;
  eventTypeId: number;
  label: number;
  type: number;
  options: number;
  required: number;
  placeholder: number;
  _all: number;
};

export type EventTypeCustomInputAvgAggregateInputType = {
  id?: true;
  eventTypeId?: true;
};

export type EventTypeCustomInputSumAggregateInputType = {
  id?: true;
  eventTypeId?: true;
};

export type EventTypeCustomInputMinAggregateInputType = {
  id?: true;
  eventTypeId?: true;
  label?: true;
  type?: true;
  required?: true;
  placeholder?: true;
};

export type EventTypeCustomInputMaxAggregateInputType = {
  id?: true;
  eventTypeId?: true;
  label?: true;
  type?: true;
  required?: true;
  placeholder?: true;
};

export type EventTypeCustomInputCountAggregateInputType = {
  id?: true;
  eventTypeId?: true;
  label?: true;
  type?: true;
  options?: true;
  required?: true;
  placeholder?: true;
  _all?: true;
};

export type EventTypeCustomInputAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which EventTypeCustomInput to aggregate.
   */
  where?: Prisma.EventTypeCustomInputWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EventTypeCustomInputs to fetch.
   */
  orderBy?:
    | Prisma.EventTypeCustomInputOrderByWithRelationInput
    | Prisma.EventTypeCustomInputOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.EventTypeCustomInputWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EventTypeCustomInputs from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EventTypeCustomInputs.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned EventTypeCustomInputs
   **/
  _count?: true | EventTypeCustomInputCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: EventTypeCustomInputAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: EventTypeCustomInputSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: EventTypeCustomInputMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: EventTypeCustomInputMaxAggregateInputType;
};

export type GetEventTypeCustomInputAggregateType<T extends EventTypeCustomInputAggregateArgs> = {
  [P in keyof T & keyof AggregateEventTypeCustomInput]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateEventTypeCustomInput[P]>
    : Prisma.GetScalarType<T[P], AggregateEventTypeCustomInput[P]>;
};

export type EventTypeCustomInputGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.EventTypeCustomInputWhereInput;
  orderBy?:
    | Prisma.EventTypeCustomInputOrderByWithAggregationInput
    | Prisma.EventTypeCustomInputOrderByWithAggregationInput[];
  by: Prisma.EventTypeCustomInputScalarFieldEnum[] | Prisma.EventTypeCustomInputScalarFieldEnum;
  having?: Prisma.EventTypeCustomInputScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: EventTypeCustomInputCountAggregateInputType | true;
  _avg?: EventTypeCustomInputAvgAggregateInputType;
  _sum?: EventTypeCustomInputSumAggregateInputType;
  _min?: EventTypeCustomInputMinAggregateInputType;
  _max?: EventTypeCustomInputMaxAggregateInputType;
};

export type EventTypeCustomInputGroupByOutputType = {
  id: number;
  eventTypeId: number;
  label: string;
  type: $Enums.EventTypeCustomInputType;
  options: runtime.JsonValue | null;
  required: boolean;
  placeholder: string;
  _count: EventTypeCustomInputCountAggregateOutputType | null;
  _avg: EventTypeCustomInputAvgAggregateOutputType | null;
  _sum: EventTypeCustomInputSumAggregateOutputType | null;
  _min: EventTypeCustomInputMinAggregateOutputType | null;
  _max: EventTypeCustomInputMaxAggregateOutputType | null;
};

type GetEventTypeCustomInputGroupByPayload<T extends EventTypeCustomInputGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<EventTypeCustomInputGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof EventTypeCustomInputGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], EventTypeCustomInputGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], EventTypeCustomInputGroupByOutputType[P]>;
    }
  >
>;

export type EventTypeCustomInputWhereInput = {
  AND?: Prisma.EventTypeCustomInputWhereInput | Prisma.EventTypeCustomInputWhereInput[];
  OR?: Prisma.EventTypeCustomInputWhereInput[];
  NOT?: Prisma.EventTypeCustomInputWhereInput | Prisma.EventTypeCustomInputWhereInput[];
  id?: Prisma.IntFilter<"EventTypeCustomInput"> | number;
  eventTypeId?: Prisma.IntFilter<"EventTypeCustomInput"> | number;
  label?: Prisma.StringFilter<"EventTypeCustomInput"> | string;
  type?: Prisma.EnumEventTypeCustomInputTypeFilter<"EventTypeCustomInput"> | $Enums.EventTypeCustomInputType;
  options?: Prisma.JsonNullableFilter<"EventTypeCustomInput">;
  required?: Prisma.BoolFilter<"EventTypeCustomInput"> | boolean;
  placeholder?: Prisma.StringFilter<"EventTypeCustomInput"> | string;
  eventType?: Prisma.XOR<Prisma.EventTypeScalarRelationFilter, Prisma.EventTypeWhereInput>;
};

export type EventTypeCustomInputOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  label?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  options?: Prisma.SortOrderInput | Prisma.SortOrder;
  required?: Prisma.SortOrder;
  placeholder?: Prisma.SortOrder;
  eventType?: Prisma.EventTypeOrderByWithRelationInput;
};

export type EventTypeCustomInputWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    AND?: Prisma.EventTypeCustomInputWhereInput | Prisma.EventTypeCustomInputWhereInput[];
    OR?: Prisma.EventTypeCustomInputWhereInput[];
    NOT?: Prisma.EventTypeCustomInputWhereInput | Prisma.EventTypeCustomInputWhereInput[];
    eventTypeId?: Prisma.IntFilter<"EventTypeCustomInput"> | number;
    label?: Prisma.StringFilter<"EventTypeCustomInput"> | string;
    type?:
      | Prisma.EnumEventTypeCustomInputTypeFilter<"EventTypeCustomInput">
      | $Enums.EventTypeCustomInputType;
    options?: Prisma.JsonNullableFilter<"EventTypeCustomInput">;
    required?: Prisma.BoolFilter<"EventTypeCustomInput"> | boolean;
    placeholder?: Prisma.StringFilter<"EventTypeCustomInput"> | string;
    eventType?: Prisma.XOR<Prisma.EventTypeScalarRelationFilter, Prisma.EventTypeWhereInput>;
  },
  "id"
>;

export type EventTypeCustomInputOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  label?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  options?: Prisma.SortOrderInput | Prisma.SortOrder;
  required?: Prisma.SortOrder;
  placeholder?: Prisma.SortOrder;
  _count?: Prisma.EventTypeCustomInputCountOrderByAggregateInput;
  _avg?: Prisma.EventTypeCustomInputAvgOrderByAggregateInput;
  _max?: Prisma.EventTypeCustomInputMaxOrderByAggregateInput;
  _min?: Prisma.EventTypeCustomInputMinOrderByAggregateInput;
  _sum?: Prisma.EventTypeCustomInputSumOrderByAggregateInput;
};

export type EventTypeCustomInputScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.EventTypeCustomInputScalarWhereWithAggregatesInput
    | Prisma.EventTypeCustomInputScalarWhereWithAggregatesInput[];
  OR?: Prisma.EventTypeCustomInputScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.EventTypeCustomInputScalarWhereWithAggregatesInput
    | Prisma.EventTypeCustomInputScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"EventTypeCustomInput"> | number;
  eventTypeId?: Prisma.IntWithAggregatesFilter<"EventTypeCustomInput"> | number;
  label?: Prisma.StringWithAggregatesFilter<"EventTypeCustomInput"> | string;
  type?:
    | Prisma.EnumEventTypeCustomInputTypeWithAggregatesFilter<"EventTypeCustomInput">
    | $Enums.EventTypeCustomInputType;
  options?: Prisma.JsonNullableWithAggregatesFilter<"EventTypeCustomInput">;
  required?: Prisma.BoolWithAggregatesFilter<"EventTypeCustomInput"> | boolean;
  placeholder?: Prisma.StringWithAggregatesFilter<"EventTypeCustomInput"> | string;
};

export type EventTypeCustomInputCreateInput = {
  label: string;
  type: $Enums.EventTypeCustomInputType;
  options?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  required: boolean;
  placeholder?: string;
  eventType: Prisma.EventTypeCreateNestedOneWithoutCustomInputsInput;
};

export type EventTypeCustomInputUncheckedCreateInput = {
  id?: number;
  eventTypeId: number;
  label: string;
  type: $Enums.EventTypeCustomInputType;
  options?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  required: boolean;
  placeholder?: string;
};

export type EventTypeCustomInputUpdateInput = {
  label?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.EnumEventTypeCustomInputTypeFieldUpdateOperationsInput | $Enums.EventTypeCustomInputType;
  options?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  placeholder?: Prisma.StringFieldUpdateOperationsInput | string;
  eventType?: Prisma.EventTypeUpdateOneRequiredWithoutCustomInputsNestedInput;
};

export type EventTypeCustomInputUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  label?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.EnumEventTypeCustomInputTypeFieldUpdateOperationsInput | $Enums.EventTypeCustomInputType;
  options?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  placeholder?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type EventTypeCustomInputCreateManyInput = {
  id?: number;
  eventTypeId: number;
  label: string;
  type: $Enums.EventTypeCustomInputType;
  options?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  required: boolean;
  placeholder?: string;
};

export type EventTypeCustomInputUpdateManyMutationInput = {
  label?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.EnumEventTypeCustomInputTypeFieldUpdateOperationsInput | $Enums.EventTypeCustomInputType;
  options?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  placeholder?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type EventTypeCustomInputUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  label?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.EnumEventTypeCustomInputTypeFieldUpdateOperationsInput | $Enums.EventTypeCustomInputType;
  options?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  placeholder?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type EventTypeCustomInputListRelationFilter = {
  every?: Prisma.EventTypeCustomInputWhereInput;
  some?: Prisma.EventTypeCustomInputWhereInput;
  none?: Prisma.EventTypeCustomInputWhereInput;
};

export type EventTypeCustomInputOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type EventTypeCustomInputCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  label?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  options?: Prisma.SortOrder;
  required?: Prisma.SortOrder;
  placeholder?: Prisma.SortOrder;
};

export type EventTypeCustomInputAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
};

export type EventTypeCustomInputMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  label?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  required?: Prisma.SortOrder;
  placeholder?: Prisma.SortOrder;
};

export type EventTypeCustomInputMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  label?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  required?: Prisma.SortOrder;
  placeholder?: Prisma.SortOrder;
};

export type EventTypeCustomInputSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
};

export type EventTypeCustomInputCreateNestedManyWithoutEventTypeInput = {
  create?:
    | Prisma.XOR<
        Prisma.EventTypeCustomInputCreateWithoutEventTypeInput,
        Prisma.EventTypeCustomInputUncheckedCreateWithoutEventTypeInput
      >
    | Prisma.EventTypeCustomInputCreateWithoutEventTypeInput[]
    | Prisma.EventTypeCustomInputUncheckedCreateWithoutEventTypeInput[];
  connectOrCreate?:
    | Prisma.EventTypeCustomInputCreateOrConnectWithoutEventTypeInput
    | Prisma.EventTypeCustomInputCreateOrConnectWithoutEventTypeInput[];
  createMany?: Prisma.EventTypeCustomInputCreateManyEventTypeInputEnvelope;
  connect?: Prisma.EventTypeCustomInputWhereUniqueInput | Prisma.EventTypeCustomInputWhereUniqueInput[];
};

export type EventTypeCustomInputUncheckedCreateNestedManyWithoutEventTypeInput = {
  create?:
    | Prisma.XOR<
        Prisma.EventTypeCustomInputCreateWithoutEventTypeInput,
        Prisma.EventTypeCustomInputUncheckedCreateWithoutEventTypeInput
      >
    | Prisma.EventTypeCustomInputCreateWithoutEventTypeInput[]
    | Prisma.EventTypeCustomInputUncheckedCreateWithoutEventTypeInput[];
  connectOrCreate?:
    | Prisma.EventTypeCustomInputCreateOrConnectWithoutEventTypeInput
    | Prisma.EventTypeCustomInputCreateOrConnectWithoutEventTypeInput[];
  createMany?: Prisma.EventTypeCustomInputCreateManyEventTypeInputEnvelope;
  connect?: Prisma.EventTypeCustomInputWhereUniqueInput | Prisma.EventTypeCustomInputWhereUniqueInput[];
};

export type EventTypeCustomInputUpdateManyWithoutEventTypeNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EventTypeCustomInputCreateWithoutEventTypeInput,
        Prisma.EventTypeCustomInputUncheckedCreateWithoutEventTypeInput
      >
    | Prisma.EventTypeCustomInputCreateWithoutEventTypeInput[]
    | Prisma.EventTypeCustomInputUncheckedCreateWithoutEventTypeInput[];
  connectOrCreate?:
    | Prisma.EventTypeCustomInputCreateOrConnectWithoutEventTypeInput
    | Prisma.EventTypeCustomInputCreateOrConnectWithoutEventTypeInput[];
  upsert?:
    | Prisma.EventTypeCustomInputUpsertWithWhereUniqueWithoutEventTypeInput
    | Prisma.EventTypeCustomInputUpsertWithWhereUniqueWithoutEventTypeInput[];
  createMany?: Prisma.EventTypeCustomInputCreateManyEventTypeInputEnvelope;
  set?: Prisma.EventTypeCustomInputWhereUniqueInput | Prisma.EventTypeCustomInputWhereUniqueInput[];
  disconnect?: Prisma.EventTypeCustomInputWhereUniqueInput | Prisma.EventTypeCustomInputWhereUniqueInput[];
  delete?: Prisma.EventTypeCustomInputWhereUniqueInput | Prisma.EventTypeCustomInputWhereUniqueInput[];
  connect?: Prisma.EventTypeCustomInputWhereUniqueInput | Prisma.EventTypeCustomInputWhereUniqueInput[];
  update?:
    | Prisma.EventTypeCustomInputUpdateWithWhereUniqueWithoutEventTypeInput
    | Prisma.EventTypeCustomInputUpdateWithWhereUniqueWithoutEventTypeInput[];
  updateMany?:
    | Prisma.EventTypeCustomInputUpdateManyWithWhereWithoutEventTypeInput
    | Prisma.EventTypeCustomInputUpdateManyWithWhereWithoutEventTypeInput[];
  deleteMany?: Prisma.EventTypeCustomInputScalarWhereInput | Prisma.EventTypeCustomInputScalarWhereInput[];
};

export type EventTypeCustomInputUncheckedUpdateManyWithoutEventTypeNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EventTypeCustomInputCreateWithoutEventTypeInput,
        Prisma.EventTypeCustomInputUncheckedCreateWithoutEventTypeInput
      >
    | Prisma.EventTypeCustomInputCreateWithoutEventTypeInput[]
    | Prisma.EventTypeCustomInputUncheckedCreateWithoutEventTypeInput[];
  connectOrCreate?:
    | Prisma.EventTypeCustomInputCreateOrConnectWithoutEventTypeInput
    | Prisma.EventTypeCustomInputCreateOrConnectWithoutEventTypeInput[];
  upsert?:
    | Prisma.EventTypeCustomInputUpsertWithWhereUniqueWithoutEventTypeInput
    | Prisma.EventTypeCustomInputUpsertWithWhereUniqueWithoutEventTypeInput[];
  createMany?: Prisma.EventTypeCustomInputCreateManyEventTypeInputEnvelope;
  set?: Prisma.EventTypeCustomInputWhereUniqueInput | Prisma.EventTypeCustomInputWhereUniqueInput[];
  disconnect?: Prisma.EventTypeCustomInputWhereUniqueInput | Prisma.EventTypeCustomInputWhereUniqueInput[];
  delete?: Prisma.EventTypeCustomInputWhereUniqueInput | Prisma.EventTypeCustomInputWhereUniqueInput[];
  connect?: Prisma.EventTypeCustomInputWhereUniqueInput | Prisma.EventTypeCustomInputWhereUniqueInput[];
  update?:
    | Prisma.EventTypeCustomInputUpdateWithWhereUniqueWithoutEventTypeInput
    | Prisma.EventTypeCustomInputUpdateWithWhereUniqueWithoutEventTypeInput[];
  updateMany?:
    | Prisma.EventTypeCustomInputUpdateManyWithWhereWithoutEventTypeInput
    | Prisma.EventTypeCustomInputUpdateManyWithWhereWithoutEventTypeInput[];
  deleteMany?: Prisma.EventTypeCustomInputScalarWhereInput | Prisma.EventTypeCustomInputScalarWhereInput[];
};

export type EnumEventTypeCustomInputTypeFieldUpdateOperationsInput = {
  set?: $Enums.EventTypeCustomInputType;
};

export type EventTypeCustomInputCreateWithoutEventTypeInput = {
  label: string;
  type: $Enums.EventTypeCustomInputType;
  options?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  required: boolean;
  placeholder?: string;
};

export type EventTypeCustomInputUncheckedCreateWithoutEventTypeInput = {
  id?: number;
  label: string;
  type: $Enums.EventTypeCustomInputType;
  options?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  required: boolean;
  placeholder?: string;
};

export type EventTypeCustomInputCreateOrConnectWithoutEventTypeInput = {
  where: Prisma.EventTypeCustomInputWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.EventTypeCustomInputCreateWithoutEventTypeInput,
    Prisma.EventTypeCustomInputUncheckedCreateWithoutEventTypeInput
  >;
};

export type EventTypeCustomInputCreateManyEventTypeInputEnvelope = {
  data:
    | Prisma.EventTypeCustomInputCreateManyEventTypeInput
    | Prisma.EventTypeCustomInputCreateManyEventTypeInput[];
  skipDuplicates?: boolean;
};

export type EventTypeCustomInputUpsertWithWhereUniqueWithoutEventTypeInput = {
  where: Prisma.EventTypeCustomInputWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.EventTypeCustomInputUpdateWithoutEventTypeInput,
    Prisma.EventTypeCustomInputUncheckedUpdateWithoutEventTypeInput
  >;
  create: Prisma.XOR<
    Prisma.EventTypeCustomInputCreateWithoutEventTypeInput,
    Prisma.EventTypeCustomInputUncheckedCreateWithoutEventTypeInput
  >;
};

export type EventTypeCustomInputUpdateWithWhereUniqueWithoutEventTypeInput = {
  where: Prisma.EventTypeCustomInputWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.EventTypeCustomInputUpdateWithoutEventTypeInput,
    Prisma.EventTypeCustomInputUncheckedUpdateWithoutEventTypeInput
  >;
};

export type EventTypeCustomInputUpdateManyWithWhereWithoutEventTypeInput = {
  where: Prisma.EventTypeCustomInputScalarWhereInput;
  data: Prisma.XOR<
    Prisma.EventTypeCustomInputUpdateManyMutationInput,
    Prisma.EventTypeCustomInputUncheckedUpdateManyWithoutEventTypeInput
  >;
};

export type EventTypeCustomInputScalarWhereInput = {
  AND?: Prisma.EventTypeCustomInputScalarWhereInput | Prisma.EventTypeCustomInputScalarWhereInput[];
  OR?: Prisma.EventTypeCustomInputScalarWhereInput[];
  NOT?: Prisma.EventTypeCustomInputScalarWhereInput | Prisma.EventTypeCustomInputScalarWhereInput[];
  id?: Prisma.IntFilter<"EventTypeCustomInput"> | number;
  eventTypeId?: Prisma.IntFilter<"EventTypeCustomInput"> | number;
  label?: Prisma.StringFilter<"EventTypeCustomInput"> | string;
  type?: Prisma.EnumEventTypeCustomInputTypeFilter<"EventTypeCustomInput"> | $Enums.EventTypeCustomInputType;
  options?: Prisma.JsonNullableFilter<"EventTypeCustomInput">;
  required?: Prisma.BoolFilter<"EventTypeCustomInput"> | boolean;
  placeholder?: Prisma.StringFilter<"EventTypeCustomInput"> | string;
};

export type EventTypeCustomInputCreateManyEventTypeInput = {
  id?: number;
  label: string;
  type: $Enums.EventTypeCustomInputType;
  options?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  required: boolean;
  placeholder?: string;
};

export type EventTypeCustomInputUpdateWithoutEventTypeInput = {
  label?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.EnumEventTypeCustomInputTypeFieldUpdateOperationsInput | $Enums.EventTypeCustomInputType;
  options?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  placeholder?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type EventTypeCustomInputUncheckedUpdateWithoutEventTypeInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  label?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.EnumEventTypeCustomInputTypeFieldUpdateOperationsInput | $Enums.EventTypeCustomInputType;
  options?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  placeholder?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type EventTypeCustomInputUncheckedUpdateManyWithoutEventTypeInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  label?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.EnumEventTypeCustomInputTypeFieldUpdateOperationsInput | $Enums.EventTypeCustomInputType;
  options?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue;
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  placeholder?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type EventTypeCustomInputSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    eventTypeId?: boolean;
    label?: boolean;
    type?: boolean;
    options?: boolean;
    required?: boolean;
    placeholder?: boolean;
    eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["eventTypeCustomInput"]
>;

export type EventTypeCustomInputSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    eventTypeId?: boolean;
    label?: boolean;
    type?: boolean;
    options?: boolean;
    required?: boolean;
    placeholder?: boolean;
    eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["eventTypeCustomInput"]
>;

export type EventTypeCustomInputSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    eventTypeId?: boolean;
    label?: boolean;
    type?: boolean;
    options?: boolean;
    required?: boolean;
    placeholder?: boolean;
    eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["eventTypeCustomInput"]
>;

export type EventTypeCustomInputSelectScalar = {
  id?: boolean;
  eventTypeId?: boolean;
  label?: boolean;
  type?: boolean;
  options?: boolean;
  required?: boolean;
  placeholder?: boolean;
};

export type EventTypeCustomInputOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  "id" | "eventTypeId" | "label" | "type" | "options" | "required" | "placeholder",
  ExtArgs["result"]["eventTypeCustomInput"]
>;
export type EventTypeCustomInputInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
};
export type EventTypeCustomInputIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
};
export type EventTypeCustomInputIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
};

export type $EventTypeCustomInputPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "EventTypeCustomInput";
  objects: {
    eventType: Prisma.$EventTypePayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      eventTypeId: number;
      label: string;
      type: $Enums.EventTypeCustomInputType;
      /**
       * @zod.import(["import { customInputOptionSchema } from '../../zod-utils'"]).custom.use(customInputOptionSchema)
       */
      options: runtime.JsonValue | null;
      required: boolean;
      placeholder: string;
    },
    ExtArgs["result"]["eventTypeCustomInput"]
  >;
  composites: {};
};

export type EventTypeCustomInputGetPayload<
  S extends boolean | null | undefined | EventTypeCustomInputDefaultArgs
> = runtime.Types.Result.GetResult<Prisma.$EventTypeCustomInputPayload, S>;

export type EventTypeCustomInputCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<EventTypeCustomInputFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: EventTypeCustomInputCountAggregateInputType | true;
};

export interface EventTypeCustomInputDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["EventTypeCustomInput"];
    meta: { name: "EventTypeCustomInput" };
  };
  /**
   * Find zero or one EventTypeCustomInput that matches the filter.
   * @param {EventTypeCustomInputFindUniqueArgs} args - Arguments to find a EventTypeCustomInput
   * @example
   * // Get one EventTypeCustomInput
   * const eventTypeCustomInput = await prisma.eventTypeCustomInput.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends EventTypeCustomInputFindUniqueArgs>(
    args: Prisma.SelectSubset<T, EventTypeCustomInputFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeCustomInputClient<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeCustomInputPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one EventTypeCustomInput that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {EventTypeCustomInputFindUniqueOrThrowArgs} args - Arguments to find a EventTypeCustomInput
   * @example
   * // Get one EventTypeCustomInput
   * const eventTypeCustomInput = await prisma.eventTypeCustomInput.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends EventTypeCustomInputFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, EventTypeCustomInputFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeCustomInputClient<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeCustomInputPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first EventTypeCustomInput that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventTypeCustomInputFindFirstArgs} args - Arguments to find a EventTypeCustomInput
   * @example
   * // Get one EventTypeCustomInput
   * const eventTypeCustomInput = await prisma.eventTypeCustomInput.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends EventTypeCustomInputFindFirstArgs>(
    args?: Prisma.SelectSubset<T, EventTypeCustomInputFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeCustomInputClient<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeCustomInputPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first EventTypeCustomInput that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventTypeCustomInputFindFirstOrThrowArgs} args - Arguments to find a EventTypeCustomInput
   * @example
   * // Get one EventTypeCustomInput
   * const eventTypeCustomInput = await prisma.eventTypeCustomInput.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends EventTypeCustomInputFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, EventTypeCustomInputFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeCustomInputClient<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeCustomInputPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more EventTypeCustomInputs that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventTypeCustomInputFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all EventTypeCustomInputs
   * const eventTypeCustomInputs = await prisma.eventTypeCustomInput.findMany()
   *
   * // Get first 10 EventTypeCustomInputs
   * const eventTypeCustomInputs = await prisma.eventTypeCustomInput.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const eventTypeCustomInputWithIdOnly = await prisma.eventTypeCustomInput.findMany({ select: { id: true } })
   *
   */
  findMany<T extends EventTypeCustomInputFindManyArgs>(
    args?: Prisma.SelectSubset<T, EventTypeCustomInputFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeCustomInputPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a EventTypeCustomInput.
   * @param {EventTypeCustomInputCreateArgs} args - Arguments to create a EventTypeCustomInput.
   * @example
   * // Create one EventTypeCustomInput
   * const EventTypeCustomInput = await prisma.eventTypeCustomInput.create({
   *   data: {
   *     // ... data to create a EventTypeCustomInput
   *   }
   * })
   *
   */
  create<T extends EventTypeCustomInputCreateArgs>(
    args: Prisma.SelectSubset<T, EventTypeCustomInputCreateArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeCustomInputClient<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeCustomInputPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many EventTypeCustomInputs.
   * @param {EventTypeCustomInputCreateManyArgs} args - Arguments to create many EventTypeCustomInputs.
   * @example
   * // Create many EventTypeCustomInputs
   * const eventTypeCustomInput = await prisma.eventTypeCustomInput.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends EventTypeCustomInputCreateManyArgs>(
    args?: Prisma.SelectSubset<T, EventTypeCustomInputCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many EventTypeCustomInputs and returns the data saved in the database.
   * @param {EventTypeCustomInputCreateManyAndReturnArgs} args - Arguments to create many EventTypeCustomInputs.
   * @example
   * // Create many EventTypeCustomInputs
   * const eventTypeCustomInput = await prisma.eventTypeCustomInput.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many EventTypeCustomInputs and only return the `id`
   * const eventTypeCustomInputWithIdOnly = await prisma.eventTypeCustomInput.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends EventTypeCustomInputCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, EventTypeCustomInputCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeCustomInputPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a EventTypeCustomInput.
   * @param {EventTypeCustomInputDeleteArgs} args - Arguments to delete one EventTypeCustomInput.
   * @example
   * // Delete one EventTypeCustomInput
   * const EventTypeCustomInput = await prisma.eventTypeCustomInput.delete({
   *   where: {
   *     // ... filter to delete one EventTypeCustomInput
   *   }
   * })
   *
   */
  delete<T extends EventTypeCustomInputDeleteArgs>(
    args: Prisma.SelectSubset<T, EventTypeCustomInputDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeCustomInputClient<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeCustomInputPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one EventTypeCustomInput.
   * @param {EventTypeCustomInputUpdateArgs} args - Arguments to update one EventTypeCustomInput.
   * @example
   * // Update one EventTypeCustomInput
   * const eventTypeCustomInput = await prisma.eventTypeCustomInput.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends EventTypeCustomInputUpdateArgs>(
    args: Prisma.SelectSubset<T, EventTypeCustomInputUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeCustomInputClient<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeCustomInputPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more EventTypeCustomInputs.
   * @param {EventTypeCustomInputDeleteManyArgs} args - Arguments to filter EventTypeCustomInputs to delete.
   * @example
   * // Delete a few EventTypeCustomInputs
   * const { count } = await prisma.eventTypeCustomInput.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends EventTypeCustomInputDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, EventTypeCustomInputDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more EventTypeCustomInputs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventTypeCustomInputUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many EventTypeCustomInputs
   * const eventTypeCustomInput = await prisma.eventTypeCustomInput.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends EventTypeCustomInputUpdateManyArgs>(
    args: Prisma.SelectSubset<T, EventTypeCustomInputUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more EventTypeCustomInputs and returns the data updated in the database.
   * @param {EventTypeCustomInputUpdateManyAndReturnArgs} args - Arguments to update many EventTypeCustomInputs.
   * @example
   * // Update many EventTypeCustomInputs
   * const eventTypeCustomInput = await prisma.eventTypeCustomInput.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more EventTypeCustomInputs and only return the `id`
   * const eventTypeCustomInputWithIdOnly = await prisma.eventTypeCustomInput.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends EventTypeCustomInputUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, EventTypeCustomInputUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeCustomInputPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one EventTypeCustomInput.
   * @param {EventTypeCustomInputUpsertArgs} args - Arguments to update or create a EventTypeCustomInput.
   * @example
   * // Update or create a EventTypeCustomInput
   * const eventTypeCustomInput = await prisma.eventTypeCustomInput.upsert({
   *   create: {
   *     // ... data to create a EventTypeCustomInput
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the EventTypeCustomInput we want to update
   *   }
   * })
   */
  upsert<T extends EventTypeCustomInputUpsertArgs>(
    args: Prisma.SelectSubset<T, EventTypeCustomInputUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeCustomInputClient<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeCustomInputPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of EventTypeCustomInputs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventTypeCustomInputCountArgs} args - Arguments to filter EventTypeCustomInputs to count.
   * @example
   * // Count the number of EventTypeCustomInputs
   * const count = await prisma.eventTypeCustomInput.count({
   *   where: {
   *     // ... the filter for the EventTypeCustomInputs we want to count
   *   }
   * })
   **/
  count<T extends EventTypeCustomInputCountArgs>(
    args?: Prisma.Subset<T, EventTypeCustomInputCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], EventTypeCustomInputCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a EventTypeCustomInput.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventTypeCustomInputAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends EventTypeCustomInputAggregateArgs>(
    args: Prisma.Subset<T, EventTypeCustomInputAggregateArgs>
  ): Prisma.PrismaPromise<GetEventTypeCustomInputAggregateType<T>>;

  /**
   * Group by EventTypeCustomInput.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventTypeCustomInputGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends EventTypeCustomInputGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: EventTypeCustomInputGroupByArgs["orderBy"] }
      : { orderBy?: EventTypeCustomInputGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, EventTypeCustomInputGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetEventTypeCustomInputGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the EventTypeCustomInput model
   */
  readonly fields: EventTypeCustomInputFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for EventTypeCustomInput.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__EventTypeCustomInputClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  eventType<T extends Prisma.EventTypeDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.EventTypeDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeClient<
    | runtime.Types.Result.GetResult<
        Prisma.$EventTypePayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the EventTypeCustomInput model
 */
export interface EventTypeCustomInputFieldRefs {
  readonly id: Prisma.FieldRef<"EventTypeCustomInput", "Int">;
  readonly eventTypeId: Prisma.FieldRef<"EventTypeCustomInput", "Int">;
  readonly label: Prisma.FieldRef<"EventTypeCustomInput", "String">;
  readonly type: Prisma.FieldRef<"EventTypeCustomInput", "EventTypeCustomInputType">;
  readonly options: Prisma.FieldRef<"EventTypeCustomInput", "Json">;
  readonly required: Prisma.FieldRef<"EventTypeCustomInput", "Boolean">;
  readonly placeholder: Prisma.FieldRef<"EventTypeCustomInput", "String">;
}

// Custom InputTypes
/**
 * EventTypeCustomInput findUnique
 */
export type EventTypeCustomInputFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeCustomInput
   */
  select?: Prisma.EventTypeCustomInputSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeCustomInput
   */
  omit?: Prisma.EventTypeCustomInputOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeCustomInputInclude<ExtArgs> | null;
  /**
   * Filter, which EventTypeCustomInput to fetch.
   */
  where: Prisma.EventTypeCustomInputWhereUniqueInput;
};

/**
 * EventTypeCustomInput findUniqueOrThrow
 */
export type EventTypeCustomInputFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeCustomInput
   */
  select?: Prisma.EventTypeCustomInputSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeCustomInput
   */
  omit?: Prisma.EventTypeCustomInputOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeCustomInputInclude<ExtArgs> | null;
  /**
   * Filter, which EventTypeCustomInput to fetch.
   */
  where: Prisma.EventTypeCustomInputWhereUniqueInput;
};

/**
 * EventTypeCustomInput findFirst
 */
export type EventTypeCustomInputFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeCustomInput
   */
  select?: Prisma.EventTypeCustomInputSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeCustomInput
   */
  omit?: Prisma.EventTypeCustomInputOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeCustomInputInclude<ExtArgs> | null;
  /**
   * Filter, which EventTypeCustomInput to fetch.
   */
  where?: Prisma.EventTypeCustomInputWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EventTypeCustomInputs to fetch.
   */
  orderBy?:
    | Prisma.EventTypeCustomInputOrderByWithRelationInput
    | Prisma.EventTypeCustomInputOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for EventTypeCustomInputs.
   */
  cursor?: Prisma.EventTypeCustomInputWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EventTypeCustomInputs from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EventTypeCustomInputs.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of EventTypeCustomInputs.
   */
  distinct?: Prisma.EventTypeCustomInputScalarFieldEnum | Prisma.EventTypeCustomInputScalarFieldEnum[];
};

/**
 * EventTypeCustomInput findFirstOrThrow
 */
export type EventTypeCustomInputFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeCustomInput
   */
  select?: Prisma.EventTypeCustomInputSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeCustomInput
   */
  omit?: Prisma.EventTypeCustomInputOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeCustomInputInclude<ExtArgs> | null;
  /**
   * Filter, which EventTypeCustomInput to fetch.
   */
  where?: Prisma.EventTypeCustomInputWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EventTypeCustomInputs to fetch.
   */
  orderBy?:
    | Prisma.EventTypeCustomInputOrderByWithRelationInput
    | Prisma.EventTypeCustomInputOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for EventTypeCustomInputs.
   */
  cursor?: Prisma.EventTypeCustomInputWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EventTypeCustomInputs from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EventTypeCustomInputs.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of EventTypeCustomInputs.
   */
  distinct?: Prisma.EventTypeCustomInputScalarFieldEnum | Prisma.EventTypeCustomInputScalarFieldEnum[];
};

/**
 * EventTypeCustomInput findMany
 */
export type EventTypeCustomInputFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeCustomInput
   */
  select?: Prisma.EventTypeCustomInputSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeCustomInput
   */
  omit?: Prisma.EventTypeCustomInputOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeCustomInputInclude<ExtArgs> | null;
  /**
   * Filter, which EventTypeCustomInputs to fetch.
   */
  where?: Prisma.EventTypeCustomInputWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EventTypeCustomInputs to fetch.
   */
  orderBy?:
    | Prisma.EventTypeCustomInputOrderByWithRelationInput
    | Prisma.EventTypeCustomInputOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing EventTypeCustomInputs.
   */
  cursor?: Prisma.EventTypeCustomInputWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EventTypeCustomInputs from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EventTypeCustomInputs.
   */
  skip?: number;
  distinct?: Prisma.EventTypeCustomInputScalarFieldEnum | Prisma.EventTypeCustomInputScalarFieldEnum[];
};

/**
 * EventTypeCustomInput create
 */
export type EventTypeCustomInputCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeCustomInput
   */
  select?: Prisma.EventTypeCustomInputSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeCustomInput
   */
  omit?: Prisma.EventTypeCustomInputOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeCustomInputInclude<ExtArgs> | null;
  /**
   * The data needed to create a EventTypeCustomInput.
   */
  data: Prisma.XOR<Prisma.EventTypeCustomInputCreateInput, Prisma.EventTypeCustomInputUncheckedCreateInput>;
};

/**
 * EventTypeCustomInput createMany
 */
export type EventTypeCustomInputCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many EventTypeCustomInputs.
   */
  data: Prisma.EventTypeCustomInputCreateManyInput | Prisma.EventTypeCustomInputCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * EventTypeCustomInput createManyAndReturn
 */
export type EventTypeCustomInputCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeCustomInput
   */
  select?: Prisma.EventTypeCustomInputSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeCustomInput
   */
  omit?: Prisma.EventTypeCustomInputOmit<ExtArgs> | null;
  /**
   * The data used to create many EventTypeCustomInputs.
   */
  data: Prisma.EventTypeCustomInputCreateManyInput | Prisma.EventTypeCustomInputCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeCustomInputIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * EventTypeCustomInput update
 */
export type EventTypeCustomInputUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeCustomInput
   */
  select?: Prisma.EventTypeCustomInputSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeCustomInput
   */
  omit?: Prisma.EventTypeCustomInputOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeCustomInputInclude<ExtArgs> | null;
  /**
   * The data needed to update a EventTypeCustomInput.
   */
  data: Prisma.XOR<Prisma.EventTypeCustomInputUpdateInput, Prisma.EventTypeCustomInputUncheckedUpdateInput>;
  /**
   * Choose, which EventTypeCustomInput to update.
   */
  where: Prisma.EventTypeCustomInputWhereUniqueInput;
};

/**
 * EventTypeCustomInput updateMany
 */
export type EventTypeCustomInputUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update EventTypeCustomInputs.
   */
  data: Prisma.XOR<
    Prisma.EventTypeCustomInputUpdateManyMutationInput,
    Prisma.EventTypeCustomInputUncheckedUpdateManyInput
  >;
  /**
   * Filter which EventTypeCustomInputs to update
   */
  where?: Prisma.EventTypeCustomInputWhereInput;
  /**
   * Limit how many EventTypeCustomInputs to update.
   */
  limit?: number;
};

/**
 * EventTypeCustomInput updateManyAndReturn
 */
export type EventTypeCustomInputUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeCustomInput
   */
  select?: Prisma.EventTypeCustomInputSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeCustomInput
   */
  omit?: Prisma.EventTypeCustomInputOmit<ExtArgs> | null;
  /**
   * The data used to update EventTypeCustomInputs.
   */
  data: Prisma.XOR<
    Prisma.EventTypeCustomInputUpdateManyMutationInput,
    Prisma.EventTypeCustomInputUncheckedUpdateManyInput
  >;
  /**
   * Filter which EventTypeCustomInputs to update
   */
  where?: Prisma.EventTypeCustomInputWhereInput;
  /**
   * Limit how many EventTypeCustomInputs to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeCustomInputIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * EventTypeCustomInput upsert
 */
export type EventTypeCustomInputUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeCustomInput
   */
  select?: Prisma.EventTypeCustomInputSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeCustomInput
   */
  omit?: Prisma.EventTypeCustomInputOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeCustomInputInclude<ExtArgs> | null;
  /**
   * The filter to search for the EventTypeCustomInput to update in case it exists.
   */
  where: Prisma.EventTypeCustomInputWhereUniqueInput;
  /**
   * In case the EventTypeCustomInput found by the `where` argument doesn't exist, create a new EventTypeCustomInput with this data.
   */
  create: Prisma.XOR<Prisma.EventTypeCustomInputCreateInput, Prisma.EventTypeCustomInputUncheckedCreateInput>;
  /**
   * In case the EventTypeCustomInput was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.EventTypeCustomInputUpdateInput, Prisma.EventTypeCustomInputUncheckedUpdateInput>;
};

/**
 * EventTypeCustomInput delete
 */
export type EventTypeCustomInputDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeCustomInput
   */
  select?: Prisma.EventTypeCustomInputSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeCustomInput
   */
  omit?: Prisma.EventTypeCustomInputOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeCustomInputInclude<ExtArgs> | null;
  /**
   * Filter which EventTypeCustomInput to delete.
   */
  where: Prisma.EventTypeCustomInputWhereUniqueInput;
};

/**
 * EventTypeCustomInput deleteMany
 */
export type EventTypeCustomInputDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which EventTypeCustomInputs to delete
   */
  where?: Prisma.EventTypeCustomInputWhereInput;
  /**
   * Limit how many EventTypeCustomInputs to delete.
   */
  limit?: number;
};

/**
 * EventTypeCustomInput without action
 */
export type EventTypeCustomInputDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeCustomInput
   */
  select?: Prisma.EventTypeCustomInputSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeCustomInput
   */
  omit?: Prisma.EventTypeCustomInputOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeCustomInputInclude<ExtArgs> | null;
};
