/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `Agent` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model Agent
 *
 */
export type AgentModel = runtime.Types.Result.DefaultSelection<Prisma.$AgentPayload>;

export type AggregateAgent = {
  _count: AgentCountAggregateOutputType | null;
  _avg: AgentAvgAggregateOutputType | null;
  _sum: AgentSumAggregateOutputType | null;
  _min: AgentMinAggregateOutputType | null;
  _max: AgentMaxAggregateOutputType | null;
};

export type AgentAvgAggregateOutputType = {
  userId: number | null;
  teamId: number | null;
  inboundEventTypeId: number | null;
};

export type AgentSumAggregateOutputType = {
  userId: number | null;
  teamId: number | null;
  inboundEventTypeId: number | null;
};

export type AgentMinAggregateOutputType = {
  id: string | null;
  name: string | null;
  userId: number | null;
  teamId: number | null;
  providerAgentId: string | null;
  inboundEventTypeId: number | null;
  enabled: boolean | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type AgentMaxAggregateOutputType = {
  id: string | null;
  name: string | null;
  userId: number | null;
  teamId: number | null;
  providerAgentId: string | null;
  inboundEventTypeId: number | null;
  enabled: boolean | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type AgentCountAggregateOutputType = {
  id: number;
  name: number;
  userId: number;
  teamId: number;
  providerAgentId: number;
  inboundEventTypeId: number;
  enabled: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type AgentAvgAggregateInputType = {
  userId?: true;
  teamId?: true;
  inboundEventTypeId?: true;
};

export type AgentSumAggregateInputType = {
  userId?: true;
  teamId?: true;
  inboundEventTypeId?: true;
};

export type AgentMinAggregateInputType = {
  id?: true;
  name?: true;
  userId?: true;
  teamId?: true;
  providerAgentId?: true;
  inboundEventTypeId?: true;
  enabled?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type AgentMaxAggregateInputType = {
  id?: true;
  name?: true;
  userId?: true;
  teamId?: true;
  providerAgentId?: true;
  inboundEventTypeId?: true;
  enabled?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type AgentCountAggregateInputType = {
  id?: true;
  name?: true;
  userId?: true;
  teamId?: true;
  providerAgentId?: true;
  inboundEventTypeId?: true;
  enabled?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type AgentAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which Agent to aggregate.
   */
  where?: Prisma.AgentWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Agents to fetch.
   */
  orderBy?: Prisma.AgentOrderByWithRelationInput | Prisma.AgentOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.AgentWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Agents from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Agents.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned Agents
   **/
  _count?: true | AgentCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: AgentAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: AgentSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: AgentMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: AgentMaxAggregateInputType;
};

export type GetAgentAggregateType<T extends AgentAggregateArgs> = {
  [P in keyof T & keyof AggregateAgent]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAgent[P]>
    : Prisma.GetScalarType<T[P], AggregateAgent[P]>;
};

export type AgentGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.AgentWhereInput;
  orderBy?: Prisma.AgentOrderByWithAggregationInput | Prisma.AgentOrderByWithAggregationInput[];
  by: Prisma.AgentScalarFieldEnum[] | Prisma.AgentScalarFieldEnum;
  having?: Prisma.AgentScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: AgentCountAggregateInputType | true;
  _avg?: AgentAvgAggregateInputType;
  _sum?: AgentSumAggregateInputType;
  _min?: AgentMinAggregateInputType;
  _max?: AgentMaxAggregateInputType;
};

export type AgentGroupByOutputType = {
  id: string;
  name: string;
  userId: number | null;
  teamId: number | null;
  providerAgentId: string;
  inboundEventTypeId: number | null;
  enabled: boolean;
  createdAt: Date;
  updatedAt: Date;
  _count: AgentCountAggregateOutputType | null;
  _avg: AgentAvgAggregateOutputType | null;
  _sum: AgentSumAggregateOutputType | null;
  _min: AgentMinAggregateOutputType | null;
  _max: AgentMaxAggregateOutputType | null;
};

type GetAgentGroupByPayload<T extends AgentGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<AgentGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof AgentGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], AgentGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], AgentGroupByOutputType[P]>;
    }
  >
>;

export type AgentWhereInput = {
  AND?: Prisma.AgentWhereInput | Prisma.AgentWhereInput[];
  OR?: Prisma.AgentWhereInput[];
  NOT?: Prisma.AgentWhereInput | Prisma.AgentWhereInput[];
  id?: Prisma.StringFilter<"Agent"> | string;
  name?: Prisma.StringFilter<"Agent"> | string;
  userId?: Prisma.IntNullableFilter<"Agent"> | number | null;
  teamId?: Prisma.IntNullableFilter<"Agent"> | number | null;
  providerAgentId?: Prisma.StringFilter<"Agent"> | string;
  inboundEventTypeId?: Prisma.IntNullableFilter<"Agent"> | number | null;
  enabled?: Prisma.BoolFilter<"Agent"> | boolean;
  createdAt?: Prisma.DateTimeFilter<"Agent"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"Agent"> | Date | string;
  user?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null;
  team?: Prisma.XOR<Prisma.TeamNullableScalarRelationFilter, Prisma.TeamWhereInput> | null;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberListRelationFilter;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberListRelationFilter;
  workflowStep?: Prisma.XOR<
    Prisma.WorkflowStepNullableScalarRelationFilter,
    Prisma.WorkflowStepWhereInput
  > | null;
  inboundWorkflowStep?: Prisma.XOR<
    Prisma.WorkflowStepNullableScalarRelationFilter,
    Prisma.WorkflowStepWhereInput
  > | null;
};

export type AgentOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  userId?: Prisma.SortOrderInput | Prisma.SortOrder;
  teamId?: Prisma.SortOrderInput | Prisma.SortOrder;
  providerAgentId?: Prisma.SortOrder;
  inboundEventTypeId?: Prisma.SortOrderInput | Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  user?: Prisma.UserOrderByWithRelationInput;
  team?: Prisma.TeamOrderByWithRelationInput;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberOrderByRelationAggregateInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberOrderByRelationAggregateInput;
  workflowStep?: Prisma.WorkflowStepOrderByWithRelationInput;
  inboundWorkflowStep?: Prisma.WorkflowStepOrderByWithRelationInput;
};

export type AgentWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    providerAgentId?: string;
    AND?: Prisma.AgentWhereInput | Prisma.AgentWhereInput[];
    OR?: Prisma.AgentWhereInput[];
    NOT?: Prisma.AgentWhereInput | Prisma.AgentWhereInput[];
    name?: Prisma.StringFilter<"Agent"> | string;
    userId?: Prisma.IntNullableFilter<"Agent"> | number | null;
    teamId?: Prisma.IntNullableFilter<"Agent"> | number | null;
    inboundEventTypeId?: Prisma.IntNullableFilter<"Agent"> | number | null;
    enabled?: Prisma.BoolFilter<"Agent"> | boolean;
    createdAt?: Prisma.DateTimeFilter<"Agent"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"Agent"> | Date | string;
    user?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null;
    team?: Prisma.XOR<Prisma.TeamNullableScalarRelationFilter, Prisma.TeamWhereInput> | null;
    inboundPhoneNumbers?: Prisma.CalAiPhoneNumberListRelationFilter;
    outboundPhoneNumbers?: Prisma.CalAiPhoneNumberListRelationFilter;
    workflowStep?: Prisma.XOR<
      Prisma.WorkflowStepNullableScalarRelationFilter,
      Prisma.WorkflowStepWhereInput
    > | null;
    inboundWorkflowStep?: Prisma.XOR<
      Prisma.WorkflowStepNullableScalarRelationFilter,
      Prisma.WorkflowStepWhereInput
    > | null;
  },
  "id" | "providerAgentId"
>;

export type AgentOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  userId?: Prisma.SortOrderInput | Prisma.SortOrder;
  teamId?: Prisma.SortOrderInput | Prisma.SortOrder;
  providerAgentId?: Prisma.SortOrder;
  inboundEventTypeId?: Prisma.SortOrderInput | Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.AgentCountOrderByAggregateInput;
  _avg?: Prisma.AgentAvgOrderByAggregateInput;
  _max?: Prisma.AgentMaxOrderByAggregateInput;
  _min?: Prisma.AgentMinOrderByAggregateInput;
  _sum?: Prisma.AgentSumOrderByAggregateInput;
};

export type AgentScalarWhereWithAggregatesInput = {
  AND?: Prisma.AgentScalarWhereWithAggregatesInput | Prisma.AgentScalarWhereWithAggregatesInput[];
  OR?: Prisma.AgentScalarWhereWithAggregatesInput[];
  NOT?: Prisma.AgentScalarWhereWithAggregatesInput | Prisma.AgentScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"Agent"> | string;
  name?: Prisma.StringWithAggregatesFilter<"Agent"> | string;
  userId?: Prisma.IntNullableWithAggregatesFilter<"Agent"> | number | null;
  teamId?: Prisma.IntNullableWithAggregatesFilter<"Agent"> | number | null;
  providerAgentId?: Prisma.StringWithAggregatesFilter<"Agent"> | string;
  inboundEventTypeId?: Prisma.IntNullableWithAggregatesFilter<"Agent"> | number | null;
  enabled?: Prisma.BoolWithAggregatesFilter<"Agent"> | boolean;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Agent"> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Agent"> | Date | string;
};

export type AgentCreateInput = {
  id?: string;
  name: string;
  providerAgentId: string;
  inboundEventTypeId?: number | null;
  enabled?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  user?: Prisma.UserCreateNestedOneWithoutAgentsInput;
  team?: Prisma.TeamCreateNestedOneWithoutAgentsInput;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberCreateNestedManyWithoutInboundAgentInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberCreateNestedManyWithoutOutboundAgentInput;
  workflowStep?: Prisma.WorkflowStepCreateNestedOneWithoutAgentInput;
  inboundWorkflowStep?: Prisma.WorkflowStepCreateNestedOneWithoutInboundAgentInput;
};

export type AgentUncheckedCreateInput = {
  id?: string;
  name: string;
  userId?: number | null;
  teamId?: number | null;
  providerAgentId: string;
  inboundEventTypeId?: number | null;
  enabled?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedCreateNestedManyWithoutInboundAgentInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedCreateNestedManyWithoutOutboundAgentInput;
  workflowStep?: Prisma.WorkflowStepUncheckedCreateNestedOneWithoutAgentInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUncheckedCreateNestedOneWithoutInboundAgentInput;
};

export type AgentUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  user?: Prisma.UserUpdateOneWithoutAgentsNestedInput;
  team?: Prisma.TeamUpdateOneWithoutAgentsNestedInput;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUpdateManyWithoutInboundAgentNestedInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUpdateManyWithoutOutboundAgentNestedInput;
  workflowStep?: Prisma.WorkflowStepUpdateOneWithoutAgentNestedInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUpdateOneWithoutInboundAgentNestedInput;
};

export type AgentUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedUpdateManyWithoutInboundAgentNestedInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedUpdateManyWithoutOutboundAgentNestedInput;
  workflowStep?: Prisma.WorkflowStepUncheckedUpdateOneWithoutAgentNestedInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUncheckedUpdateOneWithoutInboundAgentNestedInput;
};

export type AgentCreateManyInput = {
  id?: string;
  name: string;
  userId?: number | null;
  teamId?: number | null;
  providerAgentId: string;
  inboundEventTypeId?: number | null;
  enabled?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type AgentUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AgentUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AgentListRelationFilter = {
  every?: Prisma.AgentWhereInput;
  some?: Prisma.AgentWhereInput;
  none?: Prisma.AgentWhereInput;
};

export type AgentOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type AgentNullableScalarRelationFilter = {
  is?: Prisma.AgentWhereInput | null;
  isNot?: Prisma.AgentWhereInput | null;
};

export type AgentCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  providerAgentId?: Prisma.SortOrder;
  inboundEventTypeId?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type AgentAvgOrderByAggregateInput = {
  userId?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  inboundEventTypeId?: Prisma.SortOrder;
};

export type AgentMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  providerAgentId?: Prisma.SortOrder;
  inboundEventTypeId?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type AgentMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  providerAgentId?: Prisma.SortOrder;
  inboundEventTypeId?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type AgentSumOrderByAggregateInput = {
  userId?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  inboundEventTypeId?: Prisma.SortOrder;
};

export type AgentCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<Prisma.AgentCreateWithoutUserInput, Prisma.AgentUncheckedCreateWithoutUserInput>
    | Prisma.AgentCreateWithoutUserInput[]
    | Prisma.AgentUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.AgentCreateOrConnectWithoutUserInput
    | Prisma.AgentCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.AgentCreateManyUserInputEnvelope;
  connect?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
};

export type AgentUncheckedCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<Prisma.AgentCreateWithoutUserInput, Prisma.AgentUncheckedCreateWithoutUserInput>
    | Prisma.AgentCreateWithoutUserInput[]
    | Prisma.AgentUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.AgentCreateOrConnectWithoutUserInput
    | Prisma.AgentCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.AgentCreateManyUserInputEnvelope;
  connect?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
};

export type AgentUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<Prisma.AgentCreateWithoutUserInput, Prisma.AgentUncheckedCreateWithoutUserInput>
    | Prisma.AgentCreateWithoutUserInput[]
    | Prisma.AgentUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.AgentCreateOrConnectWithoutUserInput
    | Prisma.AgentCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.AgentUpsertWithWhereUniqueWithoutUserInput
    | Prisma.AgentUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.AgentCreateManyUserInputEnvelope;
  set?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
  disconnect?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
  delete?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
  connect?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
  update?:
    | Prisma.AgentUpdateWithWhereUniqueWithoutUserInput
    | Prisma.AgentUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.AgentUpdateManyWithWhereWithoutUserInput
    | Prisma.AgentUpdateManyWithWhereWithoutUserInput[];
  deleteMany?: Prisma.AgentScalarWhereInput | Prisma.AgentScalarWhereInput[];
};

export type AgentUncheckedUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<Prisma.AgentCreateWithoutUserInput, Prisma.AgentUncheckedCreateWithoutUserInput>
    | Prisma.AgentCreateWithoutUserInput[]
    | Prisma.AgentUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.AgentCreateOrConnectWithoutUserInput
    | Prisma.AgentCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.AgentUpsertWithWhereUniqueWithoutUserInput
    | Prisma.AgentUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.AgentCreateManyUserInputEnvelope;
  set?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
  disconnect?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
  delete?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
  connect?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
  update?:
    | Prisma.AgentUpdateWithWhereUniqueWithoutUserInput
    | Prisma.AgentUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.AgentUpdateManyWithWhereWithoutUserInput
    | Prisma.AgentUpdateManyWithWhereWithoutUserInput[];
  deleteMany?: Prisma.AgentScalarWhereInput | Prisma.AgentScalarWhereInput[];
};

export type AgentCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<Prisma.AgentCreateWithoutTeamInput, Prisma.AgentUncheckedCreateWithoutTeamInput>
    | Prisma.AgentCreateWithoutTeamInput[]
    | Prisma.AgentUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.AgentCreateOrConnectWithoutTeamInput
    | Prisma.AgentCreateOrConnectWithoutTeamInput[];
  createMany?: Prisma.AgentCreateManyTeamInputEnvelope;
  connect?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
};

export type AgentUncheckedCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<Prisma.AgentCreateWithoutTeamInput, Prisma.AgentUncheckedCreateWithoutTeamInput>
    | Prisma.AgentCreateWithoutTeamInput[]
    | Prisma.AgentUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.AgentCreateOrConnectWithoutTeamInput
    | Prisma.AgentCreateOrConnectWithoutTeamInput[];
  createMany?: Prisma.AgentCreateManyTeamInputEnvelope;
  connect?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
};

export type AgentUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<Prisma.AgentCreateWithoutTeamInput, Prisma.AgentUncheckedCreateWithoutTeamInput>
    | Prisma.AgentCreateWithoutTeamInput[]
    | Prisma.AgentUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.AgentCreateOrConnectWithoutTeamInput
    | Prisma.AgentCreateOrConnectWithoutTeamInput[];
  upsert?:
    | Prisma.AgentUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.AgentUpsertWithWhereUniqueWithoutTeamInput[];
  createMany?: Prisma.AgentCreateManyTeamInputEnvelope;
  set?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
  disconnect?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
  delete?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
  connect?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
  update?:
    | Prisma.AgentUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.AgentUpdateWithWhereUniqueWithoutTeamInput[];
  updateMany?:
    | Prisma.AgentUpdateManyWithWhereWithoutTeamInput
    | Prisma.AgentUpdateManyWithWhereWithoutTeamInput[];
  deleteMany?: Prisma.AgentScalarWhereInput | Prisma.AgentScalarWhereInput[];
};

export type AgentUncheckedUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<Prisma.AgentCreateWithoutTeamInput, Prisma.AgentUncheckedCreateWithoutTeamInput>
    | Prisma.AgentCreateWithoutTeamInput[]
    | Prisma.AgentUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.AgentCreateOrConnectWithoutTeamInput
    | Prisma.AgentCreateOrConnectWithoutTeamInput[];
  upsert?:
    | Prisma.AgentUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.AgentUpsertWithWhereUniqueWithoutTeamInput[];
  createMany?: Prisma.AgentCreateManyTeamInputEnvelope;
  set?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
  disconnect?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
  delete?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
  connect?: Prisma.AgentWhereUniqueInput | Prisma.AgentWhereUniqueInput[];
  update?:
    | Prisma.AgentUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.AgentUpdateWithWhereUniqueWithoutTeamInput[];
  updateMany?:
    | Prisma.AgentUpdateManyWithWhereWithoutTeamInput
    | Prisma.AgentUpdateManyWithWhereWithoutTeamInput[];
  deleteMany?: Prisma.AgentScalarWhereInput | Prisma.AgentScalarWhereInput[];
};

export type AgentCreateNestedOneWithoutWorkflowStepInput = {
  create?: Prisma.XOR<
    Prisma.AgentCreateWithoutWorkflowStepInput,
    Prisma.AgentUncheckedCreateWithoutWorkflowStepInput
  >;
  connectOrCreate?: Prisma.AgentCreateOrConnectWithoutWorkflowStepInput;
  connect?: Prisma.AgentWhereUniqueInput;
};

export type AgentCreateNestedOneWithoutInboundWorkflowStepInput = {
  create?: Prisma.XOR<
    Prisma.AgentCreateWithoutInboundWorkflowStepInput,
    Prisma.AgentUncheckedCreateWithoutInboundWorkflowStepInput
  >;
  connectOrCreate?: Prisma.AgentCreateOrConnectWithoutInboundWorkflowStepInput;
  connect?: Prisma.AgentWhereUniqueInput;
};

export type AgentUpdateOneWithoutWorkflowStepNestedInput = {
  create?: Prisma.XOR<
    Prisma.AgentCreateWithoutWorkflowStepInput,
    Prisma.AgentUncheckedCreateWithoutWorkflowStepInput
  >;
  connectOrCreate?: Prisma.AgentCreateOrConnectWithoutWorkflowStepInput;
  upsert?: Prisma.AgentUpsertWithoutWorkflowStepInput;
  disconnect?: Prisma.AgentWhereInput | boolean;
  delete?: Prisma.AgentWhereInput | boolean;
  connect?: Prisma.AgentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.AgentUpdateToOneWithWhereWithoutWorkflowStepInput,
      Prisma.AgentUpdateWithoutWorkflowStepInput
    >,
    Prisma.AgentUncheckedUpdateWithoutWorkflowStepInput
  >;
};

export type AgentUpdateOneWithoutInboundWorkflowStepNestedInput = {
  create?: Prisma.XOR<
    Prisma.AgentCreateWithoutInboundWorkflowStepInput,
    Prisma.AgentUncheckedCreateWithoutInboundWorkflowStepInput
  >;
  connectOrCreate?: Prisma.AgentCreateOrConnectWithoutInboundWorkflowStepInput;
  upsert?: Prisma.AgentUpsertWithoutInboundWorkflowStepInput;
  disconnect?: Prisma.AgentWhereInput | boolean;
  delete?: Prisma.AgentWhereInput | boolean;
  connect?: Prisma.AgentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.AgentUpdateToOneWithWhereWithoutInboundWorkflowStepInput,
      Prisma.AgentUpdateWithoutInboundWorkflowStepInput
    >,
    Prisma.AgentUncheckedUpdateWithoutInboundWorkflowStepInput
  >;
};

export type AgentCreateNestedOneWithoutInboundPhoneNumbersInput = {
  create?: Prisma.XOR<
    Prisma.AgentCreateWithoutInboundPhoneNumbersInput,
    Prisma.AgentUncheckedCreateWithoutInboundPhoneNumbersInput
  >;
  connectOrCreate?: Prisma.AgentCreateOrConnectWithoutInboundPhoneNumbersInput;
  connect?: Prisma.AgentWhereUniqueInput;
};

export type AgentCreateNestedOneWithoutOutboundPhoneNumbersInput = {
  create?: Prisma.XOR<
    Prisma.AgentCreateWithoutOutboundPhoneNumbersInput,
    Prisma.AgentUncheckedCreateWithoutOutboundPhoneNumbersInput
  >;
  connectOrCreate?: Prisma.AgentCreateOrConnectWithoutOutboundPhoneNumbersInput;
  connect?: Prisma.AgentWhereUniqueInput;
};

export type AgentUpdateOneWithoutInboundPhoneNumbersNestedInput = {
  create?: Prisma.XOR<
    Prisma.AgentCreateWithoutInboundPhoneNumbersInput,
    Prisma.AgentUncheckedCreateWithoutInboundPhoneNumbersInput
  >;
  connectOrCreate?: Prisma.AgentCreateOrConnectWithoutInboundPhoneNumbersInput;
  upsert?: Prisma.AgentUpsertWithoutInboundPhoneNumbersInput;
  disconnect?: Prisma.AgentWhereInput | boolean;
  delete?: Prisma.AgentWhereInput | boolean;
  connect?: Prisma.AgentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.AgentUpdateToOneWithWhereWithoutInboundPhoneNumbersInput,
      Prisma.AgentUpdateWithoutInboundPhoneNumbersInput
    >,
    Prisma.AgentUncheckedUpdateWithoutInboundPhoneNumbersInput
  >;
};

export type AgentUpdateOneWithoutOutboundPhoneNumbersNestedInput = {
  create?: Prisma.XOR<
    Prisma.AgentCreateWithoutOutboundPhoneNumbersInput,
    Prisma.AgentUncheckedCreateWithoutOutboundPhoneNumbersInput
  >;
  connectOrCreate?: Prisma.AgentCreateOrConnectWithoutOutboundPhoneNumbersInput;
  upsert?: Prisma.AgentUpsertWithoutOutboundPhoneNumbersInput;
  disconnect?: Prisma.AgentWhereInput | boolean;
  delete?: Prisma.AgentWhereInput | boolean;
  connect?: Prisma.AgentWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.AgentUpdateToOneWithWhereWithoutOutboundPhoneNumbersInput,
      Prisma.AgentUpdateWithoutOutboundPhoneNumbersInput
    >,
    Prisma.AgentUncheckedUpdateWithoutOutboundPhoneNumbersInput
  >;
};

export type AgentCreateWithoutUserInput = {
  id?: string;
  name: string;
  providerAgentId: string;
  inboundEventTypeId?: number | null;
  enabled?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  team?: Prisma.TeamCreateNestedOneWithoutAgentsInput;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberCreateNestedManyWithoutInboundAgentInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberCreateNestedManyWithoutOutboundAgentInput;
  workflowStep?: Prisma.WorkflowStepCreateNestedOneWithoutAgentInput;
  inboundWorkflowStep?: Prisma.WorkflowStepCreateNestedOneWithoutInboundAgentInput;
};

export type AgentUncheckedCreateWithoutUserInput = {
  id?: string;
  name: string;
  teamId?: number | null;
  providerAgentId: string;
  inboundEventTypeId?: number | null;
  enabled?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedCreateNestedManyWithoutInboundAgentInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedCreateNestedManyWithoutOutboundAgentInput;
  workflowStep?: Prisma.WorkflowStepUncheckedCreateNestedOneWithoutAgentInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUncheckedCreateNestedOneWithoutInboundAgentInput;
};

export type AgentCreateOrConnectWithoutUserInput = {
  where: Prisma.AgentWhereUniqueInput;
  create: Prisma.XOR<Prisma.AgentCreateWithoutUserInput, Prisma.AgentUncheckedCreateWithoutUserInput>;
};

export type AgentCreateManyUserInputEnvelope = {
  data: Prisma.AgentCreateManyUserInput | Prisma.AgentCreateManyUserInput[];
  skipDuplicates?: boolean;
};

export type AgentUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.AgentWhereUniqueInput;
  update: Prisma.XOR<Prisma.AgentUpdateWithoutUserInput, Prisma.AgentUncheckedUpdateWithoutUserInput>;
  create: Prisma.XOR<Prisma.AgentCreateWithoutUserInput, Prisma.AgentUncheckedCreateWithoutUserInput>;
};

export type AgentUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.AgentWhereUniqueInput;
  data: Prisma.XOR<Prisma.AgentUpdateWithoutUserInput, Prisma.AgentUncheckedUpdateWithoutUserInput>;
};

export type AgentUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.AgentScalarWhereInput;
  data: Prisma.XOR<Prisma.AgentUpdateManyMutationInput, Prisma.AgentUncheckedUpdateManyWithoutUserInput>;
};

export type AgentScalarWhereInput = {
  AND?: Prisma.AgentScalarWhereInput | Prisma.AgentScalarWhereInput[];
  OR?: Prisma.AgentScalarWhereInput[];
  NOT?: Prisma.AgentScalarWhereInput | Prisma.AgentScalarWhereInput[];
  id?: Prisma.StringFilter<"Agent"> | string;
  name?: Prisma.StringFilter<"Agent"> | string;
  userId?: Prisma.IntNullableFilter<"Agent"> | number | null;
  teamId?: Prisma.IntNullableFilter<"Agent"> | number | null;
  providerAgentId?: Prisma.StringFilter<"Agent"> | string;
  inboundEventTypeId?: Prisma.IntNullableFilter<"Agent"> | number | null;
  enabled?: Prisma.BoolFilter<"Agent"> | boolean;
  createdAt?: Prisma.DateTimeFilter<"Agent"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"Agent"> | Date | string;
};

export type AgentCreateWithoutTeamInput = {
  id?: string;
  name: string;
  providerAgentId: string;
  inboundEventTypeId?: number | null;
  enabled?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  user?: Prisma.UserCreateNestedOneWithoutAgentsInput;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberCreateNestedManyWithoutInboundAgentInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberCreateNestedManyWithoutOutboundAgentInput;
  workflowStep?: Prisma.WorkflowStepCreateNestedOneWithoutAgentInput;
  inboundWorkflowStep?: Prisma.WorkflowStepCreateNestedOneWithoutInboundAgentInput;
};

export type AgentUncheckedCreateWithoutTeamInput = {
  id?: string;
  name: string;
  userId?: number | null;
  providerAgentId: string;
  inboundEventTypeId?: number | null;
  enabled?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedCreateNestedManyWithoutInboundAgentInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedCreateNestedManyWithoutOutboundAgentInput;
  workflowStep?: Prisma.WorkflowStepUncheckedCreateNestedOneWithoutAgentInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUncheckedCreateNestedOneWithoutInboundAgentInput;
};

export type AgentCreateOrConnectWithoutTeamInput = {
  where: Prisma.AgentWhereUniqueInput;
  create: Prisma.XOR<Prisma.AgentCreateWithoutTeamInput, Prisma.AgentUncheckedCreateWithoutTeamInput>;
};

export type AgentCreateManyTeamInputEnvelope = {
  data: Prisma.AgentCreateManyTeamInput | Prisma.AgentCreateManyTeamInput[];
  skipDuplicates?: boolean;
};

export type AgentUpsertWithWhereUniqueWithoutTeamInput = {
  where: Prisma.AgentWhereUniqueInput;
  update: Prisma.XOR<Prisma.AgentUpdateWithoutTeamInput, Prisma.AgentUncheckedUpdateWithoutTeamInput>;
  create: Prisma.XOR<Prisma.AgentCreateWithoutTeamInput, Prisma.AgentUncheckedCreateWithoutTeamInput>;
};

export type AgentUpdateWithWhereUniqueWithoutTeamInput = {
  where: Prisma.AgentWhereUniqueInput;
  data: Prisma.XOR<Prisma.AgentUpdateWithoutTeamInput, Prisma.AgentUncheckedUpdateWithoutTeamInput>;
};

export type AgentUpdateManyWithWhereWithoutTeamInput = {
  where: Prisma.AgentScalarWhereInput;
  data: Prisma.XOR<Prisma.AgentUpdateManyMutationInput, Prisma.AgentUncheckedUpdateManyWithoutTeamInput>;
};

export type AgentCreateWithoutWorkflowStepInput = {
  id?: string;
  name: string;
  providerAgentId: string;
  inboundEventTypeId?: number | null;
  enabled?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  user?: Prisma.UserCreateNestedOneWithoutAgentsInput;
  team?: Prisma.TeamCreateNestedOneWithoutAgentsInput;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberCreateNestedManyWithoutInboundAgentInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberCreateNestedManyWithoutOutboundAgentInput;
  inboundWorkflowStep?: Prisma.WorkflowStepCreateNestedOneWithoutInboundAgentInput;
};

export type AgentUncheckedCreateWithoutWorkflowStepInput = {
  id?: string;
  name: string;
  userId?: number | null;
  teamId?: number | null;
  providerAgentId: string;
  inboundEventTypeId?: number | null;
  enabled?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedCreateNestedManyWithoutInboundAgentInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedCreateNestedManyWithoutOutboundAgentInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUncheckedCreateNestedOneWithoutInboundAgentInput;
};

export type AgentCreateOrConnectWithoutWorkflowStepInput = {
  where: Prisma.AgentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AgentCreateWithoutWorkflowStepInput,
    Prisma.AgentUncheckedCreateWithoutWorkflowStepInput
  >;
};

export type AgentCreateWithoutInboundWorkflowStepInput = {
  id?: string;
  name: string;
  providerAgentId: string;
  inboundEventTypeId?: number | null;
  enabled?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  user?: Prisma.UserCreateNestedOneWithoutAgentsInput;
  team?: Prisma.TeamCreateNestedOneWithoutAgentsInput;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberCreateNestedManyWithoutInboundAgentInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberCreateNestedManyWithoutOutboundAgentInput;
  workflowStep?: Prisma.WorkflowStepCreateNestedOneWithoutAgentInput;
};

export type AgentUncheckedCreateWithoutInboundWorkflowStepInput = {
  id?: string;
  name: string;
  userId?: number | null;
  teamId?: number | null;
  providerAgentId: string;
  inboundEventTypeId?: number | null;
  enabled?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedCreateNestedManyWithoutInboundAgentInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedCreateNestedManyWithoutOutboundAgentInput;
  workflowStep?: Prisma.WorkflowStepUncheckedCreateNestedOneWithoutAgentInput;
};

export type AgentCreateOrConnectWithoutInboundWorkflowStepInput = {
  where: Prisma.AgentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AgentCreateWithoutInboundWorkflowStepInput,
    Prisma.AgentUncheckedCreateWithoutInboundWorkflowStepInput
  >;
};

export type AgentUpsertWithoutWorkflowStepInput = {
  update: Prisma.XOR<
    Prisma.AgentUpdateWithoutWorkflowStepInput,
    Prisma.AgentUncheckedUpdateWithoutWorkflowStepInput
  >;
  create: Prisma.XOR<
    Prisma.AgentCreateWithoutWorkflowStepInput,
    Prisma.AgentUncheckedCreateWithoutWorkflowStepInput
  >;
  where?: Prisma.AgentWhereInput;
};

export type AgentUpdateToOneWithWhereWithoutWorkflowStepInput = {
  where?: Prisma.AgentWhereInput;
  data: Prisma.XOR<
    Prisma.AgentUpdateWithoutWorkflowStepInput,
    Prisma.AgentUncheckedUpdateWithoutWorkflowStepInput
  >;
};

export type AgentUpdateWithoutWorkflowStepInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  user?: Prisma.UserUpdateOneWithoutAgentsNestedInput;
  team?: Prisma.TeamUpdateOneWithoutAgentsNestedInput;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUpdateManyWithoutInboundAgentNestedInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUpdateManyWithoutOutboundAgentNestedInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUpdateOneWithoutInboundAgentNestedInput;
};

export type AgentUncheckedUpdateWithoutWorkflowStepInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedUpdateManyWithoutInboundAgentNestedInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedUpdateManyWithoutOutboundAgentNestedInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUncheckedUpdateOneWithoutInboundAgentNestedInput;
};

export type AgentUpsertWithoutInboundWorkflowStepInput = {
  update: Prisma.XOR<
    Prisma.AgentUpdateWithoutInboundWorkflowStepInput,
    Prisma.AgentUncheckedUpdateWithoutInboundWorkflowStepInput
  >;
  create: Prisma.XOR<
    Prisma.AgentCreateWithoutInboundWorkflowStepInput,
    Prisma.AgentUncheckedCreateWithoutInboundWorkflowStepInput
  >;
  where?: Prisma.AgentWhereInput;
};

export type AgentUpdateToOneWithWhereWithoutInboundWorkflowStepInput = {
  where?: Prisma.AgentWhereInput;
  data: Prisma.XOR<
    Prisma.AgentUpdateWithoutInboundWorkflowStepInput,
    Prisma.AgentUncheckedUpdateWithoutInboundWorkflowStepInput
  >;
};

export type AgentUpdateWithoutInboundWorkflowStepInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  user?: Prisma.UserUpdateOneWithoutAgentsNestedInput;
  team?: Prisma.TeamUpdateOneWithoutAgentsNestedInput;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUpdateManyWithoutInboundAgentNestedInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUpdateManyWithoutOutboundAgentNestedInput;
  workflowStep?: Prisma.WorkflowStepUpdateOneWithoutAgentNestedInput;
};

export type AgentUncheckedUpdateWithoutInboundWorkflowStepInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedUpdateManyWithoutInboundAgentNestedInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedUpdateManyWithoutOutboundAgentNestedInput;
  workflowStep?: Prisma.WorkflowStepUncheckedUpdateOneWithoutAgentNestedInput;
};

export type AgentCreateWithoutInboundPhoneNumbersInput = {
  id?: string;
  name: string;
  providerAgentId: string;
  inboundEventTypeId?: number | null;
  enabled?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  user?: Prisma.UserCreateNestedOneWithoutAgentsInput;
  team?: Prisma.TeamCreateNestedOneWithoutAgentsInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberCreateNestedManyWithoutOutboundAgentInput;
  workflowStep?: Prisma.WorkflowStepCreateNestedOneWithoutAgentInput;
  inboundWorkflowStep?: Prisma.WorkflowStepCreateNestedOneWithoutInboundAgentInput;
};

export type AgentUncheckedCreateWithoutInboundPhoneNumbersInput = {
  id?: string;
  name: string;
  userId?: number | null;
  teamId?: number | null;
  providerAgentId: string;
  inboundEventTypeId?: number | null;
  enabled?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedCreateNestedManyWithoutOutboundAgentInput;
  workflowStep?: Prisma.WorkflowStepUncheckedCreateNestedOneWithoutAgentInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUncheckedCreateNestedOneWithoutInboundAgentInput;
};

export type AgentCreateOrConnectWithoutInboundPhoneNumbersInput = {
  where: Prisma.AgentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AgentCreateWithoutInboundPhoneNumbersInput,
    Prisma.AgentUncheckedCreateWithoutInboundPhoneNumbersInput
  >;
};

export type AgentCreateWithoutOutboundPhoneNumbersInput = {
  id?: string;
  name: string;
  providerAgentId: string;
  inboundEventTypeId?: number | null;
  enabled?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  user?: Prisma.UserCreateNestedOneWithoutAgentsInput;
  team?: Prisma.TeamCreateNestedOneWithoutAgentsInput;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberCreateNestedManyWithoutInboundAgentInput;
  workflowStep?: Prisma.WorkflowStepCreateNestedOneWithoutAgentInput;
  inboundWorkflowStep?: Prisma.WorkflowStepCreateNestedOneWithoutInboundAgentInput;
};

export type AgentUncheckedCreateWithoutOutboundPhoneNumbersInput = {
  id?: string;
  name: string;
  userId?: number | null;
  teamId?: number | null;
  providerAgentId: string;
  inboundEventTypeId?: number | null;
  enabled?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedCreateNestedManyWithoutInboundAgentInput;
  workflowStep?: Prisma.WorkflowStepUncheckedCreateNestedOneWithoutAgentInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUncheckedCreateNestedOneWithoutInboundAgentInput;
};

export type AgentCreateOrConnectWithoutOutboundPhoneNumbersInput = {
  where: Prisma.AgentWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AgentCreateWithoutOutboundPhoneNumbersInput,
    Prisma.AgentUncheckedCreateWithoutOutboundPhoneNumbersInput
  >;
};

export type AgentUpsertWithoutInboundPhoneNumbersInput = {
  update: Prisma.XOR<
    Prisma.AgentUpdateWithoutInboundPhoneNumbersInput,
    Prisma.AgentUncheckedUpdateWithoutInboundPhoneNumbersInput
  >;
  create: Prisma.XOR<
    Prisma.AgentCreateWithoutInboundPhoneNumbersInput,
    Prisma.AgentUncheckedCreateWithoutInboundPhoneNumbersInput
  >;
  where?: Prisma.AgentWhereInput;
};

export type AgentUpdateToOneWithWhereWithoutInboundPhoneNumbersInput = {
  where?: Prisma.AgentWhereInput;
  data: Prisma.XOR<
    Prisma.AgentUpdateWithoutInboundPhoneNumbersInput,
    Prisma.AgentUncheckedUpdateWithoutInboundPhoneNumbersInput
  >;
};

export type AgentUpdateWithoutInboundPhoneNumbersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  user?: Prisma.UserUpdateOneWithoutAgentsNestedInput;
  team?: Prisma.TeamUpdateOneWithoutAgentsNestedInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUpdateManyWithoutOutboundAgentNestedInput;
  workflowStep?: Prisma.WorkflowStepUpdateOneWithoutAgentNestedInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUpdateOneWithoutInboundAgentNestedInput;
};

export type AgentUncheckedUpdateWithoutInboundPhoneNumbersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedUpdateManyWithoutOutboundAgentNestedInput;
  workflowStep?: Prisma.WorkflowStepUncheckedUpdateOneWithoutAgentNestedInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUncheckedUpdateOneWithoutInboundAgentNestedInput;
};

export type AgentUpsertWithoutOutboundPhoneNumbersInput = {
  update: Prisma.XOR<
    Prisma.AgentUpdateWithoutOutboundPhoneNumbersInput,
    Prisma.AgentUncheckedUpdateWithoutOutboundPhoneNumbersInput
  >;
  create: Prisma.XOR<
    Prisma.AgentCreateWithoutOutboundPhoneNumbersInput,
    Prisma.AgentUncheckedCreateWithoutOutboundPhoneNumbersInput
  >;
  where?: Prisma.AgentWhereInput;
};

export type AgentUpdateToOneWithWhereWithoutOutboundPhoneNumbersInput = {
  where?: Prisma.AgentWhereInput;
  data: Prisma.XOR<
    Prisma.AgentUpdateWithoutOutboundPhoneNumbersInput,
    Prisma.AgentUncheckedUpdateWithoutOutboundPhoneNumbersInput
  >;
};

export type AgentUpdateWithoutOutboundPhoneNumbersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  user?: Prisma.UserUpdateOneWithoutAgentsNestedInput;
  team?: Prisma.TeamUpdateOneWithoutAgentsNestedInput;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUpdateManyWithoutInboundAgentNestedInput;
  workflowStep?: Prisma.WorkflowStepUpdateOneWithoutAgentNestedInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUpdateOneWithoutInboundAgentNestedInput;
};

export type AgentUncheckedUpdateWithoutOutboundPhoneNumbersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedUpdateManyWithoutInboundAgentNestedInput;
  workflowStep?: Prisma.WorkflowStepUncheckedUpdateOneWithoutAgentNestedInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUncheckedUpdateOneWithoutInboundAgentNestedInput;
};

export type AgentCreateManyUserInput = {
  id?: string;
  name: string;
  teamId?: number | null;
  providerAgentId: string;
  inboundEventTypeId?: number | null;
  enabled?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type AgentUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  team?: Prisma.TeamUpdateOneWithoutAgentsNestedInput;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUpdateManyWithoutInboundAgentNestedInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUpdateManyWithoutOutboundAgentNestedInput;
  workflowStep?: Prisma.WorkflowStepUpdateOneWithoutAgentNestedInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUpdateOneWithoutInboundAgentNestedInput;
};

export type AgentUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedUpdateManyWithoutInboundAgentNestedInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedUpdateManyWithoutOutboundAgentNestedInput;
  workflowStep?: Prisma.WorkflowStepUncheckedUpdateOneWithoutAgentNestedInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUncheckedUpdateOneWithoutInboundAgentNestedInput;
};

export type AgentUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type AgentCreateManyTeamInput = {
  id?: string;
  name: string;
  userId?: number | null;
  providerAgentId: string;
  inboundEventTypeId?: number | null;
  enabled?: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type AgentUpdateWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  user?: Prisma.UserUpdateOneWithoutAgentsNestedInput;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUpdateManyWithoutInboundAgentNestedInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUpdateManyWithoutOutboundAgentNestedInput;
  workflowStep?: Prisma.WorkflowStepUpdateOneWithoutAgentNestedInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUpdateOneWithoutInboundAgentNestedInput;
};

export type AgentUncheckedUpdateWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  inboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedUpdateManyWithoutInboundAgentNestedInput;
  outboundPhoneNumbers?: Prisma.CalAiPhoneNumberUncheckedUpdateManyWithoutOutboundAgentNestedInput;
  workflowStep?: Prisma.WorkflowStepUncheckedUpdateOneWithoutAgentNestedInput;
  inboundWorkflowStep?: Prisma.WorkflowStepUncheckedUpdateOneWithoutInboundAgentNestedInput;
};

export type AgentUncheckedUpdateManyWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  providerAgentId?: Prisma.StringFieldUpdateOperationsInput | string;
  inboundEventTypeId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

/**
 * Count Type AgentCountOutputType
 */

export type AgentCountOutputType = {
  inboundPhoneNumbers: number;
  outboundPhoneNumbers: number;
};

export type AgentCountOutputTypeSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  inboundPhoneNumbers?: boolean | AgentCountOutputTypeCountInboundPhoneNumbersArgs;
  outboundPhoneNumbers?: boolean | AgentCountOutputTypeCountOutboundPhoneNumbersArgs;
};

/**
 * AgentCountOutputType without action
 */
export type AgentCountOutputTypeDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AgentCountOutputType
   */
  select?: Prisma.AgentCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * AgentCountOutputType without action
 */
export type AgentCountOutputTypeCountInboundPhoneNumbersArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.CalAiPhoneNumberWhereInput;
};

/**
 * AgentCountOutputType without action
 */
export type AgentCountOutputTypeCountOutboundPhoneNumbersArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.CalAiPhoneNumberWhereInput;
};

export type AgentSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    userId?: boolean;
    teamId?: boolean;
    providerAgentId?: boolean;
    inboundEventTypeId?: boolean;
    enabled?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    user?: boolean | Prisma.Agent$userArgs<ExtArgs>;
    team?: boolean | Prisma.Agent$teamArgs<ExtArgs>;
    inboundPhoneNumbers?: boolean | Prisma.Agent$inboundPhoneNumbersArgs<ExtArgs>;
    outboundPhoneNumbers?: boolean | Prisma.Agent$outboundPhoneNumbersArgs<ExtArgs>;
    workflowStep?: boolean | Prisma.Agent$workflowStepArgs<ExtArgs>;
    inboundWorkflowStep?: boolean | Prisma.Agent$inboundWorkflowStepArgs<ExtArgs>;
    _count?: boolean | Prisma.AgentCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["agent"]
>;

export type AgentSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    userId?: boolean;
    teamId?: boolean;
    providerAgentId?: boolean;
    inboundEventTypeId?: boolean;
    enabled?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    user?: boolean | Prisma.Agent$userArgs<ExtArgs>;
    team?: boolean | Prisma.Agent$teamArgs<ExtArgs>;
  },
  ExtArgs["result"]["agent"]
>;

export type AgentSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    userId?: boolean;
    teamId?: boolean;
    providerAgentId?: boolean;
    inboundEventTypeId?: boolean;
    enabled?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    user?: boolean | Prisma.Agent$userArgs<ExtArgs>;
    team?: boolean | Prisma.Agent$teamArgs<ExtArgs>;
  },
  ExtArgs["result"]["agent"]
>;

export type AgentSelectScalar = {
  id?: boolean;
  name?: boolean;
  userId?: boolean;
  teamId?: boolean;
  providerAgentId?: boolean;
  inboundEventTypeId?: boolean;
  enabled?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type AgentOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "name"
  | "userId"
  | "teamId"
  | "providerAgentId"
  | "inboundEventTypeId"
  | "enabled"
  | "createdAt"
  | "updatedAt",
  ExtArgs["result"]["agent"]
>;
export type AgentInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.Agent$userArgs<ExtArgs>;
  team?: boolean | Prisma.Agent$teamArgs<ExtArgs>;
  inboundPhoneNumbers?: boolean | Prisma.Agent$inboundPhoneNumbersArgs<ExtArgs>;
  outboundPhoneNumbers?: boolean | Prisma.Agent$outboundPhoneNumbersArgs<ExtArgs>;
  workflowStep?: boolean | Prisma.Agent$workflowStepArgs<ExtArgs>;
  inboundWorkflowStep?: boolean | Prisma.Agent$inboundWorkflowStepArgs<ExtArgs>;
  _count?: boolean | Prisma.AgentCountOutputTypeDefaultArgs<ExtArgs>;
};
export type AgentIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.Agent$userArgs<ExtArgs>;
  team?: boolean | Prisma.Agent$teamArgs<ExtArgs>;
};
export type AgentIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.Agent$userArgs<ExtArgs>;
  team?: boolean | Prisma.Agent$teamArgs<ExtArgs>;
};

export type $AgentPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "Agent";
  objects: {
    user: Prisma.$UserPayload<ExtArgs> | null;
    team: Prisma.$TeamPayload<ExtArgs> | null;
    inboundPhoneNumbers: Prisma.$CalAiPhoneNumberPayload<ExtArgs>[];
    outboundPhoneNumbers: Prisma.$CalAiPhoneNumberPayload<ExtArgs>[];
    workflowStep: Prisma.$WorkflowStepPayload<ExtArgs> | null;
    inboundWorkflowStep: Prisma.$WorkflowStepPayload<ExtArgs> | null;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      name: string;
      userId: number | null;
      teamId: number | null;
      providerAgentId: string;
      inboundEventTypeId: number | null;
      enabled: boolean;
      createdAt: Date;
      updatedAt: Date;
    },
    ExtArgs["result"]["agent"]
  >;
  composites: {};
};

export type AgentGetPayload<S extends boolean | null | undefined | AgentDefaultArgs> =
  runtime.Types.Result.GetResult<Prisma.$AgentPayload, S>;

export type AgentCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<AgentFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: AgentCountAggregateInputType | true;
};

export interface AgentDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>["model"]["Agent"]; meta: { name: "Agent" } };
  /**
   * Find zero or one Agent that matches the filter.
   * @param {AgentFindUniqueArgs} args - Arguments to find a Agent
   * @example
   * // Get one Agent
   * const agent = await prisma.agent.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AgentFindUniqueArgs>(
    args: Prisma.SelectSubset<T, AgentFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__AgentClient<
    runtime.Types.Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one Agent that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AgentFindUniqueOrThrowArgs} args - Arguments to find a Agent
   * @example
   * // Get one Agent
   * const agent = await prisma.agent.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AgentFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, AgentFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__AgentClient<
    runtime.Types.Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Agent that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AgentFindFirstArgs} args - Arguments to find a Agent
   * @example
   * // Get one Agent
   * const agent = await prisma.agent.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AgentFindFirstArgs>(
    args?: Prisma.SelectSubset<T, AgentFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__AgentClient<
    runtime.Types.Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Agent that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AgentFindFirstOrThrowArgs} args - Arguments to find a Agent
   * @example
   * // Get one Agent
   * const agent = await prisma.agent.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AgentFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, AgentFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__AgentClient<
    runtime.Types.Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more Agents that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AgentFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Agents
   * const agents = await prisma.agent.findMany()
   *
   * // Get first 10 Agents
   * const agents = await prisma.agent.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const agentWithIdOnly = await prisma.agent.findMany({ select: { id: true } })
   *
   */
  findMany<T extends AgentFindManyArgs>(
    args?: Prisma.SelectSubset<T, AgentFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>
  >;

  /**
   * Create a Agent.
   * @param {AgentCreateArgs} args - Arguments to create a Agent.
   * @example
   * // Create one Agent
   * const Agent = await prisma.agent.create({
   *   data: {
   *     // ... data to create a Agent
   *   }
   * })
   *
   */
  create<T extends AgentCreateArgs>(
    args: Prisma.SelectSubset<T, AgentCreateArgs<ExtArgs>>
  ): Prisma.Prisma__AgentClient<
    runtime.Types.Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "create", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many Agents.
   * @param {AgentCreateManyArgs} args - Arguments to create many Agents.
   * @example
   * // Create many Agents
   * const agent = await prisma.agent.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends AgentCreateManyArgs>(
    args?: Prisma.SelectSubset<T, AgentCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many Agents and returns the data saved in the database.
   * @param {AgentCreateManyAndReturnArgs} args - Arguments to create many Agents.
   * @example
   * // Create many Agents
   * const agent = await prisma.agent.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many Agents and only return the `id`
   * const agentWithIdOnly = await prisma.agent.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends AgentCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, AgentCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>
  >;

  /**
   * Delete a Agent.
   * @param {AgentDeleteArgs} args - Arguments to delete one Agent.
   * @example
   * // Delete one Agent
   * const Agent = await prisma.agent.delete({
   *   where: {
   *     // ... filter to delete one Agent
   *   }
   * })
   *
   */
  delete<T extends AgentDeleteArgs>(
    args: Prisma.SelectSubset<T, AgentDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__AgentClient<
    runtime.Types.Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one Agent.
   * @param {AgentUpdateArgs} args - Arguments to update one Agent.
   * @example
   * // Update one Agent
   * const agent = await prisma.agent.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends AgentUpdateArgs>(
    args: Prisma.SelectSubset<T, AgentUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__AgentClient<
    runtime.Types.Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "update", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more Agents.
   * @param {AgentDeleteManyArgs} args - Arguments to filter Agents to delete.
   * @example
   * // Delete a few Agents
   * const { count } = await prisma.agent.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends AgentDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, AgentDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Agents.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AgentUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Agents
   * const agent = await prisma.agent.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends AgentUpdateManyArgs>(
    args: Prisma.SelectSubset<T, AgentUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Agents and returns the data updated in the database.
   * @param {AgentUpdateManyAndReturnArgs} args - Arguments to update many Agents.
   * @example
   * // Update many Agents
   * const agent = await prisma.agent.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more Agents and only return the `id`
   * const agentWithIdOnly = await prisma.agent.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends AgentUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, AgentUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>
  >;

  /**
   * Create or update one Agent.
   * @param {AgentUpsertArgs} args - Arguments to update or create a Agent.
   * @example
   * // Update or create a Agent
   * const agent = await prisma.agent.upsert({
   *   create: {
   *     // ... data to create a Agent
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Agent we want to update
   *   }
   * })
   */
  upsert<T extends AgentUpsertArgs>(
    args: Prisma.SelectSubset<T, AgentUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__AgentClient<
    runtime.Types.Result.GetResult<Prisma.$AgentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of Agents.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AgentCountArgs} args - Arguments to filter Agents to count.
   * @example
   * // Count the number of Agents
   * const count = await prisma.agent.count({
   *   where: {
   *     // ... the filter for the Agents we want to count
   *   }
   * })
   **/
  count<T extends AgentCountArgs>(
    args?: Prisma.Subset<T, AgentCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], AgentCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a Agent.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AgentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends AgentAggregateArgs>(
    args: Prisma.Subset<T, AgentAggregateArgs>
  ): Prisma.PrismaPromise<GetAgentAggregateType<T>>;

  /**
   * Group by Agent.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AgentGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends AgentGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AgentGroupByArgs["orderBy"] }
      : { orderBy?: AgentGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, AgentGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetAgentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the Agent model
   */
  readonly fields: AgentFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Agent.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AgentClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  user<T extends Prisma.Agent$userArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Agent$userArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  team<T extends Prisma.Agent$teamArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Agent$teamArgs<ExtArgs>>
  ): Prisma.Prisma__TeamClient<
    runtime.Types.Result.GetResult<
      Prisma.$TeamPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  inboundPhoneNumbers<T extends Prisma.Agent$inboundPhoneNumbersArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Agent$inboundPhoneNumbersArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$CalAiPhoneNumberPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  outboundPhoneNumbers<T extends Prisma.Agent$outboundPhoneNumbersArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Agent$outboundPhoneNumbersArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$CalAiPhoneNumberPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  workflowStep<T extends Prisma.Agent$workflowStepArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Agent$workflowStepArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowStepClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowStepPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  inboundWorkflowStep<T extends Prisma.Agent$inboundWorkflowStepArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Agent$inboundWorkflowStepArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowStepClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowStepPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the Agent model
 */
export interface AgentFieldRefs {
  readonly id: Prisma.FieldRef<"Agent", "String">;
  readonly name: Prisma.FieldRef<"Agent", "String">;
  readonly userId: Prisma.FieldRef<"Agent", "Int">;
  readonly teamId: Prisma.FieldRef<"Agent", "Int">;
  readonly providerAgentId: Prisma.FieldRef<"Agent", "String">;
  readonly inboundEventTypeId: Prisma.FieldRef<"Agent", "Int">;
  readonly enabled: Prisma.FieldRef<"Agent", "Boolean">;
  readonly createdAt: Prisma.FieldRef<"Agent", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"Agent", "DateTime">;
}

// Custom InputTypes
/**
 * Agent findUnique
 */
export type AgentFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Agent
   */
  select?: Prisma.AgentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Agent
   */
  omit?: Prisma.AgentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgentInclude<ExtArgs> | null;
  /**
   * Filter, which Agent to fetch.
   */
  where: Prisma.AgentWhereUniqueInput;
};

/**
 * Agent findUniqueOrThrow
 */
export type AgentFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Agent
   */
  select?: Prisma.AgentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Agent
   */
  omit?: Prisma.AgentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgentInclude<ExtArgs> | null;
  /**
   * Filter, which Agent to fetch.
   */
  where: Prisma.AgentWhereUniqueInput;
};

/**
 * Agent findFirst
 */
export type AgentFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Agent
   */
  select?: Prisma.AgentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Agent
   */
  omit?: Prisma.AgentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgentInclude<ExtArgs> | null;
  /**
   * Filter, which Agent to fetch.
   */
  where?: Prisma.AgentWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Agents to fetch.
   */
  orderBy?: Prisma.AgentOrderByWithRelationInput | Prisma.AgentOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Agents.
   */
  cursor?: Prisma.AgentWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Agents from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Agents.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Agents.
   */
  distinct?: Prisma.AgentScalarFieldEnum | Prisma.AgentScalarFieldEnum[];
};

/**
 * Agent findFirstOrThrow
 */
export type AgentFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Agent
   */
  select?: Prisma.AgentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Agent
   */
  omit?: Prisma.AgentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgentInclude<ExtArgs> | null;
  /**
   * Filter, which Agent to fetch.
   */
  where?: Prisma.AgentWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Agents to fetch.
   */
  orderBy?: Prisma.AgentOrderByWithRelationInput | Prisma.AgentOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Agents.
   */
  cursor?: Prisma.AgentWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Agents from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Agents.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Agents.
   */
  distinct?: Prisma.AgentScalarFieldEnum | Prisma.AgentScalarFieldEnum[];
};

/**
 * Agent findMany
 */
export type AgentFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Agent
   */
  select?: Prisma.AgentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Agent
   */
  omit?: Prisma.AgentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgentInclude<ExtArgs> | null;
  /**
   * Filter, which Agents to fetch.
   */
  where?: Prisma.AgentWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Agents to fetch.
   */
  orderBy?: Prisma.AgentOrderByWithRelationInput | Prisma.AgentOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing Agents.
   */
  cursor?: Prisma.AgentWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Agents from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Agents.
   */
  skip?: number;
  distinct?: Prisma.AgentScalarFieldEnum | Prisma.AgentScalarFieldEnum[];
};

/**
 * Agent create
 */
export type AgentCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Agent
   */
  select?: Prisma.AgentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Agent
   */
  omit?: Prisma.AgentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgentInclude<ExtArgs> | null;
  /**
   * The data needed to create a Agent.
   */
  data: Prisma.XOR<Prisma.AgentCreateInput, Prisma.AgentUncheckedCreateInput>;
};

/**
 * Agent createMany
 */
export type AgentCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many Agents.
   */
  data: Prisma.AgentCreateManyInput | Prisma.AgentCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * Agent createManyAndReturn
 */
export type AgentCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Agent
   */
  select?: Prisma.AgentSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Agent
   */
  omit?: Prisma.AgentOmit<ExtArgs> | null;
  /**
   * The data used to create many Agents.
   */
  data: Prisma.AgentCreateManyInput | Prisma.AgentCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgentIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * Agent update
 */
export type AgentUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Agent
   */
  select?: Prisma.AgentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Agent
   */
  omit?: Prisma.AgentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgentInclude<ExtArgs> | null;
  /**
   * The data needed to update a Agent.
   */
  data: Prisma.XOR<Prisma.AgentUpdateInput, Prisma.AgentUncheckedUpdateInput>;
  /**
   * Choose, which Agent to update.
   */
  where: Prisma.AgentWhereUniqueInput;
};

/**
 * Agent updateMany
 */
export type AgentUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update Agents.
   */
  data: Prisma.XOR<Prisma.AgentUpdateManyMutationInput, Prisma.AgentUncheckedUpdateManyInput>;
  /**
   * Filter which Agents to update
   */
  where?: Prisma.AgentWhereInput;
  /**
   * Limit how many Agents to update.
   */
  limit?: number;
};

/**
 * Agent updateManyAndReturn
 */
export type AgentUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Agent
   */
  select?: Prisma.AgentSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Agent
   */
  omit?: Prisma.AgentOmit<ExtArgs> | null;
  /**
   * The data used to update Agents.
   */
  data: Prisma.XOR<Prisma.AgentUpdateManyMutationInput, Prisma.AgentUncheckedUpdateManyInput>;
  /**
   * Filter which Agents to update
   */
  where?: Prisma.AgentWhereInput;
  /**
   * Limit how many Agents to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgentIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * Agent upsert
 */
export type AgentUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Agent
   */
  select?: Prisma.AgentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Agent
   */
  omit?: Prisma.AgentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgentInclude<ExtArgs> | null;
  /**
   * The filter to search for the Agent to update in case it exists.
   */
  where: Prisma.AgentWhereUniqueInput;
  /**
   * In case the Agent found by the `where` argument doesn't exist, create a new Agent with this data.
   */
  create: Prisma.XOR<Prisma.AgentCreateInput, Prisma.AgentUncheckedCreateInput>;
  /**
   * In case the Agent was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.AgentUpdateInput, Prisma.AgentUncheckedUpdateInput>;
};

/**
 * Agent delete
 */
export type AgentDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Agent
   */
  select?: Prisma.AgentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Agent
   */
  omit?: Prisma.AgentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgentInclude<ExtArgs> | null;
  /**
   * Filter which Agent to delete.
   */
  where: Prisma.AgentWhereUniqueInput;
};

/**
 * Agent deleteMany
 */
export type AgentDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which Agents to delete
   */
  where?: Prisma.AgentWhereInput;
  /**
   * Limit how many Agents to delete.
   */
  limit?: number;
};

/**
 * Agent.user
 */
export type Agent$userArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  where?: Prisma.UserWhereInput;
};

/**
 * Agent.team
 */
export type Agent$teamArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Team
   */
  select?: Prisma.TeamSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Team
   */
  omit?: Prisma.TeamOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TeamInclude<ExtArgs> | null;
  where?: Prisma.TeamWhereInput;
};

/**
 * Agent.inboundPhoneNumbers
 */
export type Agent$inboundPhoneNumbersArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CalAiPhoneNumber
   */
  select?: Prisma.CalAiPhoneNumberSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CalAiPhoneNumber
   */
  omit?: Prisma.CalAiPhoneNumberOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CalAiPhoneNumberInclude<ExtArgs> | null;
  where?: Prisma.CalAiPhoneNumberWhereInput;
  orderBy?:
    | Prisma.CalAiPhoneNumberOrderByWithRelationInput
    | Prisma.CalAiPhoneNumberOrderByWithRelationInput[];
  cursor?: Prisma.CalAiPhoneNumberWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.CalAiPhoneNumberScalarFieldEnum | Prisma.CalAiPhoneNumberScalarFieldEnum[];
};

/**
 * Agent.outboundPhoneNumbers
 */
export type Agent$outboundPhoneNumbersArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CalAiPhoneNumber
   */
  select?: Prisma.CalAiPhoneNumberSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CalAiPhoneNumber
   */
  omit?: Prisma.CalAiPhoneNumberOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CalAiPhoneNumberInclude<ExtArgs> | null;
  where?: Prisma.CalAiPhoneNumberWhereInput;
  orderBy?:
    | Prisma.CalAiPhoneNumberOrderByWithRelationInput
    | Prisma.CalAiPhoneNumberOrderByWithRelationInput[];
  cursor?: Prisma.CalAiPhoneNumberWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.CalAiPhoneNumberScalarFieldEnum | Prisma.CalAiPhoneNumberScalarFieldEnum[];
};

/**
 * Agent.workflowStep
 */
export type Agent$workflowStepArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowStep
   */
  select?: Prisma.WorkflowStepSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowStep
   */
  omit?: Prisma.WorkflowStepOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowStepInclude<ExtArgs> | null;
  where?: Prisma.WorkflowStepWhereInput;
};

/**
 * Agent.inboundWorkflowStep
 */
export type Agent$inboundWorkflowStepArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowStep
   */
  select?: Prisma.WorkflowStepSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowStep
   */
  omit?: Prisma.WorkflowStepOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowStepInclude<ExtArgs> | null;
  where?: Prisma.WorkflowStepWhereInput;
};

/**
 * Agent without action
 */
export type AgentDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Agent
   */
  select?: Prisma.AgentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Agent
   */
  omit?: Prisma.AgentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgentInclude<ExtArgs> | null;
};
