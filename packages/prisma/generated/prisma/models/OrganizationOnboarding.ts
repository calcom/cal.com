/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `OrganizationOnboarding` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model OrganizationOnboarding
 *
 */
export type OrganizationOnboardingModel =
  runtime.Types.Result.DefaultSelection<Prisma.$OrganizationOnboardingPayload>;

export type AggregateOrganizationOnboarding = {
  _count: OrganizationOnboardingCountAggregateOutputType | null;
  _avg: OrganizationOnboardingAvgAggregateOutputType | null;
  _sum: OrganizationOnboardingSumAggregateOutputType | null;
  _min: OrganizationOnboardingMinAggregateOutputType | null;
  _max: OrganizationOnboardingMaxAggregateOutputType | null;
};

export type OrganizationOnboardingAvgAggregateOutputType = {
  createdById: number | null;
  organizationId: number | null;
  pricePerSeat: number | null;
  seats: number | null;
};

export type OrganizationOnboardingSumAggregateOutputType = {
  createdById: number | null;
  organizationId: number | null;
  pricePerSeat: number | null;
  seats: number | null;
};

export type OrganizationOnboardingMinAggregateOutputType = {
  id: string | null;
  createdById: number | null;
  createdAt: Date | null;
  orgOwnerEmail: string | null;
  error: string | null;
  updatedAt: Date | null;
  organizationId: number | null;
  billingPeriod: $Enums.BillingPeriod | null;
  pricePerSeat: number | null;
  seats: number | null;
  isPlatform: boolean | null;
  name: string | null;
  slug: string | null;
  logo: string | null;
  bio: string | null;
  brandColor: string | null;
  bannerUrl: string | null;
  isDomainConfigured: boolean | null;
  stripeCustomerId: string | null;
  stripeSubscriptionId: string | null;
  stripeSubscriptionItemId: string | null;
  isComplete: boolean | null;
};

export type OrganizationOnboardingMaxAggregateOutputType = {
  id: string | null;
  createdById: number | null;
  createdAt: Date | null;
  orgOwnerEmail: string | null;
  error: string | null;
  updatedAt: Date | null;
  organizationId: number | null;
  billingPeriod: $Enums.BillingPeriod | null;
  pricePerSeat: number | null;
  seats: number | null;
  isPlatform: boolean | null;
  name: string | null;
  slug: string | null;
  logo: string | null;
  bio: string | null;
  brandColor: string | null;
  bannerUrl: string | null;
  isDomainConfigured: boolean | null;
  stripeCustomerId: string | null;
  stripeSubscriptionId: string | null;
  stripeSubscriptionItemId: string | null;
  isComplete: boolean | null;
};

export type OrganizationOnboardingCountAggregateOutputType = {
  id: number;
  createdById: number;
  createdAt: number;
  orgOwnerEmail: number;
  error: number;
  updatedAt: number;
  organizationId: number;
  billingPeriod: number;
  pricePerSeat: number;
  seats: number;
  isPlatform: number;
  name: number;
  slug: number;
  logo: number;
  bio: number;
  brandColor: number;
  bannerUrl: number;
  isDomainConfigured: number;
  stripeCustomerId: number;
  stripeSubscriptionId: number;
  stripeSubscriptionItemId: number;
  invitedMembers: number;
  teams: number;
  isComplete: number;
  _all: number;
};

export type OrganizationOnboardingAvgAggregateInputType = {
  createdById?: true;
  organizationId?: true;
  pricePerSeat?: true;
  seats?: true;
};

export type OrganizationOnboardingSumAggregateInputType = {
  createdById?: true;
  organizationId?: true;
  pricePerSeat?: true;
  seats?: true;
};

export type OrganizationOnboardingMinAggregateInputType = {
  id?: true;
  createdById?: true;
  createdAt?: true;
  orgOwnerEmail?: true;
  error?: true;
  updatedAt?: true;
  organizationId?: true;
  billingPeriod?: true;
  pricePerSeat?: true;
  seats?: true;
  isPlatform?: true;
  name?: true;
  slug?: true;
  logo?: true;
  bio?: true;
  brandColor?: true;
  bannerUrl?: true;
  isDomainConfigured?: true;
  stripeCustomerId?: true;
  stripeSubscriptionId?: true;
  stripeSubscriptionItemId?: true;
  isComplete?: true;
};

export type OrganizationOnboardingMaxAggregateInputType = {
  id?: true;
  createdById?: true;
  createdAt?: true;
  orgOwnerEmail?: true;
  error?: true;
  updatedAt?: true;
  organizationId?: true;
  billingPeriod?: true;
  pricePerSeat?: true;
  seats?: true;
  isPlatform?: true;
  name?: true;
  slug?: true;
  logo?: true;
  bio?: true;
  brandColor?: true;
  bannerUrl?: true;
  isDomainConfigured?: true;
  stripeCustomerId?: true;
  stripeSubscriptionId?: true;
  stripeSubscriptionItemId?: true;
  isComplete?: true;
};

export type OrganizationOnboardingCountAggregateInputType = {
  id?: true;
  createdById?: true;
  createdAt?: true;
  orgOwnerEmail?: true;
  error?: true;
  updatedAt?: true;
  organizationId?: true;
  billingPeriod?: true;
  pricePerSeat?: true;
  seats?: true;
  isPlatform?: true;
  name?: true;
  slug?: true;
  logo?: true;
  bio?: true;
  brandColor?: true;
  bannerUrl?: true;
  isDomainConfigured?: true;
  stripeCustomerId?: true;
  stripeSubscriptionId?: true;
  stripeSubscriptionItemId?: true;
  invitedMembers?: true;
  teams?: true;
  isComplete?: true;
  _all?: true;
};

export type OrganizationOnboardingAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which OrganizationOnboarding to aggregate.
   */
  where?: Prisma.OrganizationOnboardingWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of OrganizationOnboardings to fetch.
   */
  orderBy?:
    | Prisma.OrganizationOnboardingOrderByWithRelationInput
    | Prisma.OrganizationOnboardingOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.OrganizationOnboardingWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` OrganizationOnboardings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` OrganizationOnboardings.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned OrganizationOnboardings
   **/
  _count?: true | OrganizationOnboardingCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: OrganizationOnboardingAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: OrganizationOnboardingSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: OrganizationOnboardingMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: OrganizationOnboardingMaxAggregateInputType;
};

export type GetOrganizationOnboardingAggregateType<T extends OrganizationOnboardingAggregateArgs> = {
  [P in keyof T & keyof AggregateOrganizationOnboarding]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOrganizationOnboarding[P]>
    : Prisma.GetScalarType<T[P], AggregateOrganizationOnboarding[P]>;
};

export type OrganizationOnboardingGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.OrganizationOnboardingWhereInput;
  orderBy?:
    | Prisma.OrganizationOnboardingOrderByWithAggregationInput
    | Prisma.OrganizationOnboardingOrderByWithAggregationInput[];
  by: Prisma.OrganizationOnboardingScalarFieldEnum[] | Prisma.OrganizationOnboardingScalarFieldEnum;
  having?: Prisma.OrganizationOnboardingScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: OrganizationOnboardingCountAggregateInputType | true;
  _avg?: OrganizationOnboardingAvgAggregateInputType;
  _sum?: OrganizationOnboardingSumAggregateInputType;
  _min?: OrganizationOnboardingMinAggregateInputType;
  _max?: OrganizationOnboardingMaxAggregateInputType;
};

export type OrganizationOnboardingGroupByOutputType = {
  id: string;
  createdById: number;
  createdAt: Date;
  orgOwnerEmail: string;
  error: string | null;
  updatedAt: Date;
  organizationId: number | null;
  billingPeriod: $Enums.BillingPeriod;
  pricePerSeat: number;
  seats: number;
  isPlatform: boolean;
  name: string;
  slug: string;
  logo: string | null;
  bio: string | null;
  brandColor: string | null;
  bannerUrl: string | null;
  isDomainConfigured: boolean;
  stripeCustomerId: string | null;
  stripeSubscriptionId: string | null;
  stripeSubscriptionItemId: string | null;
  invitedMembers: runtime.JsonValue;
  teams: runtime.JsonValue;
  isComplete: boolean;
  _count: OrganizationOnboardingCountAggregateOutputType | null;
  _avg: OrganizationOnboardingAvgAggregateOutputType | null;
  _sum: OrganizationOnboardingSumAggregateOutputType | null;
  _min: OrganizationOnboardingMinAggregateOutputType | null;
  _max: OrganizationOnboardingMaxAggregateOutputType | null;
};

type GetOrganizationOnboardingGroupByPayload<T extends OrganizationOnboardingGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<OrganizationOnboardingGroupByOutputType, T["by"]> & {
        [P in keyof T & keyof OrganizationOnboardingGroupByOutputType]: P extends "_count"
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], OrganizationOnboardingGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], OrganizationOnboardingGroupByOutputType[P]>;
      }
    >
  >;

export type OrganizationOnboardingWhereInput = {
  AND?: Prisma.OrganizationOnboardingWhereInput | Prisma.OrganizationOnboardingWhereInput[];
  OR?: Prisma.OrganizationOnboardingWhereInput[];
  NOT?: Prisma.OrganizationOnboardingWhereInput | Prisma.OrganizationOnboardingWhereInput[];
  id?: Prisma.StringFilter<"OrganizationOnboarding"> | string;
  createdById?: Prisma.IntFilter<"OrganizationOnboarding"> | number;
  createdAt?: Prisma.DateTimeFilter<"OrganizationOnboarding"> | Date | string;
  orgOwnerEmail?: Prisma.StringFilter<"OrganizationOnboarding"> | string;
  error?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
  updatedAt?: Prisma.DateTimeFilter<"OrganizationOnboarding"> | Date | string;
  organizationId?: Prisma.IntNullableFilter<"OrganizationOnboarding"> | number | null;
  billingPeriod?: Prisma.EnumBillingPeriodFilter<"OrganizationOnboarding"> | $Enums.BillingPeriod;
  pricePerSeat?: Prisma.FloatFilter<"OrganizationOnboarding"> | number;
  seats?: Prisma.IntFilter<"OrganizationOnboarding"> | number;
  isPlatform?: Prisma.BoolFilter<"OrganizationOnboarding"> | boolean;
  name?: Prisma.StringFilter<"OrganizationOnboarding"> | string;
  slug?: Prisma.StringFilter<"OrganizationOnboarding"> | string;
  logo?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
  bio?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
  brandColor?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
  bannerUrl?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
  isDomainConfigured?: Prisma.BoolFilter<"OrganizationOnboarding"> | boolean;
  stripeCustomerId?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
  stripeSubscriptionId?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
  stripeSubscriptionItemId?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
  invitedMembers?: Prisma.JsonFilter<"OrganizationOnboarding">;
  teams?: Prisma.JsonFilter<"OrganizationOnboarding">;
  isComplete?: Prisma.BoolFilter<"OrganizationOnboarding"> | boolean;
  createdBy?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
  organization?: Prisma.XOR<Prisma.TeamNullableScalarRelationFilter, Prisma.TeamWhereInput> | null;
};

export type OrganizationOnboardingOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  orgOwnerEmail?: Prisma.SortOrder;
  error?: Prisma.SortOrderInput | Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  organizationId?: Prisma.SortOrderInput | Prisma.SortOrder;
  billingPeriod?: Prisma.SortOrder;
  pricePerSeat?: Prisma.SortOrder;
  seats?: Prisma.SortOrder;
  isPlatform?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  slug?: Prisma.SortOrder;
  logo?: Prisma.SortOrderInput | Prisma.SortOrder;
  bio?: Prisma.SortOrderInput | Prisma.SortOrder;
  brandColor?: Prisma.SortOrderInput | Prisma.SortOrder;
  bannerUrl?: Prisma.SortOrderInput | Prisma.SortOrder;
  isDomainConfigured?: Prisma.SortOrder;
  stripeCustomerId?: Prisma.SortOrderInput | Prisma.SortOrder;
  stripeSubscriptionId?: Prisma.SortOrderInput | Prisma.SortOrder;
  stripeSubscriptionItemId?: Prisma.SortOrderInput | Prisma.SortOrder;
  invitedMembers?: Prisma.SortOrder;
  teams?: Prisma.SortOrder;
  isComplete?: Prisma.SortOrder;
  createdBy?: Prisma.UserOrderByWithRelationInput;
  organization?: Prisma.TeamOrderByWithRelationInput;
};

export type OrganizationOnboardingWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    orgOwnerEmail?: string;
    organizationId?: number;
    stripeCustomerId?: string;
    AND?: Prisma.OrganizationOnboardingWhereInput | Prisma.OrganizationOnboardingWhereInput[];
    OR?: Prisma.OrganizationOnboardingWhereInput[];
    NOT?: Prisma.OrganizationOnboardingWhereInput | Prisma.OrganizationOnboardingWhereInput[];
    createdById?: Prisma.IntFilter<"OrganizationOnboarding"> | number;
    createdAt?: Prisma.DateTimeFilter<"OrganizationOnboarding"> | Date | string;
    error?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
    updatedAt?: Prisma.DateTimeFilter<"OrganizationOnboarding"> | Date | string;
    billingPeriod?: Prisma.EnumBillingPeriodFilter<"OrganizationOnboarding"> | $Enums.BillingPeriod;
    pricePerSeat?: Prisma.FloatFilter<"OrganizationOnboarding"> | number;
    seats?: Prisma.IntFilter<"OrganizationOnboarding"> | number;
    isPlatform?: Prisma.BoolFilter<"OrganizationOnboarding"> | boolean;
    name?: Prisma.StringFilter<"OrganizationOnboarding"> | string;
    slug?: Prisma.StringFilter<"OrganizationOnboarding"> | string;
    logo?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
    bio?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
    brandColor?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
    bannerUrl?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
    isDomainConfigured?: Prisma.BoolFilter<"OrganizationOnboarding"> | boolean;
    stripeSubscriptionId?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
    stripeSubscriptionItemId?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
    invitedMembers?: Prisma.JsonFilter<"OrganizationOnboarding">;
    teams?: Prisma.JsonFilter<"OrganizationOnboarding">;
    isComplete?: Prisma.BoolFilter<"OrganizationOnboarding"> | boolean;
    createdBy?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
    organization?: Prisma.XOR<Prisma.TeamNullableScalarRelationFilter, Prisma.TeamWhereInput> | null;
  },
  "id" | "orgOwnerEmail" | "organizationId" | "stripeCustomerId"
>;

export type OrganizationOnboardingOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  orgOwnerEmail?: Prisma.SortOrder;
  error?: Prisma.SortOrderInput | Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  organizationId?: Prisma.SortOrderInput | Prisma.SortOrder;
  billingPeriod?: Prisma.SortOrder;
  pricePerSeat?: Prisma.SortOrder;
  seats?: Prisma.SortOrder;
  isPlatform?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  slug?: Prisma.SortOrder;
  logo?: Prisma.SortOrderInput | Prisma.SortOrder;
  bio?: Prisma.SortOrderInput | Prisma.SortOrder;
  brandColor?: Prisma.SortOrderInput | Prisma.SortOrder;
  bannerUrl?: Prisma.SortOrderInput | Prisma.SortOrder;
  isDomainConfigured?: Prisma.SortOrder;
  stripeCustomerId?: Prisma.SortOrderInput | Prisma.SortOrder;
  stripeSubscriptionId?: Prisma.SortOrderInput | Prisma.SortOrder;
  stripeSubscriptionItemId?: Prisma.SortOrderInput | Prisma.SortOrder;
  invitedMembers?: Prisma.SortOrder;
  teams?: Prisma.SortOrder;
  isComplete?: Prisma.SortOrder;
  _count?: Prisma.OrganizationOnboardingCountOrderByAggregateInput;
  _avg?: Prisma.OrganizationOnboardingAvgOrderByAggregateInput;
  _max?: Prisma.OrganizationOnboardingMaxOrderByAggregateInput;
  _min?: Prisma.OrganizationOnboardingMinOrderByAggregateInput;
  _sum?: Prisma.OrganizationOnboardingSumOrderByAggregateInput;
};

export type OrganizationOnboardingScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.OrganizationOnboardingScalarWhereWithAggregatesInput
    | Prisma.OrganizationOnboardingScalarWhereWithAggregatesInput[];
  OR?: Prisma.OrganizationOnboardingScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.OrganizationOnboardingScalarWhereWithAggregatesInput
    | Prisma.OrganizationOnboardingScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"OrganizationOnboarding"> | string;
  createdById?: Prisma.IntWithAggregatesFilter<"OrganizationOnboarding"> | number;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"OrganizationOnboarding"> | Date | string;
  orgOwnerEmail?: Prisma.StringWithAggregatesFilter<"OrganizationOnboarding"> | string;
  error?: Prisma.StringNullableWithAggregatesFilter<"OrganizationOnboarding"> | string | null;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"OrganizationOnboarding"> | Date | string;
  organizationId?: Prisma.IntNullableWithAggregatesFilter<"OrganizationOnboarding"> | number | null;
  billingPeriod?:
    | Prisma.EnumBillingPeriodWithAggregatesFilter<"OrganizationOnboarding">
    | $Enums.BillingPeriod;
  pricePerSeat?: Prisma.FloatWithAggregatesFilter<"OrganizationOnboarding"> | number;
  seats?: Prisma.IntWithAggregatesFilter<"OrganizationOnboarding"> | number;
  isPlatform?: Prisma.BoolWithAggregatesFilter<"OrganizationOnboarding"> | boolean;
  name?: Prisma.StringWithAggregatesFilter<"OrganizationOnboarding"> | string;
  slug?: Prisma.StringWithAggregatesFilter<"OrganizationOnboarding"> | string;
  logo?: Prisma.StringNullableWithAggregatesFilter<"OrganizationOnboarding"> | string | null;
  bio?: Prisma.StringNullableWithAggregatesFilter<"OrganizationOnboarding"> | string | null;
  brandColor?: Prisma.StringNullableWithAggregatesFilter<"OrganizationOnboarding"> | string | null;
  bannerUrl?: Prisma.StringNullableWithAggregatesFilter<"OrganizationOnboarding"> | string | null;
  isDomainConfigured?: Prisma.BoolWithAggregatesFilter<"OrganizationOnboarding"> | boolean;
  stripeCustomerId?: Prisma.StringNullableWithAggregatesFilter<"OrganizationOnboarding"> | string | null;
  stripeSubscriptionId?: Prisma.StringNullableWithAggregatesFilter<"OrganizationOnboarding"> | string | null;
  stripeSubscriptionItemId?:
    | Prisma.StringNullableWithAggregatesFilter<"OrganizationOnboarding">
    | string
    | null;
  invitedMembers?: Prisma.JsonWithAggregatesFilter<"OrganizationOnboarding">;
  teams?: Prisma.JsonWithAggregatesFilter<"OrganizationOnboarding">;
  isComplete?: Prisma.BoolWithAggregatesFilter<"OrganizationOnboarding"> | boolean;
};

export type OrganizationOnboardingCreateInput = {
  id?: string;
  createdAt?: Date | string;
  orgOwnerEmail: string;
  error?: string | null;
  updatedAt?: Date | string;
  billingPeriod: $Enums.BillingPeriod;
  pricePerSeat: number;
  seats: number;
  isPlatform?: boolean;
  name: string;
  slug: string;
  logo?: string | null;
  bio?: string | null;
  brandColor?: string | null;
  bannerUrl?: string | null;
  isDomainConfigured?: boolean;
  stripeCustomerId?: string | null;
  stripeSubscriptionId?: string | null;
  stripeSubscriptionItemId?: string | null;
  invitedMembers?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teams?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isComplete?: boolean;
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedOrganizationOnboardingsInput;
  organization?: Prisma.TeamCreateNestedOneWithoutOrganizationOnboardingInput;
};

export type OrganizationOnboardingUncheckedCreateInput = {
  id?: string;
  createdById: number;
  createdAt?: Date | string;
  orgOwnerEmail: string;
  error?: string | null;
  updatedAt?: Date | string;
  organizationId?: number | null;
  billingPeriod: $Enums.BillingPeriod;
  pricePerSeat: number;
  seats: number;
  isPlatform?: boolean;
  name: string;
  slug: string;
  logo?: string | null;
  bio?: string | null;
  brandColor?: string | null;
  bannerUrl?: string | null;
  isDomainConfigured?: boolean;
  stripeCustomerId?: string | null;
  stripeSubscriptionId?: string | null;
  stripeSubscriptionItemId?: string | null;
  invitedMembers?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teams?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isComplete?: boolean;
};

export type OrganizationOnboardingUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  orgOwnerEmail?: Prisma.StringFieldUpdateOperationsInput | string;
  error?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  billingPeriod?: Prisma.EnumBillingPeriodFieldUpdateOperationsInput | $Enums.BillingPeriod;
  pricePerSeat?: Prisma.FloatFieldUpdateOperationsInput | number;
  seats?: Prisma.IntFieldUpdateOperationsInput | number;
  isPlatform?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  brandColor?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bannerUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDomainConfigured?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  stripeCustomerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionItemId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  invitedMembers?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teams?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isComplete?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedOrganizationOnboardingsNestedInput;
  organization?: Prisma.TeamUpdateOneWithoutOrganizationOnboardingNestedInput;
};

export type OrganizationOnboardingUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  createdById?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  orgOwnerEmail?: Prisma.StringFieldUpdateOperationsInput | string;
  error?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  organizationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  billingPeriod?: Prisma.EnumBillingPeriodFieldUpdateOperationsInput | $Enums.BillingPeriod;
  pricePerSeat?: Prisma.FloatFieldUpdateOperationsInput | number;
  seats?: Prisma.IntFieldUpdateOperationsInput | number;
  isPlatform?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  brandColor?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bannerUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDomainConfigured?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  stripeCustomerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionItemId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  invitedMembers?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teams?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isComplete?: Prisma.BoolFieldUpdateOperationsInput | boolean;
};

export type OrganizationOnboardingCreateManyInput = {
  id?: string;
  createdById: number;
  createdAt?: Date | string;
  orgOwnerEmail: string;
  error?: string | null;
  updatedAt?: Date | string;
  organizationId?: number | null;
  billingPeriod: $Enums.BillingPeriod;
  pricePerSeat: number;
  seats: number;
  isPlatform?: boolean;
  name: string;
  slug: string;
  logo?: string | null;
  bio?: string | null;
  brandColor?: string | null;
  bannerUrl?: string | null;
  isDomainConfigured?: boolean;
  stripeCustomerId?: string | null;
  stripeSubscriptionId?: string | null;
  stripeSubscriptionItemId?: string | null;
  invitedMembers?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teams?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isComplete?: boolean;
};

export type OrganizationOnboardingUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  orgOwnerEmail?: Prisma.StringFieldUpdateOperationsInput | string;
  error?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  billingPeriod?: Prisma.EnumBillingPeriodFieldUpdateOperationsInput | $Enums.BillingPeriod;
  pricePerSeat?: Prisma.FloatFieldUpdateOperationsInput | number;
  seats?: Prisma.IntFieldUpdateOperationsInput | number;
  isPlatform?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  brandColor?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bannerUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDomainConfigured?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  stripeCustomerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionItemId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  invitedMembers?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teams?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isComplete?: Prisma.BoolFieldUpdateOperationsInput | boolean;
};

export type OrganizationOnboardingUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  createdById?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  orgOwnerEmail?: Prisma.StringFieldUpdateOperationsInput | string;
  error?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  organizationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  billingPeriod?: Prisma.EnumBillingPeriodFieldUpdateOperationsInput | $Enums.BillingPeriod;
  pricePerSeat?: Prisma.FloatFieldUpdateOperationsInput | number;
  seats?: Prisma.IntFieldUpdateOperationsInput | number;
  isPlatform?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  brandColor?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bannerUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDomainConfigured?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  stripeCustomerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionItemId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  invitedMembers?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teams?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isComplete?: Prisma.BoolFieldUpdateOperationsInput | boolean;
};

export type OrganizationOnboardingListRelationFilter = {
  every?: Prisma.OrganizationOnboardingWhereInput;
  some?: Prisma.OrganizationOnboardingWhereInput;
  none?: Prisma.OrganizationOnboardingWhereInput;
};

export type OrganizationOnboardingOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type OrganizationOnboardingNullableScalarRelationFilter = {
  is?: Prisma.OrganizationOnboardingWhereInput | null;
  isNot?: Prisma.OrganizationOnboardingWhereInput | null;
};

export type OrganizationOnboardingCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  orgOwnerEmail?: Prisma.SortOrder;
  error?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  organizationId?: Prisma.SortOrder;
  billingPeriod?: Prisma.SortOrder;
  pricePerSeat?: Prisma.SortOrder;
  seats?: Prisma.SortOrder;
  isPlatform?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  slug?: Prisma.SortOrder;
  logo?: Prisma.SortOrder;
  bio?: Prisma.SortOrder;
  brandColor?: Prisma.SortOrder;
  bannerUrl?: Prisma.SortOrder;
  isDomainConfigured?: Prisma.SortOrder;
  stripeCustomerId?: Prisma.SortOrder;
  stripeSubscriptionId?: Prisma.SortOrder;
  stripeSubscriptionItemId?: Prisma.SortOrder;
  invitedMembers?: Prisma.SortOrder;
  teams?: Prisma.SortOrder;
  isComplete?: Prisma.SortOrder;
};

export type OrganizationOnboardingAvgOrderByAggregateInput = {
  createdById?: Prisma.SortOrder;
  organizationId?: Prisma.SortOrder;
  pricePerSeat?: Prisma.SortOrder;
  seats?: Prisma.SortOrder;
};

export type OrganizationOnboardingMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  orgOwnerEmail?: Prisma.SortOrder;
  error?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  organizationId?: Prisma.SortOrder;
  billingPeriod?: Prisma.SortOrder;
  pricePerSeat?: Prisma.SortOrder;
  seats?: Prisma.SortOrder;
  isPlatform?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  slug?: Prisma.SortOrder;
  logo?: Prisma.SortOrder;
  bio?: Prisma.SortOrder;
  brandColor?: Prisma.SortOrder;
  bannerUrl?: Prisma.SortOrder;
  isDomainConfigured?: Prisma.SortOrder;
  stripeCustomerId?: Prisma.SortOrder;
  stripeSubscriptionId?: Prisma.SortOrder;
  stripeSubscriptionItemId?: Prisma.SortOrder;
  isComplete?: Prisma.SortOrder;
};

export type OrganizationOnboardingMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  createdById?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  orgOwnerEmail?: Prisma.SortOrder;
  error?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  organizationId?: Prisma.SortOrder;
  billingPeriod?: Prisma.SortOrder;
  pricePerSeat?: Prisma.SortOrder;
  seats?: Prisma.SortOrder;
  isPlatform?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  slug?: Prisma.SortOrder;
  logo?: Prisma.SortOrder;
  bio?: Prisma.SortOrder;
  brandColor?: Prisma.SortOrder;
  bannerUrl?: Prisma.SortOrder;
  isDomainConfigured?: Prisma.SortOrder;
  stripeCustomerId?: Prisma.SortOrder;
  stripeSubscriptionId?: Prisma.SortOrder;
  stripeSubscriptionItemId?: Prisma.SortOrder;
  isComplete?: Prisma.SortOrder;
};

export type OrganizationOnboardingSumOrderByAggregateInput = {
  createdById?: Prisma.SortOrder;
  organizationId?: Prisma.SortOrder;
  pricePerSeat?: Prisma.SortOrder;
  seats?: Prisma.SortOrder;
};

export type OrganizationOnboardingCreateNestedManyWithoutCreatedByInput = {
  create?:
    | Prisma.XOR<
        Prisma.OrganizationOnboardingCreateWithoutCreatedByInput,
        Prisma.OrganizationOnboardingUncheckedCreateWithoutCreatedByInput
      >
    | Prisma.OrganizationOnboardingCreateWithoutCreatedByInput[]
    | Prisma.OrganizationOnboardingUncheckedCreateWithoutCreatedByInput[];
  connectOrCreate?:
    | Prisma.OrganizationOnboardingCreateOrConnectWithoutCreatedByInput
    | Prisma.OrganizationOnboardingCreateOrConnectWithoutCreatedByInput[];
  createMany?: Prisma.OrganizationOnboardingCreateManyCreatedByInputEnvelope;
  connect?: Prisma.OrganizationOnboardingWhereUniqueInput | Prisma.OrganizationOnboardingWhereUniqueInput[];
};

export type OrganizationOnboardingUncheckedCreateNestedManyWithoutCreatedByInput = {
  create?:
    | Prisma.XOR<
        Prisma.OrganizationOnboardingCreateWithoutCreatedByInput,
        Prisma.OrganizationOnboardingUncheckedCreateWithoutCreatedByInput
      >
    | Prisma.OrganizationOnboardingCreateWithoutCreatedByInput[]
    | Prisma.OrganizationOnboardingUncheckedCreateWithoutCreatedByInput[];
  connectOrCreate?:
    | Prisma.OrganizationOnboardingCreateOrConnectWithoutCreatedByInput
    | Prisma.OrganizationOnboardingCreateOrConnectWithoutCreatedByInput[];
  createMany?: Prisma.OrganizationOnboardingCreateManyCreatedByInputEnvelope;
  connect?: Prisma.OrganizationOnboardingWhereUniqueInput | Prisma.OrganizationOnboardingWhereUniqueInput[];
};

export type OrganizationOnboardingUpdateManyWithoutCreatedByNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.OrganizationOnboardingCreateWithoutCreatedByInput,
        Prisma.OrganizationOnboardingUncheckedCreateWithoutCreatedByInput
      >
    | Prisma.OrganizationOnboardingCreateWithoutCreatedByInput[]
    | Prisma.OrganizationOnboardingUncheckedCreateWithoutCreatedByInput[];
  connectOrCreate?:
    | Prisma.OrganizationOnboardingCreateOrConnectWithoutCreatedByInput
    | Prisma.OrganizationOnboardingCreateOrConnectWithoutCreatedByInput[];
  upsert?:
    | Prisma.OrganizationOnboardingUpsertWithWhereUniqueWithoutCreatedByInput
    | Prisma.OrganizationOnboardingUpsertWithWhereUniqueWithoutCreatedByInput[];
  createMany?: Prisma.OrganizationOnboardingCreateManyCreatedByInputEnvelope;
  set?: Prisma.OrganizationOnboardingWhereUniqueInput | Prisma.OrganizationOnboardingWhereUniqueInput[];
  disconnect?:
    | Prisma.OrganizationOnboardingWhereUniqueInput
    | Prisma.OrganizationOnboardingWhereUniqueInput[];
  delete?: Prisma.OrganizationOnboardingWhereUniqueInput | Prisma.OrganizationOnboardingWhereUniqueInput[];
  connect?: Prisma.OrganizationOnboardingWhereUniqueInput | Prisma.OrganizationOnboardingWhereUniqueInput[];
  update?:
    | Prisma.OrganizationOnboardingUpdateWithWhereUniqueWithoutCreatedByInput
    | Prisma.OrganizationOnboardingUpdateWithWhereUniqueWithoutCreatedByInput[];
  updateMany?:
    | Prisma.OrganizationOnboardingUpdateManyWithWhereWithoutCreatedByInput
    | Prisma.OrganizationOnboardingUpdateManyWithWhereWithoutCreatedByInput[];
  deleteMany?:
    | Prisma.OrganizationOnboardingScalarWhereInput
    | Prisma.OrganizationOnboardingScalarWhereInput[];
};

export type OrganizationOnboardingUncheckedUpdateManyWithoutCreatedByNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.OrganizationOnboardingCreateWithoutCreatedByInput,
        Prisma.OrganizationOnboardingUncheckedCreateWithoutCreatedByInput
      >
    | Prisma.OrganizationOnboardingCreateWithoutCreatedByInput[]
    | Prisma.OrganizationOnboardingUncheckedCreateWithoutCreatedByInput[];
  connectOrCreate?:
    | Prisma.OrganizationOnboardingCreateOrConnectWithoutCreatedByInput
    | Prisma.OrganizationOnboardingCreateOrConnectWithoutCreatedByInput[];
  upsert?:
    | Prisma.OrganizationOnboardingUpsertWithWhereUniqueWithoutCreatedByInput
    | Prisma.OrganizationOnboardingUpsertWithWhereUniqueWithoutCreatedByInput[];
  createMany?: Prisma.OrganizationOnboardingCreateManyCreatedByInputEnvelope;
  set?: Prisma.OrganizationOnboardingWhereUniqueInput | Prisma.OrganizationOnboardingWhereUniqueInput[];
  disconnect?:
    | Prisma.OrganizationOnboardingWhereUniqueInput
    | Prisma.OrganizationOnboardingWhereUniqueInput[];
  delete?: Prisma.OrganizationOnboardingWhereUniqueInput | Prisma.OrganizationOnboardingWhereUniqueInput[];
  connect?: Prisma.OrganizationOnboardingWhereUniqueInput | Prisma.OrganizationOnboardingWhereUniqueInput[];
  update?:
    | Prisma.OrganizationOnboardingUpdateWithWhereUniqueWithoutCreatedByInput
    | Prisma.OrganizationOnboardingUpdateWithWhereUniqueWithoutCreatedByInput[];
  updateMany?:
    | Prisma.OrganizationOnboardingUpdateManyWithWhereWithoutCreatedByInput
    | Prisma.OrganizationOnboardingUpdateManyWithWhereWithoutCreatedByInput[];
  deleteMany?:
    | Prisma.OrganizationOnboardingScalarWhereInput
    | Prisma.OrganizationOnboardingScalarWhereInput[];
};

export type OrganizationOnboardingCreateNestedOneWithoutOrganizationInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationOnboardingCreateWithoutOrganizationInput,
    Prisma.OrganizationOnboardingUncheckedCreateWithoutOrganizationInput
  >;
  connectOrCreate?: Prisma.OrganizationOnboardingCreateOrConnectWithoutOrganizationInput;
  connect?: Prisma.OrganizationOnboardingWhereUniqueInput;
};

export type OrganizationOnboardingUncheckedCreateNestedOneWithoutOrganizationInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationOnboardingCreateWithoutOrganizationInput,
    Prisma.OrganizationOnboardingUncheckedCreateWithoutOrganizationInput
  >;
  connectOrCreate?: Prisma.OrganizationOnboardingCreateOrConnectWithoutOrganizationInput;
  connect?: Prisma.OrganizationOnboardingWhereUniqueInput;
};

export type OrganizationOnboardingUpdateOneWithoutOrganizationNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationOnboardingCreateWithoutOrganizationInput,
    Prisma.OrganizationOnboardingUncheckedCreateWithoutOrganizationInput
  >;
  connectOrCreate?: Prisma.OrganizationOnboardingCreateOrConnectWithoutOrganizationInput;
  upsert?: Prisma.OrganizationOnboardingUpsertWithoutOrganizationInput;
  disconnect?: Prisma.OrganizationOnboardingWhereInput | boolean;
  delete?: Prisma.OrganizationOnboardingWhereInput | boolean;
  connect?: Prisma.OrganizationOnboardingWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationOnboardingUpdateToOneWithWhereWithoutOrganizationInput,
      Prisma.OrganizationOnboardingUpdateWithoutOrganizationInput
    >,
    Prisma.OrganizationOnboardingUncheckedUpdateWithoutOrganizationInput
  >;
};

export type OrganizationOnboardingUncheckedUpdateOneWithoutOrganizationNestedInput = {
  create?: Prisma.XOR<
    Prisma.OrganizationOnboardingCreateWithoutOrganizationInput,
    Prisma.OrganizationOnboardingUncheckedCreateWithoutOrganizationInput
  >;
  connectOrCreate?: Prisma.OrganizationOnboardingCreateOrConnectWithoutOrganizationInput;
  upsert?: Prisma.OrganizationOnboardingUpsertWithoutOrganizationInput;
  disconnect?: Prisma.OrganizationOnboardingWhereInput | boolean;
  delete?: Prisma.OrganizationOnboardingWhereInput | boolean;
  connect?: Prisma.OrganizationOnboardingWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OrganizationOnboardingUpdateToOneWithWhereWithoutOrganizationInput,
      Prisma.OrganizationOnboardingUpdateWithoutOrganizationInput
    >,
    Prisma.OrganizationOnboardingUncheckedUpdateWithoutOrganizationInput
  >;
};

export type EnumBillingPeriodFieldUpdateOperationsInput = {
  set?: $Enums.BillingPeriod;
};

export type FloatFieldUpdateOperationsInput = {
  set?: number;
  increment?: number;
  decrement?: number;
  multiply?: number;
  divide?: number;
};

export type OrganizationOnboardingCreateWithoutCreatedByInput = {
  id?: string;
  createdAt?: Date | string;
  orgOwnerEmail: string;
  error?: string | null;
  updatedAt?: Date | string;
  billingPeriod: $Enums.BillingPeriod;
  pricePerSeat: number;
  seats: number;
  isPlatform?: boolean;
  name: string;
  slug: string;
  logo?: string | null;
  bio?: string | null;
  brandColor?: string | null;
  bannerUrl?: string | null;
  isDomainConfigured?: boolean;
  stripeCustomerId?: string | null;
  stripeSubscriptionId?: string | null;
  stripeSubscriptionItemId?: string | null;
  invitedMembers?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teams?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isComplete?: boolean;
  organization?: Prisma.TeamCreateNestedOneWithoutOrganizationOnboardingInput;
};

export type OrganizationOnboardingUncheckedCreateWithoutCreatedByInput = {
  id?: string;
  createdAt?: Date | string;
  orgOwnerEmail: string;
  error?: string | null;
  updatedAt?: Date | string;
  organizationId?: number | null;
  billingPeriod: $Enums.BillingPeriod;
  pricePerSeat: number;
  seats: number;
  isPlatform?: boolean;
  name: string;
  slug: string;
  logo?: string | null;
  bio?: string | null;
  brandColor?: string | null;
  bannerUrl?: string | null;
  isDomainConfigured?: boolean;
  stripeCustomerId?: string | null;
  stripeSubscriptionId?: string | null;
  stripeSubscriptionItemId?: string | null;
  invitedMembers?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teams?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isComplete?: boolean;
};

export type OrganizationOnboardingCreateOrConnectWithoutCreatedByInput = {
  where: Prisma.OrganizationOnboardingWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.OrganizationOnboardingCreateWithoutCreatedByInput,
    Prisma.OrganizationOnboardingUncheckedCreateWithoutCreatedByInput
  >;
};

export type OrganizationOnboardingCreateManyCreatedByInputEnvelope = {
  data:
    | Prisma.OrganizationOnboardingCreateManyCreatedByInput
    | Prisma.OrganizationOnboardingCreateManyCreatedByInput[];
  skipDuplicates?: boolean;
};

export type OrganizationOnboardingUpsertWithWhereUniqueWithoutCreatedByInput = {
  where: Prisma.OrganizationOnboardingWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.OrganizationOnboardingUpdateWithoutCreatedByInput,
    Prisma.OrganizationOnboardingUncheckedUpdateWithoutCreatedByInput
  >;
  create: Prisma.XOR<
    Prisma.OrganizationOnboardingCreateWithoutCreatedByInput,
    Prisma.OrganizationOnboardingUncheckedCreateWithoutCreatedByInput
  >;
};

export type OrganizationOnboardingUpdateWithWhereUniqueWithoutCreatedByInput = {
  where: Prisma.OrganizationOnboardingWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.OrganizationOnboardingUpdateWithoutCreatedByInput,
    Prisma.OrganizationOnboardingUncheckedUpdateWithoutCreatedByInput
  >;
};

export type OrganizationOnboardingUpdateManyWithWhereWithoutCreatedByInput = {
  where: Prisma.OrganizationOnboardingScalarWhereInput;
  data: Prisma.XOR<
    Prisma.OrganizationOnboardingUpdateManyMutationInput,
    Prisma.OrganizationOnboardingUncheckedUpdateManyWithoutCreatedByInput
  >;
};

export type OrganizationOnboardingScalarWhereInput = {
  AND?: Prisma.OrganizationOnboardingScalarWhereInput | Prisma.OrganizationOnboardingScalarWhereInput[];
  OR?: Prisma.OrganizationOnboardingScalarWhereInput[];
  NOT?: Prisma.OrganizationOnboardingScalarWhereInput | Prisma.OrganizationOnboardingScalarWhereInput[];
  id?: Prisma.StringFilter<"OrganizationOnboarding"> | string;
  createdById?: Prisma.IntFilter<"OrganizationOnboarding"> | number;
  createdAt?: Prisma.DateTimeFilter<"OrganizationOnboarding"> | Date | string;
  orgOwnerEmail?: Prisma.StringFilter<"OrganizationOnboarding"> | string;
  error?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
  updatedAt?: Prisma.DateTimeFilter<"OrganizationOnboarding"> | Date | string;
  organizationId?: Prisma.IntNullableFilter<"OrganizationOnboarding"> | number | null;
  billingPeriod?: Prisma.EnumBillingPeriodFilter<"OrganizationOnboarding"> | $Enums.BillingPeriod;
  pricePerSeat?: Prisma.FloatFilter<"OrganizationOnboarding"> | number;
  seats?: Prisma.IntFilter<"OrganizationOnboarding"> | number;
  isPlatform?: Prisma.BoolFilter<"OrganizationOnboarding"> | boolean;
  name?: Prisma.StringFilter<"OrganizationOnboarding"> | string;
  slug?: Prisma.StringFilter<"OrganizationOnboarding"> | string;
  logo?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
  bio?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
  brandColor?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
  bannerUrl?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
  isDomainConfigured?: Prisma.BoolFilter<"OrganizationOnboarding"> | boolean;
  stripeCustomerId?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
  stripeSubscriptionId?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
  stripeSubscriptionItemId?: Prisma.StringNullableFilter<"OrganizationOnboarding"> | string | null;
  invitedMembers?: Prisma.JsonFilter<"OrganizationOnboarding">;
  teams?: Prisma.JsonFilter<"OrganizationOnboarding">;
  isComplete?: Prisma.BoolFilter<"OrganizationOnboarding"> | boolean;
};

export type OrganizationOnboardingCreateWithoutOrganizationInput = {
  id?: string;
  createdAt?: Date | string;
  orgOwnerEmail: string;
  error?: string | null;
  updatedAt?: Date | string;
  billingPeriod: $Enums.BillingPeriod;
  pricePerSeat: number;
  seats: number;
  isPlatform?: boolean;
  name: string;
  slug: string;
  logo?: string | null;
  bio?: string | null;
  brandColor?: string | null;
  bannerUrl?: string | null;
  isDomainConfigured?: boolean;
  stripeCustomerId?: string | null;
  stripeSubscriptionId?: string | null;
  stripeSubscriptionItemId?: string | null;
  invitedMembers?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teams?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isComplete?: boolean;
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedOrganizationOnboardingsInput;
};

export type OrganizationOnboardingUncheckedCreateWithoutOrganizationInput = {
  id?: string;
  createdById: number;
  createdAt?: Date | string;
  orgOwnerEmail: string;
  error?: string | null;
  updatedAt?: Date | string;
  billingPeriod: $Enums.BillingPeriod;
  pricePerSeat: number;
  seats: number;
  isPlatform?: boolean;
  name: string;
  slug: string;
  logo?: string | null;
  bio?: string | null;
  brandColor?: string | null;
  bannerUrl?: string | null;
  isDomainConfigured?: boolean;
  stripeCustomerId?: string | null;
  stripeSubscriptionId?: string | null;
  stripeSubscriptionItemId?: string | null;
  invitedMembers?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teams?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isComplete?: boolean;
};

export type OrganizationOnboardingCreateOrConnectWithoutOrganizationInput = {
  where: Prisma.OrganizationOnboardingWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.OrganizationOnboardingCreateWithoutOrganizationInput,
    Prisma.OrganizationOnboardingUncheckedCreateWithoutOrganizationInput
  >;
};

export type OrganizationOnboardingUpsertWithoutOrganizationInput = {
  update: Prisma.XOR<
    Prisma.OrganizationOnboardingUpdateWithoutOrganizationInput,
    Prisma.OrganizationOnboardingUncheckedUpdateWithoutOrganizationInput
  >;
  create: Prisma.XOR<
    Prisma.OrganizationOnboardingCreateWithoutOrganizationInput,
    Prisma.OrganizationOnboardingUncheckedCreateWithoutOrganizationInput
  >;
  where?: Prisma.OrganizationOnboardingWhereInput;
};

export type OrganizationOnboardingUpdateToOneWithWhereWithoutOrganizationInput = {
  where?: Prisma.OrganizationOnboardingWhereInput;
  data: Prisma.XOR<
    Prisma.OrganizationOnboardingUpdateWithoutOrganizationInput,
    Prisma.OrganizationOnboardingUncheckedUpdateWithoutOrganizationInput
  >;
};

export type OrganizationOnboardingUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  orgOwnerEmail?: Prisma.StringFieldUpdateOperationsInput | string;
  error?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  billingPeriod?: Prisma.EnumBillingPeriodFieldUpdateOperationsInput | $Enums.BillingPeriod;
  pricePerSeat?: Prisma.FloatFieldUpdateOperationsInput | number;
  seats?: Prisma.IntFieldUpdateOperationsInput | number;
  isPlatform?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  brandColor?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bannerUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDomainConfigured?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  stripeCustomerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionItemId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  invitedMembers?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teams?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isComplete?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedOrganizationOnboardingsNestedInput;
};

export type OrganizationOnboardingUncheckedUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  createdById?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  orgOwnerEmail?: Prisma.StringFieldUpdateOperationsInput | string;
  error?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  billingPeriod?: Prisma.EnumBillingPeriodFieldUpdateOperationsInput | $Enums.BillingPeriod;
  pricePerSeat?: Prisma.FloatFieldUpdateOperationsInput | number;
  seats?: Prisma.IntFieldUpdateOperationsInput | number;
  isPlatform?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  brandColor?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bannerUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDomainConfigured?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  stripeCustomerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionItemId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  invitedMembers?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teams?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isComplete?: Prisma.BoolFieldUpdateOperationsInput | boolean;
};

export type OrganizationOnboardingCreateManyCreatedByInput = {
  id?: string;
  createdAt?: Date | string;
  orgOwnerEmail: string;
  error?: string | null;
  updatedAt?: Date | string;
  organizationId?: number | null;
  billingPeriod: $Enums.BillingPeriod;
  pricePerSeat: number;
  seats: number;
  isPlatform?: boolean;
  name: string;
  slug: string;
  logo?: string | null;
  bio?: string | null;
  brandColor?: string | null;
  bannerUrl?: string | null;
  isDomainConfigured?: boolean;
  stripeCustomerId?: string | null;
  stripeSubscriptionId?: string | null;
  stripeSubscriptionItemId?: string | null;
  invitedMembers?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teams?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isComplete?: boolean;
};

export type OrganizationOnboardingUpdateWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  orgOwnerEmail?: Prisma.StringFieldUpdateOperationsInput | string;
  error?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  billingPeriod?: Prisma.EnumBillingPeriodFieldUpdateOperationsInput | $Enums.BillingPeriod;
  pricePerSeat?: Prisma.FloatFieldUpdateOperationsInput | number;
  seats?: Prisma.IntFieldUpdateOperationsInput | number;
  isPlatform?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  brandColor?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bannerUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDomainConfigured?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  stripeCustomerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionItemId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  invitedMembers?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teams?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isComplete?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  organization?: Prisma.TeamUpdateOneWithoutOrganizationOnboardingNestedInput;
};

export type OrganizationOnboardingUncheckedUpdateWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  orgOwnerEmail?: Prisma.StringFieldUpdateOperationsInput | string;
  error?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  organizationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  billingPeriod?: Prisma.EnumBillingPeriodFieldUpdateOperationsInput | $Enums.BillingPeriod;
  pricePerSeat?: Prisma.FloatFieldUpdateOperationsInput | number;
  seats?: Prisma.IntFieldUpdateOperationsInput | number;
  isPlatform?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  brandColor?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bannerUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDomainConfigured?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  stripeCustomerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionItemId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  invitedMembers?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teams?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isComplete?: Prisma.BoolFieldUpdateOperationsInput | boolean;
};

export type OrganizationOnboardingUncheckedUpdateManyWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  orgOwnerEmail?: Prisma.StringFieldUpdateOperationsInput | string;
  error?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  organizationId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  billingPeriod?: Prisma.EnumBillingPeriodFieldUpdateOperationsInput | $Enums.BillingPeriod;
  pricePerSeat?: Prisma.FloatFieldUpdateOperationsInput | number;
  seats?: Prisma.IntFieldUpdateOperationsInput | number;
  isPlatform?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  brandColor?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  bannerUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  isDomainConfigured?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  stripeCustomerId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  stripeSubscriptionItemId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  invitedMembers?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teams?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  isComplete?: Prisma.BoolFieldUpdateOperationsInput | boolean;
};

export type OrganizationOnboardingSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    createdById?: boolean;
    createdAt?: boolean;
    orgOwnerEmail?: boolean;
    error?: boolean;
    updatedAt?: boolean;
    organizationId?: boolean;
    billingPeriod?: boolean;
    pricePerSeat?: boolean;
    seats?: boolean;
    isPlatform?: boolean;
    name?: boolean;
    slug?: boolean;
    logo?: boolean;
    bio?: boolean;
    brandColor?: boolean;
    bannerUrl?: boolean;
    isDomainConfigured?: boolean;
    stripeCustomerId?: boolean;
    stripeSubscriptionId?: boolean;
    stripeSubscriptionItemId?: boolean;
    invitedMembers?: boolean;
    teams?: boolean;
    isComplete?: boolean;
    createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    organization?: boolean | Prisma.OrganizationOnboarding$organizationArgs<ExtArgs>;
  },
  ExtArgs["result"]["organizationOnboarding"]
>;

export type OrganizationOnboardingSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    createdById?: boolean;
    createdAt?: boolean;
    orgOwnerEmail?: boolean;
    error?: boolean;
    updatedAt?: boolean;
    organizationId?: boolean;
    billingPeriod?: boolean;
    pricePerSeat?: boolean;
    seats?: boolean;
    isPlatform?: boolean;
    name?: boolean;
    slug?: boolean;
    logo?: boolean;
    bio?: boolean;
    brandColor?: boolean;
    bannerUrl?: boolean;
    isDomainConfigured?: boolean;
    stripeCustomerId?: boolean;
    stripeSubscriptionId?: boolean;
    stripeSubscriptionItemId?: boolean;
    invitedMembers?: boolean;
    teams?: boolean;
    isComplete?: boolean;
    createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    organization?: boolean | Prisma.OrganizationOnboarding$organizationArgs<ExtArgs>;
  },
  ExtArgs["result"]["organizationOnboarding"]
>;

export type OrganizationOnboardingSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    createdById?: boolean;
    createdAt?: boolean;
    orgOwnerEmail?: boolean;
    error?: boolean;
    updatedAt?: boolean;
    organizationId?: boolean;
    billingPeriod?: boolean;
    pricePerSeat?: boolean;
    seats?: boolean;
    isPlatform?: boolean;
    name?: boolean;
    slug?: boolean;
    logo?: boolean;
    bio?: boolean;
    brandColor?: boolean;
    bannerUrl?: boolean;
    isDomainConfigured?: boolean;
    stripeCustomerId?: boolean;
    stripeSubscriptionId?: boolean;
    stripeSubscriptionItemId?: boolean;
    invitedMembers?: boolean;
    teams?: boolean;
    isComplete?: boolean;
    createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    organization?: boolean | Prisma.OrganizationOnboarding$organizationArgs<ExtArgs>;
  },
  ExtArgs["result"]["organizationOnboarding"]
>;

export type OrganizationOnboardingSelectScalar = {
  id?: boolean;
  createdById?: boolean;
  createdAt?: boolean;
  orgOwnerEmail?: boolean;
  error?: boolean;
  updatedAt?: boolean;
  organizationId?: boolean;
  billingPeriod?: boolean;
  pricePerSeat?: boolean;
  seats?: boolean;
  isPlatform?: boolean;
  name?: boolean;
  slug?: boolean;
  logo?: boolean;
  bio?: boolean;
  brandColor?: boolean;
  bannerUrl?: boolean;
  isDomainConfigured?: boolean;
  stripeCustomerId?: boolean;
  stripeSubscriptionId?: boolean;
  stripeSubscriptionItemId?: boolean;
  invitedMembers?: boolean;
  teams?: boolean;
  isComplete?: boolean;
};

export type OrganizationOnboardingOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "createdById"
  | "createdAt"
  | "orgOwnerEmail"
  | "error"
  | "updatedAt"
  | "organizationId"
  | "billingPeriod"
  | "pricePerSeat"
  | "seats"
  | "isPlatform"
  | "name"
  | "slug"
  | "logo"
  | "bio"
  | "brandColor"
  | "bannerUrl"
  | "isDomainConfigured"
  | "stripeCustomerId"
  | "stripeSubscriptionId"
  | "stripeSubscriptionItemId"
  | "invitedMembers"
  | "teams"
  | "isComplete",
  ExtArgs["result"]["organizationOnboarding"]
>;
export type OrganizationOnboardingInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  organization?: boolean | Prisma.OrganizationOnboarding$organizationArgs<ExtArgs>;
};
export type OrganizationOnboardingIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  organization?: boolean | Prisma.OrganizationOnboarding$organizationArgs<ExtArgs>;
};
export type OrganizationOnboardingIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  organization?: boolean | Prisma.OrganizationOnboarding$organizationArgs<ExtArgs>;
};

export type $OrganizationOnboardingPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "OrganizationOnboarding";
  objects: {
    createdBy: Prisma.$UserPayload<ExtArgs>;
    organization: Prisma.$TeamPayload<ExtArgs> | null;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      createdById: number;
      createdAt: Date;
      orgOwnerEmail: string;
      error: string | null;
      updatedAt: Date;
      organizationId: number | null;
      billingPeriod: $Enums.BillingPeriod;
      pricePerSeat: number;
      seats: number;
      isPlatform: boolean;
      name: string;
      slug: string;
      logo: string | null;
      bio: string | null;
      brandColor: string | null;
      bannerUrl: string | null;
      isDomainConfigured: boolean;
      stripeCustomerId: string | null;
      stripeSubscriptionId: string | null;
      stripeSubscriptionItemId: string | null;
      /**
       * @zod.import(["import { orgOnboardingInvitedMembersSchema } from '../../zod-utils'"]).custom.use(orgOnboardingInvitedMembersSchema)
       */
      invitedMembers: runtime.JsonValue;
      /**
       * @zod.import(["import { orgOnboardingTeamsSchema } from '../../zod-utils'"]).custom.use(orgOnboardingTeamsSchema)
       */
      teams: runtime.JsonValue;
      isComplete: boolean;
    },
    ExtArgs["result"]["organizationOnboarding"]
  >;
  composites: {};
};

export type OrganizationOnboardingGetPayload<
  S extends boolean | null | undefined | OrganizationOnboardingDefaultArgs
> = runtime.Types.Result.GetResult<Prisma.$OrganizationOnboardingPayload, S>;

export type OrganizationOnboardingCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<OrganizationOnboardingFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: OrganizationOnboardingCountAggregateInputType | true;
};

export interface OrganizationOnboardingDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["OrganizationOnboarding"];
    meta: { name: "OrganizationOnboarding" };
  };
  /**
   * Find zero or one OrganizationOnboarding that matches the filter.
   * @param {OrganizationOnboardingFindUniqueArgs} args - Arguments to find a OrganizationOnboarding
   * @example
   * // Get one OrganizationOnboarding
   * const organizationOnboarding = await prisma.organizationOnboarding.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends OrganizationOnboardingFindUniqueArgs>(
    args: Prisma.SelectSubset<T, OrganizationOnboardingFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationOnboardingClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationOnboardingPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one OrganizationOnboarding that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {OrganizationOnboardingFindUniqueOrThrowArgs} args - Arguments to find a OrganizationOnboarding
   * @example
   * // Get one OrganizationOnboarding
   * const organizationOnboarding = await prisma.organizationOnboarding.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends OrganizationOnboardingFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, OrganizationOnboardingFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationOnboardingClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationOnboardingPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first OrganizationOnboarding that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationOnboardingFindFirstArgs} args - Arguments to find a OrganizationOnboarding
   * @example
   * // Get one OrganizationOnboarding
   * const organizationOnboarding = await prisma.organizationOnboarding.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends OrganizationOnboardingFindFirstArgs>(
    args?: Prisma.SelectSubset<T, OrganizationOnboardingFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationOnboardingClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationOnboardingPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first OrganizationOnboarding that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationOnboardingFindFirstOrThrowArgs} args - Arguments to find a OrganizationOnboarding
   * @example
   * // Get one OrganizationOnboarding
   * const organizationOnboarding = await prisma.organizationOnboarding.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends OrganizationOnboardingFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, OrganizationOnboardingFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationOnboardingClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationOnboardingPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more OrganizationOnboardings that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationOnboardingFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all OrganizationOnboardings
   * const organizationOnboardings = await prisma.organizationOnboarding.findMany()
   *
   * // Get first 10 OrganizationOnboardings
   * const organizationOnboardings = await prisma.organizationOnboarding.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const organizationOnboardingWithIdOnly = await prisma.organizationOnboarding.findMany({ select: { id: true } })
   *
   */
  findMany<T extends OrganizationOnboardingFindManyArgs>(
    args?: Prisma.SelectSubset<T, OrganizationOnboardingFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationOnboardingPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a OrganizationOnboarding.
   * @param {OrganizationOnboardingCreateArgs} args - Arguments to create a OrganizationOnboarding.
   * @example
   * // Create one OrganizationOnboarding
   * const OrganizationOnboarding = await prisma.organizationOnboarding.create({
   *   data: {
   *     // ... data to create a OrganizationOnboarding
   *   }
   * })
   *
   */
  create<T extends OrganizationOnboardingCreateArgs>(
    args: Prisma.SelectSubset<T, OrganizationOnboardingCreateArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationOnboardingClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationOnboardingPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many OrganizationOnboardings.
   * @param {OrganizationOnboardingCreateManyArgs} args - Arguments to create many OrganizationOnboardings.
   * @example
   * // Create many OrganizationOnboardings
   * const organizationOnboarding = await prisma.organizationOnboarding.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends OrganizationOnboardingCreateManyArgs>(
    args?: Prisma.SelectSubset<T, OrganizationOnboardingCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many OrganizationOnboardings and returns the data saved in the database.
   * @param {OrganizationOnboardingCreateManyAndReturnArgs} args - Arguments to create many OrganizationOnboardings.
   * @example
   * // Create many OrganizationOnboardings
   * const organizationOnboarding = await prisma.organizationOnboarding.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many OrganizationOnboardings and only return the `id`
   * const organizationOnboardingWithIdOnly = await prisma.organizationOnboarding.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends OrganizationOnboardingCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, OrganizationOnboardingCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationOnboardingPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a OrganizationOnboarding.
   * @param {OrganizationOnboardingDeleteArgs} args - Arguments to delete one OrganizationOnboarding.
   * @example
   * // Delete one OrganizationOnboarding
   * const OrganizationOnboarding = await prisma.organizationOnboarding.delete({
   *   where: {
   *     // ... filter to delete one OrganizationOnboarding
   *   }
   * })
   *
   */
  delete<T extends OrganizationOnboardingDeleteArgs>(
    args: Prisma.SelectSubset<T, OrganizationOnboardingDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationOnboardingClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationOnboardingPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one OrganizationOnboarding.
   * @param {OrganizationOnboardingUpdateArgs} args - Arguments to update one OrganizationOnboarding.
   * @example
   * // Update one OrganizationOnboarding
   * const organizationOnboarding = await prisma.organizationOnboarding.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends OrganizationOnboardingUpdateArgs>(
    args: Prisma.SelectSubset<T, OrganizationOnboardingUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationOnboardingClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationOnboardingPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more OrganizationOnboardings.
   * @param {OrganizationOnboardingDeleteManyArgs} args - Arguments to filter OrganizationOnboardings to delete.
   * @example
   * // Delete a few OrganizationOnboardings
   * const { count } = await prisma.organizationOnboarding.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends OrganizationOnboardingDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, OrganizationOnboardingDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more OrganizationOnboardings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationOnboardingUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many OrganizationOnboardings
   * const organizationOnboarding = await prisma.organizationOnboarding.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends OrganizationOnboardingUpdateManyArgs>(
    args: Prisma.SelectSubset<T, OrganizationOnboardingUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more OrganizationOnboardings and returns the data updated in the database.
   * @param {OrganizationOnboardingUpdateManyAndReturnArgs} args - Arguments to update many OrganizationOnboardings.
   * @example
   * // Update many OrganizationOnboardings
   * const organizationOnboarding = await prisma.organizationOnboarding.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more OrganizationOnboardings and only return the `id`
   * const organizationOnboardingWithIdOnly = await prisma.organizationOnboarding.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends OrganizationOnboardingUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, OrganizationOnboardingUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationOnboardingPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one OrganizationOnboarding.
   * @param {OrganizationOnboardingUpsertArgs} args - Arguments to update or create a OrganizationOnboarding.
   * @example
   * // Update or create a OrganizationOnboarding
   * const organizationOnboarding = await prisma.organizationOnboarding.upsert({
   *   create: {
   *     // ... data to create a OrganizationOnboarding
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the OrganizationOnboarding we want to update
   *   }
   * })
   */
  upsert<T extends OrganizationOnboardingUpsertArgs>(
    args: Prisma.SelectSubset<T, OrganizationOnboardingUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__OrganizationOnboardingClient<
    runtime.Types.Result.GetResult<
      Prisma.$OrganizationOnboardingPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of OrganizationOnboardings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationOnboardingCountArgs} args - Arguments to filter OrganizationOnboardings to count.
   * @example
   * // Count the number of OrganizationOnboardings
   * const count = await prisma.organizationOnboarding.count({
   *   where: {
   *     // ... the filter for the OrganizationOnboardings we want to count
   *   }
   * })
   **/
  count<T extends OrganizationOnboardingCountArgs>(
    args?: Prisma.Subset<T, OrganizationOnboardingCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], OrganizationOnboardingCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a OrganizationOnboarding.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationOnboardingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends OrganizationOnboardingAggregateArgs>(
    args: Prisma.Subset<T, OrganizationOnboardingAggregateArgs>
  ): Prisma.PrismaPromise<GetOrganizationOnboardingAggregateType<T>>;

  /**
   * Group by OrganizationOnboarding.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OrganizationOnboardingGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends OrganizationOnboardingGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: OrganizationOnboardingGroupByArgs["orderBy"] }
      : { orderBy?: OrganizationOnboardingGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, OrganizationOnboardingGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetOrganizationOnboardingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the OrganizationOnboarding model
   */
  readonly fields: OrganizationOnboardingFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for OrganizationOnboarding.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__OrganizationOnboardingClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  createdBy<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    | runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  organization<T extends Prisma.OrganizationOnboarding$organizationArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.OrganizationOnboarding$organizationArgs<ExtArgs>>
  ): Prisma.Prisma__TeamClient<
    runtime.Types.Result.GetResult<
      Prisma.$TeamPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the OrganizationOnboarding model
 */
export interface OrganizationOnboardingFieldRefs {
  readonly id: Prisma.FieldRef<"OrganizationOnboarding", "String">;
  readonly createdById: Prisma.FieldRef<"OrganizationOnboarding", "Int">;
  readonly createdAt: Prisma.FieldRef<"OrganizationOnboarding", "DateTime">;
  readonly orgOwnerEmail: Prisma.FieldRef<"OrganizationOnboarding", "String">;
  readonly error: Prisma.FieldRef<"OrganizationOnboarding", "String">;
  readonly updatedAt: Prisma.FieldRef<"OrganizationOnboarding", "DateTime">;
  readonly organizationId: Prisma.FieldRef<"OrganizationOnboarding", "Int">;
  readonly billingPeriod: Prisma.FieldRef<"OrganizationOnboarding", "BillingPeriod">;
  readonly pricePerSeat: Prisma.FieldRef<"OrganizationOnboarding", "Float">;
  readonly seats: Prisma.FieldRef<"OrganizationOnboarding", "Int">;
  readonly isPlatform: Prisma.FieldRef<"OrganizationOnboarding", "Boolean">;
  readonly name: Prisma.FieldRef<"OrganizationOnboarding", "String">;
  readonly slug: Prisma.FieldRef<"OrganizationOnboarding", "String">;
  readonly logo: Prisma.FieldRef<"OrganizationOnboarding", "String">;
  readonly bio: Prisma.FieldRef<"OrganizationOnboarding", "String">;
  readonly brandColor: Prisma.FieldRef<"OrganizationOnboarding", "String">;
  readonly bannerUrl: Prisma.FieldRef<"OrganizationOnboarding", "String">;
  readonly isDomainConfigured: Prisma.FieldRef<"OrganizationOnboarding", "Boolean">;
  readonly stripeCustomerId: Prisma.FieldRef<"OrganizationOnboarding", "String">;
  readonly stripeSubscriptionId: Prisma.FieldRef<"OrganizationOnboarding", "String">;
  readonly stripeSubscriptionItemId: Prisma.FieldRef<"OrganizationOnboarding", "String">;
  readonly invitedMembers: Prisma.FieldRef<"OrganizationOnboarding", "Json">;
  readonly teams: Prisma.FieldRef<"OrganizationOnboarding", "Json">;
  readonly isComplete: Prisma.FieldRef<"OrganizationOnboarding", "Boolean">;
}

// Custom InputTypes
/**
 * OrganizationOnboarding findUnique
 */
export type OrganizationOnboardingFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationOnboarding
   */
  select?: Prisma.OrganizationOnboardingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationOnboarding
   */
  omit?: Prisma.OrganizationOnboardingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationOnboardingInclude<ExtArgs> | null;
  /**
   * Filter, which OrganizationOnboarding to fetch.
   */
  where: Prisma.OrganizationOnboardingWhereUniqueInput;
};

/**
 * OrganizationOnboarding findUniqueOrThrow
 */
export type OrganizationOnboardingFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationOnboarding
   */
  select?: Prisma.OrganizationOnboardingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationOnboarding
   */
  omit?: Prisma.OrganizationOnboardingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationOnboardingInclude<ExtArgs> | null;
  /**
   * Filter, which OrganizationOnboarding to fetch.
   */
  where: Prisma.OrganizationOnboardingWhereUniqueInput;
};

/**
 * OrganizationOnboarding findFirst
 */
export type OrganizationOnboardingFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationOnboarding
   */
  select?: Prisma.OrganizationOnboardingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationOnboarding
   */
  omit?: Prisma.OrganizationOnboardingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationOnboardingInclude<ExtArgs> | null;
  /**
   * Filter, which OrganizationOnboarding to fetch.
   */
  where?: Prisma.OrganizationOnboardingWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of OrganizationOnboardings to fetch.
   */
  orderBy?:
    | Prisma.OrganizationOnboardingOrderByWithRelationInput
    | Prisma.OrganizationOnboardingOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for OrganizationOnboardings.
   */
  cursor?: Prisma.OrganizationOnboardingWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` OrganizationOnboardings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` OrganizationOnboardings.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of OrganizationOnboardings.
   */
  distinct?: Prisma.OrganizationOnboardingScalarFieldEnum | Prisma.OrganizationOnboardingScalarFieldEnum[];
};

/**
 * OrganizationOnboarding findFirstOrThrow
 */
export type OrganizationOnboardingFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationOnboarding
   */
  select?: Prisma.OrganizationOnboardingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationOnboarding
   */
  omit?: Prisma.OrganizationOnboardingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationOnboardingInclude<ExtArgs> | null;
  /**
   * Filter, which OrganizationOnboarding to fetch.
   */
  where?: Prisma.OrganizationOnboardingWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of OrganizationOnboardings to fetch.
   */
  orderBy?:
    | Prisma.OrganizationOnboardingOrderByWithRelationInput
    | Prisma.OrganizationOnboardingOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for OrganizationOnboardings.
   */
  cursor?: Prisma.OrganizationOnboardingWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` OrganizationOnboardings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` OrganizationOnboardings.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of OrganizationOnboardings.
   */
  distinct?: Prisma.OrganizationOnboardingScalarFieldEnum | Prisma.OrganizationOnboardingScalarFieldEnum[];
};

/**
 * OrganizationOnboarding findMany
 */
export type OrganizationOnboardingFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationOnboarding
   */
  select?: Prisma.OrganizationOnboardingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationOnboarding
   */
  omit?: Prisma.OrganizationOnboardingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationOnboardingInclude<ExtArgs> | null;
  /**
   * Filter, which OrganizationOnboardings to fetch.
   */
  where?: Prisma.OrganizationOnboardingWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of OrganizationOnboardings to fetch.
   */
  orderBy?:
    | Prisma.OrganizationOnboardingOrderByWithRelationInput
    | Prisma.OrganizationOnboardingOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing OrganizationOnboardings.
   */
  cursor?: Prisma.OrganizationOnboardingWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` OrganizationOnboardings from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` OrganizationOnboardings.
   */
  skip?: number;
  distinct?: Prisma.OrganizationOnboardingScalarFieldEnum | Prisma.OrganizationOnboardingScalarFieldEnum[];
};

/**
 * OrganizationOnboarding create
 */
export type OrganizationOnboardingCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationOnboarding
   */
  select?: Prisma.OrganizationOnboardingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationOnboarding
   */
  omit?: Prisma.OrganizationOnboardingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationOnboardingInclude<ExtArgs> | null;
  /**
   * The data needed to create a OrganizationOnboarding.
   */
  data: Prisma.XOR<
    Prisma.OrganizationOnboardingCreateInput,
    Prisma.OrganizationOnboardingUncheckedCreateInput
  >;
};

/**
 * OrganizationOnboarding createMany
 */
export type OrganizationOnboardingCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many OrganizationOnboardings.
   */
  data: Prisma.OrganizationOnboardingCreateManyInput | Prisma.OrganizationOnboardingCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * OrganizationOnboarding createManyAndReturn
 */
export type OrganizationOnboardingCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationOnboarding
   */
  select?: Prisma.OrganizationOnboardingSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationOnboarding
   */
  omit?: Prisma.OrganizationOnboardingOmit<ExtArgs> | null;
  /**
   * The data used to create many OrganizationOnboardings.
   */
  data: Prisma.OrganizationOnboardingCreateManyInput | Prisma.OrganizationOnboardingCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationOnboardingIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * OrganizationOnboarding update
 */
export type OrganizationOnboardingUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationOnboarding
   */
  select?: Prisma.OrganizationOnboardingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationOnboarding
   */
  omit?: Prisma.OrganizationOnboardingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationOnboardingInclude<ExtArgs> | null;
  /**
   * The data needed to update a OrganizationOnboarding.
   */
  data: Prisma.XOR<
    Prisma.OrganizationOnboardingUpdateInput,
    Prisma.OrganizationOnboardingUncheckedUpdateInput
  >;
  /**
   * Choose, which OrganizationOnboarding to update.
   */
  where: Prisma.OrganizationOnboardingWhereUniqueInput;
};

/**
 * OrganizationOnboarding updateMany
 */
export type OrganizationOnboardingUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update OrganizationOnboardings.
   */
  data: Prisma.XOR<
    Prisma.OrganizationOnboardingUpdateManyMutationInput,
    Prisma.OrganizationOnboardingUncheckedUpdateManyInput
  >;
  /**
   * Filter which OrganizationOnboardings to update
   */
  where?: Prisma.OrganizationOnboardingWhereInput;
  /**
   * Limit how many OrganizationOnboardings to update.
   */
  limit?: number;
};

/**
 * OrganizationOnboarding updateManyAndReturn
 */
export type OrganizationOnboardingUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationOnboarding
   */
  select?: Prisma.OrganizationOnboardingSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationOnboarding
   */
  omit?: Prisma.OrganizationOnboardingOmit<ExtArgs> | null;
  /**
   * The data used to update OrganizationOnboardings.
   */
  data: Prisma.XOR<
    Prisma.OrganizationOnboardingUpdateManyMutationInput,
    Prisma.OrganizationOnboardingUncheckedUpdateManyInput
  >;
  /**
   * Filter which OrganizationOnboardings to update
   */
  where?: Prisma.OrganizationOnboardingWhereInput;
  /**
   * Limit how many OrganizationOnboardings to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationOnboardingIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * OrganizationOnboarding upsert
 */
export type OrganizationOnboardingUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationOnboarding
   */
  select?: Prisma.OrganizationOnboardingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationOnboarding
   */
  omit?: Prisma.OrganizationOnboardingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationOnboardingInclude<ExtArgs> | null;
  /**
   * The filter to search for the OrganizationOnboarding to update in case it exists.
   */
  where: Prisma.OrganizationOnboardingWhereUniqueInput;
  /**
   * In case the OrganizationOnboarding found by the `where` argument doesn't exist, create a new OrganizationOnboarding with this data.
   */
  create: Prisma.XOR<
    Prisma.OrganizationOnboardingCreateInput,
    Prisma.OrganizationOnboardingUncheckedCreateInput
  >;
  /**
   * In case the OrganizationOnboarding was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.OrganizationOnboardingUpdateInput,
    Prisma.OrganizationOnboardingUncheckedUpdateInput
  >;
};

/**
 * OrganizationOnboarding delete
 */
export type OrganizationOnboardingDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationOnboarding
   */
  select?: Prisma.OrganizationOnboardingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationOnboarding
   */
  omit?: Prisma.OrganizationOnboardingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationOnboardingInclude<ExtArgs> | null;
  /**
   * Filter which OrganizationOnboarding to delete.
   */
  where: Prisma.OrganizationOnboardingWhereUniqueInput;
};

/**
 * OrganizationOnboarding deleteMany
 */
export type OrganizationOnboardingDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which OrganizationOnboardings to delete
   */
  where?: Prisma.OrganizationOnboardingWhereInput;
  /**
   * Limit how many OrganizationOnboardings to delete.
   */
  limit?: number;
};

/**
 * OrganizationOnboarding.organization
 */
export type OrganizationOnboarding$organizationArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Team
   */
  select?: Prisma.TeamSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Team
   */
  omit?: Prisma.TeamOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TeamInclude<ExtArgs> | null;
  where?: Prisma.TeamWhereInput;
};

/**
 * OrganizationOnboarding without action
 */
export type OrganizationOnboardingDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OrganizationOnboarding
   */
  select?: Prisma.OrganizationOnboardingSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OrganizationOnboarding
   */
  omit?: Prisma.OrganizationOnboardingOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationOnboardingInclude<ExtArgs> | null;
};
