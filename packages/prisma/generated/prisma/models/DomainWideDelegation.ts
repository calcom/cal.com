/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `DomainWideDelegation` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model DomainWideDelegation
 *
 */
export type DomainWideDelegationModel =
  runtime.Types.Result.DefaultSelection<Prisma.$DomainWideDelegationPayload>;

export type AggregateDomainWideDelegation = {
  _count: DomainWideDelegationCountAggregateOutputType | null;
  _avg: DomainWideDelegationAvgAggregateOutputType | null;
  _sum: DomainWideDelegationSumAggregateOutputType | null;
  _min: DomainWideDelegationMinAggregateOutputType | null;
  _max: DomainWideDelegationMaxAggregateOutputType | null;
};

export type DomainWideDelegationAvgAggregateOutputType = {
  workspacePlatformId: number | null;
  organizationId: number | null;
};

export type DomainWideDelegationSumAggregateOutputType = {
  workspacePlatformId: number | null;
  organizationId: number | null;
};

export type DomainWideDelegationMinAggregateOutputType = {
  id: string | null;
  workspacePlatformId: number | null;
  enabled: boolean | null;
  organizationId: number | null;
  domain: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type DomainWideDelegationMaxAggregateOutputType = {
  id: string | null;
  workspacePlatformId: number | null;
  enabled: boolean | null;
  organizationId: number | null;
  domain: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type DomainWideDelegationCountAggregateOutputType = {
  id: number;
  workspacePlatformId: number;
  serviceAccountKey: number;
  enabled: number;
  organizationId: number;
  domain: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type DomainWideDelegationAvgAggregateInputType = {
  workspacePlatformId?: true;
  organizationId?: true;
};

export type DomainWideDelegationSumAggregateInputType = {
  workspacePlatformId?: true;
  organizationId?: true;
};

export type DomainWideDelegationMinAggregateInputType = {
  id?: true;
  workspacePlatformId?: true;
  enabled?: true;
  organizationId?: true;
  domain?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type DomainWideDelegationMaxAggregateInputType = {
  id?: true;
  workspacePlatformId?: true;
  enabled?: true;
  organizationId?: true;
  domain?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type DomainWideDelegationCountAggregateInputType = {
  id?: true;
  workspacePlatformId?: true;
  serviceAccountKey?: true;
  enabled?: true;
  organizationId?: true;
  domain?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type DomainWideDelegationAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which DomainWideDelegation to aggregate.
   */
  where?: Prisma.DomainWideDelegationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of DomainWideDelegations to fetch.
   */
  orderBy?:
    | Prisma.DomainWideDelegationOrderByWithRelationInput
    | Prisma.DomainWideDelegationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.DomainWideDelegationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` DomainWideDelegations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` DomainWideDelegations.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned DomainWideDelegations
   **/
  _count?: true | DomainWideDelegationCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: DomainWideDelegationAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: DomainWideDelegationSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: DomainWideDelegationMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: DomainWideDelegationMaxAggregateInputType;
};

export type GetDomainWideDelegationAggregateType<T extends DomainWideDelegationAggregateArgs> = {
  [P in keyof T & keyof AggregateDomainWideDelegation]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateDomainWideDelegation[P]>
    : Prisma.GetScalarType<T[P], AggregateDomainWideDelegation[P]>;
};

export type DomainWideDelegationGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.DomainWideDelegationWhereInput;
  orderBy?:
    | Prisma.DomainWideDelegationOrderByWithAggregationInput
    | Prisma.DomainWideDelegationOrderByWithAggregationInput[];
  by: Prisma.DomainWideDelegationScalarFieldEnum[] | Prisma.DomainWideDelegationScalarFieldEnum;
  having?: Prisma.DomainWideDelegationScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: DomainWideDelegationCountAggregateInputType | true;
  _avg?: DomainWideDelegationAvgAggregateInputType;
  _sum?: DomainWideDelegationSumAggregateInputType;
  _min?: DomainWideDelegationMinAggregateInputType;
  _max?: DomainWideDelegationMaxAggregateInputType;
};

export type DomainWideDelegationGroupByOutputType = {
  id: string;
  workspacePlatformId: number;
  serviceAccountKey: runtime.JsonValue;
  enabled: boolean;
  organizationId: number;
  domain: string;
  createdAt: Date;
  updatedAt: Date;
  _count: DomainWideDelegationCountAggregateOutputType | null;
  _avg: DomainWideDelegationAvgAggregateOutputType | null;
  _sum: DomainWideDelegationSumAggregateOutputType | null;
  _min: DomainWideDelegationMinAggregateOutputType | null;
  _max: DomainWideDelegationMaxAggregateOutputType | null;
};

type GetDomainWideDelegationGroupByPayload<T extends DomainWideDelegationGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<DomainWideDelegationGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof DomainWideDelegationGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], DomainWideDelegationGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], DomainWideDelegationGroupByOutputType[P]>;
    }
  >
>;

export type DomainWideDelegationWhereInput = {
  AND?: Prisma.DomainWideDelegationWhereInput | Prisma.DomainWideDelegationWhereInput[];
  OR?: Prisma.DomainWideDelegationWhereInput[];
  NOT?: Prisma.DomainWideDelegationWhereInput | Prisma.DomainWideDelegationWhereInput[];
  id?: Prisma.StringFilter<"DomainWideDelegation"> | string;
  workspacePlatformId?: Prisma.IntFilter<"DomainWideDelegation"> | number;
  serviceAccountKey?: Prisma.JsonFilter<"DomainWideDelegation">;
  enabled?: Prisma.BoolFilter<"DomainWideDelegation"> | boolean;
  organizationId?: Prisma.IntFilter<"DomainWideDelegation"> | number;
  domain?: Prisma.StringFilter<"DomainWideDelegation"> | string;
  createdAt?: Prisma.DateTimeFilter<"DomainWideDelegation"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"DomainWideDelegation"> | Date | string;
  workspacePlatform?: Prisma.XOR<
    Prisma.WorkspacePlatformScalarRelationFilter,
    Prisma.WorkspacePlatformWhereInput
  >;
  organization?: Prisma.XOR<Prisma.TeamScalarRelationFilter, Prisma.TeamWhereInput>;
  selectedCalendars?: Prisma.SelectedCalendarListRelationFilter;
  destinationCalendar?: Prisma.DestinationCalendarListRelationFilter;
  bookingReferences?: Prisma.BookingReferenceListRelationFilter;
};

export type DomainWideDelegationOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  workspacePlatformId?: Prisma.SortOrder;
  serviceAccountKey?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  organizationId?: Prisma.SortOrder;
  domain?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  workspacePlatform?: Prisma.WorkspacePlatformOrderByWithRelationInput;
  organization?: Prisma.TeamOrderByWithRelationInput;
  selectedCalendars?: Prisma.SelectedCalendarOrderByRelationAggregateInput;
  destinationCalendar?: Prisma.DestinationCalendarOrderByRelationAggregateInput;
  bookingReferences?: Prisma.BookingReferenceOrderByRelationAggregateInput;
};

export type DomainWideDelegationWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    organizationId_domain?: Prisma.DomainWideDelegationOrganizationIdDomainCompoundUniqueInput;
    AND?: Prisma.DomainWideDelegationWhereInput | Prisma.DomainWideDelegationWhereInput[];
    OR?: Prisma.DomainWideDelegationWhereInput[];
    NOT?: Prisma.DomainWideDelegationWhereInput | Prisma.DomainWideDelegationWhereInput[];
    workspacePlatformId?: Prisma.IntFilter<"DomainWideDelegation"> | number;
    serviceAccountKey?: Prisma.JsonFilter<"DomainWideDelegation">;
    enabled?: Prisma.BoolFilter<"DomainWideDelegation"> | boolean;
    organizationId?: Prisma.IntFilter<"DomainWideDelegation"> | number;
    domain?: Prisma.StringFilter<"DomainWideDelegation"> | string;
    createdAt?: Prisma.DateTimeFilter<"DomainWideDelegation"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"DomainWideDelegation"> | Date | string;
    workspacePlatform?: Prisma.XOR<
      Prisma.WorkspacePlatformScalarRelationFilter,
      Prisma.WorkspacePlatformWhereInput
    >;
    organization?: Prisma.XOR<Prisma.TeamScalarRelationFilter, Prisma.TeamWhereInput>;
    selectedCalendars?: Prisma.SelectedCalendarListRelationFilter;
    destinationCalendar?: Prisma.DestinationCalendarListRelationFilter;
    bookingReferences?: Prisma.BookingReferenceListRelationFilter;
  },
  "id" | "organizationId_domain"
>;

export type DomainWideDelegationOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  workspacePlatformId?: Prisma.SortOrder;
  serviceAccountKey?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  organizationId?: Prisma.SortOrder;
  domain?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.DomainWideDelegationCountOrderByAggregateInput;
  _avg?: Prisma.DomainWideDelegationAvgOrderByAggregateInput;
  _max?: Prisma.DomainWideDelegationMaxOrderByAggregateInput;
  _min?: Prisma.DomainWideDelegationMinOrderByAggregateInput;
  _sum?: Prisma.DomainWideDelegationSumOrderByAggregateInput;
};

export type DomainWideDelegationScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.DomainWideDelegationScalarWhereWithAggregatesInput
    | Prisma.DomainWideDelegationScalarWhereWithAggregatesInput[];
  OR?: Prisma.DomainWideDelegationScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.DomainWideDelegationScalarWhereWithAggregatesInput
    | Prisma.DomainWideDelegationScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"DomainWideDelegation"> | string;
  workspacePlatformId?: Prisma.IntWithAggregatesFilter<"DomainWideDelegation"> | number;
  serviceAccountKey?: Prisma.JsonWithAggregatesFilter<"DomainWideDelegation">;
  enabled?: Prisma.BoolWithAggregatesFilter<"DomainWideDelegation"> | boolean;
  organizationId?: Prisma.IntWithAggregatesFilter<"DomainWideDelegation"> | number;
  domain?: Prisma.StringWithAggregatesFilter<"DomainWideDelegation"> | string;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"DomainWideDelegation"> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"DomainWideDelegation"> | Date | string;
};

export type DomainWideDelegationCreateInput = {
  id?: string;
  serviceAccountKey: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: boolean;
  domain: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  workspacePlatform: Prisma.WorkspacePlatformCreateNestedOneWithoutDomainWideDelegationsInput;
  organization: Prisma.TeamCreateNestedOneWithoutDomainWideDelegationsInput;
  selectedCalendars?: Prisma.SelectedCalendarCreateNestedManyWithoutDomainWideDelegationCredentialInput;
  destinationCalendar?: Prisma.DestinationCalendarCreateNestedManyWithoutDomainWideDelegationInput;
  bookingReferences?: Prisma.BookingReferenceCreateNestedManyWithoutDomainWideDelegationInput;
};

export type DomainWideDelegationUncheckedCreateInput = {
  id?: string;
  workspacePlatformId: number;
  serviceAccountKey: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: boolean;
  organizationId: number;
  domain: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedCreateNestedManyWithoutDomainWideDelegationCredentialInput;
  destinationCalendar?: Prisma.DestinationCalendarUncheckedCreateNestedManyWithoutDomainWideDelegationInput;
  bookingReferences?: Prisma.BookingReferenceUncheckedCreateNestedManyWithoutDomainWideDelegationInput;
};

export type DomainWideDelegationUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  serviceAccountKey?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  domain?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  workspacePlatform?: Prisma.WorkspacePlatformUpdateOneRequiredWithoutDomainWideDelegationsNestedInput;
  organization?: Prisma.TeamUpdateOneRequiredWithoutDomainWideDelegationsNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUpdateManyWithoutDomainWideDelegationCredentialNestedInput;
  destinationCalendar?: Prisma.DestinationCalendarUpdateManyWithoutDomainWideDelegationNestedInput;
  bookingReferences?: Prisma.BookingReferenceUpdateManyWithoutDomainWideDelegationNestedInput;
};

export type DomainWideDelegationUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  workspacePlatformId?: Prisma.IntFieldUpdateOperationsInput | number;
  serviceAccountKey?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  organizationId?: Prisma.IntFieldUpdateOperationsInput | number;
  domain?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedUpdateManyWithoutDomainWideDelegationCredentialNestedInput;
  destinationCalendar?: Prisma.DestinationCalendarUncheckedUpdateManyWithoutDomainWideDelegationNestedInput;
  bookingReferences?: Prisma.BookingReferenceUncheckedUpdateManyWithoutDomainWideDelegationNestedInput;
};

export type DomainWideDelegationCreateManyInput = {
  id?: string;
  workspacePlatformId: number;
  serviceAccountKey: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: boolean;
  organizationId: number;
  domain: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type DomainWideDelegationUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  serviceAccountKey?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  domain?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type DomainWideDelegationUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  workspacePlatformId?: Prisma.IntFieldUpdateOperationsInput | number;
  serviceAccountKey?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  organizationId?: Prisma.IntFieldUpdateOperationsInput | number;
  domain?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type DomainWideDelegationNullableScalarRelationFilter = {
  is?: Prisma.DomainWideDelegationWhereInput | null;
  isNot?: Prisma.DomainWideDelegationWhereInput | null;
};

export type DomainWideDelegationListRelationFilter = {
  every?: Prisma.DomainWideDelegationWhereInput;
  some?: Prisma.DomainWideDelegationWhereInput;
  none?: Prisma.DomainWideDelegationWhereInput;
};

export type DomainWideDelegationOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type DomainWideDelegationOrganizationIdDomainCompoundUniqueInput = {
  organizationId: number;
  domain: string;
};

export type DomainWideDelegationCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  workspacePlatformId?: Prisma.SortOrder;
  serviceAccountKey?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  organizationId?: Prisma.SortOrder;
  domain?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type DomainWideDelegationAvgOrderByAggregateInput = {
  workspacePlatformId?: Prisma.SortOrder;
  organizationId?: Prisma.SortOrder;
};

export type DomainWideDelegationMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  workspacePlatformId?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  organizationId?: Prisma.SortOrder;
  domain?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type DomainWideDelegationMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  workspacePlatformId?: Prisma.SortOrder;
  enabled?: Prisma.SortOrder;
  organizationId?: Prisma.SortOrder;
  domain?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type DomainWideDelegationSumOrderByAggregateInput = {
  workspacePlatformId?: Prisma.SortOrder;
  organizationId?: Prisma.SortOrder;
};

export type DomainWideDelegationCreateNestedOneWithoutDestinationCalendarInput = {
  create?: Prisma.XOR<
    Prisma.DomainWideDelegationCreateWithoutDestinationCalendarInput,
    Prisma.DomainWideDelegationUncheckedCreateWithoutDestinationCalendarInput
  >;
  connectOrCreate?: Prisma.DomainWideDelegationCreateOrConnectWithoutDestinationCalendarInput;
  connect?: Prisma.DomainWideDelegationWhereUniqueInput;
};

export type DomainWideDelegationUpdateOneWithoutDestinationCalendarNestedInput = {
  create?: Prisma.XOR<
    Prisma.DomainWideDelegationCreateWithoutDestinationCalendarInput,
    Prisma.DomainWideDelegationUncheckedCreateWithoutDestinationCalendarInput
  >;
  connectOrCreate?: Prisma.DomainWideDelegationCreateOrConnectWithoutDestinationCalendarInput;
  upsert?: Prisma.DomainWideDelegationUpsertWithoutDestinationCalendarInput;
  disconnect?: Prisma.DomainWideDelegationWhereInput | boolean;
  delete?: Prisma.DomainWideDelegationWhereInput | boolean;
  connect?: Prisma.DomainWideDelegationWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.DomainWideDelegationUpdateToOneWithWhereWithoutDestinationCalendarInput,
      Prisma.DomainWideDelegationUpdateWithoutDestinationCalendarInput
    >,
    Prisma.DomainWideDelegationUncheckedUpdateWithoutDestinationCalendarInput
  >;
};

export type DomainWideDelegationCreateNestedManyWithoutOrganizationInput = {
  create?:
    | Prisma.XOR<
        Prisma.DomainWideDelegationCreateWithoutOrganizationInput,
        Prisma.DomainWideDelegationUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.DomainWideDelegationCreateWithoutOrganizationInput[]
    | Prisma.DomainWideDelegationUncheckedCreateWithoutOrganizationInput[];
  connectOrCreate?:
    | Prisma.DomainWideDelegationCreateOrConnectWithoutOrganizationInput
    | Prisma.DomainWideDelegationCreateOrConnectWithoutOrganizationInput[];
  createMany?: Prisma.DomainWideDelegationCreateManyOrganizationInputEnvelope;
  connect?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
};

export type DomainWideDelegationUncheckedCreateNestedManyWithoutOrganizationInput = {
  create?:
    | Prisma.XOR<
        Prisma.DomainWideDelegationCreateWithoutOrganizationInput,
        Prisma.DomainWideDelegationUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.DomainWideDelegationCreateWithoutOrganizationInput[]
    | Prisma.DomainWideDelegationUncheckedCreateWithoutOrganizationInput[];
  connectOrCreate?:
    | Prisma.DomainWideDelegationCreateOrConnectWithoutOrganizationInput
    | Prisma.DomainWideDelegationCreateOrConnectWithoutOrganizationInput[];
  createMany?: Prisma.DomainWideDelegationCreateManyOrganizationInputEnvelope;
  connect?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
};

export type DomainWideDelegationUpdateManyWithoutOrganizationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.DomainWideDelegationCreateWithoutOrganizationInput,
        Prisma.DomainWideDelegationUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.DomainWideDelegationCreateWithoutOrganizationInput[]
    | Prisma.DomainWideDelegationUncheckedCreateWithoutOrganizationInput[];
  connectOrCreate?:
    | Prisma.DomainWideDelegationCreateOrConnectWithoutOrganizationInput
    | Prisma.DomainWideDelegationCreateOrConnectWithoutOrganizationInput[];
  upsert?:
    | Prisma.DomainWideDelegationUpsertWithWhereUniqueWithoutOrganizationInput
    | Prisma.DomainWideDelegationUpsertWithWhereUniqueWithoutOrganizationInput[];
  createMany?: Prisma.DomainWideDelegationCreateManyOrganizationInputEnvelope;
  set?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
  disconnect?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
  delete?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
  connect?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
  update?:
    | Prisma.DomainWideDelegationUpdateWithWhereUniqueWithoutOrganizationInput
    | Prisma.DomainWideDelegationUpdateWithWhereUniqueWithoutOrganizationInput[];
  updateMany?:
    | Prisma.DomainWideDelegationUpdateManyWithWhereWithoutOrganizationInput
    | Prisma.DomainWideDelegationUpdateManyWithWhereWithoutOrganizationInput[];
  deleteMany?: Prisma.DomainWideDelegationScalarWhereInput | Prisma.DomainWideDelegationScalarWhereInput[];
};

export type DomainWideDelegationUncheckedUpdateManyWithoutOrganizationNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.DomainWideDelegationCreateWithoutOrganizationInput,
        Prisma.DomainWideDelegationUncheckedCreateWithoutOrganizationInput
      >
    | Prisma.DomainWideDelegationCreateWithoutOrganizationInput[]
    | Prisma.DomainWideDelegationUncheckedCreateWithoutOrganizationInput[];
  connectOrCreate?:
    | Prisma.DomainWideDelegationCreateOrConnectWithoutOrganizationInput
    | Prisma.DomainWideDelegationCreateOrConnectWithoutOrganizationInput[];
  upsert?:
    | Prisma.DomainWideDelegationUpsertWithWhereUniqueWithoutOrganizationInput
    | Prisma.DomainWideDelegationUpsertWithWhereUniqueWithoutOrganizationInput[];
  createMany?: Prisma.DomainWideDelegationCreateManyOrganizationInputEnvelope;
  set?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
  disconnect?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
  delete?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
  connect?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
  update?:
    | Prisma.DomainWideDelegationUpdateWithWhereUniqueWithoutOrganizationInput
    | Prisma.DomainWideDelegationUpdateWithWhereUniqueWithoutOrganizationInput[];
  updateMany?:
    | Prisma.DomainWideDelegationUpdateManyWithWhereWithoutOrganizationInput
    | Prisma.DomainWideDelegationUpdateManyWithWhereWithoutOrganizationInput[];
  deleteMany?: Prisma.DomainWideDelegationScalarWhereInput | Prisma.DomainWideDelegationScalarWhereInput[];
};

export type DomainWideDelegationCreateNestedOneWithoutBookingReferencesInput = {
  create?: Prisma.XOR<
    Prisma.DomainWideDelegationCreateWithoutBookingReferencesInput,
    Prisma.DomainWideDelegationUncheckedCreateWithoutBookingReferencesInput
  >;
  connectOrCreate?: Prisma.DomainWideDelegationCreateOrConnectWithoutBookingReferencesInput;
  connect?: Prisma.DomainWideDelegationWhereUniqueInput;
};

export type DomainWideDelegationUpdateOneWithoutBookingReferencesNestedInput = {
  create?: Prisma.XOR<
    Prisma.DomainWideDelegationCreateWithoutBookingReferencesInput,
    Prisma.DomainWideDelegationUncheckedCreateWithoutBookingReferencesInput
  >;
  connectOrCreate?: Prisma.DomainWideDelegationCreateOrConnectWithoutBookingReferencesInput;
  upsert?: Prisma.DomainWideDelegationUpsertWithoutBookingReferencesInput;
  disconnect?: Prisma.DomainWideDelegationWhereInput | boolean;
  delete?: Prisma.DomainWideDelegationWhereInput | boolean;
  connect?: Prisma.DomainWideDelegationWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.DomainWideDelegationUpdateToOneWithWhereWithoutBookingReferencesInput,
      Prisma.DomainWideDelegationUpdateWithoutBookingReferencesInput
    >,
    Prisma.DomainWideDelegationUncheckedUpdateWithoutBookingReferencesInput
  >;
};

export type DomainWideDelegationCreateNestedOneWithoutSelectedCalendarsInput = {
  create?: Prisma.XOR<
    Prisma.DomainWideDelegationCreateWithoutSelectedCalendarsInput,
    Prisma.DomainWideDelegationUncheckedCreateWithoutSelectedCalendarsInput
  >;
  connectOrCreate?: Prisma.DomainWideDelegationCreateOrConnectWithoutSelectedCalendarsInput;
  connect?: Prisma.DomainWideDelegationWhereUniqueInput;
};

export type DomainWideDelegationUpdateOneWithoutSelectedCalendarsNestedInput = {
  create?: Prisma.XOR<
    Prisma.DomainWideDelegationCreateWithoutSelectedCalendarsInput,
    Prisma.DomainWideDelegationUncheckedCreateWithoutSelectedCalendarsInput
  >;
  connectOrCreate?: Prisma.DomainWideDelegationCreateOrConnectWithoutSelectedCalendarsInput;
  upsert?: Prisma.DomainWideDelegationUpsertWithoutSelectedCalendarsInput;
  disconnect?: Prisma.DomainWideDelegationWhereInput | boolean;
  delete?: Prisma.DomainWideDelegationWhereInput | boolean;
  connect?: Prisma.DomainWideDelegationWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.DomainWideDelegationUpdateToOneWithWhereWithoutSelectedCalendarsInput,
      Prisma.DomainWideDelegationUpdateWithoutSelectedCalendarsInput
    >,
    Prisma.DomainWideDelegationUncheckedUpdateWithoutSelectedCalendarsInput
  >;
};

export type DomainWideDelegationCreateNestedManyWithoutWorkspacePlatformInput = {
  create?:
    | Prisma.XOR<
        Prisma.DomainWideDelegationCreateWithoutWorkspacePlatformInput,
        Prisma.DomainWideDelegationUncheckedCreateWithoutWorkspacePlatformInput
      >
    | Prisma.DomainWideDelegationCreateWithoutWorkspacePlatformInput[]
    | Prisma.DomainWideDelegationUncheckedCreateWithoutWorkspacePlatformInput[];
  connectOrCreate?:
    | Prisma.DomainWideDelegationCreateOrConnectWithoutWorkspacePlatformInput
    | Prisma.DomainWideDelegationCreateOrConnectWithoutWorkspacePlatformInput[];
  createMany?: Prisma.DomainWideDelegationCreateManyWorkspacePlatformInputEnvelope;
  connect?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
};

export type DomainWideDelegationUncheckedCreateNestedManyWithoutWorkspacePlatformInput = {
  create?:
    | Prisma.XOR<
        Prisma.DomainWideDelegationCreateWithoutWorkspacePlatformInput,
        Prisma.DomainWideDelegationUncheckedCreateWithoutWorkspacePlatformInput
      >
    | Prisma.DomainWideDelegationCreateWithoutWorkspacePlatformInput[]
    | Prisma.DomainWideDelegationUncheckedCreateWithoutWorkspacePlatformInput[];
  connectOrCreate?:
    | Prisma.DomainWideDelegationCreateOrConnectWithoutWorkspacePlatformInput
    | Prisma.DomainWideDelegationCreateOrConnectWithoutWorkspacePlatformInput[];
  createMany?: Prisma.DomainWideDelegationCreateManyWorkspacePlatformInputEnvelope;
  connect?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
};

export type DomainWideDelegationUpdateManyWithoutWorkspacePlatformNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.DomainWideDelegationCreateWithoutWorkspacePlatformInput,
        Prisma.DomainWideDelegationUncheckedCreateWithoutWorkspacePlatformInput
      >
    | Prisma.DomainWideDelegationCreateWithoutWorkspacePlatformInput[]
    | Prisma.DomainWideDelegationUncheckedCreateWithoutWorkspacePlatformInput[];
  connectOrCreate?:
    | Prisma.DomainWideDelegationCreateOrConnectWithoutWorkspacePlatformInput
    | Prisma.DomainWideDelegationCreateOrConnectWithoutWorkspacePlatformInput[];
  upsert?:
    | Prisma.DomainWideDelegationUpsertWithWhereUniqueWithoutWorkspacePlatformInput
    | Prisma.DomainWideDelegationUpsertWithWhereUniqueWithoutWorkspacePlatformInput[];
  createMany?: Prisma.DomainWideDelegationCreateManyWorkspacePlatformInputEnvelope;
  set?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
  disconnect?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
  delete?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
  connect?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
  update?:
    | Prisma.DomainWideDelegationUpdateWithWhereUniqueWithoutWorkspacePlatformInput
    | Prisma.DomainWideDelegationUpdateWithWhereUniqueWithoutWorkspacePlatformInput[];
  updateMany?:
    | Prisma.DomainWideDelegationUpdateManyWithWhereWithoutWorkspacePlatformInput
    | Prisma.DomainWideDelegationUpdateManyWithWhereWithoutWorkspacePlatformInput[];
  deleteMany?: Prisma.DomainWideDelegationScalarWhereInput | Prisma.DomainWideDelegationScalarWhereInput[];
};

export type DomainWideDelegationUncheckedUpdateManyWithoutWorkspacePlatformNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.DomainWideDelegationCreateWithoutWorkspacePlatformInput,
        Prisma.DomainWideDelegationUncheckedCreateWithoutWorkspacePlatformInput
      >
    | Prisma.DomainWideDelegationCreateWithoutWorkspacePlatformInput[]
    | Prisma.DomainWideDelegationUncheckedCreateWithoutWorkspacePlatformInput[];
  connectOrCreate?:
    | Prisma.DomainWideDelegationCreateOrConnectWithoutWorkspacePlatformInput
    | Prisma.DomainWideDelegationCreateOrConnectWithoutWorkspacePlatformInput[];
  upsert?:
    | Prisma.DomainWideDelegationUpsertWithWhereUniqueWithoutWorkspacePlatformInput
    | Prisma.DomainWideDelegationUpsertWithWhereUniqueWithoutWorkspacePlatformInput[];
  createMany?: Prisma.DomainWideDelegationCreateManyWorkspacePlatformInputEnvelope;
  set?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
  disconnect?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
  delete?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
  connect?: Prisma.DomainWideDelegationWhereUniqueInput | Prisma.DomainWideDelegationWhereUniqueInput[];
  update?:
    | Prisma.DomainWideDelegationUpdateWithWhereUniqueWithoutWorkspacePlatformInput
    | Prisma.DomainWideDelegationUpdateWithWhereUniqueWithoutWorkspacePlatformInput[];
  updateMany?:
    | Prisma.DomainWideDelegationUpdateManyWithWhereWithoutWorkspacePlatformInput
    | Prisma.DomainWideDelegationUpdateManyWithWhereWithoutWorkspacePlatformInput[];
  deleteMany?: Prisma.DomainWideDelegationScalarWhereInput | Prisma.DomainWideDelegationScalarWhereInput[];
};

export type DomainWideDelegationCreateWithoutDestinationCalendarInput = {
  id?: string;
  serviceAccountKey: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: boolean;
  domain: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  workspacePlatform: Prisma.WorkspacePlatformCreateNestedOneWithoutDomainWideDelegationsInput;
  organization: Prisma.TeamCreateNestedOneWithoutDomainWideDelegationsInput;
  selectedCalendars?: Prisma.SelectedCalendarCreateNestedManyWithoutDomainWideDelegationCredentialInput;
  bookingReferences?: Prisma.BookingReferenceCreateNestedManyWithoutDomainWideDelegationInput;
};

export type DomainWideDelegationUncheckedCreateWithoutDestinationCalendarInput = {
  id?: string;
  workspacePlatformId: number;
  serviceAccountKey: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: boolean;
  organizationId: number;
  domain: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedCreateNestedManyWithoutDomainWideDelegationCredentialInput;
  bookingReferences?: Prisma.BookingReferenceUncheckedCreateNestedManyWithoutDomainWideDelegationInput;
};

export type DomainWideDelegationCreateOrConnectWithoutDestinationCalendarInput = {
  where: Prisma.DomainWideDelegationWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.DomainWideDelegationCreateWithoutDestinationCalendarInput,
    Prisma.DomainWideDelegationUncheckedCreateWithoutDestinationCalendarInput
  >;
};

export type DomainWideDelegationUpsertWithoutDestinationCalendarInput = {
  update: Prisma.XOR<
    Prisma.DomainWideDelegationUpdateWithoutDestinationCalendarInput,
    Prisma.DomainWideDelegationUncheckedUpdateWithoutDestinationCalendarInput
  >;
  create: Prisma.XOR<
    Prisma.DomainWideDelegationCreateWithoutDestinationCalendarInput,
    Prisma.DomainWideDelegationUncheckedCreateWithoutDestinationCalendarInput
  >;
  where?: Prisma.DomainWideDelegationWhereInput;
};

export type DomainWideDelegationUpdateToOneWithWhereWithoutDestinationCalendarInput = {
  where?: Prisma.DomainWideDelegationWhereInput;
  data: Prisma.XOR<
    Prisma.DomainWideDelegationUpdateWithoutDestinationCalendarInput,
    Prisma.DomainWideDelegationUncheckedUpdateWithoutDestinationCalendarInput
  >;
};

export type DomainWideDelegationUpdateWithoutDestinationCalendarInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  serviceAccountKey?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  domain?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  workspacePlatform?: Prisma.WorkspacePlatformUpdateOneRequiredWithoutDomainWideDelegationsNestedInput;
  organization?: Prisma.TeamUpdateOneRequiredWithoutDomainWideDelegationsNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUpdateManyWithoutDomainWideDelegationCredentialNestedInput;
  bookingReferences?: Prisma.BookingReferenceUpdateManyWithoutDomainWideDelegationNestedInput;
};

export type DomainWideDelegationUncheckedUpdateWithoutDestinationCalendarInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  workspacePlatformId?: Prisma.IntFieldUpdateOperationsInput | number;
  serviceAccountKey?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  organizationId?: Prisma.IntFieldUpdateOperationsInput | number;
  domain?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedUpdateManyWithoutDomainWideDelegationCredentialNestedInput;
  bookingReferences?: Prisma.BookingReferenceUncheckedUpdateManyWithoutDomainWideDelegationNestedInput;
};

export type DomainWideDelegationCreateWithoutOrganizationInput = {
  id?: string;
  serviceAccountKey: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: boolean;
  domain: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  workspacePlatform: Prisma.WorkspacePlatformCreateNestedOneWithoutDomainWideDelegationsInput;
  selectedCalendars?: Prisma.SelectedCalendarCreateNestedManyWithoutDomainWideDelegationCredentialInput;
  destinationCalendar?: Prisma.DestinationCalendarCreateNestedManyWithoutDomainWideDelegationInput;
  bookingReferences?: Prisma.BookingReferenceCreateNestedManyWithoutDomainWideDelegationInput;
};

export type DomainWideDelegationUncheckedCreateWithoutOrganizationInput = {
  id?: string;
  workspacePlatformId: number;
  serviceAccountKey: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: boolean;
  domain: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedCreateNestedManyWithoutDomainWideDelegationCredentialInput;
  destinationCalendar?: Prisma.DestinationCalendarUncheckedCreateNestedManyWithoutDomainWideDelegationInput;
  bookingReferences?: Prisma.BookingReferenceUncheckedCreateNestedManyWithoutDomainWideDelegationInput;
};

export type DomainWideDelegationCreateOrConnectWithoutOrganizationInput = {
  where: Prisma.DomainWideDelegationWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.DomainWideDelegationCreateWithoutOrganizationInput,
    Prisma.DomainWideDelegationUncheckedCreateWithoutOrganizationInput
  >;
};

export type DomainWideDelegationCreateManyOrganizationInputEnvelope = {
  data:
    | Prisma.DomainWideDelegationCreateManyOrganizationInput
    | Prisma.DomainWideDelegationCreateManyOrganizationInput[];
  skipDuplicates?: boolean;
};

export type DomainWideDelegationUpsertWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.DomainWideDelegationWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.DomainWideDelegationUpdateWithoutOrganizationInput,
    Prisma.DomainWideDelegationUncheckedUpdateWithoutOrganizationInput
  >;
  create: Prisma.XOR<
    Prisma.DomainWideDelegationCreateWithoutOrganizationInput,
    Prisma.DomainWideDelegationUncheckedCreateWithoutOrganizationInput
  >;
};

export type DomainWideDelegationUpdateWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.DomainWideDelegationWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.DomainWideDelegationUpdateWithoutOrganizationInput,
    Prisma.DomainWideDelegationUncheckedUpdateWithoutOrganizationInput
  >;
};

export type DomainWideDelegationUpdateManyWithWhereWithoutOrganizationInput = {
  where: Prisma.DomainWideDelegationScalarWhereInput;
  data: Prisma.XOR<
    Prisma.DomainWideDelegationUpdateManyMutationInput,
    Prisma.DomainWideDelegationUncheckedUpdateManyWithoutOrganizationInput
  >;
};

export type DomainWideDelegationScalarWhereInput = {
  AND?: Prisma.DomainWideDelegationScalarWhereInput | Prisma.DomainWideDelegationScalarWhereInput[];
  OR?: Prisma.DomainWideDelegationScalarWhereInput[];
  NOT?: Prisma.DomainWideDelegationScalarWhereInput | Prisma.DomainWideDelegationScalarWhereInput[];
  id?: Prisma.StringFilter<"DomainWideDelegation"> | string;
  workspacePlatformId?: Prisma.IntFilter<"DomainWideDelegation"> | number;
  serviceAccountKey?: Prisma.JsonFilter<"DomainWideDelegation">;
  enabled?: Prisma.BoolFilter<"DomainWideDelegation"> | boolean;
  organizationId?: Prisma.IntFilter<"DomainWideDelegation"> | number;
  domain?: Prisma.StringFilter<"DomainWideDelegation"> | string;
  createdAt?: Prisma.DateTimeFilter<"DomainWideDelegation"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"DomainWideDelegation"> | Date | string;
};

export type DomainWideDelegationCreateWithoutBookingReferencesInput = {
  id?: string;
  serviceAccountKey: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: boolean;
  domain: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  workspacePlatform: Prisma.WorkspacePlatformCreateNestedOneWithoutDomainWideDelegationsInput;
  organization: Prisma.TeamCreateNestedOneWithoutDomainWideDelegationsInput;
  selectedCalendars?: Prisma.SelectedCalendarCreateNestedManyWithoutDomainWideDelegationCredentialInput;
  destinationCalendar?: Prisma.DestinationCalendarCreateNestedManyWithoutDomainWideDelegationInput;
};

export type DomainWideDelegationUncheckedCreateWithoutBookingReferencesInput = {
  id?: string;
  workspacePlatformId: number;
  serviceAccountKey: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: boolean;
  organizationId: number;
  domain: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedCreateNestedManyWithoutDomainWideDelegationCredentialInput;
  destinationCalendar?: Prisma.DestinationCalendarUncheckedCreateNestedManyWithoutDomainWideDelegationInput;
};

export type DomainWideDelegationCreateOrConnectWithoutBookingReferencesInput = {
  where: Prisma.DomainWideDelegationWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.DomainWideDelegationCreateWithoutBookingReferencesInput,
    Prisma.DomainWideDelegationUncheckedCreateWithoutBookingReferencesInput
  >;
};

export type DomainWideDelegationUpsertWithoutBookingReferencesInput = {
  update: Prisma.XOR<
    Prisma.DomainWideDelegationUpdateWithoutBookingReferencesInput,
    Prisma.DomainWideDelegationUncheckedUpdateWithoutBookingReferencesInput
  >;
  create: Prisma.XOR<
    Prisma.DomainWideDelegationCreateWithoutBookingReferencesInput,
    Prisma.DomainWideDelegationUncheckedCreateWithoutBookingReferencesInput
  >;
  where?: Prisma.DomainWideDelegationWhereInput;
};

export type DomainWideDelegationUpdateToOneWithWhereWithoutBookingReferencesInput = {
  where?: Prisma.DomainWideDelegationWhereInput;
  data: Prisma.XOR<
    Prisma.DomainWideDelegationUpdateWithoutBookingReferencesInput,
    Prisma.DomainWideDelegationUncheckedUpdateWithoutBookingReferencesInput
  >;
};

export type DomainWideDelegationUpdateWithoutBookingReferencesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  serviceAccountKey?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  domain?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  workspacePlatform?: Prisma.WorkspacePlatformUpdateOneRequiredWithoutDomainWideDelegationsNestedInput;
  organization?: Prisma.TeamUpdateOneRequiredWithoutDomainWideDelegationsNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUpdateManyWithoutDomainWideDelegationCredentialNestedInput;
  destinationCalendar?: Prisma.DestinationCalendarUpdateManyWithoutDomainWideDelegationNestedInput;
};

export type DomainWideDelegationUncheckedUpdateWithoutBookingReferencesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  workspacePlatformId?: Prisma.IntFieldUpdateOperationsInput | number;
  serviceAccountKey?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  organizationId?: Prisma.IntFieldUpdateOperationsInput | number;
  domain?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedUpdateManyWithoutDomainWideDelegationCredentialNestedInput;
  destinationCalendar?: Prisma.DestinationCalendarUncheckedUpdateManyWithoutDomainWideDelegationNestedInput;
};

export type DomainWideDelegationCreateWithoutSelectedCalendarsInput = {
  id?: string;
  serviceAccountKey: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: boolean;
  domain: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  workspacePlatform: Prisma.WorkspacePlatformCreateNestedOneWithoutDomainWideDelegationsInput;
  organization: Prisma.TeamCreateNestedOneWithoutDomainWideDelegationsInput;
  destinationCalendar?: Prisma.DestinationCalendarCreateNestedManyWithoutDomainWideDelegationInput;
  bookingReferences?: Prisma.BookingReferenceCreateNestedManyWithoutDomainWideDelegationInput;
};

export type DomainWideDelegationUncheckedCreateWithoutSelectedCalendarsInput = {
  id?: string;
  workspacePlatformId: number;
  serviceAccountKey: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: boolean;
  organizationId: number;
  domain: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  destinationCalendar?: Prisma.DestinationCalendarUncheckedCreateNestedManyWithoutDomainWideDelegationInput;
  bookingReferences?: Prisma.BookingReferenceUncheckedCreateNestedManyWithoutDomainWideDelegationInput;
};

export type DomainWideDelegationCreateOrConnectWithoutSelectedCalendarsInput = {
  where: Prisma.DomainWideDelegationWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.DomainWideDelegationCreateWithoutSelectedCalendarsInput,
    Prisma.DomainWideDelegationUncheckedCreateWithoutSelectedCalendarsInput
  >;
};

export type DomainWideDelegationUpsertWithoutSelectedCalendarsInput = {
  update: Prisma.XOR<
    Prisma.DomainWideDelegationUpdateWithoutSelectedCalendarsInput,
    Prisma.DomainWideDelegationUncheckedUpdateWithoutSelectedCalendarsInput
  >;
  create: Prisma.XOR<
    Prisma.DomainWideDelegationCreateWithoutSelectedCalendarsInput,
    Prisma.DomainWideDelegationUncheckedCreateWithoutSelectedCalendarsInput
  >;
  where?: Prisma.DomainWideDelegationWhereInput;
};

export type DomainWideDelegationUpdateToOneWithWhereWithoutSelectedCalendarsInput = {
  where?: Prisma.DomainWideDelegationWhereInput;
  data: Prisma.XOR<
    Prisma.DomainWideDelegationUpdateWithoutSelectedCalendarsInput,
    Prisma.DomainWideDelegationUncheckedUpdateWithoutSelectedCalendarsInput
  >;
};

export type DomainWideDelegationUpdateWithoutSelectedCalendarsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  serviceAccountKey?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  domain?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  workspacePlatform?: Prisma.WorkspacePlatformUpdateOneRequiredWithoutDomainWideDelegationsNestedInput;
  organization?: Prisma.TeamUpdateOneRequiredWithoutDomainWideDelegationsNestedInput;
  destinationCalendar?: Prisma.DestinationCalendarUpdateManyWithoutDomainWideDelegationNestedInput;
  bookingReferences?: Prisma.BookingReferenceUpdateManyWithoutDomainWideDelegationNestedInput;
};

export type DomainWideDelegationUncheckedUpdateWithoutSelectedCalendarsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  workspacePlatformId?: Prisma.IntFieldUpdateOperationsInput | number;
  serviceAccountKey?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  organizationId?: Prisma.IntFieldUpdateOperationsInput | number;
  domain?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  destinationCalendar?: Prisma.DestinationCalendarUncheckedUpdateManyWithoutDomainWideDelegationNestedInput;
  bookingReferences?: Prisma.BookingReferenceUncheckedUpdateManyWithoutDomainWideDelegationNestedInput;
};

export type DomainWideDelegationCreateWithoutWorkspacePlatformInput = {
  id?: string;
  serviceAccountKey: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: boolean;
  domain: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  organization: Prisma.TeamCreateNestedOneWithoutDomainWideDelegationsInput;
  selectedCalendars?: Prisma.SelectedCalendarCreateNestedManyWithoutDomainWideDelegationCredentialInput;
  destinationCalendar?: Prisma.DestinationCalendarCreateNestedManyWithoutDomainWideDelegationInput;
  bookingReferences?: Prisma.BookingReferenceCreateNestedManyWithoutDomainWideDelegationInput;
};

export type DomainWideDelegationUncheckedCreateWithoutWorkspacePlatformInput = {
  id?: string;
  serviceAccountKey: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: boolean;
  organizationId: number;
  domain: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedCreateNestedManyWithoutDomainWideDelegationCredentialInput;
  destinationCalendar?: Prisma.DestinationCalendarUncheckedCreateNestedManyWithoutDomainWideDelegationInput;
  bookingReferences?: Prisma.BookingReferenceUncheckedCreateNestedManyWithoutDomainWideDelegationInput;
};

export type DomainWideDelegationCreateOrConnectWithoutWorkspacePlatformInput = {
  where: Prisma.DomainWideDelegationWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.DomainWideDelegationCreateWithoutWorkspacePlatformInput,
    Prisma.DomainWideDelegationUncheckedCreateWithoutWorkspacePlatformInput
  >;
};

export type DomainWideDelegationCreateManyWorkspacePlatformInputEnvelope = {
  data:
    | Prisma.DomainWideDelegationCreateManyWorkspacePlatformInput
    | Prisma.DomainWideDelegationCreateManyWorkspacePlatformInput[];
  skipDuplicates?: boolean;
};

export type DomainWideDelegationUpsertWithWhereUniqueWithoutWorkspacePlatformInput = {
  where: Prisma.DomainWideDelegationWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.DomainWideDelegationUpdateWithoutWorkspacePlatformInput,
    Prisma.DomainWideDelegationUncheckedUpdateWithoutWorkspacePlatformInput
  >;
  create: Prisma.XOR<
    Prisma.DomainWideDelegationCreateWithoutWorkspacePlatformInput,
    Prisma.DomainWideDelegationUncheckedCreateWithoutWorkspacePlatformInput
  >;
};

export type DomainWideDelegationUpdateWithWhereUniqueWithoutWorkspacePlatformInput = {
  where: Prisma.DomainWideDelegationWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.DomainWideDelegationUpdateWithoutWorkspacePlatformInput,
    Prisma.DomainWideDelegationUncheckedUpdateWithoutWorkspacePlatformInput
  >;
};

export type DomainWideDelegationUpdateManyWithWhereWithoutWorkspacePlatformInput = {
  where: Prisma.DomainWideDelegationScalarWhereInput;
  data: Prisma.XOR<
    Prisma.DomainWideDelegationUpdateManyMutationInput,
    Prisma.DomainWideDelegationUncheckedUpdateManyWithoutWorkspacePlatformInput
  >;
};

export type DomainWideDelegationCreateManyOrganizationInput = {
  id?: string;
  workspacePlatformId: number;
  serviceAccountKey: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: boolean;
  domain: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type DomainWideDelegationUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  serviceAccountKey?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  domain?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  workspacePlatform?: Prisma.WorkspacePlatformUpdateOneRequiredWithoutDomainWideDelegationsNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUpdateManyWithoutDomainWideDelegationCredentialNestedInput;
  destinationCalendar?: Prisma.DestinationCalendarUpdateManyWithoutDomainWideDelegationNestedInput;
  bookingReferences?: Prisma.BookingReferenceUpdateManyWithoutDomainWideDelegationNestedInput;
};

export type DomainWideDelegationUncheckedUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  workspacePlatformId?: Prisma.IntFieldUpdateOperationsInput | number;
  serviceAccountKey?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  domain?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedUpdateManyWithoutDomainWideDelegationCredentialNestedInput;
  destinationCalendar?: Prisma.DestinationCalendarUncheckedUpdateManyWithoutDomainWideDelegationNestedInput;
  bookingReferences?: Prisma.BookingReferenceUncheckedUpdateManyWithoutDomainWideDelegationNestedInput;
};

export type DomainWideDelegationUncheckedUpdateManyWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  workspacePlatformId?: Prisma.IntFieldUpdateOperationsInput | number;
  serviceAccountKey?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  domain?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type DomainWideDelegationCreateManyWorkspacePlatformInput = {
  id?: string;
  serviceAccountKey: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: boolean;
  organizationId: number;
  domain: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type DomainWideDelegationUpdateWithoutWorkspacePlatformInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  serviceAccountKey?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  domain?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  organization?: Prisma.TeamUpdateOneRequiredWithoutDomainWideDelegationsNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUpdateManyWithoutDomainWideDelegationCredentialNestedInput;
  destinationCalendar?: Prisma.DestinationCalendarUpdateManyWithoutDomainWideDelegationNestedInput;
  bookingReferences?: Prisma.BookingReferenceUpdateManyWithoutDomainWideDelegationNestedInput;
};

export type DomainWideDelegationUncheckedUpdateWithoutWorkspacePlatformInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  serviceAccountKey?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  organizationId?: Prisma.IntFieldUpdateOperationsInput | number;
  domain?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedUpdateManyWithoutDomainWideDelegationCredentialNestedInput;
  destinationCalendar?: Prisma.DestinationCalendarUncheckedUpdateManyWithoutDomainWideDelegationNestedInput;
  bookingReferences?: Prisma.BookingReferenceUncheckedUpdateManyWithoutDomainWideDelegationNestedInput;
};

export type DomainWideDelegationUncheckedUpdateManyWithoutWorkspacePlatformInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  serviceAccountKey?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  enabled?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  organizationId?: Prisma.IntFieldUpdateOperationsInput | number;
  domain?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

/**
 * Count Type DomainWideDelegationCountOutputType
 */

export type DomainWideDelegationCountOutputType = {
  selectedCalendars: number;
  destinationCalendar: number;
  bookingReferences: number;
};

export type DomainWideDelegationCountOutputTypeSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  selectedCalendars?: boolean | DomainWideDelegationCountOutputTypeCountSelectedCalendarsArgs;
  destinationCalendar?: boolean | DomainWideDelegationCountOutputTypeCountDestinationCalendarArgs;
  bookingReferences?: boolean | DomainWideDelegationCountOutputTypeCountBookingReferencesArgs;
};

/**
 * DomainWideDelegationCountOutputType without action
 */
export type DomainWideDelegationCountOutputTypeDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DomainWideDelegationCountOutputType
   */
  select?: Prisma.DomainWideDelegationCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * DomainWideDelegationCountOutputType without action
 */
export type DomainWideDelegationCountOutputTypeCountSelectedCalendarsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.SelectedCalendarWhereInput;
};

/**
 * DomainWideDelegationCountOutputType without action
 */
export type DomainWideDelegationCountOutputTypeCountDestinationCalendarArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.DestinationCalendarWhereInput;
};

/**
 * DomainWideDelegationCountOutputType without action
 */
export type DomainWideDelegationCountOutputTypeCountBookingReferencesArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.BookingReferenceWhereInput;
};

export type DomainWideDelegationSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    workspacePlatformId?: boolean;
    serviceAccountKey?: boolean;
    enabled?: boolean;
    organizationId?: boolean;
    domain?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    workspacePlatform?: boolean | Prisma.WorkspacePlatformDefaultArgs<ExtArgs>;
    organization?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
    selectedCalendars?: boolean | Prisma.DomainWideDelegation$selectedCalendarsArgs<ExtArgs>;
    destinationCalendar?: boolean | Prisma.DomainWideDelegation$destinationCalendarArgs<ExtArgs>;
    bookingReferences?: boolean | Prisma.DomainWideDelegation$bookingReferencesArgs<ExtArgs>;
    _count?: boolean | Prisma.DomainWideDelegationCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["domainWideDelegation"]
>;

export type DomainWideDelegationSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    workspacePlatformId?: boolean;
    serviceAccountKey?: boolean;
    enabled?: boolean;
    organizationId?: boolean;
    domain?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    workspacePlatform?: boolean | Prisma.WorkspacePlatformDefaultArgs<ExtArgs>;
    organization?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["domainWideDelegation"]
>;

export type DomainWideDelegationSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    workspacePlatformId?: boolean;
    serviceAccountKey?: boolean;
    enabled?: boolean;
    organizationId?: boolean;
    domain?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    workspacePlatform?: boolean | Prisma.WorkspacePlatformDefaultArgs<ExtArgs>;
    organization?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["domainWideDelegation"]
>;

export type DomainWideDelegationSelectScalar = {
  id?: boolean;
  workspacePlatformId?: boolean;
  serviceAccountKey?: boolean;
  enabled?: boolean;
  organizationId?: boolean;
  domain?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type DomainWideDelegationOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "workspacePlatformId"
  | "serviceAccountKey"
  | "enabled"
  | "organizationId"
  | "domain"
  | "createdAt"
  | "updatedAt",
  ExtArgs["result"]["domainWideDelegation"]
>;
export type DomainWideDelegationInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  workspacePlatform?: boolean | Prisma.WorkspacePlatformDefaultArgs<ExtArgs>;
  organization?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
  selectedCalendars?: boolean | Prisma.DomainWideDelegation$selectedCalendarsArgs<ExtArgs>;
  destinationCalendar?: boolean | Prisma.DomainWideDelegation$destinationCalendarArgs<ExtArgs>;
  bookingReferences?: boolean | Prisma.DomainWideDelegation$bookingReferencesArgs<ExtArgs>;
  _count?: boolean | Prisma.DomainWideDelegationCountOutputTypeDefaultArgs<ExtArgs>;
};
export type DomainWideDelegationIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  workspacePlatform?: boolean | Prisma.WorkspacePlatformDefaultArgs<ExtArgs>;
  organization?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
};
export type DomainWideDelegationIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  workspacePlatform?: boolean | Prisma.WorkspacePlatformDefaultArgs<ExtArgs>;
  organization?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
};

export type $DomainWideDelegationPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "DomainWideDelegation";
  objects: {
    workspacePlatform: Prisma.$WorkspacePlatformPayload<ExtArgs>;
    organization: Prisma.$TeamPayload<ExtArgs>;
    selectedCalendars: Prisma.$SelectedCalendarPayload<ExtArgs>[];
    destinationCalendar: Prisma.$DestinationCalendarPayload<ExtArgs>[];
    bookingReferences: Prisma.$BookingReferencePayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      workspacePlatformId: number;
      /**
       * @zod.import(["import { serviceAccountKeySchema } from '../../zod-utils'"]).custom.use(serviceAccountKeySchema)
       */
      serviceAccountKey: runtime.JsonValue;
      enabled: boolean;
      organizationId: number;
      domain: string;
      createdAt: Date;
      updatedAt: Date;
    },
    ExtArgs["result"]["domainWideDelegation"]
  >;
  composites: {};
};

export type DomainWideDelegationGetPayload<
  S extends boolean | null | undefined | DomainWideDelegationDefaultArgs
> = runtime.Types.Result.GetResult<Prisma.$DomainWideDelegationPayload, S>;

export type DomainWideDelegationCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<DomainWideDelegationFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: DomainWideDelegationCountAggregateInputType | true;
};

export interface DomainWideDelegationDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["DomainWideDelegation"];
    meta: { name: "DomainWideDelegation" };
  };
  /**
   * Find zero or one DomainWideDelegation that matches the filter.
   * @param {DomainWideDelegationFindUniqueArgs} args - Arguments to find a DomainWideDelegation
   * @example
   * // Get one DomainWideDelegation
   * const domainWideDelegation = await prisma.domainWideDelegation.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends DomainWideDelegationFindUniqueArgs>(
    args: Prisma.SelectSubset<T, DomainWideDelegationFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__DomainWideDelegationClient<
    runtime.Types.Result.GetResult<
      Prisma.$DomainWideDelegationPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one DomainWideDelegation that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {DomainWideDelegationFindUniqueOrThrowArgs} args - Arguments to find a DomainWideDelegation
   * @example
   * // Get one DomainWideDelegation
   * const domainWideDelegation = await prisma.domainWideDelegation.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends DomainWideDelegationFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, DomainWideDelegationFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__DomainWideDelegationClient<
    runtime.Types.Result.GetResult<
      Prisma.$DomainWideDelegationPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first DomainWideDelegation that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DomainWideDelegationFindFirstArgs} args - Arguments to find a DomainWideDelegation
   * @example
   * // Get one DomainWideDelegation
   * const domainWideDelegation = await prisma.domainWideDelegation.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends DomainWideDelegationFindFirstArgs>(
    args?: Prisma.SelectSubset<T, DomainWideDelegationFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__DomainWideDelegationClient<
    runtime.Types.Result.GetResult<
      Prisma.$DomainWideDelegationPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first DomainWideDelegation that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DomainWideDelegationFindFirstOrThrowArgs} args - Arguments to find a DomainWideDelegation
   * @example
   * // Get one DomainWideDelegation
   * const domainWideDelegation = await prisma.domainWideDelegation.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends DomainWideDelegationFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, DomainWideDelegationFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__DomainWideDelegationClient<
    runtime.Types.Result.GetResult<
      Prisma.$DomainWideDelegationPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more DomainWideDelegations that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DomainWideDelegationFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all DomainWideDelegations
   * const domainWideDelegations = await prisma.domainWideDelegation.findMany()
   *
   * // Get first 10 DomainWideDelegations
   * const domainWideDelegations = await prisma.domainWideDelegation.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const domainWideDelegationWithIdOnly = await prisma.domainWideDelegation.findMany({ select: { id: true } })
   *
   */
  findMany<T extends DomainWideDelegationFindManyArgs>(
    args?: Prisma.SelectSubset<T, DomainWideDelegationFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$DomainWideDelegationPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a DomainWideDelegation.
   * @param {DomainWideDelegationCreateArgs} args - Arguments to create a DomainWideDelegation.
   * @example
   * // Create one DomainWideDelegation
   * const DomainWideDelegation = await prisma.domainWideDelegation.create({
   *   data: {
   *     // ... data to create a DomainWideDelegation
   *   }
   * })
   *
   */
  create<T extends DomainWideDelegationCreateArgs>(
    args: Prisma.SelectSubset<T, DomainWideDelegationCreateArgs<ExtArgs>>
  ): Prisma.Prisma__DomainWideDelegationClient<
    runtime.Types.Result.GetResult<
      Prisma.$DomainWideDelegationPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many DomainWideDelegations.
   * @param {DomainWideDelegationCreateManyArgs} args - Arguments to create many DomainWideDelegations.
   * @example
   * // Create many DomainWideDelegations
   * const domainWideDelegation = await prisma.domainWideDelegation.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends DomainWideDelegationCreateManyArgs>(
    args?: Prisma.SelectSubset<T, DomainWideDelegationCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many DomainWideDelegations and returns the data saved in the database.
   * @param {DomainWideDelegationCreateManyAndReturnArgs} args - Arguments to create many DomainWideDelegations.
   * @example
   * // Create many DomainWideDelegations
   * const domainWideDelegation = await prisma.domainWideDelegation.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many DomainWideDelegations and only return the `id`
   * const domainWideDelegationWithIdOnly = await prisma.domainWideDelegation.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends DomainWideDelegationCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, DomainWideDelegationCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$DomainWideDelegationPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a DomainWideDelegation.
   * @param {DomainWideDelegationDeleteArgs} args - Arguments to delete one DomainWideDelegation.
   * @example
   * // Delete one DomainWideDelegation
   * const DomainWideDelegation = await prisma.domainWideDelegation.delete({
   *   where: {
   *     // ... filter to delete one DomainWideDelegation
   *   }
   * })
   *
   */
  delete<T extends DomainWideDelegationDeleteArgs>(
    args: Prisma.SelectSubset<T, DomainWideDelegationDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__DomainWideDelegationClient<
    runtime.Types.Result.GetResult<
      Prisma.$DomainWideDelegationPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one DomainWideDelegation.
   * @param {DomainWideDelegationUpdateArgs} args - Arguments to update one DomainWideDelegation.
   * @example
   * // Update one DomainWideDelegation
   * const domainWideDelegation = await prisma.domainWideDelegation.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends DomainWideDelegationUpdateArgs>(
    args: Prisma.SelectSubset<T, DomainWideDelegationUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__DomainWideDelegationClient<
    runtime.Types.Result.GetResult<
      Prisma.$DomainWideDelegationPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more DomainWideDelegations.
   * @param {DomainWideDelegationDeleteManyArgs} args - Arguments to filter DomainWideDelegations to delete.
   * @example
   * // Delete a few DomainWideDelegations
   * const { count } = await prisma.domainWideDelegation.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends DomainWideDelegationDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, DomainWideDelegationDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more DomainWideDelegations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DomainWideDelegationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many DomainWideDelegations
   * const domainWideDelegation = await prisma.domainWideDelegation.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends DomainWideDelegationUpdateManyArgs>(
    args: Prisma.SelectSubset<T, DomainWideDelegationUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more DomainWideDelegations and returns the data updated in the database.
   * @param {DomainWideDelegationUpdateManyAndReturnArgs} args - Arguments to update many DomainWideDelegations.
   * @example
   * // Update many DomainWideDelegations
   * const domainWideDelegation = await prisma.domainWideDelegation.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more DomainWideDelegations and only return the `id`
   * const domainWideDelegationWithIdOnly = await prisma.domainWideDelegation.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends DomainWideDelegationUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, DomainWideDelegationUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$DomainWideDelegationPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one DomainWideDelegation.
   * @param {DomainWideDelegationUpsertArgs} args - Arguments to update or create a DomainWideDelegation.
   * @example
   * // Update or create a DomainWideDelegation
   * const domainWideDelegation = await prisma.domainWideDelegation.upsert({
   *   create: {
   *     // ... data to create a DomainWideDelegation
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the DomainWideDelegation we want to update
   *   }
   * })
   */
  upsert<T extends DomainWideDelegationUpsertArgs>(
    args: Prisma.SelectSubset<T, DomainWideDelegationUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__DomainWideDelegationClient<
    runtime.Types.Result.GetResult<
      Prisma.$DomainWideDelegationPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of DomainWideDelegations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DomainWideDelegationCountArgs} args - Arguments to filter DomainWideDelegations to count.
   * @example
   * // Count the number of DomainWideDelegations
   * const count = await prisma.domainWideDelegation.count({
   *   where: {
   *     // ... the filter for the DomainWideDelegations we want to count
   *   }
   * })
   **/
  count<T extends DomainWideDelegationCountArgs>(
    args?: Prisma.Subset<T, DomainWideDelegationCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], DomainWideDelegationCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a DomainWideDelegation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DomainWideDelegationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends DomainWideDelegationAggregateArgs>(
    args: Prisma.Subset<T, DomainWideDelegationAggregateArgs>
  ): Prisma.PrismaPromise<GetDomainWideDelegationAggregateType<T>>;

  /**
   * Group by DomainWideDelegation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DomainWideDelegationGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends DomainWideDelegationGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: DomainWideDelegationGroupByArgs["orderBy"] }
      : { orderBy?: DomainWideDelegationGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, DomainWideDelegationGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetDomainWideDelegationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the DomainWideDelegation model
   */
  readonly fields: DomainWideDelegationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for DomainWideDelegation.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__DomainWideDelegationClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  workspacePlatform<T extends Prisma.WorkspacePlatformDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.WorkspacePlatformDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__WorkspacePlatformClient<
    | runtime.Types.Result.GetResult<
        Prisma.$WorkspacePlatformPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  organization<T extends Prisma.TeamDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.TeamDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__TeamClient<
    | runtime.Types.Result.GetResult<Prisma.$TeamPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  selectedCalendars<T extends Prisma.DomainWideDelegation$selectedCalendarsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.DomainWideDelegation$selectedCalendarsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$SelectedCalendarPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  destinationCalendar<T extends Prisma.DomainWideDelegation$destinationCalendarArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.DomainWideDelegation$destinationCalendarArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$DestinationCalendarPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  bookingReferences<T extends Prisma.DomainWideDelegation$bookingReferencesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.DomainWideDelegation$bookingReferencesArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$BookingReferencePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the DomainWideDelegation model
 */
export interface DomainWideDelegationFieldRefs {
  readonly id: Prisma.FieldRef<"DomainWideDelegation", "String">;
  readonly workspacePlatformId: Prisma.FieldRef<"DomainWideDelegation", "Int">;
  readonly serviceAccountKey: Prisma.FieldRef<"DomainWideDelegation", "Json">;
  readonly enabled: Prisma.FieldRef<"DomainWideDelegation", "Boolean">;
  readonly organizationId: Prisma.FieldRef<"DomainWideDelegation", "Int">;
  readonly domain: Prisma.FieldRef<"DomainWideDelegation", "String">;
  readonly createdAt: Prisma.FieldRef<"DomainWideDelegation", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"DomainWideDelegation", "DateTime">;
}

// Custom InputTypes
/**
 * DomainWideDelegation findUnique
 */
export type DomainWideDelegationFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DomainWideDelegation
   */
  select?: Prisma.DomainWideDelegationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DomainWideDelegation
   */
  omit?: Prisma.DomainWideDelegationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DomainWideDelegationInclude<ExtArgs> | null;
  /**
   * Filter, which DomainWideDelegation to fetch.
   */
  where: Prisma.DomainWideDelegationWhereUniqueInput;
};

/**
 * DomainWideDelegation findUniqueOrThrow
 */
export type DomainWideDelegationFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DomainWideDelegation
   */
  select?: Prisma.DomainWideDelegationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DomainWideDelegation
   */
  omit?: Prisma.DomainWideDelegationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DomainWideDelegationInclude<ExtArgs> | null;
  /**
   * Filter, which DomainWideDelegation to fetch.
   */
  where: Prisma.DomainWideDelegationWhereUniqueInput;
};

/**
 * DomainWideDelegation findFirst
 */
export type DomainWideDelegationFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DomainWideDelegation
   */
  select?: Prisma.DomainWideDelegationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DomainWideDelegation
   */
  omit?: Prisma.DomainWideDelegationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DomainWideDelegationInclude<ExtArgs> | null;
  /**
   * Filter, which DomainWideDelegation to fetch.
   */
  where?: Prisma.DomainWideDelegationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of DomainWideDelegations to fetch.
   */
  orderBy?:
    | Prisma.DomainWideDelegationOrderByWithRelationInput
    | Prisma.DomainWideDelegationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for DomainWideDelegations.
   */
  cursor?: Prisma.DomainWideDelegationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` DomainWideDelegations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` DomainWideDelegations.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of DomainWideDelegations.
   */
  distinct?: Prisma.DomainWideDelegationScalarFieldEnum | Prisma.DomainWideDelegationScalarFieldEnum[];
};

/**
 * DomainWideDelegation findFirstOrThrow
 */
export type DomainWideDelegationFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DomainWideDelegation
   */
  select?: Prisma.DomainWideDelegationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DomainWideDelegation
   */
  omit?: Prisma.DomainWideDelegationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DomainWideDelegationInclude<ExtArgs> | null;
  /**
   * Filter, which DomainWideDelegation to fetch.
   */
  where?: Prisma.DomainWideDelegationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of DomainWideDelegations to fetch.
   */
  orderBy?:
    | Prisma.DomainWideDelegationOrderByWithRelationInput
    | Prisma.DomainWideDelegationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for DomainWideDelegations.
   */
  cursor?: Prisma.DomainWideDelegationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` DomainWideDelegations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` DomainWideDelegations.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of DomainWideDelegations.
   */
  distinct?: Prisma.DomainWideDelegationScalarFieldEnum | Prisma.DomainWideDelegationScalarFieldEnum[];
};

/**
 * DomainWideDelegation findMany
 */
export type DomainWideDelegationFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DomainWideDelegation
   */
  select?: Prisma.DomainWideDelegationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DomainWideDelegation
   */
  omit?: Prisma.DomainWideDelegationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DomainWideDelegationInclude<ExtArgs> | null;
  /**
   * Filter, which DomainWideDelegations to fetch.
   */
  where?: Prisma.DomainWideDelegationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of DomainWideDelegations to fetch.
   */
  orderBy?:
    | Prisma.DomainWideDelegationOrderByWithRelationInput
    | Prisma.DomainWideDelegationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing DomainWideDelegations.
   */
  cursor?: Prisma.DomainWideDelegationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` DomainWideDelegations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` DomainWideDelegations.
   */
  skip?: number;
  distinct?: Prisma.DomainWideDelegationScalarFieldEnum | Prisma.DomainWideDelegationScalarFieldEnum[];
};

/**
 * DomainWideDelegation create
 */
export type DomainWideDelegationCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DomainWideDelegation
   */
  select?: Prisma.DomainWideDelegationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DomainWideDelegation
   */
  omit?: Prisma.DomainWideDelegationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DomainWideDelegationInclude<ExtArgs> | null;
  /**
   * The data needed to create a DomainWideDelegation.
   */
  data: Prisma.XOR<Prisma.DomainWideDelegationCreateInput, Prisma.DomainWideDelegationUncheckedCreateInput>;
};

/**
 * DomainWideDelegation createMany
 */
export type DomainWideDelegationCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many DomainWideDelegations.
   */
  data: Prisma.DomainWideDelegationCreateManyInput | Prisma.DomainWideDelegationCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * DomainWideDelegation createManyAndReturn
 */
export type DomainWideDelegationCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DomainWideDelegation
   */
  select?: Prisma.DomainWideDelegationSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the DomainWideDelegation
   */
  omit?: Prisma.DomainWideDelegationOmit<ExtArgs> | null;
  /**
   * The data used to create many DomainWideDelegations.
   */
  data: Prisma.DomainWideDelegationCreateManyInput | Prisma.DomainWideDelegationCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DomainWideDelegationIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * DomainWideDelegation update
 */
export type DomainWideDelegationUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DomainWideDelegation
   */
  select?: Prisma.DomainWideDelegationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DomainWideDelegation
   */
  omit?: Prisma.DomainWideDelegationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DomainWideDelegationInclude<ExtArgs> | null;
  /**
   * The data needed to update a DomainWideDelegation.
   */
  data: Prisma.XOR<Prisma.DomainWideDelegationUpdateInput, Prisma.DomainWideDelegationUncheckedUpdateInput>;
  /**
   * Choose, which DomainWideDelegation to update.
   */
  where: Prisma.DomainWideDelegationWhereUniqueInput;
};

/**
 * DomainWideDelegation updateMany
 */
export type DomainWideDelegationUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update DomainWideDelegations.
   */
  data: Prisma.XOR<
    Prisma.DomainWideDelegationUpdateManyMutationInput,
    Prisma.DomainWideDelegationUncheckedUpdateManyInput
  >;
  /**
   * Filter which DomainWideDelegations to update
   */
  where?: Prisma.DomainWideDelegationWhereInput;
  /**
   * Limit how many DomainWideDelegations to update.
   */
  limit?: number;
};

/**
 * DomainWideDelegation updateManyAndReturn
 */
export type DomainWideDelegationUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DomainWideDelegation
   */
  select?: Prisma.DomainWideDelegationSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the DomainWideDelegation
   */
  omit?: Prisma.DomainWideDelegationOmit<ExtArgs> | null;
  /**
   * The data used to update DomainWideDelegations.
   */
  data: Prisma.XOR<
    Prisma.DomainWideDelegationUpdateManyMutationInput,
    Prisma.DomainWideDelegationUncheckedUpdateManyInput
  >;
  /**
   * Filter which DomainWideDelegations to update
   */
  where?: Prisma.DomainWideDelegationWhereInput;
  /**
   * Limit how many DomainWideDelegations to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DomainWideDelegationIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * DomainWideDelegation upsert
 */
export type DomainWideDelegationUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DomainWideDelegation
   */
  select?: Prisma.DomainWideDelegationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DomainWideDelegation
   */
  omit?: Prisma.DomainWideDelegationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DomainWideDelegationInclude<ExtArgs> | null;
  /**
   * The filter to search for the DomainWideDelegation to update in case it exists.
   */
  where: Prisma.DomainWideDelegationWhereUniqueInput;
  /**
   * In case the DomainWideDelegation found by the `where` argument doesn't exist, create a new DomainWideDelegation with this data.
   */
  create: Prisma.XOR<Prisma.DomainWideDelegationCreateInput, Prisma.DomainWideDelegationUncheckedCreateInput>;
  /**
   * In case the DomainWideDelegation was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.DomainWideDelegationUpdateInput, Prisma.DomainWideDelegationUncheckedUpdateInput>;
};

/**
 * DomainWideDelegation delete
 */
export type DomainWideDelegationDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DomainWideDelegation
   */
  select?: Prisma.DomainWideDelegationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DomainWideDelegation
   */
  omit?: Prisma.DomainWideDelegationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DomainWideDelegationInclude<ExtArgs> | null;
  /**
   * Filter which DomainWideDelegation to delete.
   */
  where: Prisma.DomainWideDelegationWhereUniqueInput;
};

/**
 * DomainWideDelegation deleteMany
 */
export type DomainWideDelegationDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which DomainWideDelegations to delete
   */
  where?: Prisma.DomainWideDelegationWhereInput;
  /**
   * Limit how many DomainWideDelegations to delete.
   */
  limit?: number;
};

/**
 * DomainWideDelegation.selectedCalendars
 */
export type DomainWideDelegation$selectedCalendarsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the SelectedCalendar
   */
  select?: Prisma.SelectedCalendarSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SelectedCalendar
   */
  omit?: Prisma.SelectedCalendarOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SelectedCalendarInclude<ExtArgs> | null;
  where?: Prisma.SelectedCalendarWhereInput;
  orderBy?:
    | Prisma.SelectedCalendarOrderByWithRelationInput
    | Prisma.SelectedCalendarOrderByWithRelationInput[];
  cursor?: Prisma.SelectedCalendarWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.SelectedCalendarScalarFieldEnum | Prisma.SelectedCalendarScalarFieldEnum[];
};

/**
 * DomainWideDelegation.destinationCalendar
 */
export type DomainWideDelegation$destinationCalendarArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DestinationCalendar
   */
  select?: Prisma.DestinationCalendarSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DestinationCalendar
   */
  omit?: Prisma.DestinationCalendarOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DestinationCalendarInclude<ExtArgs> | null;
  where?: Prisma.DestinationCalendarWhereInput;
  orderBy?:
    | Prisma.DestinationCalendarOrderByWithRelationInput
    | Prisma.DestinationCalendarOrderByWithRelationInput[];
  cursor?: Prisma.DestinationCalendarWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.DestinationCalendarScalarFieldEnum | Prisma.DestinationCalendarScalarFieldEnum[];
};

/**
 * DomainWideDelegation.bookingReferences
 */
export type DomainWideDelegation$bookingReferencesArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the BookingReference
   */
  select?: Prisma.BookingReferenceSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the BookingReference
   */
  omit?: Prisma.BookingReferenceOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BookingReferenceInclude<ExtArgs> | null;
  where?: Prisma.BookingReferenceWhereInput;
  orderBy?:
    | Prisma.BookingReferenceOrderByWithRelationInput
    | Prisma.BookingReferenceOrderByWithRelationInput[];
  cursor?: Prisma.BookingReferenceWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.BookingReferenceScalarFieldEnum | Prisma.BookingReferenceScalarFieldEnum[];
};

/**
 * DomainWideDelegation without action
 */
export type DomainWideDelegationDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DomainWideDelegation
   */
  select?: Prisma.DomainWideDelegationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DomainWideDelegation
   */
  omit?: Prisma.DomainWideDelegationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DomainWideDelegationInclude<ExtArgs> | null;
};
