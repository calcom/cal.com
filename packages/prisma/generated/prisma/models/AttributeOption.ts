/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `AttributeOption` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model AttributeOption
 *
 */
export type AttributeOptionModel = runtime.Types.Result.DefaultSelection<Prisma.$AttributeOptionPayload>;

export type AggregateAttributeOption = {
  _count: AttributeOptionCountAggregateOutputType | null;
  _min: AttributeOptionMinAggregateOutputType | null;
  _max: AttributeOptionMaxAggregateOutputType | null;
};

export type AttributeOptionMinAggregateOutputType = {
  id: string | null;
  attributeId: string | null;
  value: string | null;
  slug: string | null;
  isGroup: boolean | null;
};

export type AttributeOptionMaxAggregateOutputType = {
  id: string | null;
  attributeId: string | null;
  value: string | null;
  slug: string | null;
  isGroup: boolean | null;
};

export type AttributeOptionCountAggregateOutputType = {
  id: number;
  attributeId: number;
  value: number;
  slug: number;
  isGroup: number;
  contains: number;
  _all: number;
};

export type AttributeOptionMinAggregateInputType = {
  id?: true;
  attributeId?: true;
  value?: true;
  slug?: true;
  isGroup?: true;
};

export type AttributeOptionMaxAggregateInputType = {
  id?: true;
  attributeId?: true;
  value?: true;
  slug?: true;
  isGroup?: true;
};

export type AttributeOptionCountAggregateInputType = {
  id?: true;
  attributeId?: true;
  value?: true;
  slug?: true;
  isGroup?: true;
  contains?: true;
  _all?: true;
};

export type AttributeOptionAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which AttributeOption to aggregate.
   */
  where?: Prisma.AttributeOptionWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AttributeOptions to fetch.
   */
  orderBy?: Prisma.AttributeOptionOrderByWithRelationInput | Prisma.AttributeOptionOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.AttributeOptionWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AttributeOptions from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AttributeOptions.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned AttributeOptions
   **/
  _count?: true | AttributeOptionCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: AttributeOptionMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: AttributeOptionMaxAggregateInputType;
};

export type GetAttributeOptionAggregateType<T extends AttributeOptionAggregateArgs> = {
  [P in keyof T & keyof AggregateAttributeOption]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAttributeOption[P]>
    : Prisma.GetScalarType<T[P], AggregateAttributeOption[P]>;
};

export type AttributeOptionGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.AttributeOptionWhereInput;
  orderBy?:
    | Prisma.AttributeOptionOrderByWithAggregationInput
    | Prisma.AttributeOptionOrderByWithAggregationInput[];
  by: Prisma.AttributeOptionScalarFieldEnum[] | Prisma.AttributeOptionScalarFieldEnum;
  having?: Prisma.AttributeOptionScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: AttributeOptionCountAggregateInputType | true;
  _min?: AttributeOptionMinAggregateInputType;
  _max?: AttributeOptionMaxAggregateInputType;
};

export type AttributeOptionGroupByOutputType = {
  id: string;
  attributeId: string;
  value: string;
  slug: string;
  isGroup: boolean;
  contains: string[];
  _count: AttributeOptionCountAggregateOutputType | null;
  _min: AttributeOptionMinAggregateOutputType | null;
  _max: AttributeOptionMaxAggregateOutputType | null;
};

type GetAttributeOptionGroupByPayload<T extends AttributeOptionGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<AttributeOptionGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof AttributeOptionGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], AttributeOptionGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], AttributeOptionGroupByOutputType[P]>;
    }
  >
>;

export type AttributeOptionWhereInput = {
  AND?: Prisma.AttributeOptionWhereInput | Prisma.AttributeOptionWhereInput[];
  OR?: Prisma.AttributeOptionWhereInput[];
  NOT?: Prisma.AttributeOptionWhereInput | Prisma.AttributeOptionWhereInput[];
  id?: Prisma.StringFilter<"AttributeOption"> | string;
  attributeId?: Prisma.StringFilter<"AttributeOption"> | string;
  value?: Prisma.StringFilter<"AttributeOption"> | string;
  slug?: Prisma.StringFilter<"AttributeOption"> | string;
  isGroup?: Prisma.BoolFilter<"AttributeOption"> | boolean;
  contains?: Prisma.StringNullableListFilter<"AttributeOption">;
  attribute?: Prisma.XOR<Prisma.AttributeScalarRelationFilter, Prisma.AttributeWhereInput>;
  assignedUsers?: Prisma.AttributeToUserListRelationFilter;
};

export type AttributeOptionOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  attributeId?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  slug?: Prisma.SortOrder;
  isGroup?: Prisma.SortOrder;
  contains?: Prisma.SortOrder;
  attribute?: Prisma.AttributeOrderByWithRelationInput;
  assignedUsers?: Prisma.AttributeToUserOrderByRelationAggregateInput;
};

export type AttributeOptionWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?: Prisma.AttributeOptionWhereInput | Prisma.AttributeOptionWhereInput[];
    OR?: Prisma.AttributeOptionWhereInput[];
    NOT?: Prisma.AttributeOptionWhereInput | Prisma.AttributeOptionWhereInput[];
    attributeId?: Prisma.StringFilter<"AttributeOption"> | string;
    value?: Prisma.StringFilter<"AttributeOption"> | string;
    slug?: Prisma.StringFilter<"AttributeOption"> | string;
    isGroup?: Prisma.BoolFilter<"AttributeOption"> | boolean;
    contains?: Prisma.StringNullableListFilter<"AttributeOption">;
    attribute?: Prisma.XOR<Prisma.AttributeScalarRelationFilter, Prisma.AttributeWhereInput>;
    assignedUsers?: Prisma.AttributeToUserListRelationFilter;
  },
  "id"
>;

export type AttributeOptionOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  attributeId?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  slug?: Prisma.SortOrder;
  isGroup?: Prisma.SortOrder;
  contains?: Prisma.SortOrder;
  _count?: Prisma.AttributeOptionCountOrderByAggregateInput;
  _max?: Prisma.AttributeOptionMaxOrderByAggregateInput;
  _min?: Prisma.AttributeOptionMinOrderByAggregateInput;
};

export type AttributeOptionScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.AttributeOptionScalarWhereWithAggregatesInput
    | Prisma.AttributeOptionScalarWhereWithAggregatesInput[];
  OR?: Prisma.AttributeOptionScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.AttributeOptionScalarWhereWithAggregatesInput
    | Prisma.AttributeOptionScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"AttributeOption"> | string;
  attributeId?: Prisma.StringWithAggregatesFilter<"AttributeOption"> | string;
  value?: Prisma.StringWithAggregatesFilter<"AttributeOption"> | string;
  slug?: Prisma.StringWithAggregatesFilter<"AttributeOption"> | string;
  isGroup?: Prisma.BoolWithAggregatesFilter<"AttributeOption"> | boolean;
  contains?: Prisma.StringNullableListFilter<"AttributeOption">;
};

export type AttributeOptionCreateInput = {
  id?: string;
  value: string;
  slug: string;
  isGroup?: boolean;
  contains?: Prisma.AttributeOptionCreatecontainsInput | string[];
  attribute: Prisma.AttributeCreateNestedOneWithoutOptionsInput;
  assignedUsers?: Prisma.AttributeToUserCreateNestedManyWithoutAttributeOptionInput;
};

export type AttributeOptionUncheckedCreateInput = {
  id?: string;
  attributeId: string;
  value: string;
  slug: string;
  isGroup?: boolean;
  contains?: Prisma.AttributeOptionCreatecontainsInput | string[];
  assignedUsers?: Prisma.AttributeToUserUncheckedCreateNestedManyWithoutAttributeOptionInput;
};

export type AttributeOptionUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  isGroup?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  contains?: Prisma.AttributeOptionUpdatecontainsInput | string[];
  attribute?: Prisma.AttributeUpdateOneRequiredWithoutOptionsNestedInput;
  assignedUsers?: Prisma.AttributeToUserUpdateManyWithoutAttributeOptionNestedInput;
};

export type AttributeOptionUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  attributeId?: Prisma.StringFieldUpdateOperationsInput | string;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  isGroup?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  contains?: Prisma.AttributeOptionUpdatecontainsInput | string[];
  assignedUsers?: Prisma.AttributeToUserUncheckedUpdateManyWithoutAttributeOptionNestedInput;
};

export type AttributeOptionCreateManyInput = {
  id?: string;
  attributeId: string;
  value: string;
  slug: string;
  isGroup?: boolean;
  contains?: Prisma.AttributeOptionCreatecontainsInput | string[];
};

export type AttributeOptionUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  isGroup?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  contains?: Prisma.AttributeOptionUpdatecontainsInput | string[];
};

export type AttributeOptionUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  attributeId?: Prisma.StringFieldUpdateOperationsInput | string;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  isGroup?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  contains?: Prisma.AttributeOptionUpdatecontainsInput | string[];
};

export type AttributeOptionCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  attributeId?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  slug?: Prisma.SortOrder;
  isGroup?: Prisma.SortOrder;
  contains?: Prisma.SortOrder;
};

export type AttributeOptionMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  attributeId?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  slug?: Prisma.SortOrder;
  isGroup?: Prisma.SortOrder;
};

export type AttributeOptionMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  attributeId?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  slug?: Prisma.SortOrder;
  isGroup?: Prisma.SortOrder;
};

export type AttributeOptionListRelationFilter = {
  every?: Prisma.AttributeOptionWhereInput;
  some?: Prisma.AttributeOptionWhereInput;
  none?: Prisma.AttributeOptionWhereInput;
};

export type AttributeOptionOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type AttributeOptionScalarRelationFilter = {
  is?: Prisma.AttributeOptionWhereInput;
  isNot?: Prisma.AttributeOptionWhereInput;
};

export type AttributeOptionCreatecontainsInput = {
  set: string[];
};

export type AttributeOptionUpdatecontainsInput = {
  set?: string[];
  push?: string | string[];
};

export type AttributeOptionCreateNestedManyWithoutAttributeInput = {
  create?:
    | Prisma.XOR<
        Prisma.AttributeOptionCreateWithoutAttributeInput,
        Prisma.AttributeOptionUncheckedCreateWithoutAttributeInput
      >
    | Prisma.AttributeOptionCreateWithoutAttributeInput[]
    | Prisma.AttributeOptionUncheckedCreateWithoutAttributeInput[];
  connectOrCreate?:
    | Prisma.AttributeOptionCreateOrConnectWithoutAttributeInput
    | Prisma.AttributeOptionCreateOrConnectWithoutAttributeInput[];
  createMany?: Prisma.AttributeOptionCreateManyAttributeInputEnvelope;
  connect?: Prisma.AttributeOptionWhereUniqueInput | Prisma.AttributeOptionWhereUniqueInput[];
};

export type AttributeOptionUncheckedCreateNestedManyWithoutAttributeInput = {
  create?:
    | Prisma.XOR<
        Prisma.AttributeOptionCreateWithoutAttributeInput,
        Prisma.AttributeOptionUncheckedCreateWithoutAttributeInput
      >
    | Prisma.AttributeOptionCreateWithoutAttributeInput[]
    | Prisma.AttributeOptionUncheckedCreateWithoutAttributeInput[];
  connectOrCreate?:
    | Prisma.AttributeOptionCreateOrConnectWithoutAttributeInput
    | Prisma.AttributeOptionCreateOrConnectWithoutAttributeInput[];
  createMany?: Prisma.AttributeOptionCreateManyAttributeInputEnvelope;
  connect?: Prisma.AttributeOptionWhereUniqueInput | Prisma.AttributeOptionWhereUniqueInput[];
};

export type AttributeOptionUpdateManyWithoutAttributeNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AttributeOptionCreateWithoutAttributeInput,
        Prisma.AttributeOptionUncheckedCreateWithoutAttributeInput
      >
    | Prisma.AttributeOptionCreateWithoutAttributeInput[]
    | Prisma.AttributeOptionUncheckedCreateWithoutAttributeInput[];
  connectOrCreate?:
    | Prisma.AttributeOptionCreateOrConnectWithoutAttributeInput
    | Prisma.AttributeOptionCreateOrConnectWithoutAttributeInput[];
  upsert?:
    | Prisma.AttributeOptionUpsertWithWhereUniqueWithoutAttributeInput
    | Prisma.AttributeOptionUpsertWithWhereUniqueWithoutAttributeInput[];
  createMany?: Prisma.AttributeOptionCreateManyAttributeInputEnvelope;
  set?: Prisma.AttributeOptionWhereUniqueInput | Prisma.AttributeOptionWhereUniqueInput[];
  disconnect?: Prisma.AttributeOptionWhereUniqueInput | Prisma.AttributeOptionWhereUniqueInput[];
  delete?: Prisma.AttributeOptionWhereUniqueInput | Prisma.AttributeOptionWhereUniqueInput[];
  connect?: Prisma.AttributeOptionWhereUniqueInput | Prisma.AttributeOptionWhereUniqueInput[];
  update?:
    | Prisma.AttributeOptionUpdateWithWhereUniqueWithoutAttributeInput
    | Prisma.AttributeOptionUpdateWithWhereUniqueWithoutAttributeInput[];
  updateMany?:
    | Prisma.AttributeOptionUpdateManyWithWhereWithoutAttributeInput
    | Prisma.AttributeOptionUpdateManyWithWhereWithoutAttributeInput[];
  deleteMany?: Prisma.AttributeOptionScalarWhereInput | Prisma.AttributeOptionScalarWhereInput[];
};

export type AttributeOptionUncheckedUpdateManyWithoutAttributeNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.AttributeOptionCreateWithoutAttributeInput,
        Prisma.AttributeOptionUncheckedCreateWithoutAttributeInput
      >
    | Prisma.AttributeOptionCreateWithoutAttributeInput[]
    | Prisma.AttributeOptionUncheckedCreateWithoutAttributeInput[];
  connectOrCreate?:
    | Prisma.AttributeOptionCreateOrConnectWithoutAttributeInput
    | Prisma.AttributeOptionCreateOrConnectWithoutAttributeInput[];
  upsert?:
    | Prisma.AttributeOptionUpsertWithWhereUniqueWithoutAttributeInput
    | Prisma.AttributeOptionUpsertWithWhereUniqueWithoutAttributeInput[];
  createMany?: Prisma.AttributeOptionCreateManyAttributeInputEnvelope;
  set?: Prisma.AttributeOptionWhereUniqueInput | Prisma.AttributeOptionWhereUniqueInput[];
  disconnect?: Prisma.AttributeOptionWhereUniqueInput | Prisma.AttributeOptionWhereUniqueInput[];
  delete?: Prisma.AttributeOptionWhereUniqueInput | Prisma.AttributeOptionWhereUniqueInput[];
  connect?: Prisma.AttributeOptionWhereUniqueInput | Prisma.AttributeOptionWhereUniqueInput[];
  update?:
    | Prisma.AttributeOptionUpdateWithWhereUniqueWithoutAttributeInput
    | Prisma.AttributeOptionUpdateWithWhereUniqueWithoutAttributeInput[];
  updateMany?:
    | Prisma.AttributeOptionUpdateManyWithWhereWithoutAttributeInput
    | Prisma.AttributeOptionUpdateManyWithWhereWithoutAttributeInput[];
  deleteMany?: Prisma.AttributeOptionScalarWhereInput | Prisma.AttributeOptionScalarWhereInput[];
};

export type AttributeOptionCreateNestedOneWithoutAssignedUsersInput = {
  create?: Prisma.XOR<
    Prisma.AttributeOptionCreateWithoutAssignedUsersInput,
    Prisma.AttributeOptionUncheckedCreateWithoutAssignedUsersInput
  >;
  connectOrCreate?: Prisma.AttributeOptionCreateOrConnectWithoutAssignedUsersInput;
  connect?: Prisma.AttributeOptionWhereUniqueInput;
};

export type AttributeOptionUpdateOneRequiredWithoutAssignedUsersNestedInput = {
  create?: Prisma.XOR<
    Prisma.AttributeOptionCreateWithoutAssignedUsersInput,
    Prisma.AttributeOptionUncheckedCreateWithoutAssignedUsersInput
  >;
  connectOrCreate?: Prisma.AttributeOptionCreateOrConnectWithoutAssignedUsersInput;
  upsert?: Prisma.AttributeOptionUpsertWithoutAssignedUsersInput;
  connect?: Prisma.AttributeOptionWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.AttributeOptionUpdateToOneWithWhereWithoutAssignedUsersInput,
      Prisma.AttributeOptionUpdateWithoutAssignedUsersInput
    >,
    Prisma.AttributeOptionUncheckedUpdateWithoutAssignedUsersInput
  >;
};

export type AttributeOptionCreateWithoutAttributeInput = {
  id?: string;
  value: string;
  slug: string;
  isGroup?: boolean;
  contains?: Prisma.AttributeOptionCreatecontainsInput | string[];
  assignedUsers?: Prisma.AttributeToUserCreateNestedManyWithoutAttributeOptionInput;
};

export type AttributeOptionUncheckedCreateWithoutAttributeInput = {
  id?: string;
  value: string;
  slug: string;
  isGroup?: boolean;
  contains?: Prisma.AttributeOptionCreatecontainsInput | string[];
  assignedUsers?: Prisma.AttributeToUserUncheckedCreateNestedManyWithoutAttributeOptionInput;
};

export type AttributeOptionCreateOrConnectWithoutAttributeInput = {
  where: Prisma.AttributeOptionWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AttributeOptionCreateWithoutAttributeInput,
    Prisma.AttributeOptionUncheckedCreateWithoutAttributeInput
  >;
};

export type AttributeOptionCreateManyAttributeInputEnvelope = {
  data: Prisma.AttributeOptionCreateManyAttributeInput | Prisma.AttributeOptionCreateManyAttributeInput[];
  skipDuplicates?: boolean;
};

export type AttributeOptionUpsertWithWhereUniqueWithoutAttributeInput = {
  where: Prisma.AttributeOptionWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.AttributeOptionUpdateWithoutAttributeInput,
    Prisma.AttributeOptionUncheckedUpdateWithoutAttributeInput
  >;
  create: Prisma.XOR<
    Prisma.AttributeOptionCreateWithoutAttributeInput,
    Prisma.AttributeOptionUncheckedCreateWithoutAttributeInput
  >;
};

export type AttributeOptionUpdateWithWhereUniqueWithoutAttributeInput = {
  where: Prisma.AttributeOptionWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.AttributeOptionUpdateWithoutAttributeInput,
    Prisma.AttributeOptionUncheckedUpdateWithoutAttributeInput
  >;
};

export type AttributeOptionUpdateManyWithWhereWithoutAttributeInput = {
  where: Prisma.AttributeOptionScalarWhereInput;
  data: Prisma.XOR<
    Prisma.AttributeOptionUpdateManyMutationInput,
    Prisma.AttributeOptionUncheckedUpdateManyWithoutAttributeInput
  >;
};

export type AttributeOptionScalarWhereInput = {
  AND?: Prisma.AttributeOptionScalarWhereInput | Prisma.AttributeOptionScalarWhereInput[];
  OR?: Prisma.AttributeOptionScalarWhereInput[];
  NOT?: Prisma.AttributeOptionScalarWhereInput | Prisma.AttributeOptionScalarWhereInput[];
  id?: Prisma.StringFilter<"AttributeOption"> | string;
  attributeId?: Prisma.StringFilter<"AttributeOption"> | string;
  value?: Prisma.StringFilter<"AttributeOption"> | string;
  slug?: Prisma.StringFilter<"AttributeOption"> | string;
  isGroup?: Prisma.BoolFilter<"AttributeOption"> | boolean;
  contains?: Prisma.StringNullableListFilter<"AttributeOption">;
};

export type AttributeOptionCreateWithoutAssignedUsersInput = {
  id?: string;
  value: string;
  slug: string;
  isGroup?: boolean;
  contains?: Prisma.AttributeOptionCreatecontainsInput | string[];
  attribute: Prisma.AttributeCreateNestedOneWithoutOptionsInput;
};

export type AttributeOptionUncheckedCreateWithoutAssignedUsersInput = {
  id?: string;
  attributeId: string;
  value: string;
  slug: string;
  isGroup?: boolean;
  contains?: Prisma.AttributeOptionCreatecontainsInput | string[];
};

export type AttributeOptionCreateOrConnectWithoutAssignedUsersInput = {
  where: Prisma.AttributeOptionWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.AttributeOptionCreateWithoutAssignedUsersInput,
    Prisma.AttributeOptionUncheckedCreateWithoutAssignedUsersInput
  >;
};

export type AttributeOptionUpsertWithoutAssignedUsersInput = {
  update: Prisma.XOR<
    Prisma.AttributeOptionUpdateWithoutAssignedUsersInput,
    Prisma.AttributeOptionUncheckedUpdateWithoutAssignedUsersInput
  >;
  create: Prisma.XOR<
    Prisma.AttributeOptionCreateWithoutAssignedUsersInput,
    Prisma.AttributeOptionUncheckedCreateWithoutAssignedUsersInput
  >;
  where?: Prisma.AttributeOptionWhereInput;
};

export type AttributeOptionUpdateToOneWithWhereWithoutAssignedUsersInput = {
  where?: Prisma.AttributeOptionWhereInput;
  data: Prisma.XOR<
    Prisma.AttributeOptionUpdateWithoutAssignedUsersInput,
    Prisma.AttributeOptionUncheckedUpdateWithoutAssignedUsersInput
  >;
};

export type AttributeOptionUpdateWithoutAssignedUsersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  isGroup?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  contains?: Prisma.AttributeOptionUpdatecontainsInput | string[];
  attribute?: Prisma.AttributeUpdateOneRequiredWithoutOptionsNestedInput;
};

export type AttributeOptionUncheckedUpdateWithoutAssignedUsersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  attributeId?: Prisma.StringFieldUpdateOperationsInput | string;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  isGroup?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  contains?: Prisma.AttributeOptionUpdatecontainsInput | string[];
};

export type AttributeOptionCreateManyAttributeInput = {
  id?: string;
  value: string;
  slug: string;
  isGroup?: boolean;
  contains?: Prisma.AttributeOptionCreatecontainsInput | string[];
};

export type AttributeOptionUpdateWithoutAttributeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  isGroup?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  contains?: Prisma.AttributeOptionUpdatecontainsInput | string[];
  assignedUsers?: Prisma.AttributeToUserUpdateManyWithoutAttributeOptionNestedInput;
};

export type AttributeOptionUncheckedUpdateWithoutAttributeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  isGroup?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  contains?: Prisma.AttributeOptionUpdatecontainsInput | string[];
  assignedUsers?: Prisma.AttributeToUserUncheckedUpdateManyWithoutAttributeOptionNestedInput;
};

export type AttributeOptionUncheckedUpdateManyWithoutAttributeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  slug?: Prisma.StringFieldUpdateOperationsInput | string;
  isGroup?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  contains?: Prisma.AttributeOptionUpdatecontainsInput | string[];
};

/**
 * Count Type AttributeOptionCountOutputType
 */

export type AttributeOptionCountOutputType = {
  assignedUsers: number;
};

export type AttributeOptionCountOutputTypeSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  assignedUsers?: boolean | AttributeOptionCountOutputTypeCountAssignedUsersArgs;
};

/**
 * AttributeOptionCountOutputType without action
 */
export type AttributeOptionCountOutputTypeDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AttributeOptionCountOutputType
   */
  select?: Prisma.AttributeOptionCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * AttributeOptionCountOutputType without action
 */
export type AttributeOptionCountOutputTypeCountAssignedUsersArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.AttributeToUserWhereInput;
};

export type AttributeOptionSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    attributeId?: boolean;
    value?: boolean;
    slug?: boolean;
    isGroup?: boolean;
    contains?: boolean;
    attribute?: boolean | Prisma.AttributeDefaultArgs<ExtArgs>;
    assignedUsers?: boolean | Prisma.AttributeOption$assignedUsersArgs<ExtArgs>;
    _count?: boolean | Prisma.AttributeOptionCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["attributeOption"]
>;

export type AttributeOptionSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    attributeId?: boolean;
    value?: boolean;
    slug?: boolean;
    isGroup?: boolean;
    contains?: boolean;
    attribute?: boolean | Prisma.AttributeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["attributeOption"]
>;

export type AttributeOptionSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    attributeId?: boolean;
    value?: boolean;
    slug?: boolean;
    isGroup?: boolean;
    contains?: boolean;
    attribute?: boolean | Prisma.AttributeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["attributeOption"]
>;

export type AttributeOptionSelectScalar = {
  id?: boolean;
  attributeId?: boolean;
  value?: boolean;
  slug?: boolean;
  isGroup?: boolean;
  contains?: boolean;
};

export type AttributeOptionOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  "id" | "attributeId" | "value" | "slug" | "isGroup" | "contains",
  ExtArgs["result"]["attributeOption"]
>;
export type AttributeOptionInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  attribute?: boolean | Prisma.AttributeDefaultArgs<ExtArgs>;
  assignedUsers?: boolean | Prisma.AttributeOption$assignedUsersArgs<ExtArgs>;
  _count?: boolean | Prisma.AttributeOptionCountOutputTypeDefaultArgs<ExtArgs>;
};
export type AttributeOptionIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  attribute?: boolean | Prisma.AttributeDefaultArgs<ExtArgs>;
};
export type AttributeOptionIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  attribute?: boolean | Prisma.AttributeDefaultArgs<ExtArgs>;
};

export type $AttributeOptionPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "AttributeOption";
  objects: {
    attribute: Prisma.$AttributePayload<ExtArgs>;
    assignedUsers: Prisma.$AttributeToUserPayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      attributeId: string;
      value: string;
      slug: string;
      isGroup: boolean;
      contains: string[];
    },
    ExtArgs["result"]["attributeOption"]
  >;
  composites: {};
};

export type AttributeOptionGetPayload<S extends boolean | null | undefined | AttributeOptionDefaultArgs> =
  runtime.Types.Result.GetResult<Prisma.$AttributeOptionPayload, S>;

export type AttributeOptionCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<AttributeOptionFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: AttributeOptionCountAggregateInputType | true;
};

export interface AttributeOptionDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["AttributeOption"];
    meta: { name: "AttributeOption" };
  };
  /**
   * Find zero or one AttributeOption that matches the filter.
   * @param {AttributeOptionFindUniqueArgs} args - Arguments to find a AttributeOption
   * @example
   * // Get one AttributeOption
   * const attributeOption = await prisma.attributeOption.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AttributeOptionFindUniqueArgs>(
    args: Prisma.SelectSubset<T, AttributeOptionFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__AttributeOptionClient<
    runtime.Types.Result.GetResult<
      Prisma.$AttributeOptionPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one AttributeOption that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AttributeOptionFindUniqueOrThrowArgs} args - Arguments to find a AttributeOption
   * @example
   * // Get one AttributeOption
   * const attributeOption = await prisma.attributeOption.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AttributeOptionFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, AttributeOptionFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__AttributeOptionClient<
    runtime.Types.Result.GetResult<
      Prisma.$AttributeOptionPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first AttributeOption that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AttributeOptionFindFirstArgs} args - Arguments to find a AttributeOption
   * @example
   * // Get one AttributeOption
   * const attributeOption = await prisma.attributeOption.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AttributeOptionFindFirstArgs>(
    args?: Prisma.SelectSubset<T, AttributeOptionFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__AttributeOptionClient<
    runtime.Types.Result.GetResult<
      Prisma.$AttributeOptionPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first AttributeOption that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AttributeOptionFindFirstOrThrowArgs} args - Arguments to find a AttributeOption
   * @example
   * // Get one AttributeOption
   * const attributeOption = await prisma.attributeOption.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AttributeOptionFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, AttributeOptionFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__AttributeOptionClient<
    runtime.Types.Result.GetResult<
      Prisma.$AttributeOptionPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more AttributeOptions that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AttributeOptionFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all AttributeOptions
   * const attributeOptions = await prisma.attributeOption.findMany()
   *
   * // Get first 10 AttributeOptions
   * const attributeOptions = await prisma.attributeOption.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const attributeOptionWithIdOnly = await prisma.attributeOption.findMany({ select: { id: true } })
   *
   */
  findMany<T extends AttributeOptionFindManyArgs>(
    args?: Prisma.SelectSubset<T, AttributeOptionFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$AttributeOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>
  >;

  /**
   * Create a AttributeOption.
   * @param {AttributeOptionCreateArgs} args - Arguments to create a AttributeOption.
   * @example
   * // Create one AttributeOption
   * const AttributeOption = await prisma.attributeOption.create({
   *   data: {
   *     // ... data to create a AttributeOption
   *   }
   * })
   *
   */
  create<T extends AttributeOptionCreateArgs>(
    args: Prisma.SelectSubset<T, AttributeOptionCreateArgs<ExtArgs>>
  ): Prisma.Prisma__AttributeOptionClient<
    runtime.Types.Result.GetResult<Prisma.$AttributeOptionPayload<ExtArgs>, T, "create", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many AttributeOptions.
   * @param {AttributeOptionCreateManyArgs} args - Arguments to create many AttributeOptions.
   * @example
   * // Create many AttributeOptions
   * const attributeOption = await prisma.attributeOption.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends AttributeOptionCreateManyArgs>(
    args?: Prisma.SelectSubset<T, AttributeOptionCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many AttributeOptions and returns the data saved in the database.
   * @param {AttributeOptionCreateManyAndReturnArgs} args - Arguments to create many AttributeOptions.
   * @example
   * // Create many AttributeOptions
   * const attributeOption = await prisma.attributeOption.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many AttributeOptions and only return the `id`
   * const attributeOptionWithIdOnly = await prisma.attributeOption.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends AttributeOptionCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, AttributeOptionCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AttributeOptionPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a AttributeOption.
   * @param {AttributeOptionDeleteArgs} args - Arguments to delete one AttributeOption.
   * @example
   * // Delete one AttributeOption
   * const AttributeOption = await prisma.attributeOption.delete({
   *   where: {
   *     // ... filter to delete one AttributeOption
   *   }
   * })
   *
   */
  delete<T extends AttributeOptionDeleteArgs>(
    args: Prisma.SelectSubset<T, AttributeOptionDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__AttributeOptionClient<
    runtime.Types.Result.GetResult<Prisma.$AttributeOptionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one AttributeOption.
   * @param {AttributeOptionUpdateArgs} args - Arguments to update one AttributeOption.
   * @example
   * // Update one AttributeOption
   * const attributeOption = await prisma.attributeOption.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends AttributeOptionUpdateArgs>(
    args: Prisma.SelectSubset<T, AttributeOptionUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__AttributeOptionClient<
    runtime.Types.Result.GetResult<Prisma.$AttributeOptionPayload<ExtArgs>, T, "update", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more AttributeOptions.
   * @param {AttributeOptionDeleteManyArgs} args - Arguments to filter AttributeOptions to delete.
   * @example
   * // Delete a few AttributeOptions
   * const { count } = await prisma.attributeOption.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends AttributeOptionDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, AttributeOptionDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more AttributeOptions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AttributeOptionUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many AttributeOptions
   * const attributeOption = await prisma.attributeOption.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends AttributeOptionUpdateManyArgs>(
    args: Prisma.SelectSubset<T, AttributeOptionUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more AttributeOptions and returns the data updated in the database.
   * @param {AttributeOptionUpdateManyAndReturnArgs} args - Arguments to update many AttributeOptions.
   * @example
   * // Update many AttributeOptions
   * const attributeOption = await prisma.attributeOption.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more AttributeOptions and only return the `id`
   * const attributeOptionWithIdOnly = await prisma.attributeOption.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends AttributeOptionUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, AttributeOptionUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$AttributeOptionPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one AttributeOption.
   * @param {AttributeOptionUpsertArgs} args - Arguments to update or create a AttributeOption.
   * @example
   * // Update or create a AttributeOption
   * const attributeOption = await prisma.attributeOption.upsert({
   *   create: {
   *     // ... data to create a AttributeOption
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the AttributeOption we want to update
   *   }
   * })
   */
  upsert<T extends AttributeOptionUpsertArgs>(
    args: Prisma.SelectSubset<T, AttributeOptionUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__AttributeOptionClient<
    runtime.Types.Result.GetResult<Prisma.$AttributeOptionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of AttributeOptions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AttributeOptionCountArgs} args - Arguments to filter AttributeOptions to count.
   * @example
   * // Count the number of AttributeOptions
   * const count = await prisma.attributeOption.count({
   *   where: {
   *     // ... the filter for the AttributeOptions we want to count
   *   }
   * })
   **/
  count<T extends AttributeOptionCountArgs>(
    args?: Prisma.Subset<T, AttributeOptionCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], AttributeOptionCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a AttributeOption.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AttributeOptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends AttributeOptionAggregateArgs>(
    args: Prisma.Subset<T, AttributeOptionAggregateArgs>
  ): Prisma.PrismaPromise<GetAttributeOptionAggregateType<T>>;

  /**
   * Group by AttributeOption.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AttributeOptionGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends AttributeOptionGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AttributeOptionGroupByArgs["orderBy"] }
      : { orderBy?: AttributeOptionGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, AttributeOptionGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetAttributeOptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the AttributeOption model
   */
  readonly fields: AttributeOptionFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for AttributeOption.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AttributeOptionClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  attribute<T extends Prisma.AttributeDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.AttributeDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__AttributeClient<
    | runtime.Types.Result.GetResult<
        Prisma.$AttributePayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  assignedUsers<T extends Prisma.AttributeOption$assignedUsersArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.AttributeOption$assignedUsersArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$AttributeToUserPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the AttributeOption model
 */
export interface AttributeOptionFieldRefs {
  readonly id: Prisma.FieldRef<"AttributeOption", "String">;
  readonly attributeId: Prisma.FieldRef<"AttributeOption", "String">;
  readonly value: Prisma.FieldRef<"AttributeOption", "String">;
  readonly slug: Prisma.FieldRef<"AttributeOption", "String">;
  readonly isGroup: Prisma.FieldRef<"AttributeOption", "Boolean">;
  readonly contains: Prisma.FieldRef<"AttributeOption", "String[]">;
}

// Custom InputTypes
/**
 * AttributeOption findUnique
 */
export type AttributeOptionFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AttributeOption
   */
  select?: Prisma.AttributeOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AttributeOption
   */
  omit?: Prisma.AttributeOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttributeOptionInclude<ExtArgs> | null;
  /**
   * Filter, which AttributeOption to fetch.
   */
  where: Prisma.AttributeOptionWhereUniqueInput;
};

/**
 * AttributeOption findUniqueOrThrow
 */
export type AttributeOptionFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AttributeOption
   */
  select?: Prisma.AttributeOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AttributeOption
   */
  omit?: Prisma.AttributeOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttributeOptionInclude<ExtArgs> | null;
  /**
   * Filter, which AttributeOption to fetch.
   */
  where: Prisma.AttributeOptionWhereUniqueInput;
};

/**
 * AttributeOption findFirst
 */
export type AttributeOptionFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AttributeOption
   */
  select?: Prisma.AttributeOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AttributeOption
   */
  omit?: Prisma.AttributeOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttributeOptionInclude<ExtArgs> | null;
  /**
   * Filter, which AttributeOption to fetch.
   */
  where?: Prisma.AttributeOptionWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AttributeOptions to fetch.
   */
  orderBy?: Prisma.AttributeOptionOrderByWithRelationInput | Prisma.AttributeOptionOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for AttributeOptions.
   */
  cursor?: Prisma.AttributeOptionWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AttributeOptions from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AttributeOptions.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of AttributeOptions.
   */
  distinct?: Prisma.AttributeOptionScalarFieldEnum | Prisma.AttributeOptionScalarFieldEnum[];
};

/**
 * AttributeOption findFirstOrThrow
 */
export type AttributeOptionFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AttributeOption
   */
  select?: Prisma.AttributeOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AttributeOption
   */
  omit?: Prisma.AttributeOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttributeOptionInclude<ExtArgs> | null;
  /**
   * Filter, which AttributeOption to fetch.
   */
  where?: Prisma.AttributeOptionWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AttributeOptions to fetch.
   */
  orderBy?: Prisma.AttributeOptionOrderByWithRelationInput | Prisma.AttributeOptionOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for AttributeOptions.
   */
  cursor?: Prisma.AttributeOptionWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AttributeOptions from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AttributeOptions.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of AttributeOptions.
   */
  distinct?: Prisma.AttributeOptionScalarFieldEnum | Prisma.AttributeOptionScalarFieldEnum[];
};

/**
 * AttributeOption findMany
 */
export type AttributeOptionFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AttributeOption
   */
  select?: Prisma.AttributeOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AttributeOption
   */
  omit?: Prisma.AttributeOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttributeOptionInclude<ExtArgs> | null;
  /**
   * Filter, which AttributeOptions to fetch.
   */
  where?: Prisma.AttributeOptionWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of AttributeOptions to fetch.
   */
  orderBy?: Prisma.AttributeOptionOrderByWithRelationInput | Prisma.AttributeOptionOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing AttributeOptions.
   */
  cursor?: Prisma.AttributeOptionWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` AttributeOptions from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` AttributeOptions.
   */
  skip?: number;
  distinct?: Prisma.AttributeOptionScalarFieldEnum | Prisma.AttributeOptionScalarFieldEnum[];
};

/**
 * AttributeOption create
 */
export type AttributeOptionCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AttributeOption
   */
  select?: Prisma.AttributeOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AttributeOption
   */
  omit?: Prisma.AttributeOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttributeOptionInclude<ExtArgs> | null;
  /**
   * The data needed to create a AttributeOption.
   */
  data: Prisma.XOR<Prisma.AttributeOptionCreateInput, Prisma.AttributeOptionUncheckedCreateInput>;
};

/**
 * AttributeOption createMany
 */
export type AttributeOptionCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many AttributeOptions.
   */
  data: Prisma.AttributeOptionCreateManyInput | Prisma.AttributeOptionCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * AttributeOption createManyAndReturn
 */
export type AttributeOptionCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AttributeOption
   */
  select?: Prisma.AttributeOptionSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the AttributeOption
   */
  omit?: Prisma.AttributeOptionOmit<ExtArgs> | null;
  /**
   * The data used to create many AttributeOptions.
   */
  data: Prisma.AttributeOptionCreateManyInput | Prisma.AttributeOptionCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttributeOptionIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * AttributeOption update
 */
export type AttributeOptionUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AttributeOption
   */
  select?: Prisma.AttributeOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AttributeOption
   */
  omit?: Prisma.AttributeOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttributeOptionInclude<ExtArgs> | null;
  /**
   * The data needed to update a AttributeOption.
   */
  data: Prisma.XOR<Prisma.AttributeOptionUpdateInput, Prisma.AttributeOptionUncheckedUpdateInput>;
  /**
   * Choose, which AttributeOption to update.
   */
  where: Prisma.AttributeOptionWhereUniqueInput;
};

/**
 * AttributeOption updateMany
 */
export type AttributeOptionUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update AttributeOptions.
   */
  data: Prisma.XOR<
    Prisma.AttributeOptionUpdateManyMutationInput,
    Prisma.AttributeOptionUncheckedUpdateManyInput
  >;
  /**
   * Filter which AttributeOptions to update
   */
  where?: Prisma.AttributeOptionWhereInput;
  /**
   * Limit how many AttributeOptions to update.
   */
  limit?: number;
};

/**
 * AttributeOption updateManyAndReturn
 */
export type AttributeOptionUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AttributeOption
   */
  select?: Prisma.AttributeOptionSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the AttributeOption
   */
  omit?: Prisma.AttributeOptionOmit<ExtArgs> | null;
  /**
   * The data used to update AttributeOptions.
   */
  data: Prisma.XOR<
    Prisma.AttributeOptionUpdateManyMutationInput,
    Prisma.AttributeOptionUncheckedUpdateManyInput
  >;
  /**
   * Filter which AttributeOptions to update
   */
  where?: Prisma.AttributeOptionWhereInput;
  /**
   * Limit how many AttributeOptions to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttributeOptionIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * AttributeOption upsert
 */
export type AttributeOptionUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AttributeOption
   */
  select?: Prisma.AttributeOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AttributeOption
   */
  omit?: Prisma.AttributeOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttributeOptionInclude<ExtArgs> | null;
  /**
   * The filter to search for the AttributeOption to update in case it exists.
   */
  where: Prisma.AttributeOptionWhereUniqueInput;
  /**
   * In case the AttributeOption found by the `where` argument doesn't exist, create a new AttributeOption with this data.
   */
  create: Prisma.XOR<Prisma.AttributeOptionCreateInput, Prisma.AttributeOptionUncheckedCreateInput>;
  /**
   * In case the AttributeOption was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.AttributeOptionUpdateInput, Prisma.AttributeOptionUncheckedUpdateInput>;
};

/**
 * AttributeOption delete
 */
export type AttributeOptionDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AttributeOption
   */
  select?: Prisma.AttributeOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AttributeOption
   */
  omit?: Prisma.AttributeOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttributeOptionInclude<ExtArgs> | null;
  /**
   * Filter which AttributeOption to delete.
   */
  where: Prisma.AttributeOptionWhereUniqueInput;
};

/**
 * AttributeOption deleteMany
 */
export type AttributeOptionDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which AttributeOptions to delete
   */
  where?: Prisma.AttributeOptionWhereInput;
  /**
   * Limit how many AttributeOptions to delete.
   */
  limit?: number;
};

/**
 * AttributeOption.assignedUsers
 */
export type AttributeOption$assignedUsersArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AttributeToUser
   */
  select?: Prisma.AttributeToUserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AttributeToUser
   */
  omit?: Prisma.AttributeToUserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttributeToUserInclude<ExtArgs> | null;
  where?: Prisma.AttributeToUserWhereInput;
  orderBy?: Prisma.AttributeToUserOrderByWithRelationInput | Prisma.AttributeToUserOrderByWithRelationInput[];
  cursor?: Prisma.AttributeToUserWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.AttributeToUserScalarFieldEnum | Prisma.AttributeToUserScalarFieldEnum[];
};

/**
 * AttributeOption without action
 */
export type AttributeOptionDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AttributeOption
   */
  select?: Prisma.AttributeOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AttributeOption
   */
  omit?: Prisma.AttributeOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttributeOptionInclude<ExtArgs> | null;
};
