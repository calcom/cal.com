/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `Host` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model Host
 *
 */
export type HostModel = runtime.Types.Result.DefaultSelection<Prisma.$HostPayload>;

export type AggregateHost = {
  _count: HostCountAggregateOutputType | null;
  _avg: HostAvgAggregateOutputType | null;
  _sum: HostSumAggregateOutputType | null;
  _min: HostMinAggregateOutputType | null;
  _max: HostMaxAggregateOutputType | null;
};

export type HostAvgAggregateOutputType = {
  userId: number | null;
  eventTypeId: number | null;
  priority: number | null;
  weight: number | null;
  weightAdjustment: number | null;
  scheduleId: number | null;
  memberId: number | null;
};

export type HostSumAggregateOutputType = {
  userId: number | null;
  eventTypeId: number | null;
  priority: number | null;
  weight: number | null;
  weightAdjustment: number | null;
  scheduleId: number | null;
  memberId: number | null;
};

export type HostMinAggregateOutputType = {
  userId: number | null;
  eventTypeId: number | null;
  isFixed: boolean | null;
  priority: number | null;
  weight: number | null;
  weightAdjustment: number | null;
  scheduleId: number | null;
  createdAt: Date | null;
  groupId: string | null;
  memberId: number | null;
};

export type HostMaxAggregateOutputType = {
  userId: number | null;
  eventTypeId: number | null;
  isFixed: boolean | null;
  priority: number | null;
  weight: number | null;
  weightAdjustment: number | null;
  scheduleId: number | null;
  createdAt: Date | null;
  groupId: string | null;
  memberId: number | null;
};

export type HostCountAggregateOutputType = {
  userId: number;
  eventTypeId: number;
  isFixed: number;
  priority: number;
  weight: number;
  weightAdjustment: number;
  scheduleId: number;
  createdAt: number;
  groupId: number;
  memberId: number;
  _all: number;
};

export type HostAvgAggregateInputType = {
  userId?: true;
  eventTypeId?: true;
  priority?: true;
  weight?: true;
  weightAdjustment?: true;
  scheduleId?: true;
  memberId?: true;
};

export type HostSumAggregateInputType = {
  userId?: true;
  eventTypeId?: true;
  priority?: true;
  weight?: true;
  weightAdjustment?: true;
  scheduleId?: true;
  memberId?: true;
};

export type HostMinAggregateInputType = {
  userId?: true;
  eventTypeId?: true;
  isFixed?: true;
  priority?: true;
  weight?: true;
  weightAdjustment?: true;
  scheduleId?: true;
  createdAt?: true;
  groupId?: true;
  memberId?: true;
};

export type HostMaxAggregateInputType = {
  userId?: true;
  eventTypeId?: true;
  isFixed?: true;
  priority?: true;
  weight?: true;
  weightAdjustment?: true;
  scheduleId?: true;
  createdAt?: true;
  groupId?: true;
  memberId?: true;
};

export type HostCountAggregateInputType = {
  userId?: true;
  eventTypeId?: true;
  isFixed?: true;
  priority?: true;
  weight?: true;
  weightAdjustment?: true;
  scheduleId?: true;
  createdAt?: true;
  groupId?: true;
  memberId?: true;
  _all?: true;
};

export type HostAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which Host to aggregate.
   */
  where?: Prisma.HostWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Hosts to fetch.
   */
  orderBy?: Prisma.HostOrderByWithRelationInput | Prisma.HostOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.HostWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Hosts from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Hosts.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned Hosts
   **/
  _count?: true | HostCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: HostAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: HostSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: HostMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: HostMaxAggregateInputType;
};

export type GetHostAggregateType<T extends HostAggregateArgs> = {
  [P in keyof T & keyof AggregateHost]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateHost[P]>
    : Prisma.GetScalarType<T[P], AggregateHost[P]>;
};

export type HostGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.HostWhereInput;
  orderBy?: Prisma.HostOrderByWithAggregationInput | Prisma.HostOrderByWithAggregationInput[];
  by: Prisma.HostScalarFieldEnum[] | Prisma.HostScalarFieldEnum;
  having?: Prisma.HostScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: HostCountAggregateInputType | true;
  _avg?: HostAvgAggregateInputType;
  _sum?: HostSumAggregateInputType;
  _min?: HostMinAggregateInputType;
  _max?: HostMaxAggregateInputType;
};

export type HostGroupByOutputType = {
  userId: number;
  eventTypeId: number;
  isFixed: boolean;
  priority: number | null;
  weight: number | null;
  weightAdjustment: number | null;
  scheduleId: number | null;
  createdAt: Date;
  groupId: string | null;
  memberId: number | null;
  _count: HostCountAggregateOutputType | null;
  _avg: HostAvgAggregateOutputType | null;
  _sum: HostSumAggregateOutputType | null;
  _min: HostMinAggregateOutputType | null;
  _max: HostMaxAggregateOutputType | null;
};

type GetHostGroupByPayload<T extends HostGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<HostGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof HostGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], HostGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], HostGroupByOutputType[P]>;
    }
  >
>;

export type HostWhereInput = {
  AND?: Prisma.HostWhereInput | Prisma.HostWhereInput[];
  OR?: Prisma.HostWhereInput[];
  NOT?: Prisma.HostWhereInput | Prisma.HostWhereInput[];
  userId?: Prisma.IntFilter<"Host"> | number;
  eventTypeId?: Prisma.IntFilter<"Host"> | number;
  isFixed?: Prisma.BoolFilter<"Host"> | boolean;
  priority?: Prisma.IntNullableFilter<"Host"> | number | null;
  weight?: Prisma.IntNullableFilter<"Host"> | number | null;
  weightAdjustment?: Prisma.IntNullableFilter<"Host"> | number | null;
  scheduleId?: Prisma.IntNullableFilter<"Host"> | number | null;
  createdAt?: Prisma.DateTimeFilter<"Host"> | Date | string;
  groupId?: Prisma.StringNullableFilter<"Host"> | string | null;
  memberId?: Prisma.IntNullableFilter<"Host"> | number | null;
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
  eventType?: Prisma.XOR<Prisma.EventTypeScalarRelationFilter, Prisma.EventTypeWhereInput>;
  schedule?: Prisma.XOR<Prisma.ScheduleNullableScalarRelationFilter, Prisma.ScheduleWhereInput> | null;
  group?: Prisma.XOR<Prisma.HostGroupNullableScalarRelationFilter, Prisma.HostGroupWhereInput> | null;
  member?: Prisma.XOR<Prisma.MembershipNullableScalarRelationFilter, Prisma.MembershipWhereInput> | null;
};

export type HostOrderByWithRelationInput = {
  userId?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  isFixed?: Prisma.SortOrder;
  priority?: Prisma.SortOrderInput | Prisma.SortOrder;
  weight?: Prisma.SortOrderInput | Prisma.SortOrder;
  weightAdjustment?: Prisma.SortOrderInput | Prisma.SortOrder;
  scheduleId?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  groupId?: Prisma.SortOrderInput | Prisma.SortOrder;
  memberId?: Prisma.SortOrderInput | Prisma.SortOrder;
  user?: Prisma.UserOrderByWithRelationInput;
  eventType?: Prisma.EventTypeOrderByWithRelationInput;
  schedule?: Prisma.ScheduleOrderByWithRelationInput;
  group?: Prisma.HostGroupOrderByWithRelationInput;
  member?: Prisma.MembershipOrderByWithRelationInput;
};

export type HostWhereUniqueInput = Prisma.AtLeast<
  {
    userId_eventTypeId?: Prisma.HostUserIdEventTypeIdCompoundUniqueInput;
    AND?: Prisma.HostWhereInput | Prisma.HostWhereInput[];
    OR?: Prisma.HostWhereInput[];
    NOT?: Prisma.HostWhereInput | Prisma.HostWhereInput[];
    userId?: Prisma.IntFilter<"Host"> | number;
    eventTypeId?: Prisma.IntFilter<"Host"> | number;
    isFixed?: Prisma.BoolFilter<"Host"> | boolean;
    priority?: Prisma.IntNullableFilter<"Host"> | number | null;
    weight?: Prisma.IntNullableFilter<"Host"> | number | null;
    weightAdjustment?: Prisma.IntNullableFilter<"Host"> | number | null;
    scheduleId?: Prisma.IntNullableFilter<"Host"> | number | null;
    createdAt?: Prisma.DateTimeFilter<"Host"> | Date | string;
    groupId?: Prisma.StringNullableFilter<"Host"> | string | null;
    memberId?: Prisma.IntNullableFilter<"Host"> | number | null;
    user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
    eventType?: Prisma.XOR<Prisma.EventTypeScalarRelationFilter, Prisma.EventTypeWhereInput>;
    schedule?: Prisma.XOR<Prisma.ScheduleNullableScalarRelationFilter, Prisma.ScheduleWhereInput> | null;
    group?: Prisma.XOR<Prisma.HostGroupNullableScalarRelationFilter, Prisma.HostGroupWhereInput> | null;
    member?: Prisma.XOR<Prisma.MembershipNullableScalarRelationFilter, Prisma.MembershipWhereInput> | null;
  },
  "userId_eventTypeId"
>;

export type HostOrderByWithAggregationInput = {
  userId?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  isFixed?: Prisma.SortOrder;
  priority?: Prisma.SortOrderInput | Prisma.SortOrder;
  weight?: Prisma.SortOrderInput | Prisma.SortOrder;
  weightAdjustment?: Prisma.SortOrderInput | Prisma.SortOrder;
  scheduleId?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  groupId?: Prisma.SortOrderInput | Prisma.SortOrder;
  memberId?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.HostCountOrderByAggregateInput;
  _avg?: Prisma.HostAvgOrderByAggregateInput;
  _max?: Prisma.HostMaxOrderByAggregateInput;
  _min?: Prisma.HostMinOrderByAggregateInput;
  _sum?: Prisma.HostSumOrderByAggregateInput;
};

export type HostScalarWhereWithAggregatesInput = {
  AND?: Prisma.HostScalarWhereWithAggregatesInput | Prisma.HostScalarWhereWithAggregatesInput[];
  OR?: Prisma.HostScalarWhereWithAggregatesInput[];
  NOT?: Prisma.HostScalarWhereWithAggregatesInput | Prisma.HostScalarWhereWithAggregatesInput[];
  userId?: Prisma.IntWithAggregatesFilter<"Host"> | number;
  eventTypeId?: Prisma.IntWithAggregatesFilter<"Host"> | number;
  isFixed?: Prisma.BoolWithAggregatesFilter<"Host"> | boolean;
  priority?: Prisma.IntNullableWithAggregatesFilter<"Host"> | number | null;
  weight?: Prisma.IntNullableWithAggregatesFilter<"Host"> | number | null;
  weightAdjustment?: Prisma.IntNullableWithAggregatesFilter<"Host"> | number | null;
  scheduleId?: Prisma.IntNullableWithAggregatesFilter<"Host"> | number | null;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Host"> | Date | string;
  groupId?: Prisma.StringNullableWithAggregatesFilter<"Host"> | string | null;
  memberId?: Prisma.IntNullableWithAggregatesFilter<"Host"> | number | null;
};

export type HostCreateInput = {
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  createdAt?: Date | string;
  user: Prisma.UserCreateNestedOneWithoutHostsInput;
  eventType: Prisma.EventTypeCreateNestedOneWithoutHostsInput;
  schedule?: Prisma.ScheduleCreateNestedOneWithoutHostInput;
  group?: Prisma.HostGroupCreateNestedOneWithoutHostsInput;
  member?: Prisma.MembershipCreateNestedOneWithoutHostInput;
};

export type HostUncheckedCreateInput = {
  userId: number;
  eventTypeId: number;
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  scheduleId?: number | null;
  createdAt?: Date | string;
  groupId?: string | null;
  memberId?: number | null;
};

export type HostUpdateInput = {
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  user?: Prisma.UserUpdateOneRequiredWithoutHostsNestedInput;
  eventType?: Prisma.EventTypeUpdateOneRequiredWithoutHostsNestedInput;
  schedule?: Prisma.ScheduleUpdateOneWithoutHostNestedInput;
  group?: Prisma.HostGroupUpdateOneWithoutHostsNestedInput;
  member?: Prisma.MembershipUpdateOneWithoutHostNestedInput;
};

export type HostUncheckedUpdateInput = {
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  scheduleId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  groupId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  memberId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type HostCreateManyInput = {
  userId: number;
  eventTypeId: number;
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  scheduleId?: number | null;
  createdAt?: Date | string;
  groupId?: string | null;
  memberId?: number | null;
};

export type HostUpdateManyMutationInput = {
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type HostUncheckedUpdateManyInput = {
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  scheduleId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  groupId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  memberId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type HostUserIdEventTypeIdCompoundUniqueInput = {
  userId: number;
  eventTypeId: number;
};

export type HostCountOrderByAggregateInput = {
  userId?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  isFixed?: Prisma.SortOrder;
  priority?: Prisma.SortOrder;
  weight?: Prisma.SortOrder;
  weightAdjustment?: Prisma.SortOrder;
  scheduleId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  groupId?: Prisma.SortOrder;
  memberId?: Prisma.SortOrder;
};

export type HostAvgOrderByAggregateInput = {
  userId?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  priority?: Prisma.SortOrder;
  weight?: Prisma.SortOrder;
  weightAdjustment?: Prisma.SortOrder;
  scheduleId?: Prisma.SortOrder;
  memberId?: Prisma.SortOrder;
};

export type HostMaxOrderByAggregateInput = {
  userId?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  isFixed?: Prisma.SortOrder;
  priority?: Prisma.SortOrder;
  weight?: Prisma.SortOrder;
  weightAdjustment?: Prisma.SortOrder;
  scheduleId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  groupId?: Prisma.SortOrder;
  memberId?: Prisma.SortOrder;
};

export type HostMinOrderByAggregateInput = {
  userId?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  isFixed?: Prisma.SortOrder;
  priority?: Prisma.SortOrder;
  weight?: Prisma.SortOrder;
  weightAdjustment?: Prisma.SortOrder;
  scheduleId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  groupId?: Prisma.SortOrder;
  memberId?: Prisma.SortOrder;
};

export type HostSumOrderByAggregateInput = {
  userId?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  priority?: Prisma.SortOrder;
  weight?: Prisma.SortOrder;
  weightAdjustment?: Prisma.SortOrder;
  scheduleId?: Prisma.SortOrder;
  memberId?: Prisma.SortOrder;
};

export type HostListRelationFilter = {
  every?: Prisma.HostWhereInput;
  some?: Prisma.HostWhereInput;
  none?: Prisma.HostWhereInput;
};

export type HostOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type BoolFieldUpdateOperationsInput = {
  set?: boolean;
};

export type NullableIntFieldUpdateOperationsInput = {
  set?: number | null;
  increment?: number;
  decrement?: number;
  multiply?: number;
  divide?: number;
};

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string;
};

export type IntFieldUpdateOperationsInput = {
  set?: number;
  increment?: number;
  decrement?: number;
  multiply?: number;
  divide?: number;
};

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null;
};

export type HostCreateNestedManyWithoutGroupInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutGroupInput, Prisma.HostUncheckedCreateWithoutGroupInput>
    | Prisma.HostCreateWithoutGroupInput[]
    | Prisma.HostUncheckedCreateWithoutGroupInput[];
  connectOrCreate?:
    | Prisma.HostCreateOrConnectWithoutGroupInput
    | Prisma.HostCreateOrConnectWithoutGroupInput[];
  createMany?: Prisma.HostCreateManyGroupInputEnvelope;
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
};

export type HostUncheckedCreateNestedManyWithoutGroupInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutGroupInput, Prisma.HostUncheckedCreateWithoutGroupInput>
    | Prisma.HostCreateWithoutGroupInput[]
    | Prisma.HostUncheckedCreateWithoutGroupInput[];
  connectOrCreate?:
    | Prisma.HostCreateOrConnectWithoutGroupInput
    | Prisma.HostCreateOrConnectWithoutGroupInput[];
  createMany?: Prisma.HostCreateManyGroupInputEnvelope;
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
};

export type HostUpdateManyWithoutGroupNestedInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutGroupInput, Prisma.HostUncheckedCreateWithoutGroupInput>
    | Prisma.HostCreateWithoutGroupInput[]
    | Prisma.HostUncheckedCreateWithoutGroupInput[];
  connectOrCreate?:
    | Prisma.HostCreateOrConnectWithoutGroupInput
    | Prisma.HostCreateOrConnectWithoutGroupInput[];
  upsert?:
    | Prisma.HostUpsertWithWhereUniqueWithoutGroupInput
    | Prisma.HostUpsertWithWhereUniqueWithoutGroupInput[];
  createMany?: Prisma.HostCreateManyGroupInputEnvelope;
  set?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  disconnect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  delete?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  update?:
    | Prisma.HostUpdateWithWhereUniqueWithoutGroupInput
    | Prisma.HostUpdateWithWhereUniqueWithoutGroupInput[];
  updateMany?:
    | Prisma.HostUpdateManyWithWhereWithoutGroupInput
    | Prisma.HostUpdateManyWithWhereWithoutGroupInput[];
  deleteMany?: Prisma.HostScalarWhereInput | Prisma.HostScalarWhereInput[];
};

export type HostUncheckedUpdateManyWithoutGroupNestedInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutGroupInput, Prisma.HostUncheckedCreateWithoutGroupInput>
    | Prisma.HostCreateWithoutGroupInput[]
    | Prisma.HostUncheckedCreateWithoutGroupInput[];
  connectOrCreate?:
    | Prisma.HostCreateOrConnectWithoutGroupInput
    | Prisma.HostCreateOrConnectWithoutGroupInput[];
  upsert?:
    | Prisma.HostUpsertWithWhereUniqueWithoutGroupInput
    | Prisma.HostUpsertWithWhereUniqueWithoutGroupInput[];
  createMany?: Prisma.HostCreateManyGroupInputEnvelope;
  set?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  disconnect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  delete?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  update?:
    | Prisma.HostUpdateWithWhereUniqueWithoutGroupInput
    | Prisma.HostUpdateWithWhereUniqueWithoutGroupInput[];
  updateMany?:
    | Prisma.HostUpdateManyWithWhereWithoutGroupInput
    | Prisma.HostUpdateManyWithWhereWithoutGroupInput[];
  deleteMany?: Prisma.HostScalarWhereInput | Prisma.HostScalarWhereInput[];
};

export type HostCreateNestedManyWithoutEventTypeInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutEventTypeInput, Prisma.HostUncheckedCreateWithoutEventTypeInput>
    | Prisma.HostCreateWithoutEventTypeInput[]
    | Prisma.HostUncheckedCreateWithoutEventTypeInput[];
  connectOrCreate?:
    | Prisma.HostCreateOrConnectWithoutEventTypeInput
    | Prisma.HostCreateOrConnectWithoutEventTypeInput[];
  createMany?: Prisma.HostCreateManyEventTypeInputEnvelope;
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
};

export type HostUncheckedCreateNestedManyWithoutEventTypeInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutEventTypeInput, Prisma.HostUncheckedCreateWithoutEventTypeInput>
    | Prisma.HostCreateWithoutEventTypeInput[]
    | Prisma.HostUncheckedCreateWithoutEventTypeInput[];
  connectOrCreate?:
    | Prisma.HostCreateOrConnectWithoutEventTypeInput
    | Prisma.HostCreateOrConnectWithoutEventTypeInput[];
  createMany?: Prisma.HostCreateManyEventTypeInputEnvelope;
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
};

export type HostUpdateManyWithoutEventTypeNestedInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutEventTypeInput, Prisma.HostUncheckedCreateWithoutEventTypeInput>
    | Prisma.HostCreateWithoutEventTypeInput[]
    | Prisma.HostUncheckedCreateWithoutEventTypeInput[];
  connectOrCreate?:
    | Prisma.HostCreateOrConnectWithoutEventTypeInput
    | Prisma.HostCreateOrConnectWithoutEventTypeInput[];
  upsert?:
    | Prisma.HostUpsertWithWhereUniqueWithoutEventTypeInput
    | Prisma.HostUpsertWithWhereUniqueWithoutEventTypeInput[];
  createMany?: Prisma.HostCreateManyEventTypeInputEnvelope;
  set?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  disconnect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  delete?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  update?:
    | Prisma.HostUpdateWithWhereUniqueWithoutEventTypeInput
    | Prisma.HostUpdateWithWhereUniqueWithoutEventTypeInput[];
  updateMany?:
    | Prisma.HostUpdateManyWithWhereWithoutEventTypeInput
    | Prisma.HostUpdateManyWithWhereWithoutEventTypeInput[];
  deleteMany?: Prisma.HostScalarWhereInput | Prisma.HostScalarWhereInput[];
};

export type HostUncheckedUpdateManyWithoutEventTypeNestedInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutEventTypeInput, Prisma.HostUncheckedCreateWithoutEventTypeInput>
    | Prisma.HostCreateWithoutEventTypeInput[]
    | Prisma.HostUncheckedCreateWithoutEventTypeInput[];
  connectOrCreate?:
    | Prisma.HostCreateOrConnectWithoutEventTypeInput
    | Prisma.HostCreateOrConnectWithoutEventTypeInput[];
  upsert?:
    | Prisma.HostUpsertWithWhereUniqueWithoutEventTypeInput
    | Prisma.HostUpsertWithWhereUniqueWithoutEventTypeInput[];
  createMany?: Prisma.HostCreateManyEventTypeInputEnvelope;
  set?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  disconnect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  delete?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  update?:
    | Prisma.HostUpdateWithWhereUniqueWithoutEventTypeInput
    | Prisma.HostUpdateWithWhereUniqueWithoutEventTypeInput[];
  updateMany?:
    | Prisma.HostUpdateManyWithWhereWithoutEventTypeInput
    | Prisma.HostUpdateManyWithWhereWithoutEventTypeInput[];
  deleteMany?: Prisma.HostScalarWhereInput | Prisma.HostScalarWhereInput[];
};

export type HostCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutUserInput, Prisma.HostUncheckedCreateWithoutUserInput>
    | Prisma.HostCreateWithoutUserInput[]
    | Prisma.HostUncheckedCreateWithoutUserInput[];
  connectOrCreate?: Prisma.HostCreateOrConnectWithoutUserInput | Prisma.HostCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.HostCreateManyUserInputEnvelope;
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
};

export type HostUncheckedCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutUserInput, Prisma.HostUncheckedCreateWithoutUserInput>
    | Prisma.HostCreateWithoutUserInput[]
    | Prisma.HostUncheckedCreateWithoutUserInput[];
  connectOrCreate?: Prisma.HostCreateOrConnectWithoutUserInput | Prisma.HostCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.HostCreateManyUserInputEnvelope;
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
};

export type HostUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutUserInput, Prisma.HostUncheckedCreateWithoutUserInput>
    | Prisma.HostCreateWithoutUserInput[]
    | Prisma.HostUncheckedCreateWithoutUserInput[];
  connectOrCreate?: Prisma.HostCreateOrConnectWithoutUserInput | Prisma.HostCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.HostUpsertWithWhereUniqueWithoutUserInput
    | Prisma.HostUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.HostCreateManyUserInputEnvelope;
  set?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  disconnect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  delete?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  update?:
    | Prisma.HostUpdateWithWhereUniqueWithoutUserInput
    | Prisma.HostUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.HostUpdateManyWithWhereWithoutUserInput
    | Prisma.HostUpdateManyWithWhereWithoutUserInput[];
  deleteMany?: Prisma.HostScalarWhereInput | Prisma.HostScalarWhereInput[];
};

export type HostUncheckedUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutUserInput, Prisma.HostUncheckedCreateWithoutUserInput>
    | Prisma.HostCreateWithoutUserInput[]
    | Prisma.HostUncheckedCreateWithoutUserInput[];
  connectOrCreate?: Prisma.HostCreateOrConnectWithoutUserInput | Prisma.HostCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.HostUpsertWithWhereUniqueWithoutUserInput
    | Prisma.HostUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.HostCreateManyUserInputEnvelope;
  set?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  disconnect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  delete?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  update?:
    | Prisma.HostUpdateWithWhereUniqueWithoutUserInput
    | Prisma.HostUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.HostUpdateManyWithWhereWithoutUserInput
    | Prisma.HostUpdateManyWithWhereWithoutUserInput[];
  deleteMany?: Prisma.HostScalarWhereInput | Prisma.HostScalarWhereInput[];
};

export type HostCreateNestedManyWithoutMemberInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutMemberInput, Prisma.HostUncheckedCreateWithoutMemberInput>
    | Prisma.HostCreateWithoutMemberInput[]
    | Prisma.HostUncheckedCreateWithoutMemberInput[];
  connectOrCreate?:
    | Prisma.HostCreateOrConnectWithoutMemberInput
    | Prisma.HostCreateOrConnectWithoutMemberInput[];
  createMany?: Prisma.HostCreateManyMemberInputEnvelope;
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
};

export type HostUncheckedCreateNestedManyWithoutMemberInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutMemberInput, Prisma.HostUncheckedCreateWithoutMemberInput>
    | Prisma.HostCreateWithoutMemberInput[]
    | Prisma.HostUncheckedCreateWithoutMemberInput[];
  connectOrCreate?:
    | Prisma.HostCreateOrConnectWithoutMemberInput
    | Prisma.HostCreateOrConnectWithoutMemberInput[];
  createMany?: Prisma.HostCreateManyMemberInputEnvelope;
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
};

export type HostUpdateManyWithoutMemberNestedInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutMemberInput, Prisma.HostUncheckedCreateWithoutMemberInput>
    | Prisma.HostCreateWithoutMemberInput[]
    | Prisma.HostUncheckedCreateWithoutMemberInput[];
  connectOrCreate?:
    | Prisma.HostCreateOrConnectWithoutMemberInput
    | Prisma.HostCreateOrConnectWithoutMemberInput[];
  upsert?:
    | Prisma.HostUpsertWithWhereUniqueWithoutMemberInput
    | Prisma.HostUpsertWithWhereUniqueWithoutMemberInput[];
  createMany?: Prisma.HostCreateManyMemberInputEnvelope;
  set?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  disconnect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  delete?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  update?:
    | Prisma.HostUpdateWithWhereUniqueWithoutMemberInput
    | Prisma.HostUpdateWithWhereUniqueWithoutMemberInput[];
  updateMany?:
    | Prisma.HostUpdateManyWithWhereWithoutMemberInput
    | Prisma.HostUpdateManyWithWhereWithoutMemberInput[];
  deleteMany?: Prisma.HostScalarWhereInput | Prisma.HostScalarWhereInput[];
};

export type HostUncheckedUpdateManyWithoutMemberNestedInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutMemberInput, Prisma.HostUncheckedCreateWithoutMemberInput>
    | Prisma.HostCreateWithoutMemberInput[]
    | Prisma.HostUncheckedCreateWithoutMemberInput[];
  connectOrCreate?:
    | Prisma.HostCreateOrConnectWithoutMemberInput
    | Prisma.HostCreateOrConnectWithoutMemberInput[];
  upsert?:
    | Prisma.HostUpsertWithWhereUniqueWithoutMemberInput
    | Prisma.HostUpsertWithWhereUniqueWithoutMemberInput[];
  createMany?: Prisma.HostCreateManyMemberInputEnvelope;
  set?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  disconnect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  delete?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  update?:
    | Prisma.HostUpdateWithWhereUniqueWithoutMemberInput
    | Prisma.HostUpdateWithWhereUniqueWithoutMemberInput[];
  updateMany?:
    | Prisma.HostUpdateManyWithWhereWithoutMemberInput
    | Prisma.HostUpdateManyWithWhereWithoutMemberInput[];
  deleteMany?: Prisma.HostScalarWhereInput | Prisma.HostScalarWhereInput[];
};

export type HostCreateNestedManyWithoutScheduleInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutScheduleInput, Prisma.HostUncheckedCreateWithoutScheduleInput>
    | Prisma.HostCreateWithoutScheduleInput[]
    | Prisma.HostUncheckedCreateWithoutScheduleInput[];
  connectOrCreate?:
    | Prisma.HostCreateOrConnectWithoutScheduleInput
    | Prisma.HostCreateOrConnectWithoutScheduleInput[];
  createMany?: Prisma.HostCreateManyScheduleInputEnvelope;
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
};

export type HostUncheckedCreateNestedManyWithoutScheduleInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutScheduleInput, Prisma.HostUncheckedCreateWithoutScheduleInput>
    | Prisma.HostCreateWithoutScheduleInput[]
    | Prisma.HostUncheckedCreateWithoutScheduleInput[];
  connectOrCreate?:
    | Prisma.HostCreateOrConnectWithoutScheduleInput
    | Prisma.HostCreateOrConnectWithoutScheduleInput[];
  createMany?: Prisma.HostCreateManyScheduleInputEnvelope;
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
};

export type HostUpdateManyWithoutScheduleNestedInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutScheduleInput, Prisma.HostUncheckedCreateWithoutScheduleInput>
    | Prisma.HostCreateWithoutScheduleInput[]
    | Prisma.HostUncheckedCreateWithoutScheduleInput[];
  connectOrCreate?:
    | Prisma.HostCreateOrConnectWithoutScheduleInput
    | Prisma.HostCreateOrConnectWithoutScheduleInput[];
  upsert?:
    | Prisma.HostUpsertWithWhereUniqueWithoutScheduleInput
    | Prisma.HostUpsertWithWhereUniqueWithoutScheduleInput[];
  createMany?: Prisma.HostCreateManyScheduleInputEnvelope;
  set?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  disconnect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  delete?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  update?:
    | Prisma.HostUpdateWithWhereUniqueWithoutScheduleInput
    | Prisma.HostUpdateWithWhereUniqueWithoutScheduleInput[];
  updateMany?:
    | Prisma.HostUpdateManyWithWhereWithoutScheduleInput
    | Prisma.HostUpdateManyWithWhereWithoutScheduleInput[];
  deleteMany?: Prisma.HostScalarWhereInput | Prisma.HostScalarWhereInput[];
};

export type HostUncheckedUpdateManyWithoutScheduleNestedInput = {
  create?:
    | Prisma.XOR<Prisma.HostCreateWithoutScheduleInput, Prisma.HostUncheckedCreateWithoutScheduleInput>
    | Prisma.HostCreateWithoutScheduleInput[]
    | Prisma.HostUncheckedCreateWithoutScheduleInput[];
  connectOrCreate?:
    | Prisma.HostCreateOrConnectWithoutScheduleInput
    | Prisma.HostCreateOrConnectWithoutScheduleInput[];
  upsert?:
    | Prisma.HostUpsertWithWhereUniqueWithoutScheduleInput
    | Prisma.HostUpsertWithWhereUniqueWithoutScheduleInput[];
  createMany?: Prisma.HostCreateManyScheduleInputEnvelope;
  set?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  disconnect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  delete?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  connect?: Prisma.HostWhereUniqueInput | Prisma.HostWhereUniqueInput[];
  update?:
    | Prisma.HostUpdateWithWhereUniqueWithoutScheduleInput
    | Prisma.HostUpdateWithWhereUniqueWithoutScheduleInput[];
  updateMany?:
    | Prisma.HostUpdateManyWithWhereWithoutScheduleInput
    | Prisma.HostUpdateManyWithWhereWithoutScheduleInput[];
  deleteMany?: Prisma.HostScalarWhereInput | Prisma.HostScalarWhereInput[];
};

export type HostCreateWithoutGroupInput = {
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  createdAt?: Date | string;
  user: Prisma.UserCreateNestedOneWithoutHostsInput;
  eventType: Prisma.EventTypeCreateNestedOneWithoutHostsInput;
  schedule?: Prisma.ScheduleCreateNestedOneWithoutHostInput;
  member?: Prisma.MembershipCreateNestedOneWithoutHostInput;
};

export type HostUncheckedCreateWithoutGroupInput = {
  userId: number;
  eventTypeId: number;
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  scheduleId?: number | null;
  createdAt?: Date | string;
  memberId?: number | null;
};

export type HostCreateOrConnectWithoutGroupInput = {
  where: Prisma.HostWhereUniqueInput;
  create: Prisma.XOR<Prisma.HostCreateWithoutGroupInput, Prisma.HostUncheckedCreateWithoutGroupInput>;
};

export type HostCreateManyGroupInputEnvelope = {
  data: Prisma.HostCreateManyGroupInput | Prisma.HostCreateManyGroupInput[];
  skipDuplicates?: boolean;
};

export type HostUpsertWithWhereUniqueWithoutGroupInput = {
  where: Prisma.HostWhereUniqueInput;
  update: Prisma.XOR<Prisma.HostUpdateWithoutGroupInput, Prisma.HostUncheckedUpdateWithoutGroupInput>;
  create: Prisma.XOR<Prisma.HostCreateWithoutGroupInput, Prisma.HostUncheckedCreateWithoutGroupInput>;
};

export type HostUpdateWithWhereUniqueWithoutGroupInput = {
  where: Prisma.HostWhereUniqueInput;
  data: Prisma.XOR<Prisma.HostUpdateWithoutGroupInput, Prisma.HostUncheckedUpdateWithoutGroupInput>;
};

export type HostUpdateManyWithWhereWithoutGroupInput = {
  where: Prisma.HostScalarWhereInput;
  data: Prisma.XOR<Prisma.HostUpdateManyMutationInput, Prisma.HostUncheckedUpdateManyWithoutGroupInput>;
};

export type HostScalarWhereInput = {
  AND?: Prisma.HostScalarWhereInput | Prisma.HostScalarWhereInput[];
  OR?: Prisma.HostScalarWhereInput[];
  NOT?: Prisma.HostScalarWhereInput | Prisma.HostScalarWhereInput[];
  userId?: Prisma.IntFilter<"Host"> | number;
  eventTypeId?: Prisma.IntFilter<"Host"> | number;
  isFixed?: Prisma.BoolFilter<"Host"> | boolean;
  priority?: Prisma.IntNullableFilter<"Host"> | number | null;
  weight?: Prisma.IntNullableFilter<"Host"> | number | null;
  weightAdjustment?: Prisma.IntNullableFilter<"Host"> | number | null;
  scheduleId?: Prisma.IntNullableFilter<"Host"> | number | null;
  createdAt?: Prisma.DateTimeFilter<"Host"> | Date | string;
  groupId?: Prisma.StringNullableFilter<"Host"> | string | null;
  memberId?: Prisma.IntNullableFilter<"Host"> | number | null;
};

export type HostCreateWithoutEventTypeInput = {
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  createdAt?: Date | string;
  user: Prisma.UserCreateNestedOneWithoutHostsInput;
  schedule?: Prisma.ScheduleCreateNestedOneWithoutHostInput;
  group?: Prisma.HostGroupCreateNestedOneWithoutHostsInput;
  member?: Prisma.MembershipCreateNestedOneWithoutHostInput;
};

export type HostUncheckedCreateWithoutEventTypeInput = {
  userId: number;
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  scheduleId?: number | null;
  createdAt?: Date | string;
  groupId?: string | null;
  memberId?: number | null;
};

export type HostCreateOrConnectWithoutEventTypeInput = {
  where: Prisma.HostWhereUniqueInput;
  create: Prisma.XOR<Prisma.HostCreateWithoutEventTypeInput, Prisma.HostUncheckedCreateWithoutEventTypeInput>;
};

export type HostCreateManyEventTypeInputEnvelope = {
  data: Prisma.HostCreateManyEventTypeInput | Prisma.HostCreateManyEventTypeInput[];
  skipDuplicates?: boolean;
};

export type HostUpsertWithWhereUniqueWithoutEventTypeInput = {
  where: Prisma.HostWhereUniqueInput;
  update: Prisma.XOR<Prisma.HostUpdateWithoutEventTypeInput, Prisma.HostUncheckedUpdateWithoutEventTypeInput>;
  create: Prisma.XOR<Prisma.HostCreateWithoutEventTypeInput, Prisma.HostUncheckedCreateWithoutEventTypeInput>;
};

export type HostUpdateWithWhereUniqueWithoutEventTypeInput = {
  where: Prisma.HostWhereUniqueInput;
  data: Prisma.XOR<Prisma.HostUpdateWithoutEventTypeInput, Prisma.HostUncheckedUpdateWithoutEventTypeInput>;
};

export type HostUpdateManyWithWhereWithoutEventTypeInput = {
  where: Prisma.HostScalarWhereInput;
  data: Prisma.XOR<Prisma.HostUpdateManyMutationInput, Prisma.HostUncheckedUpdateManyWithoutEventTypeInput>;
};

export type HostCreateWithoutUserInput = {
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  createdAt?: Date | string;
  eventType: Prisma.EventTypeCreateNestedOneWithoutHostsInput;
  schedule?: Prisma.ScheduleCreateNestedOneWithoutHostInput;
  group?: Prisma.HostGroupCreateNestedOneWithoutHostsInput;
  member?: Prisma.MembershipCreateNestedOneWithoutHostInput;
};

export type HostUncheckedCreateWithoutUserInput = {
  eventTypeId: number;
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  scheduleId?: number | null;
  createdAt?: Date | string;
  groupId?: string | null;
  memberId?: number | null;
};

export type HostCreateOrConnectWithoutUserInput = {
  where: Prisma.HostWhereUniqueInput;
  create: Prisma.XOR<Prisma.HostCreateWithoutUserInput, Prisma.HostUncheckedCreateWithoutUserInput>;
};

export type HostCreateManyUserInputEnvelope = {
  data: Prisma.HostCreateManyUserInput | Prisma.HostCreateManyUserInput[];
  skipDuplicates?: boolean;
};

export type HostUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.HostWhereUniqueInput;
  update: Prisma.XOR<Prisma.HostUpdateWithoutUserInput, Prisma.HostUncheckedUpdateWithoutUserInput>;
  create: Prisma.XOR<Prisma.HostCreateWithoutUserInput, Prisma.HostUncheckedCreateWithoutUserInput>;
};

export type HostUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.HostWhereUniqueInput;
  data: Prisma.XOR<Prisma.HostUpdateWithoutUserInput, Prisma.HostUncheckedUpdateWithoutUserInput>;
};

export type HostUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.HostScalarWhereInput;
  data: Prisma.XOR<Prisma.HostUpdateManyMutationInput, Prisma.HostUncheckedUpdateManyWithoutUserInput>;
};

export type HostCreateWithoutMemberInput = {
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  createdAt?: Date | string;
  user: Prisma.UserCreateNestedOneWithoutHostsInput;
  eventType: Prisma.EventTypeCreateNestedOneWithoutHostsInput;
  schedule?: Prisma.ScheduleCreateNestedOneWithoutHostInput;
  group?: Prisma.HostGroupCreateNestedOneWithoutHostsInput;
};

export type HostUncheckedCreateWithoutMemberInput = {
  userId: number;
  eventTypeId: number;
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  scheduleId?: number | null;
  createdAt?: Date | string;
  groupId?: string | null;
};

export type HostCreateOrConnectWithoutMemberInput = {
  where: Prisma.HostWhereUniqueInput;
  create: Prisma.XOR<Prisma.HostCreateWithoutMemberInput, Prisma.HostUncheckedCreateWithoutMemberInput>;
};

export type HostCreateManyMemberInputEnvelope = {
  data: Prisma.HostCreateManyMemberInput | Prisma.HostCreateManyMemberInput[];
  skipDuplicates?: boolean;
};

export type HostUpsertWithWhereUniqueWithoutMemberInput = {
  where: Prisma.HostWhereUniqueInput;
  update: Prisma.XOR<Prisma.HostUpdateWithoutMemberInput, Prisma.HostUncheckedUpdateWithoutMemberInput>;
  create: Prisma.XOR<Prisma.HostCreateWithoutMemberInput, Prisma.HostUncheckedCreateWithoutMemberInput>;
};

export type HostUpdateWithWhereUniqueWithoutMemberInput = {
  where: Prisma.HostWhereUniqueInput;
  data: Prisma.XOR<Prisma.HostUpdateWithoutMemberInput, Prisma.HostUncheckedUpdateWithoutMemberInput>;
};

export type HostUpdateManyWithWhereWithoutMemberInput = {
  where: Prisma.HostScalarWhereInput;
  data: Prisma.XOR<Prisma.HostUpdateManyMutationInput, Prisma.HostUncheckedUpdateManyWithoutMemberInput>;
};

export type HostCreateWithoutScheduleInput = {
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  createdAt?: Date | string;
  user: Prisma.UserCreateNestedOneWithoutHostsInput;
  eventType: Prisma.EventTypeCreateNestedOneWithoutHostsInput;
  group?: Prisma.HostGroupCreateNestedOneWithoutHostsInput;
  member?: Prisma.MembershipCreateNestedOneWithoutHostInput;
};

export type HostUncheckedCreateWithoutScheduleInput = {
  userId: number;
  eventTypeId: number;
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  createdAt?: Date | string;
  groupId?: string | null;
  memberId?: number | null;
};

export type HostCreateOrConnectWithoutScheduleInput = {
  where: Prisma.HostWhereUniqueInput;
  create: Prisma.XOR<Prisma.HostCreateWithoutScheduleInput, Prisma.HostUncheckedCreateWithoutScheduleInput>;
};

export type HostCreateManyScheduleInputEnvelope = {
  data: Prisma.HostCreateManyScheduleInput | Prisma.HostCreateManyScheduleInput[];
  skipDuplicates?: boolean;
};

export type HostUpsertWithWhereUniqueWithoutScheduleInput = {
  where: Prisma.HostWhereUniqueInput;
  update: Prisma.XOR<Prisma.HostUpdateWithoutScheduleInput, Prisma.HostUncheckedUpdateWithoutScheduleInput>;
  create: Prisma.XOR<Prisma.HostCreateWithoutScheduleInput, Prisma.HostUncheckedCreateWithoutScheduleInput>;
};

export type HostUpdateWithWhereUniqueWithoutScheduleInput = {
  where: Prisma.HostWhereUniqueInput;
  data: Prisma.XOR<Prisma.HostUpdateWithoutScheduleInput, Prisma.HostUncheckedUpdateWithoutScheduleInput>;
};

export type HostUpdateManyWithWhereWithoutScheduleInput = {
  where: Prisma.HostScalarWhereInput;
  data: Prisma.XOR<Prisma.HostUpdateManyMutationInput, Prisma.HostUncheckedUpdateManyWithoutScheduleInput>;
};

export type HostCreateManyGroupInput = {
  userId: number;
  eventTypeId: number;
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  scheduleId?: number | null;
  createdAt?: Date | string;
  memberId?: number | null;
};

export type HostUpdateWithoutGroupInput = {
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  user?: Prisma.UserUpdateOneRequiredWithoutHostsNestedInput;
  eventType?: Prisma.EventTypeUpdateOneRequiredWithoutHostsNestedInput;
  schedule?: Prisma.ScheduleUpdateOneWithoutHostNestedInput;
  member?: Prisma.MembershipUpdateOneWithoutHostNestedInput;
};

export type HostUncheckedUpdateWithoutGroupInput = {
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  scheduleId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  memberId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type HostUncheckedUpdateManyWithoutGroupInput = {
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  scheduleId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  memberId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type HostCreateManyEventTypeInput = {
  userId: number;
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  scheduleId?: number | null;
  createdAt?: Date | string;
  groupId?: string | null;
  memberId?: number | null;
};

export type HostUpdateWithoutEventTypeInput = {
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  user?: Prisma.UserUpdateOneRequiredWithoutHostsNestedInput;
  schedule?: Prisma.ScheduleUpdateOneWithoutHostNestedInput;
  group?: Prisma.HostGroupUpdateOneWithoutHostsNestedInput;
  member?: Prisma.MembershipUpdateOneWithoutHostNestedInput;
};

export type HostUncheckedUpdateWithoutEventTypeInput = {
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  scheduleId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  groupId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  memberId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type HostUncheckedUpdateManyWithoutEventTypeInput = {
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  scheduleId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  groupId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  memberId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type HostCreateManyUserInput = {
  eventTypeId: number;
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  scheduleId?: number | null;
  createdAt?: Date | string;
  groupId?: string | null;
  memberId?: number | null;
};

export type HostUpdateWithoutUserInput = {
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  eventType?: Prisma.EventTypeUpdateOneRequiredWithoutHostsNestedInput;
  schedule?: Prisma.ScheduleUpdateOneWithoutHostNestedInput;
  group?: Prisma.HostGroupUpdateOneWithoutHostsNestedInput;
  member?: Prisma.MembershipUpdateOneWithoutHostNestedInput;
};

export type HostUncheckedUpdateWithoutUserInput = {
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  scheduleId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  groupId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  memberId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type HostUncheckedUpdateManyWithoutUserInput = {
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  scheduleId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  groupId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  memberId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type HostCreateManyMemberInput = {
  userId: number;
  eventTypeId: number;
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  scheduleId?: number | null;
  createdAt?: Date | string;
  groupId?: string | null;
};

export type HostUpdateWithoutMemberInput = {
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  user?: Prisma.UserUpdateOneRequiredWithoutHostsNestedInput;
  eventType?: Prisma.EventTypeUpdateOneRequiredWithoutHostsNestedInput;
  schedule?: Prisma.ScheduleUpdateOneWithoutHostNestedInput;
  group?: Prisma.HostGroupUpdateOneWithoutHostsNestedInput;
};

export type HostUncheckedUpdateWithoutMemberInput = {
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  scheduleId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  groupId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type HostUncheckedUpdateManyWithoutMemberInput = {
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  scheduleId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  groupId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type HostCreateManyScheduleInput = {
  userId: number;
  eventTypeId: number;
  isFixed?: boolean;
  priority?: number | null;
  weight?: number | null;
  weightAdjustment?: number | null;
  createdAt?: Date | string;
  groupId?: string | null;
  memberId?: number | null;
};

export type HostUpdateWithoutScheduleInput = {
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  user?: Prisma.UserUpdateOneRequiredWithoutHostsNestedInput;
  eventType?: Prisma.EventTypeUpdateOneRequiredWithoutHostsNestedInput;
  group?: Prisma.HostGroupUpdateOneWithoutHostsNestedInput;
  member?: Prisma.MembershipUpdateOneWithoutHostNestedInput;
};

export type HostUncheckedUpdateWithoutScheduleInput = {
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  groupId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  memberId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type HostUncheckedUpdateManyWithoutScheduleInput = {
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  isFixed?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  priority?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weight?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  weightAdjustment?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  groupId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  memberId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type HostSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    userId?: boolean;
    eventTypeId?: boolean;
    isFixed?: boolean;
    priority?: boolean;
    weight?: boolean;
    weightAdjustment?: boolean;
    scheduleId?: boolean;
    createdAt?: boolean;
    groupId?: boolean;
    memberId?: boolean;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
    schedule?: boolean | Prisma.Host$scheduleArgs<ExtArgs>;
    group?: boolean | Prisma.Host$groupArgs<ExtArgs>;
    member?: boolean | Prisma.Host$memberArgs<ExtArgs>;
  },
  ExtArgs["result"]["host"]
>;

export type HostSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    userId?: boolean;
    eventTypeId?: boolean;
    isFixed?: boolean;
    priority?: boolean;
    weight?: boolean;
    weightAdjustment?: boolean;
    scheduleId?: boolean;
    createdAt?: boolean;
    groupId?: boolean;
    memberId?: boolean;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
    schedule?: boolean | Prisma.Host$scheduleArgs<ExtArgs>;
    group?: boolean | Prisma.Host$groupArgs<ExtArgs>;
    member?: boolean | Prisma.Host$memberArgs<ExtArgs>;
  },
  ExtArgs["result"]["host"]
>;

export type HostSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    userId?: boolean;
    eventTypeId?: boolean;
    isFixed?: boolean;
    priority?: boolean;
    weight?: boolean;
    weightAdjustment?: boolean;
    scheduleId?: boolean;
    createdAt?: boolean;
    groupId?: boolean;
    memberId?: boolean;
    user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
    schedule?: boolean | Prisma.Host$scheduleArgs<ExtArgs>;
    group?: boolean | Prisma.Host$groupArgs<ExtArgs>;
    member?: boolean | Prisma.Host$memberArgs<ExtArgs>;
  },
  ExtArgs["result"]["host"]
>;

export type HostSelectScalar = {
  userId?: boolean;
  eventTypeId?: boolean;
  isFixed?: boolean;
  priority?: boolean;
  weight?: boolean;
  weightAdjustment?: boolean;
  scheduleId?: boolean;
  createdAt?: boolean;
  groupId?: boolean;
  memberId?: boolean;
};

export type HostOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  | "userId"
  | "eventTypeId"
  | "isFixed"
  | "priority"
  | "weight"
  | "weightAdjustment"
  | "scheduleId"
  | "createdAt"
  | "groupId"
  | "memberId",
  ExtArgs["result"]["host"]
>;
export type HostInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
  schedule?: boolean | Prisma.Host$scheduleArgs<ExtArgs>;
  group?: boolean | Prisma.Host$groupArgs<ExtArgs>;
  member?: boolean | Prisma.Host$memberArgs<ExtArgs>;
};
export type HostIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
  schedule?: boolean | Prisma.Host$scheduleArgs<ExtArgs>;
  group?: boolean | Prisma.Host$groupArgs<ExtArgs>;
  member?: boolean | Prisma.Host$memberArgs<ExtArgs>;
};
export type HostIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
  schedule?: boolean | Prisma.Host$scheduleArgs<ExtArgs>;
  group?: boolean | Prisma.Host$groupArgs<ExtArgs>;
  member?: boolean | Prisma.Host$memberArgs<ExtArgs>;
};

export type $HostPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "Host";
  objects: {
    user: Prisma.$UserPayload<ExtArgs>;
    eventType: Prisma.$EventTypePayload<ExtArgs>;
    schedule: Prisma.$SchedulePayload<ExtArgs> | null;
    group: Prisma.$HostGroupPayload<ExtArgs> | null;
    member: Prisma.$MembershipPayload<ExtArgs> | null;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      userId: number;
      eventTypeId: number;
      isFixed: boolean;
      priority: number | null;
      weight: number | null;
      weightAdjustment: number | null;
      scheduleId: number | null;
      createdAt: Date;
      groupId: string | null;
      memberId: number | null;
    },
    ExtArgs["result"]["host"]
  >;
  composites: {};
};

export type HostGetPayload<S extends boolean | null | undefined | HostDefaultArgs> =
  runtime.Types.Result.GetResult<Prisma.$HostPayload, S>;

export type HostCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<HostFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: HostCountAggregateInputType | true;
};

export interface HostDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>["model"]["Host"]; meta: { name: "Host" } };
  /**
   * Find zero or one Host that matches the filter.
   * @param {HostFindUniqueArgs} args - Arguments to find a Host
   * @example
   * // Get one Host
   * const host = await prisma.host.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends HostFindUniqueArgs>(
    args: Prisma.SelectSubset<T, HostFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__HostClient<
    runtime.Types.Result.GetResult<Prisma.$HostPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one Host that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {HostFindUniqueOrThrowArgs} args - Arguments to find a Host
   * @example
   * // Get one Host
   * const host = await prisma.host.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends HostFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, HostFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__HostClient<
    runtime.Types.Result.GetResult<Prisma.$HostPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Host that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HostFindFirstArgs} args - Arguments to find a Host
   * @example
   * // Get one Host
   * const host = await prisma.host.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends HostFindFirstArgs>(
    args?: Prisma.SelectSubset<T, HostFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__HostClient<
    runtime.Types.Result.GetResult<Prisma.$HostPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Host that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HostFindFirstOrThrowArgs} args - Arguments to find a Host
   * @example
   * // Get one Host
   * const host = await prisma.host.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends HostFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, HostFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__HostClient<
    runtime.Types.Result.GetResult<Prisma.$HostPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more Hosts that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HostFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Hosts
   * const hosts = await prisma.host.findMany()
   *
   * // Get first 10 Hosts
   * const hosts = await prisma.host.findMany({ take: 10 })
   *
   * // Only select the `userId`
   * const hostWithUserIdOnly = await prisma.host.findMany({ select: { userId: true } })
   *
   */
  findMany<T extends HostFindManyArgs>(
    args?: Prisma.SelectSubset<T, HostFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$HostPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>
  >;

  /**
   * Create a Host.
   * @param {HostCreateArgs} args - Arguments to create a Host.
   * @example
   * // Create one Host
   * const Host = await prisma.host.create({
   *   data: {
   *     // ... data to create a Host
   *   }
   * })
   *
   */
  create<T extends HostCreateArgs>(
    args: Prisma.SelectSubset<T, HostCreateArgs<ExtArgs>>
  ): Prisma.Prisma__HostClient<
    runtime.Types.Result.GetResult<Prisma.$HostPayload<ExtArgs>, T, "create", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many Hosts.
   * @param {HostCreateManyArgs} args - Arguments to create many Hosts.
   * @example
   * // Create many Hosts
   * const host = await prisma.host.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends HostCreateManyArgs>(
    args?: Prisma.SelectSubset<T, HostCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many Hosts and returns the data saved in the database.
   * @param {HostCreateManyAndReturnArgs} args - Arguments to create many Hosts.
   * @example
   * // Create many Hosts
   * const host = await prisma.host.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many Hosts and only return the `userId`
   * const hostWithUserIdOnly = await prisma.host.createManyAndReturn({
   *   select: { userId: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends HostCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, HostCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$HostPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>
  >;

  /**
   * Delete a Host.
   * @param {HostDeleteArgs} args - Arguments to delete one Host.
   * @example
   * // Delete one Host
   * const Host = await prisma.host.delete({
   *   where: {
   *     // ... filter to delete one Host
   *   }
   * })
   *
   */
  delete<T extends HostDeleteArgs>(
    args: Prisma.SelectSubset<T, HostDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__HostClient<
    runtime.Types.Result.GetResult<Prisma.$HostPayload<ExtArgs>, T, "delete", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one Host.
   * @param {HostUpdateArgs} args - Arguments to update one Host.
   * @example
   * // Update one Host
   * const host = await prisma.host.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends HostUpdateArgs>(
    args: Prisma.SelectSubset<T, HostUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__HostClient<
    runtime.Types.Result.GetResult<Prisma.$HostPayload<ExtArgs>, T, "update", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more Hosts.
   * @param {HostDeleteManyArgs} args - Arguments to filter Hosts to delete.
   * @example
   * // Delete a few Hosts
   * const { count } = await prisma.host.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends HostDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, HostDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Hosts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HostUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Hosts
   * const host = await prisma.host.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends HostUpdateManyArgs>(
    args: Prisma.SelectSubset<T, HostUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Hosts and returns the data updated in the database.
   * @param {HostUpdateManyAndReturnArgs} args - Arguments to update many Hosts.
   * @example
   * // Update many Hosts
   * const host = await prisma.host.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more Hosts and only return the `userId`
   * const hostWithUserIdOnly = await prisma.host.updateManyAndReturn({
   *   select: { userId: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends HostUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, HostUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$HostPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>
  >;

  /**
   * Create or update one Host.
   * @param {HostUpsertArgs} args - Arguments to update or create a Host.
   * @example
   * // Update or create a Host
   * const host = await prisma.host.upsert({
   *   create: {
   *     // ... data to create a Host
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Host we want to update
   *   }
   * })
   */
  upsert<T extends HostUpsertArgs>(
    args: Prisma.SelectSubset<T, HostUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__HostClient<
    runtime.Types.Result.GetResult<Prisma.$HostPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of Hosts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HostCountArgs} args - Arguments to filter Hosts to count.
   * @example
   * // Count the number of Hosts
   * const count = await prisma.host.count({
   *   where: {
   *     // ... the filter for the Hosts we want to count
   *   }
   * })
   **/
  count<T extends HostCountArgs>(
    args?: Prisma.Subset<T, HostCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], HostCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a Host.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HostAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends HostAggregateArgs>(
    args: Prisma.Subset<T, HostAggregateArgs>
  ): Prisma.PrismaPromise<GetHostAggregateType<T>>;

  /**
   * Group by Host.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {HostGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends HostGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: HostGroupByArgs["orderBy"] }
      : { orderBy?: HostGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, HostGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetHostGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the Host model
   */
  readonly fields: HostFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Host.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__HostClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    | runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  eventType<T extends Prisma.EventTypeDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.EventTypeDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeClient<
    | runtime.Types.Result.GetResult<
        Prisma.$EventTypePayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  schedule<T extends Prisma.Host$scheduleArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Host$scheduleArgs<ExtArgs>>
  ): Prisma.Prisma__ScheduleClient<
    runtime.Types.Result.GetResult<
      Prisma.$SchedulePayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  group<T extends Prisma.Host$groupArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Host$groupArgs<ExtArgs>>
  ): Prisma.Prisma__HostGroupClient<
    runtime.Types.Result.GetResult<
      Prisma.$HostGroupPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  member<T extends Prisma.Host$memberArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Host$memberArgs<ExtArgs>>
  ): Prisma.Prisma__MembershipClient<
    runtime.Types.Result.GetResult<
      Prisma.$MembershipPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the Host model
 */
export interface HostFieldRefs {
  readonly userId: Prisma.FieldRef<"Host", "Int">;
  readonly eventTypeId: Prisma.FieldRef<"Host", "Int">;
  readonly isFixed: Prisma.FieldRef<"Host", "Boolean">;
  readonly priority: Prisma.FieldRef<"Host", "Int">;
  readonly weight: Prisma.FieldRef<"Host", "Int">;
  readonly weightAdjustment: Prisma.FieldRef<"Host", "Int">;
  readonly scheduleId: Prisma.FieldRef<"Host", "Int">;
  readonly createdAt: Prisma.FieldRef<"Host", "DateTime">;
  readonly groupId: Prisma.FieldRef<"Host", "String">;
  readonly memberId: Prisma.FieldRef<"Host", "Int">;
}

// Custom InputTypes
/**
 * Host findUnique
 */
export type HostFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Host
   */
  select?: Prisma.HostSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Host
   */
  omit?: Prisma.HostOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HostInclude<ExtArgs> | null;
  /**
   * Filter, which Host to fetch.
   */
  where: Prisma.HostWhereUniqueInput;
};

/**
 * Host findUniqueOrThrow
 */
export type HostFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Host
   */
  select?: Prisma.HostSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Host
   */
  omit?: Prisma.HostOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HostInclude<ExtArgs> | null;
  /**
   * Filter, which Host to fetch.
   */
  where: Prisma.HostWhereUniqueInput;
};

/**
 * Host findFirst
 */
export type HostFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Host
   */
  select?: Prisma.HostSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Host
   */
  omit?: Prisma.HostOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HostInclude<ExtArgs> | null;
  /**
   * Filter, which Host to fetch.
   */
  where?: Prisma.HostWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Hosts to fetch.
   */
  orderBy?: Prisma.HostOrderByWithRelationInput | Prisma.HostOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Hosts.
   */
  cursor?: Prisma.HostWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Hosts from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Hosts.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Hosts.
   */
  distinct?: Prisma.HostScalarFieldEnum | Prisma.HostScalarFieldEnum[];
};

/**
 * Host findFirstOrThrow
 */
export type HostFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Host
   */
  select?: Prisma.HostSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Host
   */
  omit?: Prisma.HostOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HostInclude<ExtArgs> | null;
  /**
   * Filter, which Host to fetch.
   */
  where?: Prisma.HostWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Hosts to fetch.
   */
  orderBy?: Prisma.HostOrderByWithRelationInput | Prisma.HostOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Hosts.
   */
  cursor?: Prisma.HostWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Hosts from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Hosts.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Hosts.
   */
  distinct?: Prisma.HostScalarFieldEnum | Prisma.HostScalarFieldEnum[];
};

/**
 * Host findMany
 */
export type HostFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Host
   */
  select?: Prisma.HostSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Host
   */
  omit?: Prisma.HostOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HostInclude<ExtArgs> | null;
  /**
   * Filter, which Hosts to fetch.
   */
  where?: Prisma.HostWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Hosts to fetch.
   */
  orderBy?: Prisma.HostOrderByWithRelationInput | Prisma.HostOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing Hosts.
   */
  cursor?: Prisma.HostWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Hosts from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Hosts.
   */
  skip?: number;
  distinct?: Prisma.HostScalarFieldEnum | Prisma.HostScalarFieldEnum[];
};

/**
 * Host create
 */
export type HostCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Host
   */
  select?: Prisma.HostSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Host
   */
  omit?: Prisma.HostOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HostInclude<ExtArgs> | null;
  /**
   * The data needed to create a Host.
   */
  data: Prisma.XOR<Prisma.HostCreateInput, Prisma.HostUncheckedCreateInput>;
};

/**
 * Host createMany
 */
export type HostCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many Hosts.
   */
  data: Prisma.HostCreateManyInput | Prisma.HostCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * Host createManyAndReturn
 */
export type HostCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Host
   */
  select?: Prisma.HostSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Host
   */
  omit?: Prisma.HostOmit<ExtArgs> | null;
  /**
   * The data used to create many Hosts.
   */
  data: Prisma.HostCreateManyInput | Prisma.HostCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HostIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * Host update
 */
export type HostUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Host
   */
  select?: Prisma.HostSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Host
   */
  omit?: Prisma.HostOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HostInclude<ExtArgs> | null;
  /**
   * The data needed to update a Host.
   */
  data: Prisma.XOR<Prisma.HostUpdateInput, Prisma.HostUncheckedUpdateInput>;
  /**
   * Choose, which Host to update.
   */
  where: Prisma.HostWhereUniqueInput;
};

/**
 * Host updateMany
 */
export type HostUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update Hosts.
   */
  data: Prisma.XOR<Prisma.HostUpdateManyMutationInput, Prisma.HostUncheckedUpdateManyInput>;
  /**
   * Filter which Hosts to update
   */
  where?: Prisma.HostWhereInput;
  /**
   * Limit how many Hosts to update.
   */
  limit?: number;
};

/**
 * Host updateManyAndReturn
 */
export type HostUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Host
   */
  select?: Prisma.HostSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Host
   */
  omit?: Prisma.HostOmit<ExtArgs> | null;
  /**
   * The data used to update Hosts.
   */
  data: Prisma.XOR<Prisma.HostUpdateManyMutationInput, Prisma.HostUncheckedUpdateManyInput>;
  /**
   * Filter which Hosts to update
   */
  where?: Prisma.HostWhereInput;
  /**
   * Limit how many Hosts to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HostIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * Host upsert
 */
export type HostUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Host
   */
  select?: Prisma.HostSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Host
   */
  omit?: Prisma.HostOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HostInclude<ExtArgs> | null;
  /**
   * The filter to search for the Host to update in case it exists.
   */
  where: Prisma.HostWhereUniqueInput;
  /**
   * In case the Host found by the `where` argument doesn't exist, create a new Host with this data.
   */
  create: Prisma.XOR<Prisma.HostCreateInput, Prisma.HostUncheckedCreateInput>;
  /**
   * In case the Host was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.HostUpdateInput, Prisma.HostUncheckedUpdateInput>;
};

/**
 * Host delete
 */
export type HostDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Host
   */
  select?: Prisma.HostSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Host
   */
  omit?: Prisma.HostOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HostInclude<ExtArgs> | null;
  /**
   * Filter which Host to delete.
   */
  where: Prisma.HostWhereUniqueInput;
};

/**
 * Host deleteMany
 */
export type HostDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which Hosts to delete
   */
  where?: Prisma.HostWhereInput;
  /**
   * Limit how many Hosts to delete.
   */
  limit?: number;
};

/**
 * Host.schedule
 */
export type Host$scheduleArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Schedule
   */
  select?: Prisma.ScheduleSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Schedule
   */
  omit?: Prisma.ScheduleOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduleInclude<ExtArgs> | null;
  where?: Prisma.ScheduleWhereInput;
};

/**
 * Host.group
 */
export type Host$groupArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the HostGroup
   */
  select?: Prisma.HostGroupSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the HostGroup
   */
  omit?: Prisma.HostGroupOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HostGroupInclude<ExtArgs> | null;
  where?: Prisma.HostGroupWhereInput;
};

/**
 * Host.member
 */
export type Host$memberArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Membership
   */
  select?: Prisma.MembershipSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Membership
   */
  omit?: Prisma.MembershipOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MembershipInclude<ExtArgs> | null;
  where?: Prisma.MembershipWhereInput;
};

/**
 * Host without action
 */
export type HostDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Host
   */
  select?: Prisma.HostSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Host
   */
  omit?: Prisma.HostOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.HostInclude<ExtArgs> | null;
};
