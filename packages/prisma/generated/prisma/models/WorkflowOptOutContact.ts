/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `WorkflowOptOutContact` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model WorkflowOptOutContact
 *
 */
export type WorkflowOptOutContactModel =
  runtime.Types.Result.DefaultSelection<Prisma.$WorkflowOptOutContactPayload>;

export type AggregateWorkflowOptOutContact = {
  _count: WorkflowOptOutContactCountAggregateOutputType | null;
  _avg: WorkflowOptOutContactAvgAggregateOutputType | null;
  _sum: WorkflowOptOutContactSumAggregateOutputType | null;
  _min: WorkflowOptOutContactMinAggregateOutputType | null;
  _max: WorkflowOptOutContactMaxAggregateOutputType | null;
};

export type WorkflowOptOutContactAvgAggregateOutputType = {
  id: number | null;
};

export type WorkflowOptOutContactSumAggregateOutputType = {
  id: number | null;
};

export type WorkflowOptOutContactMinAggregateOutputType = {
  id: number | null;
  type: $Enums.WorkflowContactType | null;
  value: string | null;
  optedOut: boolean | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type WorkflowOptOutContactMaxAggregateOutputType = {
  id: number | null;
  type: $Enums.WorkflowContactType | null;
  value: string | null;
  optedOut: boolean | null;
  createdAt: Date | null;
  updatedAt: Date | null;
};

export type WorkflowOptOutContactCountAggregateOutputType = {
  id: number;
  type: number;
  value: number;
  optedOut: number;
  createdAt: number;
  updatedAt: number;
  _all: number;
};

export type WorkflowOptOutContactAvgAggregateInputType = {
  id?: true;
};

export type WorkflowOptOutContactSumAggregateInputType = {
  id?: true;
};

export type WorkflowOptOutContactMinAggregateInputType = {
  id?: true;
  type?: true;
  value?: true;
  optedOut?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type WorkflowOptOutContactMaxAggregateInputType = {
  id?: true;
  type?: true;
  value?: true;
  optedOut?: true;
  createdAt?: true;
  updatedAt?: true;
};

export type WorkflowOptOutContactCountAggregateInputType = {
  id?: true;
  type?: true;
  value?: true;
  optedOut?: true;
  createdAt?: true;
  updatedAt?: true;
  _all?: true;
};

export type WorkflowOptOutContactAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which WorkflowOptOutContact to aggregate.
   */
  where?: Prisma.WorkflowOptOutContactWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WorkflowOptOutContacts to fetch.
   */
  orderBy?:
    | Prisma.WorkflowOptOutContactOrderByWithRelationInput
    | Prisma.WorkflowOptOutContactOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.WorkflowOptOutContactWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` WorkflowOptOutContacts from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WorkflowOptOutContacts.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned WorkflowOptOutContacts
   **/
  _count?: true | WorkflowOptOutContactCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: WorkflowOptOutContactAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: WorkflowOptOutContactSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: WorkflowOptOutContactMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: WorkflowOptOutContactMaxAggregateInputType;
};

export type GetWorkflowOptOutContactAggregateType<T extends WorkflowOptOutContactAggregateArgs> = {
  [P in keyof T & keyof AggregateWorkflowOptOutContact]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWorkflowOptOutContact[P]>
    : Prisma.GetScalarType<T[P], AggregateWorkflowOptOutContact[P]>;
};

export type WorkflowOptOutContactGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.WorkflowOptOutContactWhereInput;
  orderBy?:
    | Prisma.WorkflowOptOutContactOrderByWithAggregationInput
    | Prisma.WorkflowOptOutContactOrderByWithAggregationInput[];
  by: Prisma.WorkflowOptOutContactScalarFieldEnum[] | Prisma.WorkflowOptOutContactScalarFieldEnum;
  having?: Prisma.WorkflowOptOutContactScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: WorkflowOptOutContactCountAggregateInputType | true;
  _avg?: WorkflowOptOutContactAvgAggregateInputType;
  _sum?: WorkflowOptOutContactSumAggregateInputType;
  _min?: WorkflowOptOutContactMinAggregateInputType;
  _max?: WorkflowOptOutContactMaxAggregateInputType;
};

export type WorkflowOptOutContactGroupByOutputType = {
  id: number;
  type: $Enums.WorkflowContactType;
  value: string;
  optedOut: boolean;
  createdAt: Date;
  updatedAt: Date;
  _count: WorkflowOptOutContactCountAggregateOutputType | null;
  _avg: WorkflowOptOutContactAvgAggregateOutputType | null;
  _sum: WorkflowOptOutContactSumAggregateOutputType | null;
  _min: WorkflowOptOutContactMinAggregateOutputType | null;
  _max: WorkflowOptOutContactMaxAggregateOutputType | null;
};

type GetWorkflowOptOutContactGroupByPayload<T extends WorkflowOptOutContactGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<WorkflowOptOutContactGroupByOutputType, T["by"]> & {
        [P in keyof T & keyof WorkflowOptOutContactGroupByOutputType]: P extends "_count"
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], WorkflowOptOutContactGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], WorkflowOptOutContactGroupByOutputType[P]>;
      }
    >
  >;

export type WorkflowOptOutContactWhereInput = {
  AND?: Prisma.WorkflowOptOutContactWhereInput | Prisma.WorkflowOptOutContactWhereInput[];
  OR?: Prisma.WorkflowOptOutContactWhereInput[];
  NOT?: Prisma.WorkflowOptOutContactWhereInput | Prisma.WorkflowOptOutContactWhereInput[];
  id?: Prisma.IntFilter<"WorkflowOptOutContact"> | number;
  type?: Prisma.EnumWorkflowContactTypeFilter<"WorkflowOptOutContact"> | $Enums.WorkflowContactType;
  value?: Prisma.StringFilter<"WorkflowOptOutContact"> | string;
  optedOut?: Prisma.BoolFilter<"WorkflowOptOutContact"> | boolean;
  createdAt?: Prisma.DateTimeFilter<"WorkflowOptOutContact"> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<"WorkflowOptOutContact"> | Date | string;
};

export type WorkflowOptOutContactOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  optedOut?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type WorkflowOptOutContactWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    type_value?: Prisma.WorkflowOptOutContactTypeValueCompoundUniqueInput;
    AND?: Prisma.WorkflowOptOutContactWhereInput | Prisma.WorkflowOptOutContactWhereInput[];
    OR?: Prisma.WorkflowOptOutContactWhereInput[];
    NOT?: Prisma.WorkflowOptOutContactWhereInput | Prisma.WorkflowOptOutContactWhereInput[];
    type?: Prisma.EnumWorkflowContactTypeFilter<"WorkflowOptOutContact"> | $Enums.WorkflowContactType;
    value?: Prisma.StringFilter<"WorkflowOptOutContact"> | string;
    optedOut?: Prisma.BoolFilter<"WorkflowOptOutContact"> | boolean;
    createdAt?: Prisma.DateTimeFilter<"WorkflowOptOutContact"> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<"WorkflowOptOutContact"> | Date | string;
  },
  "id" | "type_value"
>;

export type WorkflowOptOutContactOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  optedOut?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  _count?: Prisma.WorkflowOptOutContactCountOrderByAggregateInput;
  _avg?: Prisma.WorkflowOptOutContactAvgOrderByAggregateInput;
  _max?: Prisma.WorkflowOptOutContactMaxOrderByAggregateInput;
  _min?: Prisma.WorkflowOptOutContactMinOrderByAggregateInput;
  _sum?: Prisma.WorkflowOptOutContactSumOrderByAggregateInput;
};

export type WorkflowOptOutContactScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.WorkflowOptOutContactScalarWhereWithAggregatesInput
    | Prisma.WorkflowOptOutContactScalarWhereWithAggregatesInput[];
  OR?: Prisma.WorkflowOptOutContactScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.WorkflowOptOutContactScalarWhereWithAggregatesInput
    | Prisma.WorkflowOptOutContactScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"WorkflowOptOutContact"> | number;
  type?:
    | Prisma.EnumWorkflowContactTypeWithAggregatesFilter<"WorkflowOptOutContact">
    | $Enums.WorkflowContactType;
  value?: Prisma.StringWithAggregatesFilter<"WorkflowOptOutContact"> | string;
  optedOut?: Prisma.BoolWithAggregatesFilter<"WorkflowOptOutContact"> | boolean;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"WorkflowOptOutContact"> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"WorkflowOptOutContact"> | Date | string;
};

export type WorkflowOptOutContactCreateInput = {
  type: $Enums.WorkflowContactType;
  value: string;
  optedOut: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type WorkflowOptOutContactUncheckedCreateInput = {
  id?: number;
  type: $Enums.WorkflowContactType;
  value: string;
  optedOut: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type WorkflowOptOutContactUpdateInput = {
  type?: Prisma.EnumWorkflowContactTypeFieldUpdateOperationsInput | $Enums.WorkflowContactType;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  optedOut?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type WorkflowOptOutContactUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  type?: Prisma.EnumWorkflowContactTypeFieldUpdateOperationsInput | $Enums.WorkflowContactType;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  optedOut?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type WorkflowOptOutContactCreateManyInput = {
  id?: number;
  type: $Enums.WorkflowContactType;
  value: string;
  optedOut: boolean;
  createdAt?: Date | string;
  updatedAt?: Date | string;
};

export type WorkflowOptOutContactUpdateManyMutationInput = {
  type?: Prisma.EnumWorkflowContactTypeFieldUpdateOperationsInput | $Enums.WorkflowContactType;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  optedOut?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type WorkflowOptOutContactUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  type?: Prisma.EnumWorkflowContactTypeFieldUpdateOperationsInput | $Enums.WorkflowContactType;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  optedOut?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type WorkflowOptOutContactTypeValueCompoundUniqueInput = {
  type: $Enums.WorkflowContactType;
  value: string;
};

export type WorkflowOptOutContactCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  optedOut?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type WorkflowOptOutContactAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
};

export type WorkflowOptOutContactMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  optedOut?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type WorkflowOptOutContactMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  optedOut?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
};

export type WorkflowOptOutContactSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
};

export type EnumWorkflowContactTypeFieldUpdateOperationsInput = {
  set?: $Enums.WorkflowContactType;
};

export type WorkflowOptOutContactSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    type?: boolean;
    value?: boolean;
    optedOut?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
  },
  ExtArgs["result"]["workflowOptOutContact"]
>;

export type WorkflowOptOutContactSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    type?: boolean;
    value?: boolean;
    optedOut?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
  },
  ExtArgs["result"]["workflowOptOutContact"]
>;

export type WorkflowOptOutContactSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    type?: boolean;
    value?: boolean;
    optedOut?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
  },
  ExtArgs["result"]["workflowOptOutContact"]
>;

export type WorkflowOptOutContactSelectScalar = {
  id?: boolean;
  type?: boolean;
  value?: boolean;
  optedOut?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

export type WorkflowOptOutContactOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  "id" | "type" | "value" | "optedOut" | "createdAt" | "updatedAt",
  ExtArgs["result"]["workflowOptOutContact"]
>;

export type $WorkflowOptOutContactPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "WorkflowOptOutContact";
  objects: {};
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      type: $Enums.WorkflowContactType;
      value: string;
      optedOut: boolean;
      createdAt: Date;
      updatedAt: Date;
    },
    ExtArgs["result"]["workflowOptOutContact"]
  >;
  composites: {};
};

export type WorkflowOptOutContactGetPayload<
  S extends boolean | null | undefined | WorkflowOptOutContactDefaultArgs
> = runtime.Types.Result.GetResult<Prisma.$WorkflowOptOutContactPayload, S>;

export type WorkflowOptOutContactCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<WorkflowOptOutContactFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: WorkflowOptOutContactCountAggregateInputType | true;
};

export interface WorkflowOptOutContactDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["WorkflowOptOutContact"];
    meta: { name: "WorkflowOptOutContact" };
  };
  /**
   * Find zero or one WorkflowOptOutContact that matches the filter.
   * @param {WorkflowOptOutContactFindUniqueArgs} args - Arguments to find a WorkflowOptOutContact
   * @example
   * // Get one WorkflowOptOutContact
   * const workflowOptOutContact = await prisma.workflowOptOutContact.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends WorkflowOptOutContactFindUniqueArgs>(
    args: Prisma.SelectSubset<T, WorkflowOptOutContactFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowOptOutContactClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowOptOutContactPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one WorkflowOptOutContact that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {WorkflowOptOutContactFindUniqueOrThrowArgs} args - Arguments to find a WorkflowOptOutContact
   * @example
   * // Get one WorkflowOptOutContact
   * const workflowOptOutContact = await prisma.workflowOptOutContact.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends WorkflowOptOutContactFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, WorkflowOptOutContactFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowOptOutContactClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowOptOutContactPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first WorkflowOptOutContact that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowOptOutContactFindFirstArgs} args - Arguments to find a WorkflowOptOutContact
   * @example
   * // Get one WorkflowOptOutContact
   * const workflowOptOutContact = await prisma.workflowOptOutContact.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends WorkflowOptOutContactFindFirstArgs>(
    args?: Prisma.SelectSubset<T, WorkflowOptOutContactFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowOptOutContactClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowOptOutContactPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first WorkflowOptOutContact that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowOptOutContactFindFirstOrThrowArgs} args - Arguments to find a WorkflowOptOutContact
   * @example
   * // Get one WorkflowOptOutContact
   * const workflowOptOutContact = await prisma.workflowOptOutContact.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends WorkflowOptOutContactFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, WorkflowOptOutContactFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowOptOutContactClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowOptOutContactPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more WorkflowOptOutContacts that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowOptOutContactFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all WorkflowOptOutContacts
   * const workflowOptOutContacts = await prisma.workflowOptOutContact.findMany()
   *
   * // Get first 10 WorkflowOptOutContacts
   * const workflowOptOutContacts = await prisma.workflowOptOutContact.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const workflowOptOutContactWithIdOnly = await prisma.workflowOptOutContact.findMany({ select: { id: true } })
   *
   */
  findMany<T extends WorkflowOptOutContactFindManyArgs>(
    args?: Prisma.SelectSubset<T, WorkflowOptOutContactFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowOptOutContactPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a WorkflowOptOutContact.
   * @param {WorkflowOptOutContactCreateArgs} args - Arguments to create a WorkflowOptOutContact.
   * @example
   * // Create one WorkflowOptOutContact
   * const WorkflowOptOutContact = await prisma.workflowOptOutContact.create({
   *   data: {
   *     // ... data to create a WorkflowOptOutContact
   *   }
   * })
   *
   */
  create<T extends WorkflowOptOutContactCreateArgs>(
    args: Prisma.SelectSubset<T, WorkflowOptOutContactCreateArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowOptOutContactClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowOptOutContactPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many WorkflowOptOutContacts.
   * @param {WorkflowOptOutContactCreateManyArgs} args - Arguments to create many WorkflowOptOutContacts.
   * @example
   * // Create many WorkflowOptOutContacts
   * const workflowOptOutContact = await prisma.workflowOptOutContact.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends WorkflowOptOutContactCreateManyArgs>(
    args?: Prisma.SelectSubset<T, WorkflowOptOutContactCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many WorkflowOptOutContacts and returns the data saved in the database.
   * @param {WorkflowOptOutContactCreateManyAndReturnArgs} args - Arguments to create many WorkflowOptOutContacts.
   * @example
   * // Create many WorkflowOptOutContacts
   * const workflowOptOutContact = await prisma.workflowOptOutContact.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many WorkflowOptOutContacts and only return the `id`
   * const workflowOptOutContactWithIdOnly = await prisma.workflowOptOutContact.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends WorkflowOptOutContactCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, WorkflowOptOutContactCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowOptOutContactPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a WorkflowOptOutContact.
   * @param {WorkflowOptOutContactDeleteArgs} args - Arguments to delete one WorkflowOptOutContact.
   * @example
   * // Delete one WorkflowOptOutContact
   * const WorkflowOptOutContact = await prisma.workflowOptOutContact.delete({
   *   where: {
   *     // ... filter to delete one WorkflowOptOutContact
   *   }
   * })
   *
   */
  delete<T extends WorkflowOptOutContactDeleteArgs>(
    args: Prisma.SelectSubset<T, WorkflowOptOutContactDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowOptOutContactClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowOptOutContactPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one WorkflowOptOutContact.
   * @param {WorkflowOptOutContactUpdateArgs} args - Arguments to update one WorkflowOptOutContact.
   * @example
   * // Update one WorkflowOptOutContact
   * const workflowOptOutContact = await prisma.workflowOptOutContact.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends WorkflowOptOutContactUpdateArgs>(
    args: Prisma.SelectSubset<T, WorkflowOptOutContactUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowOptOutContactClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowOptOutContactPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more WorkflowOptOutContacts.
   * @param {WorkflowOptOutContactDeleteManyArgs} args - Arguments to filter WorkflowOptOutContacts to delete.
   * @example
   * // Delete a few WorkflowOptOutContacts
   * const { count } = await prisma.workflowOptOutContact.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends WorkflowOptOutContactDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, WorkflowOptOutContactDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more WorkflowOptOutContacts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowOptOutContactUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many WorkflowOptOutContacts
   * const workflowOptOutContact = await prisma.workflowOptOutContact.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends WorkflowOptOutContactUpdateManyArgs>(
    args: Prisma.SelectSubset<T, WorkflowOptOutContactUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more WorkflowOptOutContacts and returns the data updated in the database.
   * @param {WorkflowOptOutContactUpdateManyAndReturnArgs} args - Arguments to update many WorkflowOptOutContacts.
   * @example
   * // Update many WorkflowOptOutContacts
   * const workflowOptOutContact = await prisma.workflowOptOutContact.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more WorkflowOptOutContacts and only return the `id`
   * const workflowOptOutContactWithIdOnly = await prisma.workflowOptOutContact.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends WorkflowOptOutContactUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, WorkflowOptOutContactUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowOptOutContactPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one WorkflowOptOutContact.
   * @param {WorkflowOptOutContactUpsertArgs} args - Arguments to update or create a WorkflowOptOutContact.
   * @example
   * // Update or create a WorkflowOptOutContact
   * const workflowOptOutContact = await prisma.workflowOptOutContact.upsert({
   *   create: {
   *     // ... data to create a WorkflowOptOutContact
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the WorkflowOptOutContact we want to update
   *   }
   * })
   */
  upsert<T extends WorkflowOptOutContactUpsertArgs>(
    args: Prisma.SelectSubset<T, WorkflowOptOutContactUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowOptOutContactClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowOptOutContactPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of WorkflowOptOutContacts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowOptOutContactCountArgs} args - Arguments to filter WorkflowOptOutContacts to count.
   * @example
   * // Count the number of WorkflowOptOutContacts
   * const count = await prisma.workflowOptOutContact.count({
   *   where: {
   *     // ... the filter for the WorkflowOptOutContacts we want to count
   *   }
   * })
   **/
  count<T extends WorkflowOptOutContactCountArgs>(
    args?: Prisma.Subset<T, WorkflowOptOutContactCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], WorkflowOptOutContactCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a WorkflowOptOutContact.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowOptOutContactAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends WorkflowOptOutContactAggregateArgs>(
    args: Prisma.Subset<T, WorkflowOptOutContactAggregateArgs>
  ): Prisma.PrismaPromise<GetWorkflowOptOutContactAggregateType<T>>;

  /**
   * Group by WorkflowOptOutContact.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowOptOutContactGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends WorkflowOptOutContactGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: WorkflowOptOutContactGroupByArgs["orderBy"] }
      : { orderBy?: WorkflowOptOutContactGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, WorkflowOptOutContactGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetWorkflowOptOutContactGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the WorkflowOptOutContact model
   */
  readonly fields: WorkflowOptOutContactFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for WorkflowOptOutContact.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__WorkflowOptOutContactClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the WorkflowOptOutContact model
 */
export interface WorkflowOptOutContactFieldRefs {
  readonly id: Prisma.FieldRef<"WorkflowOptOutContact", "Int">;
  readonly type: Prisma.FieldRef<"WorkflowOptOutContact", "WorkflowContactType">;
  readonly value: Prisma.FieldRef<"WorkflowOptOutContact", "String">;
  readonly optedOut: Prisma.FieldRef<"WorkflowOptOutContact", "Boolean">;
  readonly createdAt: Prisma.FieldRef<"WorkflowOptOutContact", "DateTime">;
  readonly updatedAt: Prisma.FieldRef<"WorkflowOptOutContact", "DateTime">;
}

// Custom InputTypes
/**
 * WorkflowOptOutContact findUnique
 */
export type WorkflowOptOutContactFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowOptOutContact
   */
  select?: Prisma.WorkflowOptOutContactSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowOptOutContact
   */
  omit?: Prisma.WorkflowOptOutContactOmit<ExtArgs> | null;
  /**
   * Filter, which WorkflowOptOutContact to fetch.
   */
  where: Prisma.WorkflowOptOutContactWhereUniqueInput;
};

/**
 * WorkflowOptOutContact findUniqueOrThrow
 */
export type WorkflowOptOutContactFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowOptOutContact
   */
  select?: Prisma.WorkflowOptOutContactSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowOptOutContact
   */
  omit?: Prisma.WorkflowOptOutContactOmit<ExtArgs> | null;
  /**
   * Filter, which WorkflowOptOutContact to fetch.
   */
  where: Prisma.WorkflowOptOutContactWhereUniqueInput;
};

/**
 * WorkflowOptOutContact findFirst
 */
export type WorkflowOptOutContactFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowOptOutContact
   */
  select?: Prisma.WorkflowOptOutContactSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowOptOutContact
   */
  omit?: Prisma.WorkflowOptOutContactOmit<ExtArgs> | null;
  /**
   * Filter, which WorkflowOptOutContact to fetch.
   */
  where?: Prisma.WorkflowOptOutContactWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WorkflowOptOutContacts to fetch.
   */
  orderBy?:
    | Prisma.WorkflowOptOutContactOrderByWithRelationInput
    | Prisma.WorkflowOptOutContactOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for WorkflowOptOutContacts.
   */
  cursor?: Prisma.WorkflowOptOutContactWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` WorkflowOptOutContacts from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WorkflowOptOutContacts.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of WorkflowOptOutContacts.
   */
  distinct?: Prisma.WorkflowOptOutContactScalarFieldEnum | Prisma.WorkflowOptOutContactScalarFieldEnum[];
};

/**
 * WorkflowOptOutContact findFirstOrThrow
 */
export type WorkflowOptOutContactFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowOptOutContact
   */
  select?: Prisma.WorkflowOptOutContactSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowOptOutContact
   */
  omit?: Prisma.WorkflowOptOutContactOmit<ExtArgs> | null;
  /**
   * Filter, which WorkflowOptOutContact to fetch.
   */
  where?: Prisma.WorkflowOptOutContactWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WorkflowOptOutContacts to fetch.
   */
  orderBy?:
    | Prisma.WorkflowOptOutContactOrderByWithRelationInput
    | Prisma.WorkflowOptOutContactOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for WorkflowOptOutContacts.
   */
  cursor?: Prisma.WorkflowOptOutContactWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` WorkflowOptOutContacts from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WorkflowOptOutContacts.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of WorkflowOptOutContacts.
   */
  distinct?: Prisma.WorkflowOptOutContactScalarFieldEnum | Prisma.WorkflowOptOutContactScalarFieldEnum[];
};

/**
 * WorkflowOptOutContact findMany
 */
export type WorkflowOptOutContactFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowOptOutContact
   */
  select?: Prisma.WorkflowOptOutContactSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowOptOutContact
   */
  omit?: Prisma.WorkflowOptOutContactOmit<ExtArgs> | null;
  /**
   * Filter, which WorkflowOptOutContacts to fetch.
   */
  where?: Prisma.WorkflowOptOutContactWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WorkflowOptOutContacts to fetch.
   */
  orderBy?:
    | Prisma.WorkflowOptOutContactOrderByWithRelationInput
    | Prisma.WorkflowOptOutContactOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing WorkflowOptOutContacts.
   */
  cursor?: Prisma.WorkflowOptOutContactWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` WorkflowOptOutContacts from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WorkflowOptOutContacts.
   */
  skip?: number;
  distinct?: Prisma.WorkflowOptOutContactScalarFieldEnum | Prisma.WorkflowOptOutContactScalarFieldEnum[];
};

/**
 * WorkflowOptOutContact create
 */
export type WorkflowOptOutContactCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowOptOutContact
   */
  select?: Prisma.WorkflowOptOutContactSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowOptOutContact
   */
  omit?: Prisma.WorkflowOptOutContactOmit<ExtArgs> | null;
  /**
   * The data needed to create a WorkflowOptOutContact.
   */
  data: Prisma.XOR<Prisma.WorkflowOptOutContactCreateInput, Prisma.WorkflowOptOutContactUncheckedCreateInput>;
};

/**
 * WorkflowOptOutContact createMany
 */
export type WorkflowOptOutContactCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many WorkflowOptOutContacts.
   */
  data: Prisma.WorkflowOptOutContactCreateManyInput | Prisma.WorkflowOptOutContactCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * WorkflowOptOutContact createManyAndReturn
 */
export type WorkflowOptOutContactCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowOptOutContact
   */
  select?: Prisma.WorkflowOptOutContactSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowOptOutContact
   */
  omit?: Prisma.WorkflowOptOutContactOmit<ExtArgs> | null;
  /**
   * The data used to create many WorkflowOptOutContacts.
   */
  data: Prisma.WorkflowOptOutContactCreateManyInput | Prisma.WorkflowOptOutContactCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * WorkflowOptOutContact update
 */
export type WorkflowOptOutContactUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowOptOutContact
   */
  select?: Prisma.WorkflowOptOutContactSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowOptOutContact
   */
  omit?: Prisma.WorkflowOptOutContactOmit<ExtArgs> | null;
  /**
   * The data needed to update a WorkflowOptOutContact.
   */
  data: Prisma.XOR<Prisma.WorkflowOptOutContactUpdateInput, Prisma.WorkflowOptOutContactUncheckedUpdateInput>;
  /**
   * Choose, which WorkflowOptOutContact to update.
   */
  where: Prisma.WorkflowOptOutContactWhereUniqueInput;
};

/**
 * WorkflowOptOutContact updateMany
 */
export type WorkflowOptOutContactUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update WorkflowOptOutContacts.
   */
  data: Prisma.XOR<
    Prisma.WorkflowOptOutContactUpdateManyMutationInput,
    Prisma.WorkflowOptOutContactUncheckedUpdateManyInput
  >;
  /**
   * Filter which WorkflowOptOutContacts to update
   */
  where?: Prisma.WorkflowOptOutContactWhereInput;
  /**
   * Limit how many WorkflowOptOutContacts to update.
   */
  limit?: number;
};

/**
 * WorkflowOptOutContact updateManyAndReturn
 */
export type WorkflowOptOutContactUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowOptOutContact
   */
  select?: Prisma.WorkflowOptOutContactSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowOptOutContact
   */
  omit?: Prisma.WorkflowOptOutContactOmit<ExtArgs> | null;
  /**
   * The data used to update WorkflowOptOutContacts.
   */
  data: Prisma.XOR<
    Prisma.WorkflowOptOutContactUpdateManyMutationInput,
    Prisma.WorkflowOptOutContactUncheckedUpdateManyInput
  >;
  /**
   * Filter which WorkflowOptOutContacts to update
   */
  where?: Prisma.WorkflowOptOutContactWhereInput;
  /**
   * Limit how many WorkflowOptOutContacts to update.
   */
  limit?: number;
};

/**
 * WorkflowOptOutContact upsert
 */
export type WorkflowOptOutContactUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowOptOutContact
   */
  select?: Prisma.WorkflowOptOutContactSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowOptOutContact
   */
  omit?: Prisma.WorkflowOptOutContactOmit<ExtArgs> | null;
  /**
   * The filter to search for the WorkflowOptOutContact to update in case it exists.
   */
  where: Prisma.WorkflowOptOutContactWhereUniqueInput;
  /**
   * In case the WorkflowOptOutContact found by the `where` argument doesn't exist, create a new WorkflowOptOutContact with this data.
   */
  create: Prisma.XOR<
    Prisma.WorkflowOptOutContactCreateInput,
    Prisma.WorkflowOptOutContactUncheckedCreateInput
  >;
  /**
   * In case the WorkflowOptOutContact was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.WorkflowOptOutContactUpdateInput,
    Prisma.WorkflowOptOutContactUncheckedUpdateInput
  >;
};

/**
 * WorkflowOptOutContact delete
 */
export type WorkflowOptOutContactDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowOptOutContact
   */
  select?: Prisma.WorkflowOptOutContactSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowOptOutContact
   */
  omit?: Prisma.WorkflowOptOutContactOmit<ExtArgs> | null;
  /**
   * Filter which WorkflowOptOutContact to delete.
   */
  where: Prisma.WorkflowOptOutContactWhereUniqueInput;
};

/**
 * WorkflowOptOutContact deleteMany
 */
export type WorkflowOptOutContactDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which WorkflowOptOutContacts to delete
   */
  where?: Prisma.WorkflowOptOutContactWhereInput;
  /**
   * Limit how many WorkflowOptOutContacts to delete.
   */
  limit?: number;
};

/**
 * WorkflowOptOutContact without action
 */
export type WorkflowOptOutContactDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowOptOutContact
   */
  select?: Prisma.WorkflowOptOutContactSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowOptOutContact
   */
  omit?: Prisma.WorkflowOptOutContactOmit<ExtArgs> | null;
};
