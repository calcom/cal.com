/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `Credential` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model Credential
 *
 */
export type CredentialModel = runtime.Types.Result.DefaultSelection<Prisma.$CredentialPayload>;

export type AggregateCredential = {
  _count: CredentialCountAggregateOutputType | null;
  _avg: CredentialAvgAggregateOutputType | null;
  _sum: CredentialSumAggregateOutputType | null;
  _min: CredentialMinAggregateOutputType | null;
  _max: CredentialMaxAggregateOutputType | null;
};

export type CredentialAvgAggregateOutputType = {
  id: number | null;
  userId: number | null;
  teamId: number | null;
  billingCycleStart: number | null;
};

export type CredentialSumAggregateOutputType = {
  id: number | null;
  userId: number | null;
  teamId: number | null;
  billingCycleStart: number | null;
};

export type CredentialMinAggregateOutputType = {
  id: number | null;
  type: string | null;
  userId: number | null;
  teamId: number | null;
  appId: string | null;
  subscriptionId: string | null;
  paymentStatus: string | null;
  billingCycleStart: number | null;
  invalid: boolean | null;
  delegationCredentialId: string | null;
};

export type CredentialMaxAggregateOutputType = {
  id: number | null;
  type: string | null;
  userId: number | null;
  teamId: number | null;
  appId: string | null;
  subscriptionId: string | null;
  paymentStatus: string | null;
  billingCycleStart: number | null;
  invalid: boolean | null;
  delegationCredentialId: string | null;
};

export type CredentialCountAggregateOutputType = {
  id: number;
  type: number;
  key: number;
  userId: number;
  teamId: number;
  appId: number;
  subscriptionId: number;
  paymentStatus: number;
  billingCycleStart: number;
  invalid: number;
  delegationCredentialId: number;
  _all: number;
};

export type CredentialAvgAggregateInputType = {
  id?: true;
  userId?: true;
  teamId?: true;
  billingCycleStart?: true;
};

export type CredentialSumAggregateInputType = {
  id?: true;
  userId?: true;
  teamId?: true;
  billingCycleStart?: true;
};

export type CredentialMinAggregateInputType = {
  id?: true;
  type?: true;
  userId?: true;
  teamId?: true;
  appId?: true;
  subscriptionId?: true;
  paymentStatus?: true;
  billingCycleStart?: true;
  invalid?: true;
  delegationCredentialId?: true;
};

export type CredentialMaxAggregateInputType = {
  id?: true;
  type?: true;
  userId?: true;
  teamId?: true;
  appId?: true;
  subscriptionId?: true;
  paymentStatus?: true;
  billingCycleStart?: true;
  invalid?: true;
  delegationCredentialId?: true;
};

export type CredentialCountAggregateInputType = {
  id?: true;
  type?: true;
  key?: true;
  userId?: true;
  teamId?: true;
  appId?: true;
  subscriptionId?: true;
  paymentStatus?: true;
  billingCycleStart?: true;
  invalid?: true;
  delegationCredentialId?: true;
  _all?: true;
};

export type CredentialAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which Credential to aggregate.
   */
  where?: Prisma.CredentialWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Credentials to fetch.
   */
  orderBy?: Prisma.CredentialOrderByWithRelationInput | Prisma.CredentialOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.CredentialWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Credentials from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Credentials.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned Credentials
   **/
  _count?: true | CredentialCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: CredentialAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: CredentialSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: CredentialMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: CredentialMaxAggregateInputType;
};

export type GetCredentialAggregateType<T extends CredentialAggregateArgs> = {
  [P in keyof T & keyof AggregateCredential]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateCredential[P]>
    : Prisma.GetScalarType<T[P], AggregateCredential[P]>;
};

export type CredentialGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.CredentialWhereInput;
  orderBy?: Prisma.CredentialOrderByWithAggregationInput | Prisma.CredentialOrderByWithAggregationInput[];
  by: Prisma.CredentialScalarFieldEnum[] | Prisma.CredentialScalarFieldEnum;
  having?: Prisma.CredentialScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: CredentialCountAggregateInputType | true;
  _avg?: CredentialAvgAggregateInputType;
  _sum?: CredentialSumAggregateInputType;
  _min?: CredentialMinAggregateInputType;
  _max?: CredentialMaxAggregateInputType;
};

export type CredentialGroupByOutputType = {
  id: number;
  type: string;
  key: runtime.JsonValue;
  userId: number | null;
  teamId: number | null;
  appId: string | null;
  subscriptionId: string | null;
  paymentStatus: string | null;
  billingCycleStart: number | null;
  invalid: boolean | null;
  delegationCredentialId: string | null;
  _count: CredentialCountAggregateOutputType | null;
  _avg: CredentialAvgAggregateOutputType | null;
  _sum: CredentialSumAggregateOutputType | null;
  _min: CredentialMinAggregateOutputType | null;
  _max: CredentialMaxAggregateOutputType | null;
};

type GetCredentialGroupByPayload<T extends CredentialGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<CredentialGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof CredentialGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], CredentialGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], CredentialGroupByOutputType[P]>;
    }
  >
>;

export type CredentialWhereInput = {
  AND?: Prisma.CredentialWhereInput | Prisma.CredentialWhereInput[];
  OR?: Prisma.CredentialWhereInput[];
  NOT?: Prisma.CredentialWhereInput | Prisma.CredentialWhereInput[];
  id?: Prisma.IntFilter<"Credential"> | number;
  type?: Prisma.StringFilter<"Credential"> | string;
  key?: Prisma.JsonFilter<"Credential">;
  userId?: Prisma.IntNullableFilter<"Credential"> | number | null;
  teamId?: Prisma.IntNullableFilter<"Credential"> | number | null;
  appId?: Prisma.StringNullableFilter<"Credential"> | string | null;
  subscriptionId?: Prisma.StringNullableFilter<"Credential"> | string | null;
  paymentStatus?: Prisma.StringNullableFilter<"Credential"> | string | null;
  billingCycleStart?: Prisma.IntNullableFilter<"Credential"> | number | null;
  invalid?: Prisma.BoolNullableFilter<"Credential"> | boolean | null;
  delegationCredentialId?: Prisma.StringNullableFilter<"Credential"> | string | null;
  user?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null;
  team?: Prisma.XOR<Prisma.TeamNullableScalarRelationFilter, Prisma.TeamWhereInput> | null;
  app?: Prisma.XOR<Prisma.AppNullableScalarRelationFilter, Prisma.AppWhereInput> | null;
  destinationCalendars?: Prisma.DestinationCalendarListRelationFilter;
  selectedCalendars?: Prisma.SelectedCalendarListRelationFilter;
  CalendarCache?: Prisma.CalendarCacheListRelationFilter;
  references?: Prisma.BookingReferenceListRelationFilter;
  delegationCredential?: Prisma.XOR<
    Prisma.DelegationCredentialNullableScalarRelationFilter,
    Prisma.DelegationCredentialWhereInput
  > | null;
};

export type CredentialOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  key?: Prisma.SortOrder;
  userId?: Prisma.SortOrderInput | Prisma.SortOrder;
  teamId?: Prisma.SortOrderInput | Prisma.SortOrder;
  appId?: Prisma.SortOrderInput | Prisma.SortOrder;
  subscriptionId?: Prisma.SortOrderInput | Prisma.SortOrder;
  paymentStatus?: Prisma.SortOrderInput | Prisma.SortOrder;
  billingCycleStart?: Prisma.SortOrderInput | Prisma.SortOrder;
  invalid?: Prisma.SortOrderInput | Prisma.SortOrder;
  delegationCredentialId?: Prisma.SortOrderInput | Prisma.SortOrder;
  user?: Prisma.UserOrderByWithRelationInput;
  team?: Prisma.TeamOrderByWithRelationInput;
  app?: Prisma.AppOrderByWithRelationInput;
  destinationCalendars?: Prisma.DestinationCalendarOrderByRelationAggregateInput;
  selectedCalendars?: Prisma.SelectedCalendarOrderByRelationAggregateInput;
  CalendarCache?: Prisma.CalendarCacheOrderByRelationAggregateInput;
  references?: Prisma.BookingReferenceOrderByRelationAggregateInput;
  delegationCredential?: Prisma.DelegationCredentialOrderByWithRelationInput;
};

export type CredentialWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    AND?: Prisma.CredentialWhereInput | Prisma.CredentialWhereInput[];
    OR?: Prisma.CredentialWhereInput[];
    NOT?: Prisma.CredentialWhereInput | Prisma.CredentialWhereInput[];
    type?: Prisma.StringFilter<"Credential"> | string;
    key?: Prisma.JsonFilter<"Credential">;
    userId?: Prisma.IntNullableFilter<"Credential"> | number | null;
    teamId?: Prisma.IntNullableFilter<"Credential"> | number | null;
    appId?: Prisma.StringNullableFilter<"Credential"> | string | null;
    subscriptionId?: Prisma.StringNullableFilter<"Credential"> | string | null;
    paymentStatus?: Prisma.StringNullableFilter<"Credential"> | string | null;
    billingCycleStart?: Prisma.IntNullableFilter<"Credential"> | number | null;
    invalid?: Prisma.BoolNullableFilter<"Credential"> | boolean | null;
    delegationCredentialId?: Prisma.StringNullableFilter<"Credential"> | string | null;
    user?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null;
    team?: Prisma.XOR<Prisma.TeamNullableScalarRelationFilter, Prisma.TeamWhereInput> | null;
    app?: Prisma.XOR<Prisma.AppNullableScalarRelationFilter, Prisma.AppWhereInput> | null;
    destinationCalendars?: Prisma.DestinationCalendarListRelationFilter;
    selectedCalendars?: Prisma.SelectedCalendarListRelationFilter;
    CalendarCache?: Prisma.CalendarCacheListRelationFilter;
    references?: Prisma.BookingReferenceListRelationFilter;
    delegationCredential?: Prisma.XOR<
      Prisma.DelegationCredentialNullableScalarRelationFilter,
      Prisma.DelegationCredentialWhereInput
    > | null;
  },
  "id"
>;

export type CredentialOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  key?: Prisma.SortOrder;
  userId?: Prisma.SortOrderInput | Prisma.SortOrder;
  teamId?: Prisma.SortOrderInput | Prisma.SortOrder;
  appId?: Prisma.SortOrderInput | Prisma.SortOrder;
  subscriptionId?: Prisma.SortOrderInput | Prisma.SortOrder;
  paymentStatus?: Prisma.SortOrderInput | Prisma.SortOrder;
  billingCycleStart?: Prisma.SortOrderInput | Prisma.SortOrder;
  invalid?: Prisma.SortOrderInput | Prisma.SortOrder;
  delegationCredentialId?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.CredentialCountOrderByAggregateInput;
  _avg?: Prisma.CredentialAvgOrderByAggregateInput;
  _max?: Prisma.CredentialMaxOrderByAggregateInput;
  _min?: Prisma.CredentialMinOrderByAggregateInput;
  _sum?: Prisma.CredentialSumOrderByAggregateInput;
};

export type CredentialScalarWhereWithAggregatesInput = {
  AND?: Prisma.CredentialScalarWhereWithAggregatesInput | Prisma.CredentialScalarWhereWithAggregatesInput[];
  OR?: Prisma.CredentialScalarWhereWithAggregatesInput[];
  NOT?: Prisma.CredentialScalarWhereWithAggregatesInput | Prisma.CredentialScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"Credential"> | number;
  type?: Prisma.StringWithAggregatesFilter<"Credential"> | string;
  key?: Prisma.JsonWithAggregatesFilter<"Credential">;
  userId?: Prisma.IntNullableWithAggregatesFilter<"Credential"> | number | null;
  teamId?: Prisma.IntNullableWithAggregatesFilter<"Credential"> | number | null;
  appId?: Prisma.StringNullableWithAggregatesFilter<"Credential"> | string | null;
  subscriptionId?: Prisma.StringNullableWithAggregatesFilter<"Credential"> | string | null;
  paymentStatus?: Prisma.StringNullableWithAggregatesFilter<"Credential"> | string | null;
  billingCycleStart?: Prisma.IntNullableWithAggregatesFilter<"Credential"> | number | null;
  invalid?: Prisma.BoolNullableWithAggregatesFilter<"Credential"> | boolean | null;
  delegationCredentialId?: Prisma.StringNullableWithAggregatesFilter<"Credential"> | string | null;
};

export type CredentialCreateInput = {
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  user?: Prisma.UserCreateNestedOneWithoutCredentialsInput;
  team?: Prisma.TeamCreateNestedOneWithoutCredentialsInput;
  app?: Prisma.AppCreateNestedOneWithoutCredentialsInput;
  destinationCalendars?: Prisma.DestinationCalendarCreateNestedManyWithoutCredentialInput;
  selectedCalendars?: Prisma.SelectedCalendarCreateNestedManyWithoutCredentialInput;
  CalendarCache?: Prisma.CalendarCacheCreateNestedManyWithoutCredentialInput;
  references?: Prisma.BookingReferenceCreateNestedManyWithoutCredentialInput;
  delegationCredential?: Prisma.DelegationCredentialCreateNestedOneWithoutCredentialsInput;
};

export type CredentialUncheckedCreateInput = {
  id?: number;
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: number | null;
  teamId?: number | null;
  appId?: string | null;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  delegationCredentialId?: string | null;
  destinationCalendars?: Prisma.DestinationCalendarUncheckedCreateNestedManyWithoutCredentialInput;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedCreateNestedManyWithoutCredentialInput;
  CalendarCache?: Prisma.CalendarCacheUncheckedCreateNestedManyWithoutCredentialInput;
  references?: Prisma.BookingReferenceUncheckedCreateNestedManyWithoutCredentialInput;
};

export type CredentialUpdateInput = {
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  user?: Prisma.UserUpdateOneWithoutCredentialsNestedInput;
  team?: Prisma.TeamUpdateOneWithoutCredentialsNestedInput;
  app?: Prisma.AppUpdateOneWithoutCredentialsNestedInput;
  destinationCalendars?: Prisma.DestinationCalendarUpdateManyWithoutCredentialNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUpdateManyWithoutCredentialNestedInput;
  CalendarCache?: Prisma.CalendarCacheUpdateManyWithoutCredentialNestedInput;
  references?: Prisma.BookingReferenceUpdateManyWithoutCredentialNestedInput;
  delegationCredential?: Prisma.DelegationCredentialUpdateOneWithoutCredentialsNestedInput;
};

export type CredentialUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  destinationCalendars?: Prisma.DestinationCalendarUncheckedUpdateManyWithoutCredentialNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedUpdateManyWithoutCredentialNestedInput;
  CalendarCache?: Prisma.CalendarCacheUncheckedUpdateManyWithoutCredentialNestedInput;
  references?: Prisma.BookingReferenceUncheckedUpdateManyWithoutCredentialNestedInput;
};

export type CredentialCreateManyInput = {
  id?: number;
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: number | null;
  teamId?: number | null;
  appId?: string | null;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  delegationCredentialId?: string | null;
};

export type CredentialUpdateManyMutationInput = {
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
};

export type CredentialUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type CredentialCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  key?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  appId?: Prisma.SortOrder;
  subscriptionId?: Prisma.SortOrder;
  paymentStatus?: Prisma.SortOrder;
  billingCycleStart?: Prisma.SortOrder;
  invalid?: Prisma.SortOrder;
  delegationCredentialId?: Prisma.SortOrder;
};

export type CredentialAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  billingCycleStart?: Prisma.SortOrder;
};

export type CredentialMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  appId?: Prisma.SortOrder;
  subscriptionId?: Prisma.SortOrder;
  paymentStatus?: Prisma.SortOrder;
  billingCycleStart?: Prisma.SortOrder;
  invalid?: Prisma.SortOrder;
  delegationCredentialId?: Prisma.SortOrder;
};

export type CredentialMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  appId?: Prisma.SortOrder;
  subscriptionId?: Prisma.SortOrder;
  paymentStatus?: Prisma.SortOrder;
  billingCycleStart?: Prisma.SortOrder;
  invalid?: Prisma.SortOrder;
  delegationCredentialId?: Prisma.SortOrder;
};

export type CredentialSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  billingCycleStart?: Prisma.SortOrder;
};

export type CredentialNullableScalarRelationFilter = {
  is?: Prisma.CredentialWhereInput | null;
  isNot?: Prisma.CredentialWhereInput | null;
};

export type CredentialListRelationFilter = {
  every?: Prisma.CredentialWhereInput;
  some?: Prisma.CredentialWhereInput;
  none?: Prisma.CredentialWhereInput;
};

export type CredentialOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type CredentialCreateNestedOneWithoutDestinationCalendarsInput = {
  create?: Prisma.XOR<
    Prisma.CredentialCreateWithoutDestinationCalendarsInput,
    Prisma.CredentialUncheckedCreateWithoutDestinationCalendarsInput
  >;
  connectOrCreate?: Prisma.CredentialCreateOrConnectWithoutDestinationCalendarsInput;
  connect?: Prisma.CredentialWhereUniqueInput;
};

export type CredentialUpdateOneWithoutDestinationCalendarsNestedInput = {
  create?: Prisma.XOR<
    Prisma.CredentialCreateWithoutDestinationCalendarsInput,
    Prisma.CredentialUncheckedCreateWithoutDestinationCalendarsInput
  >;
  connectOrCreate?: Prisma.CredentialCreateOrConnectWithoutDestinationCalendarsInput;
  upsert?: Prisma.CredentialUpsertWithoutDestinationCalendarsInput;
  disconnect?: Prisma.CredentialWhereInput | boolean;
  delete?: Prisma.CredentialWhereInput | boolean;
  connect?: Prisma.CredentialWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.CredentialUpdateToOneWithWhereWithoutDestinationCalendarsInput,
      Prisma.CredentialUpdateWithoutDestinationCalendarsInput
    >,
    Prisma.CredentialUncheckedUpdateWithoutDestinationCalendarsInput
  >;
};

export type CredentialCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<Prisma.CredentialCreateWithoutUserInput, Prisma.CredentialUncheckedCreateWithoutUserInput>
    | Prisma.CredentialCreateWithoutUserInput[]
    | Prisma.CredentialUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.CredentialCreateOrConnectWithoutUserInput
    | Prisma.CredentialCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.CredentialCreateManyUserInputEnvelope;
  connect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
};

export type CredentialUncheckedCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<Prisma.CredentialCreateWithoutUserInput, Prisma.CredentialUncheckedCreateWithoutUserInput>
    | Prisma.CredentialCreateWithoutUserInput[]
    | Prisma.CredentialUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.CredentialCreateOrConnectWithoutUserInput
    | Prisma.CredentialCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.CredentialCreateManyUserInputEnvelope;
  connect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
};

export type CredentialUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<Prisma.CredentialCreateWithoutUserInput, Prisma.CredentialUncheckedCreateWithoutUserInput>
    | Prisma.CredentialCreateWithoutUserInput[]
    | Prisma.CredentialUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.CredentialCreateOrConnectWithoutUserInput
    | Prisma.CredentialCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.CredentialUpsertWithWhereUniqueWithoutUserInput
    | Prisma.CredentialUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.CredentialCreateManyUserInputEnvelope;
  set?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  disconnect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  delete?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  connect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  update?:
    | Prisma.CredentialUpdateWithWhereUniqueWithoutUserInput
    | Prisma.CredentialUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.CredentialUpdateManyWithWhereWithoutUserInput
    | Prisma.CredentialUpdateManyWithWhereWithoutUserInput[];
  deleteMany?: Prisma.CredentialScalarWhereInput | Prisma.CredentialScalarWhereInput[];
};

export type CredentialUncheckedUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<Prisma.CredentialCreateWithoutUserInput, Prisma.CredentialUncheckedCreateWithoutUserInput>
    | Prisma.CredentialCreateWithoutUserInput[]
    | Prisma.CredentialUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.CredentialCreateOrConnectWithoutUserInput
    | Prisma.CredentialCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.CredentialUpsertWithWhereUniqueWithoutUserInput
    | Prisma.CredentialUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.CredentialCreateManyUserInputEnvelope;
  set?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  disconnect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  delete?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  connect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  update?:
    | Prisma.CredentialUpdateWithWhereUniqueWithoutUserInput
    | Prisma.CredentialUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.CredentialUpdateManyWithWhereWithoutUserInput
    | Prisma.CredentialUpdateManyWithWhereWithoutUserInput[];
  deleteMany?: Prisma.CredentialScalarWhereInput | Prisma.CredentialScalarWhereInput[];
};

export type CredentialCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<Prisma.CredentialCreateWithoutTeamInput, Prisma.CredentialUncheckedCreateWithoutTeamInput>
    | Prisma.CredentialCreateWithoutTeamInput[]
    | Prisma.CredentialUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.CredentialCreateOrConnectWithoutTeamInput
    | Prisma.CredentialCreateOrConnectWithoutTeamInput[];
  createMany?: Prisma.CredentialCreateManyTeamInputEnvelope;
  connect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
};

export type CredentialUncheckedCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<Prisma.CredentialCreateWithoutTeamInput, Prisma.CredentialUncheckedCreateWithoutTeamInput>
    | Prisma.CredentialCreateWithoutTeamInput[]
    | Prisma.CredentialUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.CredentialCreateOrConnectWithoutTeamInput
    | Prisma.CredentialCreateOrConnectWithoutTeamInput[];
  createMany?: Prisma.CredentialCreateManyTeamInputEnvelope;
  connect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
};

export type CredentialUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<Prisma.CredentialCreateWithoutTeamInput, Prisma.CredentialUncheckedCreateWithoutTeamInput>
    | Prisma.CredentialCreateWithoutTeamInput[]
    | Prisma.CredentialUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.CredentialCreateOrConnectWithoutTeamInput
    | Prisma.CredentialCreateOrConnectWithoutTeamInput[];
  upsert?:
    | Prisma.CredentialUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.CredentialUpsertWithWhereUniqueWithoutTeamInput[];
  createMany?: Prisma.CredentialCreateManyTeamInputEnvelope;
  set?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  disconnect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  delete?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  connect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  update?:
    | Prisma.CredentialUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.CredentialUpdateWithWhereUniqueWithoutTeamInput[];
  updateMany?:
    | Prisma.CredentialUpdateManyWithWhereWithoutTeamInput
    | Prisma.CredentialUpdateManyWithWhereWithoutTeamInput[];
  deleteMany?: Prisma.CredentialScalarWhereInput | Prisma.CredentialScalarWhereInput[];
};

export type CredentialUncheckedUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<Prisma.CredentialCreateWithoutTeamInput, Prisma.CredentialUncheckedCreateWithoutTeamInput>
    | Prisma.CredentialCreateWithoutTeamInput[]
    | Prisma.CredentialUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.CredentialCreateOrConnectWithoutTeamInput
    | Prisma.CredentialCreateOrConnectWithoutTeamInput[];
  upsert?:
    | Prisma.CredentialUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.CredentialUpsertWithWhereUniqueWithoutTeamInput[];
  createMany?: Prisma.CredentialCreateManyTeamInputEnvelope;
  set?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  disconnect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  delete?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  connect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  update?:
    | Prisma.CredentialUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.CredentialUpdateWithWhereUniqueWithoutTeamInput[];
  updateMany?:
    | Prisma.CredentialUpdateManyWithWhereWithoutTeamInput
    | Prisma.CredentialUpdateManyWithWhereWithoutTeamInput[];
  deleteMany?: Prisma.CredentialScalarWhereInput | Prisma.CredentialScalarWhereInput[];
};

export type CredentialCreateNestedOneWithoutReferencesInput = {
  create?: Prisma.XOR<
    Prisma.CredentialCreateWithoutReferencesInput,
    Prisma.CredentialUncheckedCreateWithoutReferencesInput
  >;
  connectOrCreate?: Prisma.CredentialCreateOrConnectWithoutReferencesInput;
  connect?: Prisma.CredentialWhereUniqueInput;
};

export type CredentialUpdateOneWithoutReferencesNestedInput = {
  create?: Prisma.XOR<
    Prisma.CredentialCreateWithoutReferencesInput,
    Prisma.CredentialUncheckedCreateWithoutReferencesInput
  >;
  connectOrCreate?: Prisma.CredentialCreateOrConnectWithoutReferencesInput;
  upsert?: Prisma.CredentialUpsertWithoutReferencesInput;
  disconnect?: Prisma.CredentialWhereInput | boolean;
  delete?: Prisma.CredentialWhereInput | boolean;
  connect?: Prisma.CredentialWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.CredentialUpdateToOneWithWhereWithoutReferencesInput,
      Prisma.CredentialUpdateWithoutReferencesInput
    >,
    Prisma.CredentialUncheckedUpdateWithoutReferencesInput
  >;
};

export type CredentialCreateNestedOneWithoutSelectedCalendarsInput = {
  create?: Prisma.XOR<
    Prisma.CredentialCreateWithoutSelectedCalendarsInput,
    Prisma.CredentialUncheckedCreateWithoutSelectedCalendarsInput
  >;
  connectOrCreate?: Prisma.CredentialCreateOrConnectWithoutSelectedCalendarsInput;
  connect?: Prisma.CredentialWhereUniqueInput;
};

export type CredentialUpdateOneWithoutSelectedCalendarsNestedInput = {
  create?: Prisma.XOR<
    Prisma.CredentialCreateWithoutSelectedCalendarsInput,
    Prisma.CredentialUncheckedCreateWithoutSelectedCalendarsInput
  >;
  connectOrCreate?: Prisma.CredentialCreateOrConnectWithoutSelectedCalendarsInput;
  upsert?: Prisma.CredentialUpsertWithoutSelectedCalendarsInput;
  disconnect?: Prisma.CredentialWhereInput | boolean;
  delete?: Prisma.CredentialWhereInput | boolean;
  connect?: Prisma.CredentialWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.CredentialUpdateToOneWithWhereWithoutSelectedCalendarsInput,
      Prisma.CredentialUpdateWithoutSelectedCalendarsInput
    >,
    Prisma.CredentialUncheckedUpdateWithoutSelectedCalendarsInput
  >;
};

export type CredentialCreateNestedManyWithoutAppInput = {
  create?:
    | Prisma.XOR<Prisma.CredentialCreateWithoutAppInput, Prisma.CredentialUncheckedCreateWithoutAppInput>
    | Prisma.CredentialCreateWithoutAppInput[]
    | Prisma.CredentialUncheckedCreateWithoutAppInput[];
  connectOrCreate?:
    | Prisma.CredentialCreateOrConnectWithoutAppInput
    | Prisma.CredentialCreateOrConnectWithoutAppInput[];
  createMany?: Prisma.CredentialCreateManyAppInputEnvelope;
  connect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
};

export type CredentialUncheckedCreateNestedManyWithoutAppInput = {
  create?:
    | Prisma.XOR<Prisma.CredentialCreateWithoutAppInput, Prisma.CredentialUncheckedCreateWithoutAppInput>
    | Prisma.CredentialCreateWithoutAppInput[]
    | Prisma.CredentialUncheckedCreateWithoutAppInput[];
  connectOrCreate?:
    | Prisma.CredentialCreateOrConnectWithoutAppInput
    | Prisma.CredentialCreateOrConnectWithoutAppInput[];
  createMany?: Prisma.CredentialCreateManyAppInputEnvelope;
  connect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
};

export type CredentialUpdateManyWithoutAppNestedInput = {
  create?:
    | Prisma.XOR<Prisma.CredentialCreateWithoutAppInput, Prisma.CredentialUncheckedCreateWithoutAppInput>
    | Prisma.CredentialCreateWithoutAppInput[]
    | Prisma.CredentialUncheckedCreateWithoutAppInput[];
  connectOrCreate?:
    | Prisma.CredentialCreateOrConnectWithoutAppInput
    | Prisma.CredentialCreateOrConnectWithoutAppInput[];
  upsert?:
    | Prisma.CredentialUpsertWithWhereUniqueWithoutAppInput
    | Prisma.CredentialUpsertWithWhereUniqueWithoutAppInput[];
  createMany?: Prisma.CredentialCreateManyAppInputEnvelope;
  set?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  disconnect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  delete?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  connect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  update?:
    | Prisma.CredentialUpdateWithWhereUniqueWithoutAppInput
    | Prisma.CredentialUpdateWithWhereUniqueWithoutAppInput[];
  updateMany?:
    | Prisma.CredentialUpdateManyWithWhereWithoutAppInput
    | Prisma.CredentialUpdateManyWithWhereWithoutAppInput[];
  deleteMany?: Prisma.CredentialScalarWhereInput | Prisma.CredentialScalarWhereInput[];
};

export type CredentialUncheckedUpdateManyWithoutAppNestedInput = {
  create?:
    | Prisma.XOR<Prisma.CredentialCreateWithoutAppInput, Prisma.CredentialUncheckedCreateWithoutAppInput>
    | Prisma.CredentialCreateWithoutAppInput[]
    | Prisma.CredentialUncheckedCreateWithoutAppInput[];
  connectOrCreate?:
    | Prisma.CredentialCreateOrConnectWithoutAppInput
    | Prisma.CredentialCreateOrConnectWithoutAppInput[];
  upsert?:
    | Prisma.CredentialUpsertWithWhereUniqueWithoutAppInput
    | Prisma.CredentialUpsertWithWhereUniqueWithoutAppInput[];
  createMany?: Prisma.CredentialCreateManyAppInputEnvelope;
  set?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  disconnect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  delete?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  connect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  update?:
    | Prisma.CredentialUpdateWithWhereUniqueWithoutAppInput
    | Prisma.CredentialUpdateWithWhereUniqueWithoutAppInput[];
  updateMany?:
    | Prisma.CredentialUpdateManyWithWhereWithoutAppInput
    | Prisma.CredentialUpdateManyWithWhereWithoutAppInput[];
  deleteMany?: Prisma.CredentialScalarWhereInput | Prisma.CredentialScalarWhereInput[];
};

export type CredentialCreateNestedOneWithoutCalendarCacheInput = {
  create?: Prisma.XOR<
    Prisma.CredentialCreateWithoutCalendarCacheInput,
    Prisma.CredentialUncheckedCreateWithoutCalendarCacheInput
  >;
  connectOrCreate?: Prisma.CredentialCreateOrConnectWithoutCalendarCacheInput;
  connect?: Prisma.CredentialWhereUniqueInput;
};

export type CredentialUpdateOneWithoutCalendarCacheNestedInput = {
  create?: Prisma.XOR<
    Prisma.CredentialCreateWithoutCalendarCacheInput,
    Prisma.CredentialUncheckedCreateWithoutCalendarCacheInput
  >;
  connectOrCreate?: Prisma.CredentialCreateOrConnectWithoutCalendarCacheInput;
  upsert?: Prisma.CredentialUpsertWithoutCalendarCacheInput;
  disconnect?: Prisma.CredentialWhereInput | boolean;
  delete?: Prisma.CredentialWhereInput | boolean;
  connect?: Prisma.CredentialWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.CredentialUpdateToOneWithWhereWithoutCalendarCacheInput,
      Prisma.CredentialUpdateWithoutCalendarCacheInput
    >,
    Prisma.CredentialUncheckedUpdateWithoutCalendarCacheInput
  >;
};

export type CredentialCreateNestedManyWithoutDelegationCredentialInput = {
  create?:
    | Prisma.XOR<
        Prisma.CredentialCreateWithoutDelegationCredentialInput,
        Prisma.CredentialUncheckedCreateWithoutDelegationCredentialInput
      >
    | Prisma.CredentialCreateWithoutDelegationCredentialInput[]
    | Prisma.CredentialUncheckedCreateWithoutDelegationCredentialInput[];
  connectOrCreate?:
    | Prisma.CredentialCreateOrConnectWithoutDelegationCredentialInput
    | Prisma.CredentialCreateOrConnectWithoutDelegationCredentialInput[];
  createMany?: Prisma.CredentialCreateManyDelegationCredentialInputEnvelope;
  connect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
};

export type CredentialUncheckedCreateNestedManyWithoutDelegationCredentialInput = {
  create?:
    | Prisma.XOR<
        Prisma.CredentialCreateWithoutDelegationCredentialInput,
        Prisma.CredentialUncheckedCreateWithoutDelegationCredentialInput
      >
    | Prisma.CredentialCreateWithoutDelegationCredentialInput[]
    | Prisma.CredentialUncheckedCreateWithoutDelegationCredentialInput[];
  connectOrCreate?:
    | Prisma.CredentialCreateOrConnectWithoutDelegationCredentialInput
    | Prisma.CredentialCreateOrConnectWithoutDelegationCredentialInput[];
  createMany?: Prisma.CredentialCreateManyDelegationCredentialInputEnvelope;
  connect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
};

export type CredentialUpdateManyWithoutDelegationCredentialNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.CredentialCreateWithoutDelegationCredentialInput,
        Prisma.CredentialUncheckedCreateWithoutDelegationCredentialInput
      >
    | Prisma.CredentialCreateWithoutDelegationCredentialInput[]
    | Prisma.CredentialUncheckedCreateWithoutDelegationCredentialInput[];
  connectOrCreate?:
    | Prisma.CredentialCreateOrConnectWithoutDelegationCredentialInput
    | Prisma.CredentialCreateOrConnectWithoutDelegationCredentialInput[];
  upsert?:
    | Prisma.CredentialUpsertWithWhereUniqueWithoutDelegationCredentialInput
    | Prisma.CredentialUpsertWithWhereUniqueWithoutDelegationCredentialInput[];
  createMany?: Prisma.CredentialCreateManyDelegationCredentialInputEnvelope;
  set?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  disconnect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  delete?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  connect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  update?:
    | Prisma.CredentialUpdateWithWhereUniqueWithoutDelegationCredentialInput
    | Prisma.CredentialUpdateWithWhereUniqueWithoutDelegationCredentialInput[];
  updateMany?:
    | Prisma.CredentialUpdateManyWithWhereWithoutDelegationCredentialInput
    | Prisma.CredentialUpdateManyWithWhereWithoutDelegationCredentialInput[];
  deleteMany?: Prisma.CredentialScalarWhereInput | Prisma.CredentialScalarWhereInput[];
};

export type CredentialUncheckedUpdateManyWithoutDelegationCredentialNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.CredentialCreateWithoutDelegationCredentialInput,
        Prisma.CredentialUncheckedCreateWithoutDelegationCredentialInput
      >
    | Prisma.CredentialCreateWithoutDelegationCredentialInput[]
    | Prisma.CredentialUncheckedCreateWithoutDelegationCredentialInput[];
  connectOrCreate?:
    | Prisma.CredentialCreateOrConnectWithoutDelegationCredentialInput
    | Prisma.CredentialCreateOrConnectWithoutDelegationCredentialInput[];
  upsert?:
    | Prisma.CredentialUpsertWithWhereUniqueWithoutDelegationCredentialInput
    | Prisma.CredentialUpsertWithWhereUniqueWithoutDelegationCredentialInput[];
  createMany?: Prisma.CredentialCreateManyDelegationCredentialInputEnvelope;
  set?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  disconnect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  delete?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  connect?: Prisma.CredentialWhereUniqueInput | Prisma.CredentialWhereUniqueInput[];
  update?:
    | Prisma.CredentialUpdateWithWhereUniqueWithoutDelegationCredentialInput
    | Prisma.CredentialUpdateWithWhereUniqueWithoutDelegationCredentialInput[];
  updateMany?:
    | Prisma.CredentialUpdateManyWithWhereWithoutDelegationCredentialInput
    | Prisma.CredentialUpdateManyWithWhereWithoutDelegationCredentialInput[];
  deleteMany?: Prisma.CredentialScalarWhereInput | Prisma.CredentialScalarWhereInput[];
};

export type CredentialCreateWithoutDestinationCalendarsInput = {
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  user?: Prisma.UserCreateNestedOneWithoutCredentialsInput;
  team?: Prisma.TeamCreateNestedOneWithoutCredentialsInput;
  app?: Prisma.AppCreateNestedOneWithoutCredentialsInput;
  selectedCalendars?: Prisma.SelectedCalendarCreateNestedManyWithoutCredentialInput;
  CalendarCache?: Prisma.CalendarCacheCreateNestedManyWithoutCredentialInput;
  references?: Prisma.BookingReferenceCreateNestedManyWithoutCredentialInput;
  delegationCredential?: Prisma.DelegationCredentialCreateNestedOneWithoutCredentialsInput;
};

export type CredentialUncheckedCreateWithoutDestinationCalendarsInput = {
  id?: number;
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: number | null;
  teamId?: number | null;
  appId?: string | null;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  delegationCredentialId?: string | null;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedCreateNestedManyWithoutCredentialInput;
  CalendarCache?: Prisma.CalendarCacheUncheckedCreateNestedManyWithoutCredentialInput;
  references?: Prisma.BookingReferenceUncheckedCreateNestedManyWithoutCredentialInput;
};

export type CredentialCreateOrConnectWithoutDestinationCalendarsInput = {
  where: Prisma.CredentialWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.CredentialCreateWithoutDestinationCalendarsInput,
    Prisma.CredentialUncheckedCreateWithoutDestinationCalendarsInput
  >;
};

export type CredentialUpsertWithoutDestinationCalendarsInput = {
  update: Prisma.XOR<
    Prisma.CredentialUpdateWithoutDestinationCalendarsInput,
    Prisma.CredentialUncheckedUpdateWithoutDestinationCalendarsInput
  >;
  create: Prisma.XOR<
    Prisma.CredentialCreateWithoutDestinationCalendarsInput,
    Prisma.CredentialUncheckedCreateWithoutDestinationCalendarsInput
  >;
  where?: Prisma.CredentialWhereInput;
};

export type CredentialUpdateToOneWithWhereWithoutDestinationCalendarsInput = {
  where?: Prisma.CredentialWhereInput;
  data: Prisma.XOR<
    Prisma.CredentialUpdateWithoutDestinationCalendarsInput,
    Prisma.CredentialUncheckedUpdateWithoutDestinationCalendarsInput
  >;
};

export type CredentialUpdateWithoutDestinationCalendarsInput = {
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  user?: Prisma.UserUpdateOneWithoutCredentialsNestedInput;
  team?: Prisma.TeamUpdateOneWithoutCredentialsNestedInput;
  app?: Prisma.AppUpdateOneWithoutCredentialsNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUpdateManyWithoutCredentialNestedInput;
  CalendarCache?: Prisma.CalendarCacheUpdateManyWithoutCredentialNestedInput;
  references?: Prisma.BookingReferenceUpdateManyWithoutCredentialNestedInput;
  delegationCredential?: Prisma.DelegationCredentialUpdateOneWithoutCredentialsNestedInput;
};

export type CredentialUncheckedUpdateWithoutDestinationCalendarsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedUpdateManyWithoutCredentialNestedInput;
  CalendarCache?: Prisma.CalendarCacheUncheckedUpdateManyWithoutCredentialNestedInput;
  references?: Prisma.BookingReferenceUncheckedUpdateManyWithoutCredentialNestedInput;
};

export type CredentialCreateWithoutUserInput = {
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  team?: Prisma.TeamCreateNestedOneWithoutCredentialsInput;
  app?: Prisma.AppCreateNestedOneWithoutCredentialsInput;
  destinationCalendars?: Prisma.DestinationCalendarCreateNestedManyWithoutCredentialInput;
  selectedCalendars?: Prisma.SelectedCalendarCreateNestedManyWithoutCredentialInput;
  CalendarCache?: Prisma.CalendarCacheCreateNestedManyWithoutCredentialInput;
  references?: Prisma.BookingReferenceCreateNestedManyWithoutCredentialInput;
  delegationCredential?: Prisma.DelegationCredentialCreateNestedOneWithoutCredentialsInput;
};

export type CredentialUncheckedCreateWithoutUserInput = {
  id?: number;
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teamId?: number | null;
  appId?: string | null;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  delegationCredentialId?: string | null;
  destinationCalendars?: Prisma.DestinationCalendarUncheckedCreateNestedManyWithoutCredentialInput;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedCreateNestedManyWithoutCredentialInput;
  CalendarCache?: Prisma.CalendarCacheUncheckedCreateNestedManyWithoutCredentialInput;
  references?: Prisma.BookingReferenceUncheckedCreateNestedManyWithoutCredentialInput;
};

export type CredentialCreateOrConnectWithoutUserInput = {
  where: Prisma.CredentialWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.CredentialCreateWithoutUserInput,
    Prisma.CredentialUncheckedCreateWithoutUserInput
  >;
};

export type CredentialCreateManyUserInputEnvelope = {
  data: Prisma.CredentialCreateManyUserInput | Prisma.CredentialCreateManyUserInput[];
  skipDuplicates?: boolean;
};

export type CredentialUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.CredentialWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.CredentialUpdateWithoutUserInput,
    Prisma.CredentialUncheckedUpdateWithoutUserInput
  >;
  create: Prisma.XOR<
    Prisma.CredentialCreateWithoutUserInput,
    Prisma.CredentialUncheckedCreateWithoutUserInput
  >;
};

export type CredentialUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.CredentialWhereUniqueInput;
  data: Prisma.XOR<Prisma.CredentialUpdateWithoutUserInput, Prisma.CredentialUncheckedUpdateWithoutUserInput>;
};

export type CredentialUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.CredentialScalarWhereInput;
  data: Prisma.XOR<
    Prisma.CredentialUpdateManyMutationInput,
    Prisma.CredentialUncheckedUpdateManyWithoutUserInput
  >;
};

export type CredentialScalarWhereInput = {
  AND?: Prisma.CredentialScalarWhereInput | Prisma.CredentialScalarWhereInput[];
  OR?: Prisma.CredentialScalarWhereInput[];
  NOT?: Prisma.CredentialScalarWhereInput | Prisma.CredentialScalarWhereInput[];
  id?: Prisma.IntFilter<"Credential"> | number;
  type?: Prisma.StringFilter<"Credential"> | string;
  key?: Prisma.JsonFilter<"Credential">;
  userId?: Prisma.IntNullableFilter<"Credential"> | number | null;
  teamId?: Prisma.IntNullableFilter<"Credential"> | number | null;
  appId?: Prisma.StringNullableFilter<"Credential"> | string | null;
  subscriptionId?: Prisma.StringNullableFilter<"Credential"> | string | null;
  paymentStatus?: Prisma.StringNullableFilter<"Credential"> | string | null;
  billingCycleStart?: Prisma.IntNullableFilter<"Credential"> | number | null;
  invalid?: Prisma.BoolNullableFilter<"Credential"> | boolean | null;
  delegationCredentialId?: Prisma.StringNullableFilter<"Credential"> | string | null;
};

export type CredentialCreateWithoutTeamInput = {
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  user?: Prisma.UserCreateNestedOneWithoutCredentialsInput;
  app?: Prisma.AppCreateNestedOneWithoutCredentialsInput;
  destinationCalendars?: Prisma.DestinationCalendarCreateNestedManyWithoutCredentialInput;
  selectedCalendars?: Prisma.SelectedCalendarCreateNestedManyWithoutCredentialInput;
  CalendarCache?: Prisma.CalendarCacheCreateNestedManyWithoutCredentialInput;
  references?: Prisma.BookingReferenceCreateNestedManyWithoutCredentialInput;
  delegationCredential?: Prisma.DelegationCredentialCreateNestedOneWithoutCredentialsInput;
};

export type CredentialUncheckedCreateWithoutTeamInput = {
  id?: number;
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: number | null;
  appId?: string | null;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  delegationCredentialId?: string | null;
  destinationCalendars?: Prisma.DestinationCalendarUncheckedCreateNestedManyWithoutCredentialInput;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedCreateNestedManyWithoutCredentialInput;
  CalendarCache?: Prisma.CalendarCacheUncheckedCreateNestedManyWithoutCredentialInput;
  references?: Prisma.BookingReferenceUncheckedCreateNestedManyWithoutCredentialInput;
};

export type CredentialCreateOrConnectWithoutTeamInput = {
  where: Prisma.CredentialWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.CredentialCreateWithoutTeamInput,
    Prisma.CredentialUncheckedCreateWithoutTeamInput
  >;
};

export type CredentialCreateManyTeamInputEnvelope = {
  data: Prisma.CredentialCreateManyTeamInput | Prisma.CredentialCreateManyTeamInput[];
  skipDuplicates?: boolean;
};

export type CredentialUpsertWithWhereUniqueWithoutTeamInput = {
  where: Prisma.CredentialWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.CredentialUpdateWithoutTeamInput,
    Prisma.CredentialUncheckedUpdateWithoutTeamInput
  >;
  create: Prisma.XOR<
    Prisma.CredentialCreateWithoutTeamInput,
    Prisma.CredentialUncheckedCreateWithoutTeamInput
  >;
};

export type CredentialUpdateWithWhereUniqueWithoutTeamInput = {
  where: Prisma.CredentialWhereUniqueInput;
  data: Prisma.XOR<Prisma.CredentialUpdateWithoutTeamInput, Prisma.CredentialUncheckedUpdateWithoutTeamInput>;
};

export type CredentialUpdateManyWithWhereWithoutTeamInput = {
  where: Prisma.CredentialScalarWhereInput;
  data: Prisma.XOR<
    Prisma.CredentialUpdateManyMutationInput,
    Prisma.CredentialUncheckedUpdateManyWithoutTeamInput
  >;
};

export type CredentialCreateWithoutReferencesInput = {
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  user?: Prisma.UserCreateNestedOneWithoutCredentialsInput;
  team?: Prisma.TeamCreateNestedOneWithoutCredentialsInput;
  app?: Prisma.AppCreateNestedOneWithoutCredentialsInput;
  destinationCalendars?: Prisma.DestinationCalendarCreateNestedManyWithoutCredentialInput;
  selectedCalendars?: Prisma.SelectedCalendarCreateNestedManyWithoutCredentialInput;
  CalendarCache?: Prisma.CalendarCacheCreateNestedManyWithoutCredentialInput;
  delegationCredential?: Prisma.DelegationCredentialCreateNestedOneWithoutCredentialsInput;
};

export type CredentialUncheckedCreateWithoutReferencesInput = {
  id?: number;
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: number | null;
  teamId?: number | null;
  appId?: string | null;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  delegationCredentialId?: string | null;
  destinationCalendars?: Prisma.DestinationCalendarUncheckedCreateNestedManyWithoutCredentialInput;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedCreateNestedManyWithoutCredentialInput;
  CalendarCache?: Prisma.CalendarCacheUncheckedCreateNestedManyWithoutCredentialInput;
};

export type CredentialCreateOrConnectWithoutReferencesInput = {
  where: Prisma.CredentialWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.CredentialCreateWithoutReferencesInput,
    Prisma.CredentialUncheckedCreateWithoutReferencesInput
  >;
};

export type CredentialUpsertWithoutReferencesInput = {
  update: Prisma.XOR<
    Prisma.CredentialUpdateWithoutReferencesInput,
    Prisma.CredentialUncheckedUpdateWithoutReferencesInput
  >;
  create: Prisma.XOR<
    Prisma.CredentialCreateWithoutReferencesInput,
    Prisma.CredentialUncheckedCreateWithoutReferencesInput
  >;
  where?: Prisma.CredentialWhereInput;
};

export type CredentialUpdateToOneWithWhereWithoutReferencesInput = {
  where?: Prisma.CredentialWhereInput;
  data: Prisma.XOR<
    Prisma.CredentialUpdateWithoutReferencesInput,
    Prisma.CredentialUncheckedUpdateWithoutReferencesInput
  >;
};

export type CredentialUpdateWithoutReferencesInput = {
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  user?: Prisma.UserUpdateOneWithoutCredentialsNestedInput;
  team?: Prisma.TeamUpdateOneWithoutCredentialsNestedInput;
  app?: Prisma.AppUpdateOneWithoutCredentialsNestedInput;
  destinationCalendars?: Prisma.DestinationCalendarUpdateManyWithoutCredentialNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUpdateManyWithoutCredentialNestedInput;
  CalendarCache?: Prisma.CalendarCacheUpdateManyWithoutCredentialNestedInput;
  delegationCredential?: Prisma.DelegationCredentialUpdateOneWithoutCredentialsNestedInput;
};

export type CredentialUncheckedUpdateWithoutReferencesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  destinationCalendars?: Prisma.DestinationCalendarUncheckedUpdateManyWithoutCredentialNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedUpdateManyWithoutCredentialNestedInput;
  CalendarCache?: Prisma.CalendarCacheUncheckedUpdateManyWithoutCredentialNestedInput;
};

export type CredentialCreateWithoutSelectedCalendarsInput = {
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  user?: Prisma.UserCreateNestedOneWithoutCredentialsInput;
  team?: Prisma.TeamCreateNestedOneWithoutCredentialsInput;
  app?: Prisma.AppCreateNestedOneWithoutCredentialsInput;
  destinationCalendars?: Prisma.DestinationCalendarCreateNestedManyWithoutCredentialInput;
  CalendarCache?: Prisma.CalendarCacheCreateNestedManyWithoutCredentialInput;
  references?: Prisma.BookingReferenceCreateNestedManyWithoutCredentialInput;
  delegationCredential?: Prisma.DelegationCredentialCreateNestedOneWithoutCredentialsInput;
};

export type CredentialUncheckedCreateWithoutSelectedCalendarsInput = {
  id?: number;
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: number | null;
  teamId?: number | null;
  appId?: string | null;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  delegationCredentialId?: string | null;
  destinationCalendars?: Prisma.DestinationCalendarUncheckedCreateNestedManyWithoutCredentialInput;
  CalendarCache?: Prisma.CalendarCacheUncheckedCreateNestedManyWithoutCredentialInput;
  references?: Prisma.BookingReferenceUncheckedCreateNestedManyWithoutCredentialInput;
};

export type CredentialCreateOrConnectWithoutSelectedCalendarsInput = {
  where: Prisma.CredentialWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.CredentialCreateWithoutSelectedCalendarsInput,
    Prisma.CredentialUncheckedCreateWithoutSelectedCalendarsInput
  >;
};

export type CredentialUpsertWithoutSelectedCalendarsInput = {
  update: Prisma.XOR<
    Prisma.CredentialUpdateWithoutSelectedCalendarsInput,
    Prisma.CredentialUncheckedUpdateWithoutSelectedCalendarsInput
  >;
  create: Prisma.XOR<
    Prisma.CredentialCreateWithoutSelectedCalendarsInput,
    Prisma.CredentialUncheckedCreateWithoutSelectedCalendarsInput
  >;
  where?: Prisma.CredentialWhereInput;
};

export type CredentialUpdateToOneWithWhereWithoutSelectedCalendarsInput = {
  where?: Prisma.CredentialWhereInput;
  data: Prisma.XOR<
    Prisma.CredentialUpdateWithoutSelectedCalendarsInput,
    Prisma.CredentialUncheckedUpdateWithoutSelectedCalendarsInput
  >;
};

export type CredentialUpdateWithoutSelectedCalendarsInput = {
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  user?: Prisma.UserUpdateOneWithoutCredentialsNestedInput;
  team?: Prisma.TeamUpdateOneWithoutCredentialsNestedInput;
  app?: Prisma.AppUpdateOneWithoutCredentialsNestedInput;
  destinationCalendars?: Prisma.DestinationCalendarUpdateManyWithoutCredentialNestedInput;
  CalendarCache?: Prisma.CalendarCacheUpdateManyWithoutCredentialNestedInput;
  references?: Prisma.BookingReferenceUpdateManyWithoutCredentialNestedInput;
  delegationCredential?: Prisma.DelegationCredentialUpdateOneWithoutCredentialsNestedInput;
};

export type CredentialUncheckedUpdateWithoutSelectedCalendarsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  destinationCalendars?: Prisma.DestinationCalendarUncheckedUpdateManyWithoutCredentialNestedInput;
  CalendarCache?: Prisma.CalendarCacheUncheckedUpdateManyWithoutCredentialNestedInput;
  references?: Prisma.BookingReferenceUncheckedUpdateManyWithoutCredentialNestedInput;
};

export type CredentialCreateWithoutAppInput = {
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  user?: Prisma.UserCreateNestedOneWithoutCredentialsInput;
  team?: Prisma.TeamCreateNestedOneWithoutCredentialsInput;
  destinationCalendars?: Prisma.DestinationCalendarCreateNestedManyWithoutCredentialInput;
  selectedCalendars?: Prisma.SelectedCalendarCreateNestedManyWithoutCredentialInput;
  CalendarCache?: Prisma.CalendarCacheCreateNestedManyWithoutCredentialInput;
  references?: Prisma.BookingReferenceCreateNestedManyWithoutCredentialInput;
  delegationCredential?: Prisma.DelegationCredentialCreateNestedOneWithoutCredentialsInput;
};

export type CredentialUncheckedCreateWithoutAppInput = {
  id?: number;
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: number | null;
  teamId?: number | null;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  delegationCredentialId?: string | null;
  destinationCalendars?: Prisma.DestinationCalendarUncheckedCreateNestedManyWithoutCredentialInput;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedCreateNestedManyWithoutCredentialInput;
  CalendarCache?: Prisma.CalendarCacheUncheckedCreateNestedManyWithoutCredentialInput;
  references?: Prisma.BookingReferenceUncheckedCreateNestedManyWithoutCredentialInput;
};

export type CredentialCreateOrConnectWithoutAppInput = {
  where: Prisma.CredentialWhereUniqueInput;
  create: Prisma.XOR<Prisma.CredentialCreateWithoutAppInput, Prisma.CredentialUncheckedCreateWithoutAppInput>;
};

export type CredentialCreateManyAppInputEnvelope = {
  data: Prisma.CredentialCreateManyAppInput | Prisma.CredentialCreateManyAppInput[];
  skipDuplicates?: boolean;
};

export type CredentialUpsertWithWhereUniqueWithoutAppInput = {
  where: Prisma.CredentialWhereUniqueInput;
  update: Prisma.XOR<Prisma.CredentialUpdateWithoutAppInput, Prisma.CredentialUncheckedUpdateWithoutAppInput>;
  create: Prisma.XOR<Prisma.CredentialCreateWithoutAppInput, Prisma.CredentialUncheckedCreateWithoutAppInput>;
};

export type CredentialUpdateWithWhereUniqueWithoutAppInput = {
  where: Prisma.CredentialWhereUniqueInput;
  data: Prisma.XOR<Prisma.CredentialUpdateWithoutAppInput, Prisma.CredentialUncheckedUpdateWithoutAppInput>;
};

export type CredentialUpdateManyWithWhereWithoutAppInput = {
  where: Prisma.CredentialScalarWhereInput;
  data: Prisma.XOR<
    Prisma.CredentialUpdateManyMutationInput,
    Prisma.CredentialUncheckedUpdateManyWithoutAppInput
  >;
};

export type CredentialCreateWithoutCalendarCacheInput = {
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  user?: Prisma.UserCreateNestedOneWithoutCredentialsInput;
  team?: Prisma.TeamCreateNestedOneWithoutCredentialsInput;
  app?: Prisma.AppCreateNestedOneWithoutCredentialsInput;
  destinationCalendars?: Prisma.DestinationCalendarCreateNestedManyWithoutCredentialInput;
  selectedCalendars?: Prisma.SelectedCalendarCreateNestedManyWithoutCredentialInput;
  references?: Prisma.BookingReferenceCreateNestedManyWithoutCredentialInput;
  delegationCredential?: Prisma.DelegationCredentialCreateNestedOneWithoutCredentialsInput;
};

export type CredentialUncheckedCreateWithoutCalendarCacheInput = {
  id?: number;
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: number | null;
  teamId?: number | null;
  appId?: string | null;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  delegationCredentialId?: string | null;
  destinationCalendars?: Prisma.DestinationCalendarUncheckedCreateNestedManyWithoutCredentialInput;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedCreateNestedManyWithoutCredentialInput;
  references?: Prisma.BookingReferenceUncheckedCreateNestedManyWithoutCredentialInput;
};

export type CredentialCreateOrConnectWithoutCalendarCacheInput = {
  where: Prisma.CredentialWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.CredentialCreateWithoutCalendarCacheInput,
    Prisma.CredentialUncheckedCreateWithoutCalendarCacheInput
  >;
};

export type CredentialUpsertWithoutCalendarCacheInput = {
  update: Prisma.XOR<
    Prisma.CredentialUpdateWithoutCalendarCacheInput,
    Prisma.CredentialUncheckedUpdateWithoutCalendarCacheInput
  >;
  create: Prisma.XOR<
    Prisma.CredentialCreateWithoutCalendarCacheInput,
    Prisma.CredentialUncheckedCreateWithoutCalendarCacheInput
  >;
  where?: Prisma.CredentialWhereInput;
};

export type CredentialUpdateToOneWithWhereWithoutCalendarCacheInput = {
  where?: Prisma.CredentialWhereInput;
  data: Prisma.XOR<
    Prisma.CredentialUpdateWithoutCalendarCacheInput,
    Prisma.CredentialUncheckedUpdateWithoutCalendarCacheInput
  >;
};

export type CredentialUpdateWithoutCalendarCacheInput = {
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  user?: Prisma.UserUpdateOneWithoutCredentialsNestedInput;
  team?: Prisma.TeamUpdateOneWithoutCredentialsNestedInput;
  app?: Prisma.AppUpdateOneWithoutCredentialsNestedInput;
  destinationCalendars?: Prisma.DestinationCalendarUpdateManyWithoutCredentialNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUpdateManyWithoutCredentialNestedInput;
  references?: Prisma.BookingReferenceUpdateManyWithoutCredentialNestedInput;
  delegationCredential?: Prisma.DelegationCredentialUpdateOneWithoutCredentialsNestedInput;
};

export type CredentialUncheckedUpdateWithoutCalendarCacheInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  destinationCalendars?: Prisma.DestinationCalendarUncheckedUpdateManyWithoutCredentialNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedUpdateManyWithoutCredentialNestedInput;
  references?: Prisma.BookingReferenceUncheckedUpdateManyWithoutCredentialNestedInput;
};

export type CredentialCreateWithoutDelegationCredentialInput = {
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  user?: Prisma.UserCreateNestedOneWithoutCredentialsInput;
  team?: Prisma.TeamCreateNestedOneWithoutCredentialsInput;
  app?: Prisma.AppCreateNestedOneWithoutCredentialsInput;
  destinationCalendars?: Prisma.DestinationCalendarCreateNestedManyWithoutCredentialInput;
  selectedCalendars?: Prisma.SelectedCalendarCreateNestedManyWithoutCredentialInput;
  CalendarCache?: Prisma.CalendarCacheCreateNestedManyWithoutCredentialInput;
  references?: Prisma.BookingReferenceCreateNestedManyWithoutCredentialInput;
};

export type CredentialUncheckedCreateWithoutDelegationCredentialInput = {
  id?: number;
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: number | null;
  teamId?: number | null;
  appId?: string | null;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  destinationCalendars?: Prisma.DestinationCalendarUncheckedCreateNestedManyWithoutCredentialInput;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedCreateNestedManyWithoutCredentialInput;
  CalendarCache?: Prisma.CalendarCacheUncheckedCreateNestedManyWithoutCredentialInput;
  references?: Prisma.BookingReferenceUncheckedCreateNestedManyWithoutCredentialInput;
};

export type CredentialCreateOrConnectWithoutDelegationCredentialInput = {
  where: Prisma.CredentialWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.CredentialCreateWithoutDelegationCredentialInput,
    Prisma.CredentialUncheckedCreateWithoutDelegationCredentialInput
  >;
};

export type CredentialCreateManyDelegationCredentialInputEnvelope = {
  data:
    | Prisma.CredentialCreateManyDelegationCredentialInput
    | Prisma.CredentialCreateManyDelegationCredentialInput[];
  skipDuplicates?: boolean;
};

export type CredentialUpsertWithWhereUniqueWithoutDelegationCredentialInput = {
  where: Prisma.CredentialWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.CredentialUpdateWithoutDelegationCredentialInput,
    Prisma.CredentialUncheckedUpdateWithoutDelegationCredentialInput
  >;
  create: Prisma.XOR<
    Prisma.CredentialCreateWithoutDelegationCredentialInput,
    Prisma.CredentialUncheckedCreateWithoutDelegationCredentialInput
  >;
};

export type CredentialUpdateWithWhereUniqueWithoutDelegationCredentialInput = {
  where: Prisma.CredentialWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.CredentialUpdateWithoutDelegationCredentialInput,
    Prisma.CredentialUncheckedUpdateWithoutDelegationCredentialInput
  >;
};

export type CredentialUpdateManyWithWhereWithoutDelegationCredentialInput = {
  where: Prisma.CredentialScalarWhereInput;
  data: Prisma.XOR<
    Prisma.CredentialUpdateManyMutationInput,
    Prisma.CredentialUncheckedUpdateManyWithoutDelegationCredentialInput
  >;
};

export type CredentialCreateManyUserInput = {
  id?: number;
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teamId?: number | null;
  appId?: string | null;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  delegationCredentialId?: string | null;
};

export type CredentialUpdateWithoutUserInput = {
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  team?: Prisma.TeamUpdateOneWithoutCredentialsNestedInput;
  app?: Prisma.AppUpdateOneWithoutCredentialsNestedInput;
  destinationCalendars?: Prisma.DestinationCalendarUpdateManyWithoutCredentialNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUpdateManyWithoutCredentialNestedInput;
  CalendarCache?: Prisma.CalendarCacheUpdateManyWithoutCredentialNestedInput;
  references?: Prisma.BookingReferenceUpdateManyWithoutCredentialNestedInput;
  delegationCredential?: Prisma.DelegationCredentialUpdateOneWithoutCredentialsNestedInput;
};

export type CredentialUncheckedUpdateWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  destinationCalendars?: Prisma.DestinationCalendarUncheckedUpdateManyWithoutCredentialNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedUpdateManyWithoutCredentialNestedInput;
  CalendarCache?: Prisma.CalendarCacheUncheckedUpdateManyWithoutCredentialNestedInput;
  references?: Prisma.BookingReferenceUncheckedUpdateManyWithoutCredentialNestedInput;
};

export type CredentialUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type CredentialCreateManyTeamInput = {
  id?: number;
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: number | null;
  appId?: string | null;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  delegationCredentialId?: string | null;
};

export type CredentialUpdateWithoutTeamInput = {
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  user?: Prisma.UserUpdateOneWithoutCredentialsNestedInput;
  app?: Prisma.AppUpdateOneWithoutCredentialsNestedInput;
  destinationCalendars?: Prisma.DestinationCalendarUpdateManyWithoutCredentialNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUpdateManyWithoutCredentialNestedInput;
  CalendarCache?: Prisma.CalendarCacheUpdateManyWithoutCredentialNestedInput;
  references?: Prisma.BookingReferenceUpdateManyWithoutCredentialNestedInput;
  delegationCredential?: Prisma.DelegationCredentialUpdateOneWithoutCredentialsNestedInput;
};

export type CredentialUncheckedUpdateWithoutTeamInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  destinationCalendars?: Prisma.DestinationCalendarUncheckedUpdateManyWithoutCredentialNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedUpdateManyWithoutCredentialNestedInput;
  CalendarCache?: Prisma.CalendarCacheUncheckedUpdateManyWithoutCredentialNestedInput;
  references?: Prisma.BookingReferenceUncheckedUpdateManyWithoutCredentialNestedInput;
};

export type CredentialUncheckedUpdateManyWithoutTeamInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type CredentialCreateManyAppInput = {
  id?: number;
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: number | null;
  teamId?: number | null;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
  delegationCredentialId?: string | null;
};

export type CredentialUpdateWithoutAppInput = {
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  user?: Prisma.UserUpdateOneWithoutCredentialsNestedInput;
  team?: Prisma.TeamUpdateOneWithoutCredentialsNestedInput;
  destinationCalendars?: Prisma.DestinationCalendarUpdateManyWithoutCredentialNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUpdateManyWithoutCredentialNestedInput;
  CalendarCache?: Prisma.CalendarCacheUpdateManyWithoutCredentialNestedInput;
  references?: Prisma.BookingReferenceUpdateManyWithoutCredentialNestedInput;
  delegationCredential?: Prisma.DelegationCredentialUpdateOneWithoutCredentialsNestedInput;
};

export type CredentialUncheckedUpdateWithoutAppInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  destinationCalendars?: Prisma.DestinationCalendarUncheckedUpdateManyWithoutCredentialNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedUpdateManyWithoutCredentialNestedInput;
  CalendarCache?: Prisma.CalendarCacheUncheckedUpdateManyWithoutCredentialNestedInput;
  references?: Prisma.BookingReferenceUncheckedUpdateManyWithoutCredentialNestedInput;
};

export type CredentialUncheckedUpdateManyWithoutAppInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  delegationCredentialId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type CredentialCreateManyDelegationCredentialInput = {
  id?: number;
  type: string;
  key: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: number | null;
  teamId?: number | null;
  appId?: string | null;
  subscriptionId?: string | null;
  paymentStatus?: string | null;
  billingCycleStart?: number | null;
  invalid?: boolean | null;
};

export type CredentialUpdateWithoutDelegationCredentialInput = {
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  user?: Prisma.UserUpdateOneWithoutCredentialsNestedInput;
  team?: Prisma.TeamUpdateOneWithoutCredentialsNestedInput;
  app?: Prisma.AppUpdateOneWithoutCredentialsNestedInput;
  destinationCalendars?: Prisma.DestinationCalendarUpdateManyWithoutCredentialNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUpdateManyWithoutCredentialNestedInput;
  CalendarCache?: Prisma.CalendarCacheUpdateManyWithoutCredentialNestedInput;
  references?: Prisma.BookingReferenceUpdateManyWithoutCredentialNestedInput;
};

export type CredentialUncheckedUpdateWithoutDelegationCredentialInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  destinationCalendars?: Prisma.DestinationCalendarUncheckedUpdateManyWithoutCredentialNestedInput;
  selectedCalendars?: Prisma.SelectedCalendarUncheckedUpdateManyWithoutCredentialNestedInput;
  CalendarCache?: Prisma.CalendarCacheUncheckedUpdateManyWithoutCredentialNestedInput;
  references?: Prisma.BookingReferenceUncheckedUpdateManyWithoutCredentialNestedInput;
};

export type CredentialUncheckedUpdateManyWithoutDelegationCredentialInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  type?: Prisma.StringFieldUpdateOperationsInput | string;
  key?: Prisma.JsonNullValueInput | runtime.InputJsonValue;
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  subscriptionId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  paymentStatus?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  billingCycleStart?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  invalid?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
};

/**
 * Count Type CredentialCountOutputType
 */

export type CredentialCountOutputType = {
  destinationCalendars: number;
  selectedCalendars: number;
  CalendarCache: number;
  references: number;
};

export type CredentialCountOutputTypeSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  destinationCalendars?: boolean | CredentialCountOutputTypeCountDestinationCalendarsArgs;
  selectedCalendars?: boolean | CredentialCountOutputTypeCountSelectedCalendarsArgs;
  CalendarCache?: boolean | CredentialCountOutputTypeCountCalendarCacheArgs;
  references?: boolean | CredentialCountOutputTypeCountReferencesArgs;
};

/**
 * CredentialCountOutputType without action
 */
export type CredentialCountOutputTypeDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CredentialCountOutputType
   */
  select?: Prisma.CredentialCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * CredentialCountOutputType without action
 */
export type CredentialCountOutputTypeCountDestinationCalendarsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.DestinationCalendarWhereInput;
};

/**
 * CredentialCountOutputType without action
 */
export type CredentialCountOutputTypeCountSelectedCalendarsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.SelectedCalendarWhereInput;
};

/**
 * CredentialCountOutputType without action
 */
export type CredentialCountOutputTypeCountCalendarCacheArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.CalendarCacheWhereInput;
};

/**
 * CredentialCountOutputType without action
 */
export type CredentialCountOutputTypeCountReferencesArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.BookingReferenceWhereInput;
};

export type CredentialSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    type?: boolean;
    key?: boolean;
    userId?: boolean;
    teamId?: boolean;
    appId?: boolean;
    subscriptionId?: boolean;
    paymentStatus?: boolean;
    billingCycleStart?: boolean;
    invalid?: boolean;
    delegationCredentialId?: boolean;
    user?: boolean | Prisma.Credential$userArgs<ExtArgs>;
    team?: boolean | Prisma.Credential$teamArgs<ExtArgs>;
    app?: boolean | Prisma.Credential$appArgs<ExtArgs>;
    destinationCalendars?: boolean | Prisma.Credential$destinationCalendarsArgs<ExtArgs>;
    selectedCalendars?: boolean | Prisma.Credential$selectedCalendarsArgs<ExtArgs>;
    CalendarCache?: boolean | Prisma.Credential$CalendarCacheArgs<ExtArgs>;
    references?: boolean | Prisma.Credential$referencesArgs<ExtArgs>;
    delegationCredential?: boolean | Prisma.Credential$delegationCredentialArgs<ExtArgs>;
    _count?: boolean | Prisma.CredentialCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["credential"]
>;

export type CredentialSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    type?: boolean;
    key?: boolean;
    userId?: boolean;
    teamId?: boolean;
    appId?: boolean;
    subscriptionId?: boolean;
    paymentStatus?: boolean;
    billingCycleStart?: boolean;
    invalid?: boolean;
    delegationCredentialId?: boolean;
    user?: boolean | Prisma.Credential$userArgs<ExtArgs>;
    team?: boolean | Prisma.Credential$teamArgs<ExtArgs>;
    app?: boolean | Prisma.Credential$appArgs<ExtArgs>;
    delegationCredential?: boolean | Prisma.Credential$delegationCredentialArgs<ExtArgs>;
  },
  ExtArgs["result"]["credential"]
>;

export type CredentialSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    type?: boolean;
    key?: boolean;
    userId?: boolean;
    teamId?: boolean;
    appId?: boolean;
    subscriptionId?: boolean;
    paymentStatus?: boolean;
    billingCycleStart?: boolean;
    invalid?: boolean;
    delegationCredentialId?: boolean;
    user?: boolean | Prisma.Credential$userArgs<ExtArgs>;
    team?: boolean | Prisma.Credential$teamArgs<ExtArgs>;
    app?: boolean | Prisma.Credential$appArgs<ExtArgs>;
    delegationCredential?: boolean | Prisma.Credential$delegationCredentialArgs<ExtArgs>;
  },
  ExtArgs["result"]["credential"]
>;

export type CredentialSelectScalar = {
  id?: boolean;
  type?: boolean;
  key?: boolean;
  userId?: boolean;
  teamId?: boolean;
  appId?: boolean;
  subscriptionId?: boolean;
  paymentStatus?: boolean;
  billingCycleStart?: boolean;
  invalid?: boolean;
  delegationCredentialId?: boolean;
};

export type CredentialOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "type"
  | "key"
  | "userId"
  | "teamId"
  | "appId"
  | "subscriptionId"
  | "paymentStatus"
  | "billingCycleStart"
  | "invalid"
  | "delegationCredentialId",
  ExtArgs["result"]["credential"]
>;
export type CredentialInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.Credential$userArgs<ExtArgs>;
  team?: boolean | Prisma.Credential$teamArgs<ExtArgs>;
  app?: boolean | Prisma.Credential$appArgs<ExtArgs>;
  destinationCalendars?: boolean | Prisma.Credential$destinationCalendarsArgs<ExtArgs>;
  selectedCalendars?: boolean | Prisma.Credential$selectedCalendarsArgs<ExtArgs>;
  CalendarCache?: boolean | Prisma.Credential$CalendarCacheArgs<ExtArgs>;
  references?: boolean | Prisma.Credential$referencesArgs<ExtArgs>;
  delegationCredential?: boolean | Prisma.Credential$delegationCredentialArgs<ExtArgs>;
  _count?: boolean | Prisma.CredentialCountOutputTypeDefaultArgs<ExtArgs>;
};
export type CredentialIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.Credential$userArgs<ExtArgs>;
  team?: boolean | Prisma.Credential$teamArgs<ExtArgs>;
  app?: boolean | Prisma.Credential$appArgs<ExtArgs>;
  delegationCredential?: boolean | Prisma.Credential$delegationCredentialArgs<ExtArgs>;
};
export type CredentialIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.Credential$userArgs<ExtArgs>;
  team?: boolean | Prisma.Credential$teamArgs<ExtArgs>;
  app?: boolean | Prisma.Credential$appArgs<ExtArgs>;
  delegationCredential?: boolean | Prisma.Credential$delegationCredentialArgs<ExtArgs>;
};

export type $CredentialPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "Credential";
  objects: {
    user: Prisma.$UserPayload<ExtArgs> | null;
    team: Prisma.$TeamPayload<ExtArgs> | null;
    app: Prisma.$AppPayload<ExtArgs> | null;
    destinationCalendars: Prisma.$DestinationCalendarPayload<ExtArgs>[];
    selectedCalendars: Prisma.$SelectedCalendarPayload<ExtArgs>[];
    CalendarCache: Prisma.$CalendarCachePayload<ExtArgs>[];
    references: Prisma.$BookingReferencePayload<ExtArgs>[];
    delegationCredential: Prisma.$DelegationCredentialPayload<ExtArgs> | null;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      type: string;
      key: runtime.JsonValue;
      userId: number | null;
      teamId: number | null;
      appId: string | null;
      subscriptionId: string | null;
      paymentStatus: string | null;
      billingCycleStart: number | null;
      invalid: boolean | null;
      delegationCredentialId: string | null;
    },
    ExtArgs["result"]["credential"]
  >;
  composites: {};
};

export type CredentialGetPayload<S extends boolean | null | undefined | CredentialDefaultArgs> =
  runtime.Types.Result.GetResult<Prisma.$CredentialPayload, S>;

export type CredentialCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<CredentialFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: CredentialCountAggregateInputType | true;
};

export interface CredentialDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>["model"]["Credential"]; meta: { name: "Credential" } };
  /**
   * Find zero or one Credential that matches the filter.
   * @param {CredentialFindUniqueArgs} args - Arguments to find a Credential
   * @example
   * // Get one Credential
   * const credential = await prisma.credential.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends CredentialFindUniqueArgs>(
    args: Prisma.SelectSubset<T, CredentialFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__CredentialClient<
    runtime.Types.Result.GetResult<
      Prisma.$CredentialPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one Credential that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {CredentialFindUniqueOrThrowArgs} args - Arguments to find a Credential
   * @example
   * // Get one Credential
   * const credential = await prisma.credential.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends CredentialFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, CredentialFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__CredentialClient<
    runtime.Types.Result.GetResult<
      Prisma.$CredentialPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Credential that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CredentialFindFirstArgs} args - Arguments to find a Credential
   * @example
   * // Get one Credential
   * const credential = await prisma.credential.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends CredentialFindFirstArgs>(
    args?: Prisma.SelectSubset<T, CredentialFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__CredentialClient<
    runtime.Types.Result.GetResult<
      Prisma.$CredentialPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first Credential that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CredentialFindFirstOrThrowArgs} args - Arguments to find a Credential
   * @example
   * // Get one Credential
   * const credential = await prisma.credential.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends CredentialFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, CredentialFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__CredentialClient<
    runtime.Types.Result.GetResult<
      Prisma.$CredentialPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more Credentials that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CredentialFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Credentials
   * const credentials = await prisma.credential.findMany()
   *
   * // Get first 10 Credentials
   * const credentials = await prisma.credential.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const credentialWithIdOnly = await prisma.credential.findMany({ select: { id: true } })
   *
   */
  findMany<T extends CredentialFindManyArgs>(
    args?: Prisma.SelectSubset<T, CredentialFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$CredentialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>
  >;

  /**
   * Create a Credential.
   * @param {CredentialCreateArgs} args - Arguments to create a Credential.
   * @example
   * // Create one Credential
   * const Credential = await prisma.credential.create({
   *   data: {
   *     // ... data to create a Credential
   *   }
   * })
   *
   */
  create<T extends CredentialCreateArgs>(
    args: Prisma.SelectSubset<T, CredentialCreateArgs<ExtArgs>>
  ): Prisma.Prisma__CredentialClient<
    runtime.Types.Result.GetResult<Prisma.$CredentialPayload<ExtArgs>, T, "create", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many Credentials.
   * @param {CredentialCreateManyArgs} args - Arguments to create many Credentials.
   * @example
   * // Create many Credentials
   * const credential = await prisma.credential.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends CredentialCreateManyArgs>(
    args?: Prisma.SelectSubset<T, CredentialCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many Credentials and returns the data saved in the database.
   * @param {CredentialCreateManyAndReturnArgs} args - Arguments to create many Credentials.
   * @example
   * // Create many Credentials
   * const credential = await prisma.credential.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many Credentials and only return the `id`
   * const credentialWithIdOnly = await prisma.credential.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends CredentialCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, CredentialCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$CredentialPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a Credential.
   * @param {CredentialDeleteArgs} args - Arguments to delete one Credential.
   * @example
   * // Delete one Credential
   * const Credential = await prisma.credential.delete({
   *   where: {
   *     // ... filter to delete one Credential
   *   }
   * })
   *
   */
  delete<T extends CredentialDeleteArgs>(
    args: Prisma.SelectSubset<T, CredentialDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__CredentialClient<
    runtime.Types.Result.GetResult<Prisma.$CredentialPayload<ExtArgs>, T, "delete", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one Credential.
   * @param {CredentialUpdateArgs} args - Arguments to update one Credential.
   * @example
   * // Update one Credential
   * const credential = await prisma.credential.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends CredentialUpdateArgs>(
    args: Prisma.SelectSubset<T, CredentialUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__CredentialClient<
    runtime.Types.Result.GetResult<Prisma.$CredentialPayload<ExtArgs>, T, "update", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more Credentials.
   * @param {CredentialDeleteManyArgs} args - Arguments to filter Credentials to delete.
   * @example
   * // Delete a few Credentials
   * const { count } = await prisma.credential.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends CredentialDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, CredentialDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Credentials.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CredentialUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Credentials
   * const credential = await prisma.credential.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends CredentialUpdateManyArgs>(
    args: Prisma.SelectSubset<T, CredentialUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Credentials and returns the data updated in the database.
   * @param {CredentialUpdateManyAndReturnArgs} args - Arguments to update many Credentials.
   * @example
   * // Update many Credentials
   * const credential = await prisma.credential.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more Credentials and only return the `id`
   * const credentialWithIdOnly = await prisma.credential.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends CredentialUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, CredentialUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$CredentialPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one Credential.
   * @param {CredentialUpsertArgs} args - Arguments to update or create a Credential.
   * @example
   * // Update or create a Credential
   * const credential = await prisma.credential.upsert({
   *   create: {
   *     // ... data to create a Credential
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Credential we want to update
   *   }
   * })
   */
  upsert<T extends CredentialUpsertArgs>(
    args: Prisma.SelectSubset<T, CredentialUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__CredentialClient<
    runtime.Types.Result.GetResult<Prisma.$CredentialPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of Credentials.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CredentialCountArgs} args - Arguments to filter Credentials to count.
   * @example
   * // Count the number of Credentials
   * const count = await prisma.credential.count({
   *   where: {
   *     // ... the filter for the Credentials we want to count
   *   }
   * })
   **/
  count<T extends CredentialCountArgs>(
    args?: Prisma.Subset<T, CredentialCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], CredentialCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a Credential.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CredentialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends CredentialAggregateArgs>(
    args: Prisma.Subset<T, CredentialAggregateArgs>
  ): Prisma.PrismaPromise<GetCredentialAggregateType<T>>;

  /**
   * Group by Credential.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CredentialGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends CredentialGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: CredentialGroupByArgs["orderBy"] }
      : { orderBy?: CredentialGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, CredentialGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetCredentialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the Credential model
   */
  readonly fields: CredentialFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Credential.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__CredentialClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  user<T extends Prisma.Credential$userArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Credential$userArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  team<T extends Prisma.Credential$teamArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Credential$teamArgs<ExtArgs>>
  ): Prisma.Prisma__TeamClient<
    runtime.Types.Result.GetResult<
      Prisma.$TeamPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  app<T extends Prisma.Credential$appArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Credential$appArgs<ExtArgs>>
  ): Prisma.Prisma__AppClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  destinationCalendars<T extends Prisma.Credential$destinationCalendarsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Credential$destinationCalendarsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$DestinationCalendarPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  selectedCalendars<T extends Prisma.Credential$selectedCalendarsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Credential$selectedCalendarsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$SelectedCalendarPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  CalendarCache<T extends Prisma.Credential$CalendarCacheArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Credential$CalendarCacheArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<Prisma.$CalendarCachePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>
    | Null
  >;
  references<T extends Prisma.Credential$referencesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Credential$referencesArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$BookingReferencePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  delegationCredential<T extends Prisma.Credential$delegationCredentialArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.Credential$delegationCredentialArgs<ExtArgs>>
  ): Prisma.Prisma__DelegationCredentialClient<
    runtime.Types.Result.GetResult<
      Prisma.$DelegationCredentialPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the Credential model
 */
export interface CredentialFieldRefs {
  readonly id: Prisma.FieldRef<"Credential", "Int">;
  readonly type: Prisma.FieldRef<"Credential", "String">;
  readonly key: Prisma.FieldRef<"Credential", "Json">;
  readonly userId: Prisma.FieldRef<"Credential", "Int">;
  readonly teamId: Prisma.FieldRef<"Credential", "Int">;
  readonly appId: Prisma.FieldRef<"Credential", "String">;
  readonly subscriptionId: Prisma.FieldRef<"Credential", "String">;
  readonly paymentStatus: Prisma.FieldRef<"Credential", "String">;
  readonly billingCycleStart: Prisma.FieldRef<"Credential", "Int">;
  readonly invalid: Prisma.FieldRef<"Credential", "Boolean">;
  readonly delegationCredentialId: Prisma.FieldRef<"Credential", "String">;
}

// Custom InputTypes
/**
 * Credential findUnique
 */
export type CredentialFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Credential
   */
  select?: Prisma.CredentialSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Credential
   */
  omit?: Prisma.CredentialOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CredentialInclude<ExtArgs> | null;
  /**
   * Filter, which Credential to fetch.
   */
  where: Prisma.CredentialWhereUniqueInput;
};

/**
 * Credential findUniqueOrThrow
 */
export type CredentialFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Credential
   */
  select?: Prisma.CredentialSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Credential
   */
  omit?: Prisma.CredentialOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CredentialInclude<ExtArgs> | null;
  /**
   * Filter, which Credential to fetch.
   */
  where: Prisma.CredentialWhereUniqueInput;
};

/**
 * Credential findFirst
 */
export type CredentialFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Credential
   */
  select?: Prisma.CredentialSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Credential
   */
  omit?: Prisma.CredentialOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CredentialInclude<ExtArgs> | null;
  /**
   * Filter, which Credential to fetch.
   */
  where?: Prisma.CredentialWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Credentials to fetch.
   */
  orderBy?: Prisma.CredentialOrderByWithRelationInput | Prisma.CredentialOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Credentials.
   */
  cursor?: Prisma.CredentialWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Credentials from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Credentials.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Credentials.
   */
  distinct?: Prisma.CredentialScalarFieldEnum | Prisma.CredentialScalarFieldEnum[];
};

/**
 * Credential findFirstOrThrow
 */
export type CredentialFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Credential
   */
  select?: Prisma.CredentialSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Credential
   */
  omit?: Prisma.CredentialOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CredentialInclude<ExtArgs> | null;
  /**
   * Filter, which Credential to fetch.
   */
  where?: Prisma.CredentialWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Credentials to fetch.
   */
  orderBy?: Prisma.CredentialOrderByWithRelationInput | Prisma.CredentialOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Credentials.
   */
  cursor?: Prisma.CredentialWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Credentials from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Credentials.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Credentials.
   */
  distinct?: Prisma.CredentialScalarFieldEnum | Prisma.CredentialScalarFieldEnum[];
};

/**
 * Credential findMany
 */
export type CredentialFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Credential
   */
  select?: Prisma.CredentialSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Credential
   */
  omit?: Prisma.CredentialOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CredentialInclude<ExtArgs> | null;
  /**
   * Filter, which Credentials to fetch.
   */
  where?: Prisma.CredentialWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Credentials to fetch.
   */
  orderBy?: Prisma.CredentialOrderByWithRelationInput | Prisma.CredentialOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing Credentials.
   */
  cursor?: Prisma.CredentialWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Credentials from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Credentials.
   */
  skip?: number;
  distinct?: Prisma.CredentialScalarFieldEnum | Prisma.CredentialScalarFieldEnum[];
};

/**
 * Credential create
 */
export type CredentialCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Credential
   */
  select?: Prisma.CredentialSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Credential
   */
  omit?: Prisma.CredentialOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CredentialInclude<ExtArgs> | null;
  /**
   * The data needed to create a Credential.
   */
  data: Prisma.XOR<Prisma.CredentialCreateInput, Prisma.CredentialUncheckedCreateInput>;
};

/**
 * Credential createMany
 */
export type CredentialCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many Credentials.
   */
  data: Prisma.CredentialCreateManyInput | Prisma.CredentialCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * Credential createManyAndReturn
 */
export type CredentialCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Credential
   */
  select?: Prisma.CredentialSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Credential
   */
  omit?: Prisma.CredentialOmit<ExtArgs> | null;
  /**
   * The data used to create many Credentials.
   */
  data: Prisma.CredentialCreateManyInput | Prisma.CredentialCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CredentialIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * Credential update
 */
export type CredentialUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Credential
   */
  select?: Prisma.CredentialSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Credential
   */
  omit?: Prisma.CredentialOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CredentialInclude<ExtArgs> | null;
  /**
   * The data needed to update a Credential.
   */
  data: Prisma.XOR<Prisma.CredentialUpdateInput, Prisma.CredentialUncheckedUpdateInput>;
  /**
   * Choose, which Credential to update.
   */
  where: Prisma.CredentialWhereUniqueInput;
};

/**
 * Credential updateMany
 */
export type CredentialUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update Credentials.
   */
  data: Prisma.XOR<Prisma.CredentialUpdateManyMutationInput, Prisma.CredentialUncheckedUpdateManyInput>;
  /**
   * Filter which Credentials to update
   */
  where?: Prisma.CredentialWhereInput;
  /**
   * Limit how many Credentials to update.
   */
  limit?: number;
};

/**
 * Credential updateManyAndReturn
 */
export type CredentialUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Credential
   */
  select?: Prisma.CredentialSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the Credential
   */
  omit?: Prisma.CredentialOmit<ExtArgs> | null;
  /**
   * The data used to update Credentials.
   */
  data: Prisma.XOR<Prisma.CredentialUpdateManyMutationInput, Prisma.CredentialUncheckedUpdateManyInput>;
  /**
   * Filter which Credentials to update
   */
  where?: Prisma.CredentialWhereInput;
  /**
   * Limit how many Credentials to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CredentialIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * Credential upsert
 */
export type CredentialUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Credential
   */
  select?: Prisma.CredentialSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Credential
   */
  omit?: Prisma.CredentialOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CredentialInclude<ExtArgs> | null;
  /**
   * The filter to search for the Credential to update in case it exists.
   */
  where: Prisma.CredentialWhereUniqueInput;
  /**
   * In case the Credential found by the `where` argument doesn't exist, create a new Credential with this data.
   */
  create: Prisma.XOR<Prisma.CredentialCreateInput, Prisma.CredentialUncheckedCreateInput>;
  /**
   * In case the Credential was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.CredentialUpdateInput, Prisma.CredentialUncheckedUpdateInput>;
};

/**
 * Credential delete
 */
export type CredentialDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Credential
   */
  select?: Prisma.CredentialSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Credential
   */
  omit?: Prisma.CredentialOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CredentialInclude<ExtArgs> | null;
  /**
   * Filter which Credential to delete.
   */
  where: Prisma.CredentialWhereUniqueInput;
};

/**
 * Credential deleteMany
 */
export type CredentialDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which Credentials to delete
   */
  where?: Prisma.CredentialWhereInput;
  /**
   * Limit how many Credentials to delete.
   */
  limit?: number;
};

/**
 * Credential.user
 */
export type Credential$userArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  where?: Prisma.UserWhereInput;
};

/**
 * Credential.team
 */
export type Credential$teamArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Team
   */
  select?: Prisma.TeamSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Team
   */
  omit?: Prisma.TeamOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TeamInclude<ExtArgs> | null;
  where?: Prisma.TeamWhereInput;
};

/**
 * Credential.app
 */
export type Credential$appArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the App
   */
  select?: Prisma.AppSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the App
   */
  omit?: Prisma.AppOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppInclude<ExtArgs> | null;
  where?: Prisma.AppWhereInput;
};

/**
 * Credential.destinationCalendars
 */
export type Credential$destinationCalendarsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DestinationCalendar
   */
  select?: Prisma.DestinationCalendarSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DestinationCalendar
   */
  omit?: Prisma.DestinationCalendarOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DestinationCalendarInclude<ExtArgs> | null;
  where?: Prisma.DestinationCalendarWhereInput;
  orderBy?:
    | Prisma.DestinationCalendarOrderByWithRelationInput
    | Prisma.DestinationCalendarOrderByWithRelationInput[];
  cursor?: Prisma.DestinationCalendarWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.DestinationCalendarScalarFieldEnum | Prisma.DestinationCalendarScalarFieldEnum[];
};

/**
 * Credential.selectedCalendars
 */
export type Credential$selectedCalendarsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the SelectedCalendar
   */
  select?: Prisma.SelectedCalendarSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the SelectedCalendar
   */
  omit?: Prisma.SelectedCalendarOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SelectedCalendarInclude<ExtArgs> | null;
  where?: Prisma.SelectedCalendarWhereInput;
  orderBy?:
    | Prisma.SelectedCalendarOrderByWithRelationInput
    | Prisma.SelectedCalendarOrderByWithRelationInput[];
  cursor?: Prisma.SelectedCalendarWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.SelectedCalendarScalarFieldEnum | Prisma.SelectedCalendarScalarFieldEnum[];
};

/**
 * Credential.CalendarCache
 */
export type Credential$CalendarCacheArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CalendarCache
   */
  select?: Prisma.CalendarCacheSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CalendarCache
   */
  omit?: Prisma.CalendarCacheOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CalendarCacheInclude<ExtArgs> | null;
  where?: Prisma.CalendarCacheWhereInput;
  orderBy?: Prisma.CalendarCacheOrderByWithRelationInput | Prisma.CalendarCacheOrderByWithRelationInput[];
  cursor?: Prisma.CalendarCacheWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.CalendarCacheScalarFieldEnum | Prisma.CalendarCacheScalarFieldEnum[];
};

/**
 * Credential.references
 */
export type Credential$referencesArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the BookingReference
   */
  select?: Prisma.BookingReferenceSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the BookingReference
   */
  omit?: Prisma.BookingReferenceOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BookingReferenceInclude<ExtArgs> | null;
  where?: Prisma.BookingReferenceWhereInput;
  orderBy?:
    | Prisma.BookingReferenceOrderByWithRelationInput
    | Prisma.BookingReferenceOrderByWithRelationInput[];
  cursor?: Prisma.BookingReferenceWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.BookingReferenceScalarFieldEnum | Prisma.BookingReferenceScalarFieldEnum[];
};

/**
 * Credential.delegationCredential
 */
export type Credential$delegationCredentialArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the DelegationCredential
   */
  select?: Prisma.DelegationCredentialSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DelegationCredential
   */
  omit?: Prisma.DelegationCredentialOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DelegationCredentialInclude<ExtArgs> | null;
  where?: Prisma.DelegationCredentialWhereInput;
};

/**
 * Credential without action
 */
export type CredentialDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Credential
   */
  select?: Prisma.CredentialSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Credential
   */
  omit?: Prisma.CredentialOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CredentialInclude<ExtArgs> | null;
};
