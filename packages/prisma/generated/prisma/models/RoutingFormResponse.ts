/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `RoutingFormResponse` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model RoutingFormResponse
 *
 */
export type RoutingFormResponseModel =
  runtime.Types.Result.DefaultSelection<Prisma.$RoutingFormResponsePayload>;

export type AggregateRoutingFormResponse = {
  _count: RoutingFormResponseCountAggregateOutputType | null;
  _avg: RoutingFormResponseAvgAggregateOutputType | null;
  _sum: RoutingFormResponseSumAggregateOutputType | null;
  _min: RoutingFormResponseMinAggregateOutputType | null;
  _max: RoutingFormResponseMaxAggregateOutputType | null;
};

export type RoutingFormResponseAvgAggregateOutputType = {
  id: number | null;
  formTeamId: number | null;
  formUserId: number | null;
  bookingStatusOrder: number | null;
  bookingUserId: number | null;
};

export type RoutingFormResponseSumAggregateOutputType = {
  id: number | null;
  formTeamId: number | null;
  formUserId: number | null;
  bookingStatusOrder: number | null;
  bookingUserId: number | null;
};

export type RoutingFormResponseMinAggregateOutputType = {
  id: number | null;
  formId: string | null;
  formName: string | null;
  formTeamId: number | null;
  formUserId: number | null;
  bookingUid: string | null;
  bookingStatus: $Enums.BookingStatus | null;
  bookingStatusOrder: number | null;
  bookingCreatedAt: Date | null;
  bookingUserId: number | null;
  bookingUserName: string | null;
  bookingUserEmail: string | null;
  bookingUserAvatarUrl: string | null;
  bookingAssignmentReason: string | null;
  bookingAssignmentReasonLowercase: string | null;
  bookingStartTime: Date | null;
  bookingEndTime: Date | null;
  createdAt: Date | null;
  utm_source: string | null;
  utm_medium: string | null;
  utm_campaign: string | null;
  utm_term: string | null;
  utm_content: string | null;
};

export type RoutingFormResponseMaxAggregateOutputType = {
  id: number | null;
  formId: string | null;
  formName: string | null;
  formTeamId: number | null;
  formUserId: number | null;
  bookingUid: string | null;
  bookingStatus: $Enums.BookingStatus | null;
  bookingStatusOrder: number | null;
  bookingCreatedAt: Date | null;
  bookingUserId: number | null;
  bookingUserName: string | null;
  bookingUserEmail: string | null;
  bookingUserAvatarUrl: string | null;
  bookingAssignmentReason: string | null;
  bookingAssignmentReasonLowercase: string | null;
  bookingStartTime: Date | null;
  bookingEndTime: Date | null;
  createdAt: Date | null;
  utm_source: string | null;
  utm_medium: string | null;
  utm_campaign: string | null;
  utm_term: string | null;
  utm_content: string | null;
};

export type RoutingFormResponseCountAggregateOutputType = {
  id: number;
  response: number;
  responseLowercase: number;
  formId: number;
  formName: number;
  formTeamId: number;
  formUserId: number;
  bookingUid: number;
  bookingStatus: number;
  bookingStatusOrder: number;
  bookingCreatedAt: number;
  bookingAttendees: number;
  bookingUserId: number;
  bookingUserName: number;
  bookingUserEmail: number;
  bookingUserAvatarUrl: number;
  bookingAssignmentReason: number;
  bookingAssignmentReasonLowercase: number;
  bookingStartTime: number;
  bookingEndTime: number;
  createdAt: number;
  utm_source: number;
  utm_medium: number;
  utm_campaign: number;
  utm_term: number;
  utm_content: number;
  _all: number;
};

export type RoutingFormResponseAvgAggregateInputType = {
  id?: true;
  formTeamId?: true;
  formUserId?: true;
  bookingStatusOrder?: true;
  bookingUserId?: true;
};

export type RoutingFormResponseSumAggregateInputType = {
  id?: true;
  formTeamId?: true;
  formUserId?: true;
  bookingStatusOrder?: true;
  bookingUserId?: true;
};

export type RoutingFormResponseMinAggregateInputType = {
  id?: true;
  formId?: true;
  formName?: true;
  formTeamId?: true;
  formUserId?: true;
  bookingUid?: true;
  bookingStatus?: true;
  bookingStatusOrder?: true;
  bookingCreatedAt?: true;
  bookingUserId?: true;
  bookingUserName?: true;
  bookingUserEmail?: true;
  bookingUserAvatarUrl?: true;
  bookingAssignmentReason?: true;
  bookingAssignmentReasonLowercase?: true;
  bookingStartTime?: true;
  bookingEndTime?: true;
  createdAt?: true;
  utm_source?: true;
  utm_medium?: true;
  utm_campaign?: true;
  utm_term?: true;
  utm_content?: true;
};

export type RoutingFormResponseMaxAggregateInputType = {
  id?: true;
  formId?: true;
  formName?: true;
  formTeamId?: true;
  formUserId?: true;
  bookingUid?: true;
  bookingStatus?: true;
  bookingStatusOrder?: true;
  bookingCreatedAt?: true;
  bookingUserId?: true;
  bookingUserName?: true;
  bookingUserEmail?: true;
  bookingUserAvatarUrl?: true;
  bookingAssignmentReason?: true;
  bookingAssignmentReasonLowercase?: true;
  bookingStartTime?: true;
  bookingEndTime?: true;
  createdAt?: true;
  utm_source?: true;
  utm_medium?: true;
  utm_campaign?: true;
  utm_term?: true;
  utm_content?: true;
};

export type RoutingFormResponseCountAggregateInputType = {
  id?: true;
  response?: true;
  responseLowercase?: true;
  formId?: true;
  formName?: true;
  formTeamId?: true;
  formUserId?: true;
  bookingUid?: true;
  bookingStatus?: true;
  bookingStatusOrder?: true;
  bookingCreatedAt?: true;
  bookingAttendees?: true;
  bookingUserId?: true;
  bookingUserName?: true;
  bookingUserEmail?: true;
  bookingUserAvatarUrl?: true;
  bookingAssignmentReason?: true;
  bookingAssignmentReasonLowercase?: true;
  bookingStartTime?: true;
  bookingEndTime?: true;
  createdAt?: true;
  utm_source?: true;
  utm_medium?: true;
  utm_campaign?: true;
  utm_term?: true;
  utm_content?: true;
  _all?: true;
};

export type RoutingFormResponseAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which RoutingFormResponse to aggregate.
   */
  where?: Prisma.RoutingFormResponseWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of RoutingFormResponses to fetch.
   */
  orderBy?:
    | Prisma.RoutingFormResponseOrderByWithRelationInput
    | Prisma.RoutingFormResponseOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.RoutingFormResponseWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` RoutingFormResponses from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` RoutingFormResponses.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned RoutingFormResponses
   **/
  _count?: true | RoutingFormResponseCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: RoutingFormResponseAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: RoutingFormResponseSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: RoutingFormResponseMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: RoutingFormResponseMaxAggregateInputType;
};

export type GetRoutingFormResponseAggregateType<T extends RoutingFormResponseAggregateArgs> = {
  [P in keyof T & keyof AggregateRoutingFormResponse]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateRoutingFormResponse[P]>
    : Prisma.GetScalarType<T[P], AggregateRoutingFormResponse[P]>;
};

export type RoutingFormResponseGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.RoutingFormResponseWhereInput;
  orderBy?:
    | Prisma.RoutingFormResponseOrderByWithAggregationInput
    | Prisma.RoutingFormResponseOrderByWithAggregationInput[];
  by: Prisma.RoutingFormResponseScalarFieldEnum[] | Prisma.RoutingFormResponseScalarFieldEnum;
  having?: Prisma.RoutingFormResponseScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: RoutingFormResponseCountAggregateInputType | true;
  _avg?: RoutingFormResponseAvgAggregateInputType;
  _sum?: RoutingFormResponseSumAggregateInputType;
  _min?: RoutingFormResponseMinAggregateInputType;
  _max?: RoutingFormResponseMaxAggregateInputType;
};

export type RoutingFormResponseGroupByOutputType = {
  id: number;
  response: runtime.JsonValue;
  responseLowercase: runtime.JsonValue;
  formId: string;
  formName: string;
  formTeamId: number | null;
  formUserId: number | null;
  bookingUid: string | null;
  bookingStatus: $Enums.BookingStatus | null;
  bookingStatusOrder: number | null;
  bookingCreatedAt: Date | null;
  bookingAttendees: runtime.JsonValue | null;
  bookingUserId: number | null;
  bookingUserName: string | null;
  bookingUserEmail: string | null;
  bookingUserAvatarUrl: string | null;
  bookingAssignmentReason: string | null;
  bookingAssignmentReasonLowercase: string | null;
  bookingStartTime: Date | null;
  bookingEndTime: Date | null;
  createdAt: Date;
  utm_source: string | null;
  utm_medium: string | null;
  utm_campaign: string | null;
  utm_term: string | null;
  utm_content: string | null;
  _count: RoutingFormResponseCountAggregateOutputType | null;
  _avg: RoutingFormResponseAvgAggregateOutputType | null;
  _sum: RoutingFormResponseSumAggregateOutputType | null;
  _min: RoutingFormResponseMinAggregateOutputType | null;
  _max: RoutingFormResponseMaxAggregateOutputType | null;
};

type GetRoutingFormResponseGroupByPayload<T extends RoutingFormResponseGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<RoutingFormResponseGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof RoutingFormResponseGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], RoutingFormResponseGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], RoutingFormResponseGroupByOutputType[P]>;
    }
  >
>;

export type RoutingFormResponseWhereInput = {
  AND?: Prisma.RoutingFormResponseWhereInput | Prisma.RoutingFormResponseWhereInput[];
  OR?: Prisma.RoutingFormResponseWhereInput[];
  NOT?: Prisma.RoutingFormResponseWhereInput | Prisma.RoutingFormResponseWhereInput[];
  id?: Prisma.IntFilter<"RoutingFormResponse"> | number;
  response?: Prisma.JsonFilter<"RoutingFormResponse">;
  responseLowercase?: Prisma.JsonFilter<"RoutingFormResponse">;
  formId?: Prisma.StringFilter<"RoutingFormResponse"> | string;
  formName?: Prisma.StringFilter<"RoutingFormResponse"> | string;
  formTeamId?: Prisma.IntNullableFilter<"RoutingFormResponse"> | number | null;
  formUserId?: Prisma.IntNullableFilter<"RoutingFormResponse"> | number | null;
  bookingUid?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
  bookingStatus?: Prisma.EnumBookingStatusNullableFilter<"RoutingFormResponse"> | $Enums.BookingStatus | null;
  bookingStatusOrder?: Prisma.IntNullableFilter<"RoutingFormResponse"> | number | null;
  bookingCreatedAt?: Prisma.DateTimeNullableFilter<"RoutingFormResponse"> | Date | string | null;
  bookingAttendees?: Prisma.JsonNullableFilter<"RoutingFormResponse">;
  bookingUserId?: Prisma.IntNullableFilter<"RoutingFormResponse"> | number | null;
  bookingUserName?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
  bookingUserEmail?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
  bookingUserAvatarUrl?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
  bookingAssignmentReason?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
  bookingAssignmentReasonLowercase?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
  bookingStartTime?: Prisma.DateTimeNullableFilter<"RoutingFormResponse"> | Date | string | null;
  bookingEndTime?: Prisma.DateTimeNullableFilter<"RoutingFormResponse"> | Date | string | null;
  createdAt?: Prisma.DateTimeFilter<"RoutingFormResponse"> | Date | string;
  utm_source?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
  utm_medium?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
  utm_campaign?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
  utm_term?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
  utm_content?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
};

export type RoutingFormResponseOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  response?: Prisma.SortOrder;
  responseLowercase?: Prisma.SortOrder;
  formId?: Prisma.SortOrder;
  formName?: Prisma.SortOrder;
  formTeamId?: Prisma.SortOrderInput | Prisma.SortOrder;
  formUserId?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingUid?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingStatus?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingStatusOrder?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingCreatedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingAttendees?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingUserId?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingUserName?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingUserEmail?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingUserAvatarUrl?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingAssignmentReason?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingAssignmentReasonLowercase?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingStartTime?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingEndTime?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  utm_source?: Prisma.SortOrderInput | Prisma.SortOrder;
  utm_medium?: Prisma.SortOrderInput | Prisma.SortOrder;
  utm_campaign?: Prisma.SortOrderInput | Prisma.SortOrder;
  utm_term?: Prisma.SortOrderInput | Prisma.SortOrder;
  utm_content?: Prisma.SortOrderInput | Prisma.SortOrder;
};

export type RoutingFormResponseWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    AND?: Prisma.RoutingFormResponseWhereInput | Prisma.RoutingFormResponseWhereInput[];
    OR?: Prisma.RoutingFormResponseWhereInput[];
    NOT?: Prisma.RoutingFormResponseWhereInput | Prisma.RoutingFormResponseWhereInput[];
    response?: Prisma.JsonFilter<"RoutingFormResponse">;
    responseLowercase?: Prisma.JsonFilter<"RoutingFormResponse">;
    formId?: Prisma.StringFilter<"RoutingFormResponse"> | string;
    formName?: Prisma.StringFilter<"RoutingFormResponse"> | string;
    formTeamId?: Prisma.IntNullableFilter<"RoutingFormResponse"> | number | null;
    formUserId?: Prisma.IntNullableFilter<"RoutingFormResponse"> | number | null;
    bookingUid?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
    bookingStatus?:
      | Prisma.EnumBookingStatusNullableFilter<"RoutingFormResponse">
      | $Enums.BookingStatus
      | null;
    bookingStatusOrder?: Prisma.IntNullableFilter<"RoutingFormResponse"> | number | null;
    bookingCreatedAt?: Prisma.DateTimeNullableFilter<"RoutingFormResponse"> | Date | string | null;
    bookingAttendees?: Prisma.JsonNullableFilter<"RoutingFormResponse">;
    bookingUserId?: Prisma.IntNullableFilter<"RoutingFormResponse"> | number | null;
    bookingUserName?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
    bookingUserEmail?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
    bookingUserAvatarUrl?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
    bookingAssignmentReason?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
    bookingAssignmentReasonLowercase?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
    bookingStartTime?: Prisma.DateTimeNullableFilter<"RoutingFormResponse"> | Date | string | null;
    bookingEndTime?: Prisma.DateTimeNullableFilter<"RoutingFormResponse"> | Date | string | null;
    createdAt?: Prisma.DateTimeFilter<"RoutingFormResponse"> | Date | string;
    utm_source?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
    utm_medium?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
    utm_campaign?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
    utm_term?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
    utm_content?: Prisma.StringNullableFilter<"RoutingFormResponse"> | string | null;
  },
  "id"
>;

export type RoutingFormResponseOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  response?: Prisma.SortOrder;
  responseLowercase?: Prisma.SortOrder;
  formId?: Prisma.SortOrder;
  formName?: Prisma.SortOrder;
  formTeamId?: Prisma.SortOrderInput | Prisma.SortOrder;
  formUserId?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingUid?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingStatus?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingStatusOrder?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingCreatedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingAttendees?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingUserId?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingUserName?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingUserEmail?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingUserAvatarUrl?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingAssignmentReason?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingAssignmentReasonLowercase?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingStartTime?: Prisma.SortOrderInput | Prisma.SortOrder;
  bookingEndTime?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  utm_source?: Prisma.SortOrderInput | Prisma.SortOrder;
  utm_medium?: Prisma.SortOrderInput | Prisma.SortOrder;
  utm_campaign?: Prisma.SortOrderInput | Prisma.SortOrder;
  utm_term?: Prisma.SortOrderInput | Prisma.SortOrder;
  utm_content?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.RoutingFormResponseCountOrderByAggregateInput;
  _avg?: Prisma.RoutingFormResponseAvgOrderByAggregateInput;
  _max?: Prisma.RoutingFormResponseMaxOrderByAggregateInput;
  _min?: Prisma.RoutingFormResponseMinOrderByAggregateInput;
  _sum?: Prisma.RoutingFormResponseSumOrderByAggregateInput;
};

export type RoutingFormResponseScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.RoutingFormResponseScalarWhereWithAggregatesInput
    | Prisma.RoutingFormResponseScalarWhereWithAggregatesInput[];
  OR?: Prisma.RoutingFormResponseScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.RoutingFormResponseScalarWhereWithAggregatesInput
    | Prisma.RoutingFormResponseScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"RoutingFormResponse"> | number;
  response?: Prisma.JsonWithAggregatesFilter<"RoutingFormResponse">;
  responseLowercase?: Prisma.JsonWithAggregatesFilter<"RoutingFormResponse">;
  formId?: Prisma.StringWithAggregatesFilter<"RoutingFormResponse"> | string;
  formName?: Prisma.StringWithAggregatesFilter<"RoutingFormResponse"> | string;
  formTeamId?: Prisma.IntNullableWithAggregatesFilter<"RoutingFormResponse"> | number | null;
  formUserId?: Prisma.IntNullableWithAggregatesFilter<"RoutingFormResponse"> | number | null;
  bookingUid?: Prisma.StringNullableWithAggregatesFilter<"RoutingFormResponse"> | string | null;
  bookingStatus?:
    | Prisma.EnumBookingStatusNullableWithAggregatesFilter<"RoutingFormResponse">
    | $Enums.BookingStatus
    | null;
  bookingStatusOrder?: Prisma.IntNullableWithAggregatesFilter<"RoutingFormResponse"> | number | null;
  bookingCreatedAt?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"RoutingFormResponse">
    | Date
    | string
    | null;
  bookingAttendees?: Prisma.JsonNullableWithAggregatesFilter<"RoutingFormResponse">;
  bookingUserId?: Prisma.IntNullableWithAggregatesFilter<"RoutingFormResponse"> | number | null;
  bookingUserName?: Prisma.StringNullableWithAggregatesFilter<"RoutingFormResponse"> | string | null;
  bookingUserEmail?: Prisma.StringNullableWithAggregatesFilter<"RoutingFormResponse"> | string | null;
  bookingUserAvatarUrl?: Prisma.StringNullableWithAggregatesFilter<"RoutingFormResponse"> | string | null;
  bookingAssignmentReason?: Prisma.StringNullableWithAggregatesFilter<"RoutingFormResponse"> | string | null;
  bookingAssignmentReasonLowercase?:
    | Prisma.StringNullableWithAggregatesFilter<"RoutingFormResponse">
    | string
    | null;
  bookingStartTime?:
    | Prisma.DateTimeNullableWithAggregatesFilter<"RoutingFormResponse">
    | Date
    | string
    | null;
  bookingEndTime?: Prisma.DateTimeNullableWithAggregatesFilter<"RoutingFormResponse"> | Date | string | null;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"RoutingFormResponse"> | Date | string;
  utm_source?: Prisma.StringNullableWithAggregatesFilter<"RoutingFormResponse"> | string | null;
  utm_medium?: Prisma.StringNullableWithAggregatesFilter<"RoutingFormResponse"> | string | null;
  utm_campaign?: Prisma.StringNullableWithAggregatesFilter<"RoutingFormResponse"> | string | null;
  utm_term?: Prisma.StringNullableWithAggregatesFilter<"RoutingFormResponse"> | string | null;
  utm_content?: Prisma.StringNullableWithAggregatesFilter<"RoutingFormResponse"> | string | null;
};

export type RoutingFormResponseCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  response?: Prisma.SortOrder;
  responseLowercase?: Prisma.SortOrder;
  formId?: Prisma.SortOrder;
  formName?: Prisma.SortOrder;
  formTeamId?: Prisma.SortOrder;
  formUserId?: Prisma.SortOrder;
  bookingUid?: Prisma.SortOrder;
  bookingStatus?: Prisma.SortOrder;
  bookingStatusOrder?: Prisma.SortOrder;
  bookingCreatedAt?: Prisma.SortOrder;
  bookingAttendees?: Prisma.SortOrder;
  bookingUserId?: Prisma.SortOrder;
  bookingUserName?: Prisma.SortOrder;
  bookingUserEmail?: Prisma.SortOrder;
  bookingUserAvatarUrl?: Prisma.SortOrder;
  bookingAssignmentReason?: Prisma.SortOrder;
  bookingAssignmentReasonLowercase?: Prisma.SortOrder;
  bookingStartTime?: Prisma.SortOrder;
  bookingEndTime?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  utm_source?: Prisma.SortOrder;
  utm_medium?: Prisma.SortOrder;
  utm_campaign?: Prisma.SortOrder;
  utm_term?: Prisma.SortOrder;
  utm_content?: Prisma.SortOrder;
};

export type RoutingFormResponseAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  formTeamId?: Prisma.SortOrder;
  formUserId?: Prisma.SortOrder;
  bookingStatusOrder?: Prisma.SortOrder;
  bookingUserId?: Prisma.SortOrder;
};

export type RoutingFormResponseMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  formId?: Prisma.SortOrder;
  formName?: Prisma.SortOrder;
  formTeamId?: Prisma.SortOrder;
  formUserId?: Prisma.SortOrder;
  bookingUid?: Prisma.SortOrder;
  bookingStatus?: Prisma.SortOrder;
  bookingStatusOrder?: Prisma.SortOrder;
  bookingCreatedAt?: Prisma.SortOrder;
  bookingUserId?: Prisma.SortOrder;
  bookingUserName?: Prisma.SortOrder;
  bookingUserEmail?: Prisma.SortOrder;
  bookingUserAvatarUrl?: Prisma.SortOrder;
  bookingAssignmentReason?: Prisma.SortOrder;
  bookingAssignmentReasonLowercase?: Prisma.SortOrder;
  bookingStartTime?: Prisma.SortOrder;
  bookingEndTime?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  utm_source?: Prisma.SortOrder;
  utm_medium?: Prisma.SortOrder;
  utm_campaign?: Prisma.SortOrder;
  utm_term?: Prisma.SortOrder;
  utm_content?: Prisma.SortOrder;
};

export type RoutingFormResponseMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  formId?: Prisma.SortOrder;
  formName?: Prisma.SortOrder;
  formTeamId?: Prisma.SortOrder;
  formUserId?: Prisma.SortOrder;
  bookingUid?: Prisma.SortOrder;
  bookingStatus?: Prisma.SortOrder;
  bookingStatusOrder?: Prisma.SortOrder;
  bookingCreatedAt?: Prisma.SortOrder;
  bookingUserId?: Prisma.SortOrder;
  bookingUserName?: Prisma.SortOrder;
  bookingUserEmail?: Prisma.SortOrder;
  bookingUserAvatarUrl?: Prisma.SortOrder;
  bookingAssignmentReason?: Prisma.SortOrder;
  bookingAssignmentReasonLowercase?: Prisma.SortOrder;
  bookingStartTime?: Prisma.SortOrder;
  bookingEndTime?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  utm_source?: Prisma.SortOrder;
  utm_medium?: Prisma.SortOrder;
  utm_campaign?: Prisma.SortOrder;
  utm_term?: Prisma.SortOrder;
  utm_content?: Prisma.SortOrder;
};

export type RoutingFormResponseSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  formTeamId?: Prisma.SortOrder;
  formUserId?: Prisma.SortOrder;
  bookingStatusOrder?: Prisma.SortOrder;
  bookingUserId?: Prisma.SortOrder;
};

export type RoutingFormResponseSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    response?: boolean;
    responseLowercase?: boolean;
    formId?: boolean;
    formName?: boolean;
    formTeamId?: boolean;
    formUserId?: boolean;
    bookingUid?: boolean;
    bookingStatus?: boolean;
    bookingStatusOrder?: boolean;
    bookingCreatedAt?: boolean;
    bookingAttendees?: boolean;
    bookingUserId?: boolean;
    bookingUserName?: boolean;
    bookingUserEmail?: boolean;
    bookingUserAvatarUrl?: boolean;
    bookingAssignmentReason?: boolean;
    bookingAssignmentReasonLowercase?: boolean;
    bookingStartTime?: boolean;
    bookingEndTime?: boolean;
    createdAt?: boolean;
    utm_source?: boolean;
    utm_medium?: boolean;
    utm_campaign?: boolean;
    utm_term?: boolean;
    utm_content?: boolean;
  },
  ExtArgs["result"]["routingFormResponse"]
>;

export type RoutingFormResponseSelectScalar = {
  id?: boolean;
  response?: boolean;
  responseLowercase?: boolean;
  formId?: boolean;
  formName?: boolean;
  formTeamId?: boolean;
  formUserId?: boolean;
  bookingUid?: boolean;
  bookingStatus?: boolean;
  bookingStatusOrder?: boolean;
  bookingCreatedAt?: boolean;
  bookingAttendees?: boolean;
  bookingUserId?: boolean;
  bookingUserName?: boolean;
  bookingUserEmail?: boolean;
  bookingUserAvatarUrl?: boolean;
  bookingAssignmentReason?: boolean;
  bookingAssignmentReasonLowercase?: boolean;
  bookingStartTime?: boolean;
  bookingEndTime?: boolean;
  createdAt?: boolean;
  utm_source?: boolean;
  utm_medium?: boolean;
  utm_campaign?: boolean;
  utm_term?: boolean;
  utm_content?: boolean;
};

export type RoutingFormResponseOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "response"
  | "responseLowercase"
  | "formId"
  | "formName"
  | "formTeamId"
  | "formUserId"
  | "bookingUid"
  | "bookingStatus"
  | "bookingStatusOrder"
  | "bookingCreatedAt"
  | "bookingAttendees"
  | "bookingUserId"
  | "bookingUserName"
  | "bookingUserEmail"
  | "bookingUserAvatarUrl"
  | "bookingAssignmentReason"
  | "bookingAssignmentReasonLowercase"
  | "bookingStartTime"
  | "bookingEndTime"
  | "createdAt"
  | "utm_source"
  | "utm_medium"
  | "utm_campaign"
  | "utm_term"
  | "utm_content",
  ExtArgs["result"]["routingFormResponse"]
>;

export type $RoutingFormResponsePayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "RoutingFormResponse";
  objects: {};
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      response: runtime.JsonValue;
      responseLowercase: runtime.JsonValue;
      formId: string;
      formName: string;
      formTeamId: number | null;
      formUserId: number | null;
      bookingUid: string | null;
      bookingStatus: $Enums.BookingStatus | null;
      bookingStatusOrder: number | null;
      bookingCreatedAt: Date | null;
      bookingAttendees: runtime.JsonValue | null;
      bookingUserId: number | null;
      bookingUserName: string | null;
      bookingUserEmail: string | null;
      bookingUserAvatarUrl: string | null;
      bookingAssignmentReason: string | null;
      bookingAssignmentReasonLowercase: string | null;
      bookingStartTime: Date | null;
      bookingEndTime: Date | null;
      createdAt: Date;
      utm_source: string | null;
      utm_medium: string | null;
      utm_campaign: string | null;
      utm_term: string | null;
      utm_content: string | null;
    },
    ExtArgs["result"]["routingFormResponse"]
  >;
  composites: {};
};

export type RoutingFormResponseGetPayload<
  S extends boolean | null | undefined | RoutingFormResponseDefaultArgs
> = runtime.Types.Result.GetResult<Prisma.$RoutingFormResponsePayload, S>;

export type RoutingFormResponseCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<RoutingFormResponseFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: RoutingFormResponseCountAggregateInputType | true;
};

export interface RoutingFormResponseDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["RoutingFormResponse"];
    meta: { name: "RoutingFormResponse" };
  };
  /**
   * Find zero or one RoutingFormResponse that matches the filter.
   * @param {RoutingFormResponseFindUniqueArgs} args - Arguments to find a RoutingFormResponse
   * @example
   * // Get one RoutingFormResponse
   * const routingFormResponse = await prisma.routingFormResponse.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends RoutingFormResponseFindUniqueArgs>(
    args: Prisma.SelectSubset<T, RoutingFormResponseFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__RoutingFormResponseClient<
    runtime.Types.Result.GetResult<
      Prisma.$RoutingFormResponsePayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one RoutingFormResponse that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {RoutingFormResponseFindUniqueOrThrowArgs} args - Arguments to find a RoutingFormResponse
   * @example
   * // Get one RoutingFormResponse
   * const routingFormResponse = await prisma.routingFormResponse.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends RoutingFormResponseFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, RoutingFormResponseFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__RoutingFormResponseClient<
    runtime.Types.Result.GetResult<
      Prisma.$RoutingFormResponsePayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first RoutingFormResponse that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RoutingFormResponseFindFirstArgs} args - Arguments to find a RoutingFormResponse
   * @example
   * // Get one RoutingFormResponse
   * const routingFormResponse = await prisma.routingFormResponse.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends RoutingFormResponseFindFirstArgs>(
    args?: Prisma.SelectSubset<T, RoutingFormResponseFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__RoutingFormResponseClient<
    runtime.Types.Result.GetResult<
      Prisma.$RoutingFormResponsePayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first RoutingFormResponse that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RoutingFormResponseFindFirstOrThrowArgs} args - Arguments to find a RoutingFormResponse
   * @example
   * // Get one RoutingFormResponse
   * const routingFormResponse = await prisma.routingFormResponse.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends RoutingFormResponseFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, RoutingFormResponseFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__RoutingFormResponseClient<
    runtime.Types.Result.GetResult<
      Prisma.$RoutingFormResponsePayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more RoutingFormResponses that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RoutingFormResponseFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all RoutingFormResponses
   * const routingFormResponses = await prisma.routingFormResponse.findMany()
   *
   * // Get first 10 RoutingFormResponses
   * const routingFormResponses = await prisma.routingFormResponse.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const routingFormResponseWithIdOnly = await prisma.routingFormResponse.findMany({ select: { id: true } })
   *
   */
  findMany<T extends RoutingFormResponseFindManyArgs>(
    args?: Prisma.SelectSubset<T, RoutingFormResponseFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$RoutingFormResponsePayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Count the number of RoutingFormResponses.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RoutingFormResponseCountArgs} args - Arguments to filter RoutingFormResponses to count.
   * @example
   * // Count the number of RoutingFormResponses
   * const count = await prisma.routingFormResponse.count({
   *   where: {
   *     // ... the filter for the RoutingFormResponses we want to count
   *   }
   * })
   **/
  count<T extends RoutingFormResponseCountArgs>(
    args?: Prisma.Subset<T, RoutingFormResponseCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], RoutingFormResponseCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a RoutingFormResponse.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RoutingFormResponseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends RoutingFormResponseAggregateArgs>(
    args: Prisma.Subset<T, RoutingFormResponseAggregateArgs>
  ): Prisma.PrismaPromise<GetRoutingFormResponseAggregateType<T>>;

  /**
   * Group by RoutingFormResponse.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RoutingFormResponseGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends RoutingFormResponseGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: RoutingFormResponseGroupByArgs["orderBy"] }
      : { orderBy?: RoutingFormResponseGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, RoutingFormResponseGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetRoutingFormResponseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the RoutingFormResponse model
   */
  readonly fields: RoutingFormResponseFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for RoutingFormResponse.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__RoutingFormResponseClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the RoutingFormResponse model
 */
export interface RoutingFormResponseFieldRefs {
  readonly id: Prisma.FieldRef<"RoutingFormResponse", "Int">;
  readonly response: Prisma.FieldRef<"RoutingFormResponse", "Json">;
  readonly responseLowercase: Prisma.FieldRef<"RoutingFormResponse", "Json">;
  readonly formId: Prisma.FieldRef<"RoutingFormResponse", "String">;
  readonly formName: Prisma.FieldRef<"RoutingFormResponse", "String">;
  readonly formTeamId: Prisma.FieldRef<"RoutingFormResponse", "Int">;
  readonly formUserId: Prisma.FieldRef<"RoutingFormResponse", "Int">;
  readonly bookingUid: Prisma.FieldRef<"RoutingFormResponse", "String">;
  readonly bookingStatus: Prisma.FieldRef<"RoutingFormResponse", "BookingStatus">;
  readonly bookingStatusOrder: Prisma.FieldRef<"RoutingFormResponse", "Int">;
  readonly bookingCreatedAt: Prisma.FieldRef<"RoutingFormResponse", "DateTime">;
  readonly bookingAttendees: Prisma.FieldRef<"RoutingFormResponse", "Json">;
  readonly bookingUserId: Prisma.FieldRef<"RoutingFormResponse", "Int">;
  readonly bookingUserName: Prisma.FieldRef<"RoutingFormResponse", "String">;
  readonly bookingUserEmail: Prisma.FieldRef<"RoutingFormResponse", "String">;
  readonly bookingUserAvatarUrl: Prisma.FieldRef<"RoutingFormResponse", "String">;
  readonly bookingAssignmentReason: Prisma.FieldRef<"RoutingFormResponse", "String">;
  readonly bookingAssignmentReasonLowercase: Prisma.FieldRef<"RoutingFormResponse", "String">;
  readonly bookingStartTime: Prisma.FieldRef<"RoutingFormResponse", "DateTime">;
  readonly bookingEndTime: Prisma.FieldRef<"RoutingFormResponse", "DateTime">;
  readonly createdAt: Prisma.FieldRef<"RoutingFormResponse", "DateTime">;
  readonly utm_source: Prisma.FieldRef<"RoutingFormResponse", "String">;
  readonly utm_medium: Prisma.FieldRef<"RoutingFormResponse", "String">;
  readonly utm_campaign: Prisma.FieldRef<"RoutingFormResponse", "String">;
  readonly utm_term: Prisma.FieldRef<"RoutingFormResponse", "String">;
  readonly utm_content: Prisma.FieldRef<"RoutingFormResponse", "String">;
}

// Custom InputTypes
/**
 * RoutingFormResponse findUnique
 */
export type RoutingFormResponseFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the RoutingFormResponse
   */
  select?: Prisma.RoutingFormResponseSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the RoutingFormResponse
   */
  omit?: Prisma.RoutingFormResponseOmit<ExtArgs> | null;
  /**
   * Filter, which RoutingFormResponse to fetch.
   */
  where: Prisma.RoutingFormResponseWhereUniqueInput;
};

/**
 * RoutingFormResponse findUniqueOrThrow
 */
export type RoutingFormResponseFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the RoutingFormResponse
   */
  select?: Prisma.RoutingFormResponseSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the RoutingFormResponse
   */
  omit?: Prisma.RoutingFormResponseOmit<ExtArgs> | null;
  /**
   * Filter, which RoutingFormResponse to fetch.
   */
  where: Prisma.RoutingFormResponseWhereUniqueInput;
};

/**
 * RoutingFormResponse findFirst
 */
export type RoutingFormResponseFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the RoutingFormResponse
   */
  select?: Prisma.RoutingFormResponseSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the RoutingFormResponse
   */
  omit?: Prisma.RoutingFormResponseOmit<ExtArgs> | null;
  /**
   * Filter, which RoutingFormResponse to fetch.
   */
  where?: Prisma.RoutingFormResponseWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of RoutingFormResponses to fetch.
   */
  orderBy?:
    | Prisma.RoutingFormResponseOrderByWithRelationInput
    | Prisma.RoutingFormResponseOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for RoutingFormResponses.
   */
  cursor?: Prisma.RoutingFormResponseWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` RoutingFormResponses from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` RoutingFormResponses.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of RoutingFormResponses.
   */
  distinct?: Prisma.RoutingFormResponseScalarFieldEnum | Prisma.RoutingFormResponseScalarFieldEnum[];
};

/**
 * RoutingFormResponse findFirstOrThrow
 */
export type RoutingFormResponseFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the RoutingFormResponse
   */
  select?: Prisma.RoutingFormResponseSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the RoutingFormResponse
   */
  omit?: Prisma.RoutingFormResponseOmit<ExtArgs> | null;
  /**
   * Filter, which RoutingFormResponse to fetch.
   */
  where?: Prisma.RoutingFormResponseWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of RoutingFormResponses to fetch.
   */
  orderBy?:
    | Prisma.RoutingFormResponseOrderByWithRelationInput
    | Prisma.RoutingFormResponseOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for RoutingFormResponses.
   */
  cursor?: Prisma.RoutingFormResponseWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` RoutingFormResponses from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` RoutingFormResponses.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of RoutingFormResponses.
   */
  distinct?: Prisma.RoutingFormResponseScalarFieldEnum | Prisma.RoutingFormResponseScalarFieldEnum[];
};

/**
 * RoutingFormResponse findMany
 */
export type RoutingFormResponseFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the RoutingFormResponse
   */
  select?: Prisma.RoutingFormResponseSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the RoutingFormResponse
   */
  omit?: Prisma.RoutingFormResponseOmit<ExtArgs> | null;
  /**
   * Filter, which RoutingFormResponses to fetch.
   */
  where?: Prisma.RoutingFormResponseWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of RoutingFormResponses to fetch.
   */
  orderBy?:
    | Prisma.RoutingFormResponseOrderByWithRelationInput
    | Prisma.RoutingFormResponseOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing RoutingFormResponses.
   */
  cursor?: Prisma.RoutingFormResponseWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` RoutingFormResponses from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` RoutingFormResponses.
   */
  skip?: number;
  distinct?: Prisma.RoutingFormResponseScalarFieldEnum | Prisma.RoutingFormResponseScalarFieldEnum[];
};

/**
 * RoutingFormResponse without action
 */
export type RoutingFormResponseDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the RoutingFormResponse
   */
  select?: Prisma.RoutingFormResponseSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the RoutingFormResponse
   */
  omit?: Prisma.RoutingFormResponseOmit<ExtArgs> | null;
};
