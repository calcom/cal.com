/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `ApiKey` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model ApiKey
 *
 */
export type ApiKeyModel = runtime.Types.Result.DefaultSelection<Prisma.$ApiKeyPayload>;

export type AggregateApiKey = {
  _count: ApiKeyCountAggregateOutputType | null;
  _avg: ApiKeyAvgAggregateOutputType | null;
  _sum: ApiKeySumAggregateOutputType | null;
  _min: ApiKeyMinAggregateOutputType | null;
  _max: ApiKeyMaxAggregateOutputType | null;
};

export type ApiKeyAvgAggregateOutputType = {
  userId: number | null;
  teamId: number | null;
};

export type ApiKeySumAggregateOutputType = {
  userId: number | null;
  teamId: number | null;
};

export type ApiKeyMinAggregateOutputType = {
  id: string | null;
  userId: number | null;
  teamId: number | null;
  note: string | null;
  createdAt: Date | null;
  expiresAt: Date | null;
  lastUsedAt: Date | null;
  hashedKey: string | null;
  appId: string | null;
};

export type ApiKeyMaxAggregateOutputType = {
  id: string | null;
  userId: number | null;
  teamId: number | null;
  note: string | null;
  createdAt: Date | null;
  expiresAt: Date | null;
  lastUsedAt: Date | null;
  hashedKey: string | null;
  appId: string | null;
};

export type ApiKeyCountAggregateOutputType = {
  id: number;
  userId: number;
  teamId: number;
  note: number;
  createdAt: number;
  expiresAt: number;
  lastUsedAt: number;
  hashedKey: number;
  appId: number;
  _all: number;
};

export type ApiKeyAvgAggregateInputType = {
  userId?: true;
  teamId?: true;
};

export type ApiKeySumAggregateInputType = {
  userId?: true;
  teamId?: true;
};

export type ApiKeyMinAggregateInputType = {
  id?: true;
  userId?: true;
  teamId?: true;
  note?: true;
  createdAt?: true;
  expiresAt?: true;
  lastUsedAt?: true;
  hashedKey?: true;
  appId?: true;
};

export type ApiKeyMaxAggregateInputType = {
  id?: true;
  userId?: true;
  teamId?: true;
  note?: true;
  createdAt?: true;
  expiresAt?: true;
  lastUsedAt?: true;
  hashedKey?: true;
  appId?: true;
};

export type ApiKeyCountAggregateInputType = {
  id?: true;
  userId?: true;
  teamId?: true;
  note?: true;
  createdAt?: true;
  expiresAt?: true;
  lastUsedAt?: true;
  hashedKey?: true;
  appId?: true;
  _all?: true;
};

export type ApiKeyAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which ApiKey to aggregate.
   */
  where?: Prisma.ApiKeyWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of ApiKeys to fetch.
   */
  orderBy?: Prisma.ApiKeyOrderByWithRelationInput | Prisma.ApiKeyOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.ApiKeyWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` ApiKeys from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` ApiKeys.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned ApiKeys
   **/
  _count?: true | ApiKeyCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: ApiKeyAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: ApiKeySumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: ApiKeyMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: ApiKeyMaxAggregateInputType;
};

export type GetApiKeyAggregateType<T extends ApiKeyAggregateArgs> = {
  [P in keyof T & keyof AggregateApiKey]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateApiKey[P]>
    : Prisma.GetScalarType<T[P], AggregateApiKey[P]>;
};

export type ApiKeyGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.ApiKeyWhereInput;
  orderBy?: Prisma.ApiKeyOrderByWithAggregationInput | Prisma.ApiKeyOrderByWithAggregationInput[];
  by: Prisma.ApiKeyScalarFieldEnum[] | Prisma.ApiKeyScalarFieldEnum;
  having?: Prisma.ApiKeyScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: ApiKeyCountAggregateInputType | true;
  _avg?: ApiKeyAvgAggregateInputType;
  _sum?: ApiKeySumAggregateInputType;
  _min?: ApiKeyMinAggregateInputType;
  _max?: ApiKeyMaxAggregateInputType;
};

export type ApiKeyGroupByOutputType = {
  id: string;
  userId: number;
  teamId: number | null;
  note: string | null;
  createdAt: Date;
  expiresAt: Date | null;
  lastUsedAt: Date | null;
  hashedKey: string;
  appId: string | null;
  _count: ApiKeyCountAggregateOutputType | null;
  _avg: ApiKeyAvgAggregateOutputType | null;
  _sum: ApiKeySumAggregateOutputType | null;
  _min: ApiKeyMinAggregateOutputType | null;
  _max: ApiKeyMaxAggregateOutputType | null;
};

type GetApiKeyGroupByPayload<T extends ApiKeyGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ApiKeyGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof ApiKeyGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], ApiKeyGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], ApiKeyGroupByOutputType[P]>;
    }
  >
>;

export type ApiKeyWhereInput = {
  AND?: Prisma.ApiKeyWhereInput | Prisma.ApiKeyWhereInput[];
  OR?: Prisma.ApiKeyWhereInput[];
  NOT?: Prisma.ApiKeyWhereInput | Prisma.ApiKeyWhereInput[];
  id?: Prisma.StringFilter<"ApiKey"> | string;
  userId?: Prisma.IntFilter<"ApiKey"> | number;
  teamId?: Prisma.IntNullableFilter<"ApiKey"> | number | null;
  note?: Prisma.StringNullableFilter<"ApiKey"> | string | null;
  createdAt?: Prisma.DateTimeFilter<"ApiKey"> | Date | string;
  expiresAt?: Prisma.DateTimeNullableFilter<"ApiKey"> | Date | string | null;
  lastUsedAt?: Prisma.DateTimeNullableFilter<"ApiKey"> | Date | string | null;
  hashedKey?: Prisma.StringFilter<"ApiKey"> | string;
  appId?: Prisma.StringNullableFilter<"ApiKey"> | string | null;
  user?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null;
  team?: Prisma.XOR<Prisma.TeamNullableScalarRelationFilter, Prisma.TeamWhereInput> | null;
  app?: Prisma.XOR<Prisma.AppNullableScalarRelationFilter, Prisma.AppWhereInput> | null;
  rateLimits?: Prisma.RateLimitListRelationFilter;
};

export type ApiKeyOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  teamId?: Prisma.SortOrderInput | Prisma.SortOrder;
  note?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  expiresAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  lastUsedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  hashedKey?: Prisma.SortOrder;
  appId?: Prisma.SortOrderInput | Prisma.SortOrder;
  user?: Prisma.UserOrderByWithRelationInput;
  team?: Prisma.TeamOrderByWithRelationInput;
  app?: Prisma.AppOrderByWithRelationInput;
  rateLimits?: Prisma.RateLimitOrderByRelationAggregateInput;
};

export type ApiKeyWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    hashedKey?: string;
    AND?: Prisma.ApiKeyWhereInput | Prisma.ApiKeyWhereInput[];
    OR?: Prisma.ApiKeyWhereInput[];
    NOT?: Prisma.ApiKeyWhereInput | Prisma.ApiKeyWhereInput[];
    userId?: Prisma.IntFilter<"ApiKey"> | number;
    teamId?: Prisma.IntNullableFilter<"ApiKey"> | number | null;
    note?: Prisma.StringNullableFilter<"ApiKey"> | string | null;
    createdAt?: Prisma.DateTimeFilter<"ApiKey"> | Date | string;
    expiresAt?: Prisma.DateTimeNullableFilter<"ApiKey"> | Date | string | null;
    lastUsedAt?: Prisma.DateTimeNullableFilter<"ApiKey"> | Date | string | null;
    appId?: Prisma.StringNullableFilter<"ApiKey"> | string | null;
    user?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null;
    team?: Prisma.XOR<Prisma.TeamNullableScalarRelationFilter, Prisma.TeamWhereInput> | null;
    app?: Prisma.XOR<Prisma.AppNullableScalarRelationFilter, Prisma.AppWhereInput> | null;
    rateLimits?: Prisma.RateLimitListRelationFilter;
  },
  "id" | "id" | "hashedKey"
>;

export type ApiKeyOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  teamId?: Prisma.SortOrderInput | Prisma.SortOrder;
  note?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  expiresAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  lastUsedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  hashedKey?: Prisma.SortOrder;
  appId?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.ApiKeyCountOrderByAggregateInput;
  _avg?: Prisma.ApiKeyAvgOrderByAggregateInput;
  _max?: Prisma.ApiKeyMaxOrderByAggregateInput;
  _min?: Prisma.ApiKeyMinOrderByAggregateInput;
  _sum?: Prisma.ApiKeySumOrderByAggregateInput;
};

export type ApiKeyScalarWhereWithAggregatesInput = {
  AND?: Prisma.ApiKeyScalarWhereWithAggregatesInput | Prisma.ApiKeyScalarWhereWithAggregatesInput[];
  OR?: Prisma.ApiKeyScalarWhereWithAggregatesInput[];
  NOT?: Prisma.ApiKeyScalarWhereWithAggregatesInput | Prisma.ApiKeyScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"ApiKey"> | string;
  userId?: Prisma.IntWithAggregatesFilter<"ApiKey"> | number;
  teamId?: Prisma.IntNullableWithAggregatesFilter<"ApiKey"> | number | null;
  note?: Prisma.StringNullableWithAggregatesFilter<"ApiKey"> | string | null;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ApiKey"> | Date | string;
  expiresAt?: Prisma.DateTimeNullableWithAggregatesFilter<"ApiKey"> | Date | string | null;
  lastUsedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"ApiKey"> | Date | string | null;
  hashedKey?: Prisma.StringWithAggregatesFilter<"ApiKey"> | string;
  appId?: Prisma.StringNullableWithAggregatesFilter<"ApiKey"> | string | null;
};

export type ApiKeyCreateInput = {
  id?: string;
  note?: string | null;
  createdAt?: Date | string;
  expiresAt?: Date | string | null;
  lastUsedAt?: Date | string | null;
  hashedKey: string;
  user?: Prisma.UserCreateNestedOneWithoutApiKeysInput;
  team?: Prisma.TeamCreateNestedOneWithoutApiKeysInput;
  app?: Prisma.AppCreateNestedOneWithoutApiKeyInput;
  rateLimits?: Prisma.RateLimitCreateNestedManyWithoutApiKeyInput;
};

export type ApiKeyUncheckedCreateInput = {
  id?: string;
  userId: number;
  teamId?: number | null;
  note?: string | null;
  createdAt?: Date | string;
  expiresAt?: Date | string | null;
  lastUsedAt?: Date | string | null;
  hashedKey: string;
  appId?: string | null;
  rateLimits?: Prisma.RateLimitUncheckedCreateNestedManyWithoutApiKeyInput;
};

export type ApiKeyUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  hashedKey?: Prisma.StringFieldUpdateOperationsInput | string;
  user?: Prisma.UserUpdateOneWithoutApiKeysNestedInput;
  team?: Prisma.TeamUpdateOneWithoutApiKeysNestedInput;
  app?: Prisma.AppUpdateOneWithoutApiKeyNestedInput;
  rateLimits?: Prisma.RateLimitUpdateManyWithoutApiKeyNestedInput;
};

export type ApiKeyUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  hashedKey?: Prisma.StringFieldUpdateOperationsInput | string;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  rateLimits?: Prisma.RateLimitUncheckedUpdateManyWithoutApiKeyNestedInput;
};

export type ApiKeyCreateManyInput = {
  id?: string;
  userId: number;
  teamId?: number | null;
  note?: string | null;
  createdAt?: Date | string;
  expiresAt?: Date | string | null;
  lastUsedAt?: Date | string | null;
  hashedKey: string;
  appId?: string | null;
};

export type ApiKeyUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  hashedKey?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type ApiKeyUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  hashedKey?: Prisma.StringFieldUpdateOperationsInput | string;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type ApiKeyListRelationFilter = {
  every?: Prisma.ApiKeyWhereInput;
  some?: Prisma.ApiKeyWhereInput;
  none?: Prisma.ApiKeyWhereInput;
};

export type ApiKeyOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type ApiKeyCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  note?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  expiresAt?: Prisma.SortOrder;
  lastUsedAt?: Prisma.SortOrder;
  hashedKey?: Prisma.SortOrder;
  appId?: Prisma.SortOrder;
};

export type ApiKeyAvgOrderByAggregateInput = {
  userId?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
};

export type ApiKeyMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  note?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  expiresAt?: Prisma.SortOrder;
  lastUsedAt?: Prisma.SortOrder;
  hashedKey?: Prisma.SortOrder;
  appId?: Prisma.SortOrder;
};

export type ApiKeyMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  userId?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  note?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  expiresAt?: Prisma.SortOrder;
  lastUsedAt?: Prisma.SortOrder;
  hashedKey?: Prisma.SortOrder;
  appId?: Prisma.SortOrder;
};

export type ApiKeySumOrderByAggregateInput = {
  userId?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
};

export type ApiKeyScalarRelationFilter = {
  is?: Prisma.ApiKeyWhereInput;
  isNot?: Prisma.ApiKeyWhereInput;
};

export type ApiKeyCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<Prisma.ApiKeyCreateWithoutUserInput, Prisma.ApiKeyUncheckedCreateWithoutUserInput>
    | Prisma.ApiKeyCreateWithoutUserInput[]
    | Prisma.ApiKeyUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.ApiKeyCreateOrConnectWithoutUserInput
    | Prisma.ApiKeyCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.ApiKeyCreateManyUserInputEnvelope;
  connect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
};

export type ApiKeyUncheckedCreateNestedManyWithoutUserInput = {
  create?:
    | Prisma.XOR<Prisma.ApiKeyCreateWithoutUserInput, Prisma.ApiKeyUncheckedCreateWithoutUserInput>
    | Prisma.ApiKeyCreateWithoutUserInput[]
    | Prisma.ApiKeyUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.ApiKeyCreateOrConnectWithoutUserInput
    | Prisma.ApiKeyCreateOrConnectWithoutUserInput[];
  createMany?: Prisma.ApiKeyCreateManyUserInputEnvelope;
  connect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
};

export type ApiKeyUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<Prisma.ApiKeyCreateWithoutUserInput, Prisma.ApiKeyUncheckedCreateWithoutUserInput>
    | Prisma.ApiKeyCreateWithoutUserInput[]
    | Prisma.ApiKeyUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.ApiKeyCreateOrConnectWithoutUserInput
    | Prisma.ApiKeyCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.ApiKeyUpsertWithWhereUniqueWithoutUserInput
    | Prisma.ApiKeyUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.ApiKeyCreateManyUserInputEnvelope;
  set?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  disconnect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  delete?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  connect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  update?:
    | Prisma.ApiKeyUpdateWithWhereUniqueWithoutUserInput
    | Prisma.ApiKeyUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.ApiKeyUpdateManyWithWhereWithoutUserInput
    | Prisma.ApiKeyUpdateManyWithWhereWithoutUserInput[];
  deleteMany?: Prisma.ApiKeyScalarWhereInput | Prisma.ApiKeyScalarWhereInput[];
};

export type ApiKeyUncheckedUpdateManyWithoutUserNestedInput = {
  create?:
    | Prisma.XOR<Prisma.ApiKeyCreateWithoutUserInput, Prisma.ApiKeyUncheckedCreateWithoutUserInput>
    | Prisma.ApiKeyCreateWithoutUserInput[]
    | Prisma.ApiKeyUncheckedCreateWithoutUserInput[];
  connectOrCreate?:
    | Prisma.ApiKeyCreateOrConnectWithoutUserInput
    | Prisma.ApiKeyCreateOrConnectWithoutUserInput[];
  upsert?:
    | Prisma.ApiKeyUpsertWithWhereUniqueWithoutUserInput
    | Prisma.ApiKeyUpsertWithWhereUniqueWithoutUserInput[];
  createMany?: Prisma.ApiKeyCreateManyUserInputEnvelope;
  set?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  disconnect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  delete?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  connect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  update?:
    | Prisma.ApiKeyUpdateWithWhereUniqueWithoutUserInput
    | Prisma.ApiKeyUpdateWithWhereUniqueWithoutUserInput[];
  updateMany?:
    | Prisma.ApiKeyUpdateManyWithWhereWithoutUserInput
    | Prisma.ApiKeyUpdateManyWithWhereWithoutUserInput[];
  deleteMany?: Prisma.ApiKeyScalarWhereInput | Prisma.ApiKeyScalarWhereInput[];
};

export type ApiKeyCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<Prisma.ApiKeyCreateWithoutTeamInput, Prisma.ApiKeyUncheckedCreateWithoutTeamInput>
    | Prisma.ApiKeyCreateWithoutTeamInput[]
    | Prisma.ApiKeyUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.ApiKeyCreateOrConnectWithoutTeamInput
    | Prisma.ApiKeyCreateOrConnectWithoutTeamInput[];
  createMany?: Prisma.ApiKeyCreateManyTeamInputEnvelope;
  connect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
};

export type ApiKeyUncheckedCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<Prisma.ApiKeyCreateWithoutTeamInput, Prisma.ApiKeyUncheckedCreateWithoutTeamInput>
    | Prisma.ApiKeyCreateWithoutTeamInput[]
    | Prisma.ApiKeyUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.ApiKeyCreateOrConnectWithoutTeamInput
    | Prisma.ApiKeyCreateOrConnectWithoutTeamInput[];
  createMany?: Prisma.ApiKeyCreateManyTeamInputEnvelope;
  connect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
};

export type ApiKeyUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<Prisma.ApiKeyCreateWithoutTeamInput, Prisma.ApiKeyUncheckedCreateWithoutTeamInput>
    | Prisma.ApiKeyCreateWithoutTeamInput[]
    | Prisma.ApiKeyUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.ApiKeyCreateOrConnectWithoutTeamInput
    | Prisma.ApiKeyCreateOrConnectWithoutTeamInput[];
  upsert?:
    | Prisma.ApiKeyUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.ApiKeyUpsertWithWhereUniqueWithoutTeamInput[];
  createMany?: Prisma.ApiKeyCreateManyTeamInputEnvelope;
  set?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  disconnect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  delete?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  connect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  update?:
    | Prisma.ApiKeyUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.ApiKeyUpdateWithWhereUniqueWithoutTeamInput[];
  updateMany?:
    | Prisma.ApiKeyUpdateManyWithWhereWithoutTeamInput
    | Prisma.ApiKeyUpdateManyWithWhereWithoutTeamInput[];
  deleteMany?: Prisma.ApiKeyScalarWhereInput | Prisma.ApiKeyScalarWhereInput[];
};

export type ApiKeyUncheckedUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<Prisma.ApiKeyCreateWithoutTeamInput, Prisma.ApiKeyUncheckedCreateWithoutTeamInput>
    | Prisma.ApiKeyCreateWithoutTeamInput[]
    | Prisma.ApiKeyUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.ApiKeyCreateOrConnectWithoutTeamInput
    | Prisma.ApiKeyCreateOrConnectWithoutTeamInput[];
  upsert?:
    | Prisma.ApiKeyUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.ApiKeyUpsertWithWhereUniqueWithoutTeamInput[];
  createMany?: Prisma.ApiKeyCreateManyTeamInputEnvelope;
  set?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  disconnect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  delete?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  connect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  update?:
    | Prisma.ApiKeyUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.ApiKeyUpdateWithWhereUniqueWithoutTeamInput[];
  updateMany?:
    | Prisma.ApiKeyUpdateManyWithWhereWithoutTeamInput
    | Prisma.ApiKeyUpdateManyWithWhereWithoutTeamInput[];
  deleteMany?: Prisma.ApiKeyScalarWhereInput | Prisma.ApiKeyScalarWhereInput[];
};

export type ApiKeyCreateNestedOneWithoutRateLimitsInput = {
  create?: Prisma.XOR<
    Prisma.ApiKeyCreateWithoutRateLimitsInput,
    Prisma.ApiKeyUncheckedCreateWithoutRateLimitsInput
  >;
  connectOrCreate?: Prisma.ApiKeyCreateOrConnectWithoutRateLimitsInput;
  connect?: Prisma.ApiKeyWhereUniqueInput;
};

export type ApiKeyUpdateOneRequiredWithoutRateLimitsNestedInput = {
  create?: Prisma.XOR<
    Prisma.ApiKeyCreateWithoutRateLimitsInput,
    Prisma.ApiKeyUncheckedCreateWithoutRateLimitsInput
  >;
  connectOrCreate?: Prisma.ApiKeyCreateOrConnectWithoutRateLimitsInput;
  upsert?: Prisma.ApiKeyUpsertWithoutRateLimitsInput;
  connect?: Prisma.ApiKeyWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.ApiKeyUpdateToOneWithWhereWithoutRateLimitsInput,
      Prisma.ApiKeyUpdateWithoutRateLimitsInput
    >,
    Prisma.ApiKeyUncheckedUpdateWithoutRateLimitsInput
  >;
};

export type ApiKeyCreateNestedManyWithoutAppInput = {
  create?:
    | Prisma.XOR<Prisma.ApiKeyCreateWithoutAppInput, Prisma.ApiKeyUncheckedCreateWithoutAppInput>
    | Prisma.ApiKeyCreateWithoutAppInput[]
    | Prisma.ApiKeyUncheckedCreateWithoutAppInput[];
  connectOrCreate?:
    | Prisma.ApiKeyCreateOrConnectWithoutAppInput
    | Prisma.ApiKeyCreateOrConnectWithoutAppInput[];
  createMany?: Prisma.ApiKeyCreateManyAppInputEnvelope;
  connect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
};

export type ApiKeyUncheckedCreateNestedManyWithoutAppInput = {
  create?:
    | Prisma.XOR<Prisma.ApiKeyCreateWithoutAppInput, Prisma.ApiKeyUncheckedCreateWithoutAppInput>
    | Prisma.ApiKeyCreateWithoutAppInput[]
    | Prisma.ApiKeyUncheckedCreateWithoutAppInput[];
  connectOrCreate?:
    | Prisma.ApiKeyCreateOrConnectWithoutAppInput
    | Prisma.ApiKeyCreateOrConnectWithoutAppInput[];
  createMany?: Prisma.ApiKeyCreateManyAppInputEnvelope;
  connect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
};

export type ApiKeyUpdateManyWithoutAppNestedInput = {
  create?:
    | Prisma.XOR<Prisma.ApiKeyCreateWithoutAppInput, Prisma.ApiKeyUncheckedCreateWithoutAppInput>
    | Prisma.ApiKeyCreateWithoutAppInput[]
    | Prisma.ApiKeyUncheckedCreateWithoutAppInput[];
  connectOrCreate?:
    | Prisma.ApiKeyCreateOrConnectWithoutAppInput
    | Prisma.ApiKeyCreateOrConnectWithoutAppInput[];
  upsert?:
    | Prisma.ApiKeyUpsertWithWhereUniqueWithoutAppInput
    | Prisma.ApiKeyUpsertWithWhereUniqueWithoutAppInput[];
  createMany?: Prisma.ApiKeyCreateManyAppInputEnvelope;
  set?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  disconnect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  delete?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  connect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  update?:
    | Prisma.ApiKeyUpdateWithWhereUniqueWithoutAppInput
    | Prisma.ApiKeyUpdateWithWhereUniqueWithoutAppInput[];
  updateMany?:
    | Prisma.ApiKeyUpdateManyWithWhereWithoutAppInput
    | Prisma.ApiKeyUpdateManyWithWhereWithoutAppInput[];
  deleteMany?: Prisma.ApiKeyScalarWhereInput | Prisma.ApiKeyScalarWhereInput[];
};

export type ApiKeyUncheckedUpdateManyWithoutAppNestedInput = {
  create?:
    | Prisma.XOR<Prisma.ApiKeyCreateWithoutAppInput, Prisma.ApiKeyUncheckedCreateWithoutAppInput>
    | Prisma.ApiKeyCreateWithoutAppInput[]
    | Prisma.ApiKeyUncheckedCreateWithoutAppInput[];
  connectOrCreate?:
    | Prisma.ApiKeyCreateOrConnectWithoutAppInput
    | Prisma.ApiKeyCreateOrConnectWithoutAppInput[];
  upsert?:
    | Prisma.ApiKeyUpsertWithWhereUniqueWithoutAppInput
    | Prisma.ApiKeyUpsertWithWhereUniqueWithoutAppInput[];
  createMany?: Prisma.ApiKeyCreateManyAppInputEnvelope;
  set?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  disconnect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  delete?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  connect?: Prisma.ApiKeyWhereUniqueInput | Prisma.ApiKeyWhereUniqueInput[];
  update?:
    | Prisma.ApiKeyUpdateWithWhereUniqueWithoutAppInput
    | Prisma.ApiKeyUpdateWithWhereUniqueWithoutAppInput[];
  updateMany?:
    | Prisma.ApiKeyUpdateManyWithWhereWithoutAppInput
    | Prisma.ApiKeyUpdateManyWithWhereWithoutAppInput[];
  deleteMany?: Prisma.ApiKeyScalarWhereInput | Prisma.ApiKeyScalarWhereInput[];
};

export type ApiKeyCreateWithoutUserInput = {
  id?: string;
  note?: string | null;
  createdAt?: Date | string;
  expiresAt?: Date | string | null;
  lastUsedAt?: Date | string | null;
  hashedKey: string;
  team?: Prisma.TeamCreateNestedOneWithoutApiKeysInput;
  app?: Prisma.AppCreateNestedOneWithoutApiKeyInput;
  rateLimits?: Prisma.RateLimitCreateNestedManyWithoutApiKeyInput;
};

export type ApiKeyUncheckedCreateWithoutUserInput = {
  id?: string;
  teamId?: number | null;
  note?: string | null;
  createdAt?: Date | string;
  expiresAt?: Date | string | null;
  lastUsedAt?: Date | string | null;
  hashedKey: string;
  appId?: string | null;
  rateLimits?: Prisma.RateLimitUncheckedCreateNestedManyWithoutApiKeyInput;
};

export type ApiKeyCreateOrConnectWithoutUserInput = {
  where: Prisma.ApiKeyWhereUniqueInput;
  create: Prisma.XOR<Prisma.ApiKeyCreateWithoutUserInput, Prisma.ApiKeyUncheckedCreateWithoutUserInput>;
};

export type ApiKeyCreateManyUserInputEnvelope = {
  data: Prisma.ApiKeyCreateManyUserInput | Prisma.ApiKeyCreateManyUserInput[];
  skipDuplicates?: boolean;
};

export type ApiKeyUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.ApiKeyWhereUniqueInput;
  update: Prisma.XOR<Prisma.ApiKeyUpdateWithoutUserInput, Prisma.ApiKeyUncheckedUpdateWithoutUserInput>;
  create: Prisma.XOR<Prisma.ApiKeyCreateWithoutUserInput, Prisma.ApiKeyUncheckedCreateWithoutUserInput>;
};

export type ApiKeyUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.ApiKeyWhereUniqueInput;
  data: Prisma.XOR<Prisma.ApiKeyUpdateWithoutUserInput, Prisma.ApiKeyUncheckedUpdateWithoutUserInput>;
};

export type ApiKeyUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.ApiKeyScalarWhereInput;
  data: Prisma.XOR<Prisma.ApiKeyUpdateManyMutationInput, Prisma.ApiKeyUncheckedUpdateManyWithoutUserInput>;
};

export type ApiKeyScalarWhereInput = {
  AND?: Prisma.ApiKeyScalarWhereInput | Prisma.ApiKeyScalarWhereInput[];
  OR?: Prisma.ApiKeyScalarWhereInput[];
  NOT?: Prisma.ApiKeyScalarWhereInput | Prisma.ApiKeyScalarWhereInput[];
  id?: Prisma.StringFilter<"ApiKey"> | string;
  userId?: Prisma.IntFilter<"ApiKey"> | number;
  teamId?: Prisma.IntNullableFilter<"ApiKey"> | number | null;
  note?: Prisma.StringNullableFilter<"ApiKey"> | string | null;
  createdAt?: Prisma.DateTimeFilter<"ApiKey"> | Date | string;
  expiresAt?: Prisma.DateTimeNullableFilter<"ApiKey"> | Date | string | null;
  lastUsedAt?: Prisma.DateTimeNullableFilter<"ApiKey"> | Date | string | null;
  hashedKey?: Prisma.StringFilter<"ApiKey"> | string;
  appId?: Prisma.StringNullableFilter<"ApiKey"> | string | null;
};

export type ApiKeyCreateWithoutTeamInput = {
  id?: string;
  note?: string | null;
  createdAt?: Date | string;
  expiresAt?: Date | string | null;
  lastUsedAt?: Date | string | null;
  hashedKey: string;
  user?: Prisma.UserCreateNestedOneWithoutApiKeysInput;
  app?: Prisma.AppCreateNestedOneWithoutApiKeyInput;
  rateLimits?: Prisma.RateLimitCreateNestedManyWithoutApiKeyInput;
};

export type ApiKeyUncheckedCreateWithoutTeamInput = {
  id?: string;
  userId: number;
  note?: string | null;
  createdAt?: Date | string;
  expiresAt?: Date | string | null;
  lastUsedAt?: Date | string | null;
  hashedKey: string;
  appId?: string | null;
  rateLimits?: Prisma.RateLimitUncheckedCreateNestedManyWithoutApiKeyInput;
};

export type ApiKeyCreateOrConnectWithoutTeamInput = {
  where: Prisma.ApiKeyWhereUniqueInput;
  create: Prisma.XOR<Prisma.ApiKeyCreateWithoutTeamInput, Prisma.ApiKeyUncheckedCreateWithoutTeamInput>;
};

export type ApiKeyCreateManyTeamInputEnvelope = {
  data: Prisma.ApiKeyCreateManyTeamInput | Prisma.ApiKeyCreateManyTeamInput[];
  skipDuplicates?: boolean;
};

export type ApiKeyUpsertWithWhereUniqueWithoutTeamInput = {
  where: Prisma.ApiKeyWhereUniqueInput;
  update: Prisma.XOR<Prisma.ApiKeyUpdateWithoutTeamInput, Prisma.ApiKeyUncheckedUpdateWithoutTeamInput>;
  create: Prisma.XOR<Prisma.ApiKeyCreateWithoutTeamInput, Prisma.ApiKeyUncheckedCreateWithoutTeamInput>;
};

export type ApiKeyUpdateWithWhereUniqueWithoutTeamInput = {
  where: Prisma.ApiKeyWhereUniqueInput;
  data: Prisma.XOR<Prisma.ApiKeyUpdateWithoutTeamInput, Prisma.ApiKeyUncheckedUpdateWithoutTeamInput>;
};

export type ApiKeyUpdateManyWithWhereWithoutTeamInput = {
  where: Prisma.ApiKeyScalarWhereInput;
  data: Prisma.XOR<Prisma.ApiKeyUpdateManyMutationInput, Prisma.ApiKeyUncheckedUpdateManyWithoutTeamInput>;
};

export type ApiKeyCreateWithoutRateLimitsInput = {
  id?: string;
  note?: string | null;
  createdAt?: Date | string;
  expiresAt?: Date | string | null;
  lastUsedAt?: Date | string | null;
  hashedKey: string;
  user?: Prisma.UserCreateNestedOneWithoutApiKeysInput;
  team?: Prisma.TeamCreateNestedOneWithoutApiKeysInput;
  app?: Prisma.AppCreateNestedOneWithoutApiKeyInput;
};

export type ApiKeyUncheckedCreateWithoutRateLimitsInput = {
  id?: string;
  userId: number;
  teamId?: number | null;
  note?: string | null;
  createdAt?: Date | string;
  expiresAt?: Date | string | null;
  lastUsedAt?: Date | string | null;
  hashedKey: string;
  appId?: string | null;
};

export type ApiKeyCreateOrConnectWithoutRateLimitsInput = {
  where: Prisma.ApiKeyWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.ApiKeyCreateWithoutRateLimitsInput,
    Prisma.ApiKeyUncheckedCreateWithoutRateLimitsInput
  >;
};

export type ApiKeyUpsertWithoutRateLimitsInput = {
  update: Prisma.XOR<
    Prisma.ApiKeyUpdateWithoutRateLimitsInput,
    Prisma.ApiKeyUncheckedUpdateWithoutRateLimitsInput
  >;
  create: Prisma.XOR<
    Prisma.ApiKeyCreateWithoutRateLimitsInput,
    Prisma.ApiKeyUncheckedCreateWithoutRateLimitsInput
  >;
  where?: Prisma.ApiKeyWhereInput;
};

export type ApiKeyUpdateToOneWithWhereWithoutRateLimitsInput = {
  where?: Prisma.ApiKeyWhereInput;
  data: Prisma.XOR<
    Prisma.ApiKeyUpdateWithoutRateLimitsInput,
    Prisma.ApiKeyUncheckedUpdateWithoutRateLimitsInput
  >;
};

export type ApiKeyUpdateWithoutRateLimitsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  hashedKey?: Prisma.StringFieldUpdateOperationsInput | string;
  user?: Prisma.UserUpdateOneWithoutApiKeysNestedInput;
  team?: Prisma.TeamUpdateOneWithoutApiKeysNestedInput;
  app?: Prisma.AppUpdateOneWithoutApiKeyNestedInput;
};

export type ApiKeyUncheckedUpdateWithoutRateLimitsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  hashedKey?: Prisma.StringFieldUpdateOperationsInput | string;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type ApiKeyCreateWithoutAppInput = {
  id?: string;
  note?: string | null;
  createdAt?: Date | string;
  expiresAt?: Date | string | null;
  lastUsedAt?: Date | string | null;
  hashedKey: string;
  user?: Prisma.UserCreateNestedOneWithoutApiKeysInput;
  team?: Prisma.TeamCreateNestedOneWithoutApiKeysInput;
  rateLimits?: Prisma.RateLimitCreateNestedManyWithoutApiKeyInput;
};

export type ApiKeyUncheckedCreateWithoutAppInput = {
  id?: string;
  userId: number;
  teamId?: number | null;
  note?: string | null;
  createdAt?: Date | string;
  expiresAt?: Date | string | null;
  lastUsedAt?: Date | string | null;
  hashedKey: string;
  rateLimits?: Prisma.RateLimitUncheckedCreateNestedManyWithoutApiKeyInput;
};

export type ApiKeyCreateOrConnectWithoutAppInput = {
  where: Prisma.ApiKeyWhereUniqueInput;
  create: Prisma.XOR<Prisma.ApiKeyCreateWithoutAppInput, Prisma.ApiKeyUncheckedCreateWithoutAppInput>;
};

export type ApiKeyCreateManyAppInputEnvelope = {
  data: Prisma.ApiKeyCreateManyAppInput | Prisma.ApiKeyCreateManyAppInput[];
  skipDuplicates?: boolean;
};

export type ApiKeyUpsertWithWhereUniqueWithoutAppInput = {
  where: Prisma.ApiKeyWhereUniqueInput;
  update: Prisma.XOR<Prisma.ApiKeyUpdateWithoutAppInput, Prisma.ApiKeyUncheckedUpdateWithoutAppInput>;
  create: Prisma.XOR<Prisma.ApiKeyCreateWithoutAppInput, Prisma.ApiKeyUncheckedCreateWithoutAppInput>;
};

export type ApiKeyUpdateWithWhereUniqueWithoutAppInput = {
  where: Prisma.ApiKeyWhereUniqueInput;
  data: Prisma.XOR<Prisma.ApiKeyUpdateWithoutAppInput, Prisma.ApiKeyUncheckedUpdateWithoutAppInput>;
};

export type ApiKeyUpdateManyWithWhereWithoutAppInput = {
  where: Prisma.ApiKeyScalarWhereInput;
  data: Prisma.XOR<Prisma.ApiKeyUpdateManyMutationInput, Prisma.ApiKeyUncheckedUpdateManyWithoutAppInput>;
};

export type ApiKeyCreateManyUserInput = {
  id?: string;
  teamId?: number | null;
  note?: string | null;
  createdAt?: Date | string;
  expiresAt?: Date | string | null;
  lastUsedAt?: Date | string | null;
  hashedKey: string;
  appId?: string | null;
};

export type ApiKeyUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  hashedKey?: Prisma.StringFieldUpdateOperationsInput | string;
  team?: Prisma.TeamUpdateOneWithoutApiKeysNestedInput;
  app?: Prisma.AppUpdateOneWithoutApiKeyNestedInput;
  rateLimits?: Prisma.RateLimitUpdateManyWithoutApiKeyNestedInput;
};

export type ApiKeyUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  hashedKey?: Prisma.StringFieldUpdateOperationsInput | string;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  rateLimits?: Prisma.RateLimitUncheckedUpdateManyWithoutApiKeyNestedInput;
};

export type ApiKeyUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  hashedKey?: Prisma.StringFieldUpdateOperationsInput | string;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type ApiKeyCreateManyTeamInput = {
  id?: string;
  userId: number;
  note?: string | null;
  createdAt?: Date | string;
  expiresAt?: Date | string | null;
  lastUsedAt?: Date | string | null;
  hashedKey: string;
  appId?: string | null;
};

export type ApiKeyUpdateWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  hashedKey?: Prisma.StringFieldUpdateOperationsInput | string;
  user?: Prisma.UserUpdateOneWithoutApiKeysNestedInput;
  app?: Prisma.AppUpdateOneWithoutApiKeyNestedInput;
  rateLimits?: Prisma.RateLimitUpdateManyWithoutApiKeyNestedInput;
};

export type ApiKeyUncheckedUpdateWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  hashedKey?: Prisma.StringFieldUpdateOperationsInput | string;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  rateLimits?: Prisma.RateLimitUncheckedUpdateManyWithoutApiKeyNestedInput;
};

export type ApiKeyUncheckedUpdateManyWithoutTeamInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  hashedKey?: Prisma.StringFieldUpdateOperationsInput | string;
  appId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type ApiKeyCreateManyAppInput = {
  id?: string;
  userId: number;
  teamId?: number | null;
  note?: string | null;
  createdAt?: Date | string;
  expiresAt?: Date | string | null;
  lastUsedAt?: Date | string | null;
  hashedKey: string;
};

export type ApiKeyUpdateWithoutAppInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  hashedKey?: Prisma.StringFieldUpdateOperationsInput | string;
  user?: Prisma.UserUpdateOneWithoutApiKeysNestedInput;
  team?: Prisma.TeamUpdateOneWithoutApiKeysNestedInput;
  rateLimits?: Prisma.RateLimitUpdateManyWithoutApiKeyNestedInput;
};

export type ApiKeyUncheckedUpdateWithoutAppInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  hashedKey?: Prisma.StringFieldUpdateOperationsInput | string;
  rateLimits?: Prisma.RateLimitUncheckedUpdateManyWithoutApiKeyNestedInput;
};

export type ApiKeyUncheckedUpdateManyWithoutAppInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  userId?: Prisma.IntFieldUpdateOperationsInput | number;
  teamId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  note?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  lastUsedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  hashedKey?: Prisma.StringFieldUpdateOperationsInput | string;
};

/**
 * Count Type ApiKeyCountOutputType
 */

export type ApiKeyCountOutputType = {
  rateLimits: number;
};

export type ApiKeyCountOutputTypeSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  rateLimits?: boolean | ApiKeyCountOutputTypeCountRateLimitsArgs;
};

/**
 * ApiKeyCountOutputType without action
 */
export type ApiKeyCountOutputTypeDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the ApiKeyCountOutputType
   */
  select?: Prisma.ApiKeyCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * ApiKeyCountOutputType without action
 */
export type ApiKeyCountOutputTypeCountRateLimitsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.RateLimitWhereInput;
};

export type ApiKeySelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    userId?: boolean;
    teamId?: boolean;
    note?: boolean;
    createdAt?: boolean;
    expiresAt?: boolean;
    lastUsedAt?: boolean;
    hashedKey?: boolean;
    appId?: boolean;
    user?: boolean | Prisma.ApiKey$userArgs<ExtArgs>;
    team?: boolean | Prisma.ApiKey$teamArgs<ExtArgs>;
    app?: boolean | Prisma.ApiKey$appArgs<ExtArgs>;
    rateLimits?: boolean | Prisma.ApiKey$rateLimitsArgs<ExtArgs>;
    _count?: boolean | Prisma.ApiKeyCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["apiKey"]
>;

export type ApiKeySelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    userId?: boolean;
    teamId?: boolean;
    note?: boolean;
    createdAt?: boolean;
    expiresAt?: boolean;
    lastUsedAt?: boolean;
    hashedKey?: boolean;
    appId?: boolean;
    user?: boolean | Prisma.ApiKey$userArgs<ExtArgs>;
    team?: boolean | Prisma.ApiKey$teamArgs<ExtArgs>;
    app?: boolean | Prisma.ApiKey$appArgs<ExtArgs>;
  },
  ExtArgs["result"]["apiKey"]
>;

export type ApiKeySelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    userId?: boolean;
    teamId?: boolean;
    note?: boolean;
    createdAt?: boolean;
    expiresAt?: boolean;
    lastUsedAt?: boolean;
    hashedKey?: boolean;
    appId?: boolean;
    user?: boolean | Prisma.ApiKey$userArgs<ExtArgs>;
    team?: boolean | Prisma.ApiKey$teamArgs<ExtArgs>;
    app?: boolean | Prisma.ApiKey$appArgs<ExtArgs>;
  },
  ExtArgs["result"]["apiKey"]
>;

export type ApiKeySelectScalar = {
  id?: boolean;
  userId?: boolean;
  teamId?: boolean;
  note?: boolean;
  createdAt?: boolean;
  expiresAt?: boolean;
  lastUsedAt?: boolean;
  hashedKey?: boolean;
  appId?: boolean;
};

export type ApiKeyOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  "id" | "userId" | "teamId" | "note" | "createdAt" | "expiresAt" | "lastUsedAt" | "hashedKey" | "appId",
  ExtArgs["result"]["apiKey"]
>;
export type ApiKeyInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.ApiKey$userArgs<ExtArgs>;
  team?: boolean | Prisma.ApiKey$teamArgs<ExtArgs>;
  app?: boolean | Prisma.ApiKey$appArgs<ExtArgs>;
  rateLimits?: boolean | Prisma.ApiKey$rateLimitsArgs<ExtArgs>;
  _count?: boolean | Prisma.ApiKeyCountOutputTypeDefaultArgs<ExtArgs>;
};
export type ApiKeyIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.ApiKey$userArgs<ExtArgs>;
  team?: boolean | Prisma.ApiKey$teamArgs<ExtArgs>;
  app?: boolean | Prisma.ApiKey$appArgs<ExtArgs>;
};
export type ApiKeyIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  user?: boolean | Prisma.ApiKey$userArgs<ExtArgs>;
  team?: boolean | Prisma.ApiKey$teamArgs<ExtArgs>;
  app?: boolean | Prisma.ApiKey$appArgs<ExtArgs>;
};

export type $ApiKeyPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "ApiKey";
  objects: {
    user: Prisma.$UserPayload<ExtArgs> | null;
    team: Prisma.$TeamPayload<ExtArgs> | null;
    app: Prisma.$AppPayload<ExtArgs> | null;
    rateLimits: Prisma.$RateLimitPayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      userId: number;
      teamId: number | null;
      note: string | null;
      createdAt: Date;
      expiresAt: Date | null;
      lastUsedAt: Date | null;
      hashedKey: string;
      appId: string | null;
    },
    ExtArgs["result"]["apiKey"]
  >;
  composites: {};
};

export type ApiKeyGetPayload<S extends boolean | null | undefined | ApiKeyDefaultArgs> =
  runtime.Types.Result.GetResult<Prisma.$ApiKeyPayload, S>;

export type ApiKeyCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<ApiKeyFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: ApiKeyCountAggregateInputType | true;
};

export interface ApiKeyDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>["model"]["ApiKey"]; meta: { name: "ApiKey" } };
  /**
   * Find zero or one ApiKey that matches the filter.
   * @param {ApiKeyFindUniqueArgs} args - Arguments to find a ApiKey
   * @example
   * // Get one ApiKey
   * const apiKey = await prisma.apiKey.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ApiKeyFindUniqueArgs>(
    args: Prisma.SelectSubset<T, ApiKeyFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__ApiKeyClient<
    runtime.Types.Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one ApiKey that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ApiKeyFindUniqueOrThrowArgs} args - Arguments to find a ApiKey
   * @example
   * // Get one ApiKey
   * const apiKey = await prisma.apiKey.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ApiKeyFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, ApiKeyFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__ApiKeyClient<
    runtime.Types.Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first ApiKey that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ApiKeyFindFirstArgs} args - Arguments to find a ApiKey
   * @example
   * // Get one ApiKey
   * const apiKey = await prisma.apiKey.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ApiKeyFindFirstArgs>(
    args?: Prisma.SelectSubset<T, ApiKeyFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__ApiKeyClient<
    runtime.Types.Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first ApiKey that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ApiKeyFindFirstOrThrowArgs} args - Arguments to find a ApiKey
   * @example
   * // Get one ApiKey
   * const apiKey = await prisma.apiKey.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ApiKeyFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, ApiKeyFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__ApiKeyClient<
    runtime.Types.Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more ApiKeys that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ApiKeyFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ApiKeys
   * const apiKeys = await prisma.apiKey.findMany()
   *
   * // Get first 10 ApiKeys
   * const apiKeys = await prisma.apiKey.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const apiKeyWithIdOnly = await prisma.apiKey.findMany({ select: { id: true } })
   *
   */
  findMany<T extends ApiKeyFindManyArgs>(
    args?: Prisma.SelectSubset<T, ApiKeyFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>
  >;

  /**
   * Create a ApiKey.
   * @param {ApiKeyCreateArgs} args - Arguments to create a ApiKey.
   * @example
   * // Create one ApiKey
   * const ApiKey = await prisma.apiKey.create({
   *   data: {
   *     // ... data to create a ApiKey
   *   }
   * })
   *
   */
  create<T extends ApiKeyCreateArgs>(
    args: Prisma.SelectSubset<T, ApiKeyCreateArgs<ExtArgs>>
  ): Prisma.Prisma__ApiKeyClient<
    runtime.Types.Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "create", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many ApiKeys.
   * @param {ApiKeyCreateManyArgs} args - Arguments to create many ApiKeys.
   * @example
   * // Create many ApiKeys
   * const apiKey = await prisma.apiKey.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends ApiKeyCreateManyArgs>(
    args?: Prisma.SelectSubset<T, ApiKeyCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many ApiKeys and returns the data saved in the database.
   * @param {ApiKeyCreateManyAndReturnArgs} args - Arguments to create many ApiKeys.
   * @example
   * // Create many ApiKeys
   * const apiKey = await prisma.apiKey.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many ApiKeys and only return the `id`
   * const apiKeyWithIdOnly = await prisma.apiKey.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends ApiKeyCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, ApiKeyCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$ApiKeyPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a ApiKey.
   * @param {ApiKeyDeleteArgs} args - Arguments to delete one ApiKey.
   * @example
   * // Delete one ApiKey
   * const ApiKey = await prisma.apiKey.delete({
   *   where: {
   *     // ... filter to delete one ApiKey
   *   }
   * })
   *
   */
  delete<T extends ApiKeyDeleteArgs>(
    args: Prisma.SelectSubset<T, ApiKeyDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__ApiKeyClient<
    runtime.Types.Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one ApiKey.
   * @param {ApiKeyUpdateArgs} args - Arguments to update one ApiKey.
   * @example
   * // Update one ApiKey
   * const apiKey = await prisma.apiKey.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends ApiKeyUpdateArgs>(
    args: Prisma.SelectSubset<T, ApiKeyUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__ApiKeyClient<
    runtime.Types.Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "update", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more ApiKeys.
   * @param {ApiKeyDeleteManyArgs} args - Arguments to filter ApiKeys to delete.
   * @example
   * // Delete a few ApiKeys
   * const { count } = await prisma.apiKey.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends ApiKeyDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, ApiKeyDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more ApiKeys.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ApiKeyUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ApiKeys
   * const apiKey = await prisma.apiKey.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends ApiKeyUpdateManyArgs>(
    args: Prisma.SelectSubset<T, ApiKeyUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more ApiKeys and returns the data updated in the database.
   * @param {ApiKeyUpdateManyAndReturnArgs} args - Arguments to update many ApiKeys.
   * @example
   * // Update many ApiKeys
   * const apiKey = await prisma.apiKey.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more ApiKeys and only return the `id`
   * const apiKeyWithIdOnly = await prisma.apiKey.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends ApiKeyUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, ApiKeyUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$ApiKeyPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one ApiKey.
   * @param {ApiKeyUpsertArgs} args - Arguments to update or create a ApiKey.
   * @example
   * // Update or create a ApiKey
   * const apiKey = await prisma.apiKey.upsert({
   *   create: {
   *     // ... data to create a ApiKey
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ApiKey we want to update
   *   }
   * })
   */
  upsert<T extends ApiKeyUpsertArgs>(
    args: Prisma.SelectSubset<T, ApiKeyUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__ApiKeyClient<
    runtime.Types.Result.GetResult<Prisma.$ApiKeyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of ApiKeys.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ApiKeyCountArgs} args - Arguments to filter ApiKeys to count.
   * @example
   * // Count the number of ApiKeys
   * const count = await prisma.apiKey.count({
   *   where: {
   *     // ... the filter for the ApiKeys we want to count
   *   }
   * })
   **/
  count<T extends ApiKeyCountArgs>(
    args?: Prisma.Subset<T, ApiKeyCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], ApiKeyCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a ApiKey.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ApiKeyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends ApiKeyAggregateArgs>(
    args: Prisma.Subset<T, ApiKeyAggregateArgs>
  ): Prisma.PrismaPromise<GetApiKeyAggregateType<T>>;

  /**
   * Group by ApiKey.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ApiKeyGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends ApiKeyGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ApiKeyGroupByArgs["orderBy"] }
      : { orderBy?: ApiKeyGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, ApiKeyGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetApiKeyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the ApiKey model
   */
  readonly fields: ApiKeyFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ApiKey.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ApiKeyClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  user<T extends Prisma.ApiKey$userArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.ApiKey$userArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  team<T extends Prisma.ApiKey$teamArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.ApiKey$teamArgs<ExtArgs>>
  ): Prisma.Prisma__TeamClient<
    runtime.Types.Result.GetResult<
      Prisma.$TeamPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  app<T extends Prisma.ApiKey$appArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.ApiKey$appArgs<ExtArgs>>
  ): Prisma.Prisma__AppClient<
    runtime.Types.Result.GetResult<
      Prisma.$AppPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  rateLimits<T extends Prisma.ApiKey$rateLimitsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.ApiKey$rateLimitsArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$RateLimitPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the ApiKey model
 */
export interface ApiKeyFieldRefs {
  readonly id: Prisma.FieldRef<"ApiKey", "String">;
  readonly userId: Prisma.FieldRef<"ApiKey", "Int">;
  readonly teamId: Prisma.FieldRef<"ApiKey", "Int">;
  readonly note: Prisma.FieldRef<"ApiKey", "String">;
  readonly createdAt: Prisma.FieldRef<"ApiKey", "DateTime">;
  readonly expiresAt: Prisma.FieldRef<"ApiKey", "DateTime">;
  readonly lastUsedAt: Prisma.FieldRef<"ApiKey", "DateTime">;
  readonly hashedKey: Prisma.FieldRef<"ApiKey", "String">;
  readonly appId: Prisma.FieldRef<"ApiKey", "String">;
}

// Custom InputTypes
/**
 * ApiKey findUnique
 */
export type ApiKeyFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the ApiKey
   */
  select?: Prisma.ApiKeySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ApiKey
   */
  omit?: Prisma.ApiKeyOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApiKeyInclude<ExtArgs> | null;
  /**
   * Filter, which ApiKey to fetch.
   */
  where: Prisma.ApiKeyWhereUniqueInput;
};

/**
 * ApiKey findUniqueOrThrow
 */
export type ApiKeyFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the ApiKey
   */
  select?: Prisma.ApiKeySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ApiKey
   */
  omit?: Prisma.ApiKeyOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApiKeyInclude<ExtArgs> | null;
  /**
   * Filter, which ApiKey to fetch.
   */
  where: Prisma.ApiKeyWhereUniqueInput;
};

/**
 * ApiKey findFirst
 */
export type ApiKeyFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the ApiKey
   */
  select?: Prisma.ApiKeySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ApiKey
   */
  omit?: Prisma.ApiKeyOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApiKeyInclude<ExtArgs> | null;
  /**
   * Filter, which ApiKey to fetch.
   */
  where?: Prisma.ApiKeyWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of ApiKeys to fetch.
   */
  orderBy?: Prisma.ApiKeyOrderByWithRelationInput | Prisma.ApiKeyOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for ApiKeys.
   */
  cursor?: Prisma.ApiKeyWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` ApiKeys from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` ApiKeys.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of ApiKeys.
   */
  distinct?: Prisma.ApiKeyScalarFieldEnum | Prisma.ApiKeyScalarFieldEnum[];
};

/**
 * ApiKey findFirstOrThrow
 */
export type ApiKeyFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the ApiKey
   */
  select?: Prisma.ApiKeySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ApiKey
   */
  omit?: Prisma.ApiKeyOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApiKeyInclude<ExtArgs> | null;
  /**
   * Filter, which ApiKey to fetch.
   */
  where?: Prisma.ApiKeyWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of ApiKeys to fetch.
   */
  orderBy?: Prisma.ApiKeyOrderByWithRelationInput | Prisma.ApiKeyOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for ApiKeys.
   */
  cursor?: Prisma.ApiKeyWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` ApiKeys from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` ApiKeys.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of ApiKeys.
   */
  distinct?: Prisma.ApiKeyScalarFieldEnum | Prisma.ApiKeyScalarFieldEnum[];
};

/**
 * ApiKey findMany
 */
export type ApiKeyFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the ApiKey
   */
  select?: Prisma.ApiKeySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ApiKey
   */
  omit?: Prisma.ApiKeyOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApiKeyInclude<ExtArgs> | null;
  /**
   * Filter, which ApiKeys to fetch.
   */
  where?: Prisma.ApiKeyWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of ApiKeys to fetch.
   */
  orderBy?: Prisma.ApiKeyOrderByWithRelationInput | Prisma.ApiKeyOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing ApiKeys.
   */
  cursor?: Prisma.ApiKeyWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` ApiKeys from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` ApiKeys.
   */
  skip?: number;
  distinct?: Prisma.ApiKeyScalarFieldEnum | Prisma.ApiKeyScalarFieldEnum[];
};

/**
 * ApiKey create
 */
export type ApiKeyCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the ApiKey
   */
  select?: Prisma.ApiKeySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ApiKey
   */
  omit?: Prisma.ApiKeyOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApiKeyInclude<ExtArgs> | null;
  /**
   * The data needed to create a ApiKey.
   */
  data: Prisma.XOR<Prisma.ApiKeyCreateInput, Prisma.ApiKeyUncheckedCreateInput>;
};

/**
 * ApiKey createMany
 */
export type ApiKeyCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many ApiKeys.
   */
  data: Prisma.ApiKeyCreateManyInput | Prisma.ApiKeyCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * ApiKey createManyAndReturn
 */
export type ApiKeyCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the ApiKey
   */
  select?: Prisma.ApiKeySelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the ApiKey
   */
  omit?: Prisma.ApiKeyOmit<ExtArgs> | null;
  /**
   * The data used to create many ApiKeys.
   */
  data: Prisma.ApiKeyCreateManyInput | Prisma.ApiKeyCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApiKeyIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * ApiKey update
 */
export type ApiKeyUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the ApiKey
   */
  select?: Prisma.ApiKeySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ApiKey
   */
  omit?: Prisma.ApiKeyOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApiKeyInclude<ExtArgs> | null;
  /**
   * The data needed to update a ApiKey.
   */
  data: Prisma.XOR<Prisma.ApiKeyUpdateInput, Prisma.ApiKeyUncheckedUpdateInput>;
  /**
   * Choose, which ApiKey to update.
   */
  where: Prisma.ApiKeyWhereUniqueInput;
};

/**
 * ApiKey updateMany
 */
export type ApiKeyUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update ApiKeys.
   */
  data: Prisma.XOR<Prisma.ApiKeyUpdateManyMutationInput, Prisma.ApiKeyUncheckedUpdateManyInput>;
  /**
   * Filter which ApiKeys to update
   */
  where?: Prisma.ApiKeyWhereInput;
  /**
   * Limit how many ApiKeys to update.
   */
  limit?: number;
};

/**
 * ApiKey updateManyAndReturn
 */
export type ApiKeyUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the ApiKey
   */
  select?: Prisma.ApiKeySelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the ApiKey
   */
  omit?: Prisma.ApiKeyOmit<ExtArgs> | null;
  /**
   * The data used to update ApiKeys.
   */
  data: Prisma.XOR<Prisma.ApiKeyUpdateManyMutationInput, Prisma.ApiKeyUncheckedUpdateManyInput>;
  /**
   * Filter which ApiKeys to update
   */
  where?: Prisma.ApiKeyWhereInput;
  /**
   * Limit how many ApiKeys to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApiKeyIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * ApiKey upsert
 */
export type ApiKeyUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the ApiKey
   */
  select?: Prisma.ApiKeySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ApiKey
   */
  omit?: Prisma.ApiKeyOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApiKeyInclude<ExtArgs> | null;
  /**
   * The filter to search for the ApiKey to update in case it exists.
   */
  where: Prisma.ApiKeyWhereUniqueInput;
  /**
   * In case the ApiKey found by the `where` argument doesn't exist, create a new ApiKey with this data.
   */
  create: Prisma.XOR<Prisma.ApiKeyCreateInput, Prisma.ApiKeyUncheckedCreateInput>;
  /**
   * In case the ApiKey was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ApiKeyUpdateInput, Prisma.ApiKeyUncheckedUpdateInput>;
};

/**
 * ApiKey delete
 */
export type ApiKeyDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the ApiKey
   */
  select?: Prisma.ApiKeySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ApiKey
   */
  omit?: Prisma.ApiKeyOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApiKeyInclude<ExtArgs> | null;
  /**
   * Filter which ApiKey to delete.
   */
  where: Prisma.ApiKeyWhereUniqueInput;
};

/**
 * ApiKey deleteMany
 */
export type ApiKeyDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which ApiKeys to delete
   */
  where?: Prisma.ApiKeyWhereInput;
  /**
   * Limit how many ApiKeys to delete.
   */
  limit?: number;
};

/**
 * ApiKey.user
 */
export type ApiKey$userArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  where?: Prisma.UserWhereInput;
};

/**
 * ApiKey.team
 */
export type ApiKey$teamArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Team
   */
  select?: Prisma.TeamSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Team
   */
  omit?: Prisma.TeamOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TeamInclude<ExtArgs> | null;
  where?: Prisma.TeamWhereInput;
};

/**
 * ApiKey.app
 */
export type ApiKey$appArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the App
   */
  select?: Prisma.AppSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the App
   */
  omit?: Prisma.AppOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AppInclude<ExtArgs> | null;
  where?: Prisma.AppWhereInput;
};

/**
 * ApiKey.rateLimits
 */
export type ApiKey$rateLimitsArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the RateLimit
   */
  select?: Prisma.RateLimitSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the RateLimit
   */
  omit?: Prisma.RateLimitOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RateLimitInclude<ExtArgs> | null;
  where?: Prisma.RateLimitWhereInput;
  orderBy?: Prisma.RateLimitOrderByWithRelationInput | Prisma.RateLimitOrderByWithRelationInput[];
  cursor?: Prisma.RateLimitWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.RateLimitScalarFieldEnum | Prisma.RateLimitScalarFieldEnum[];
};

/**
 * ApiKey without action
 */
export type ApiKeyDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the ApiKey
   */
  select?: Prisma.ApiKeySelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ApiKey
   */
  omit?: Prisma.ApiKeyOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ApiKeyInclude<ExtArgs> | null;
};
