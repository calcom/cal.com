/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `EventTypeTranslation` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model EventTypeTranslation
 *
 */
export type EventTypeTranslationModel =
  runtime.Types.Result.DefaultSelection<Prisma.$EventTypeTranslationPayload>;

export type AggregateEventTypeTranslation = {
  _count: EventTypeTranslationCountAggregateOutputType | null;
  _avg: EventTypeTranslationAvgAggregateOutputType | null;
  _sum: EventTypeTranslationSumAggregateOutputType | null;
  _min: EventTypeTranslationMinAggregateOutputType | null;
  _max: EventTypeTranslationMaxAggregateOutputType | null;
};

export type EventTypeTranslationAvgAggregateOutputType = {
  eventTypeId: number | null;
  createdBy: number | null;
  updatedBy: number | null;
};

export type EventTypeTranslationSumAggregateOutputType = {
  eventTypeId: number | null;
  createdBy: number | null;
  updatedBy: number | null;
};

export type EventTypeTranslationMinAggregateOutputType = {
  uid: string | null;
  eventTypeId: number | null;
  field: $Enums.EventTypeAutoTranslatedField | null;
  sourceLocale: string | null;
  targetLocale: string | null;
  translatedText: string | null;
  createdAt: Date | null;
  createdBy: number | null;
  updatedAt: Date | null;
  updatedBy: number | null;
};

export type EventTypeTranslationMaxAggregateOutputType = {
  uid: string | null;
  eventTypeId: number | null;
  field: $Enums.EventTypeAutoTranslatedField | null;
  sourceLocale: string | null;
  targetLocale: string | null;
  translatedText: string | null;
  createdAt: Date | null;
  createdBy: number | null;
  updatedAt: Date | null;
  updatedBy: number | null;
};

export type EventTypeTranslationCountAggregateOutputType = {
  uid: number;
  eventTypeId: number;
  field: number;
  sourceLocale: number;
  targetLocale: number;
  translatedText: number;
  createdAt: number;
  createdBy: number;
  updatedAt: number;
  updatedBy: number;
  _all: number;
};

export type EventTypeTranslationAvgAggregateInputType = {
  eventTypeId?: true;
  createdBy?: true;
  updatedBy?: true;
};

export type EventTypeTranslationSumAggregateInputType = {
  eventTypeId?: true;
  createdBy?: true;
  updatedBy?: true;
};

export type EventTypeTranslationMinAggregateInputType = {
  uid?: true;
  eventTypeId?: true;
  field?: true;
  sourceLocale?: true;
  targetLocale?: true;
  translatedText?: true;
  createdAt?: true;
  createdBy?: true;
  updatedAt?: true;
  updatedBy?: true;
};

export type EventTypeTranslationMaxAggregateInputType = {
  uid?: true;
  eventTypeId?: true;
  field?: true;
  sourceLocale?: true;
  targetLocale?: true;
  translatedText?: true;
  createdAt?: true;
  createdBy?: true;
  updatedAt?: true;
  updatedBy?: true;
};

export type EventTypeTranslationCountAggregateInputType = {
  uid?: true;
  eventTypeId?: true;
  field?: true;
  sourceLocale?: true;
  targetLocale?: true;
  translatedText?: true;
  createdAt?: true;
  createdBy?: true;
  updatedAt?: true;
  updatedBy?: true;
  _all?: true;
};

export type EventTypeTranslationAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which EventTypeTranslation to aggregate.
   */
  where?: Prisma.EventTypeTranslationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EventTypeTranslations to fetch.
   */
  orderBy?:
    | Prisma.EventTypeTranslationOrderByWithRelationInput
    | Prisma.EventTypeTranslationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.EventTypeTranslationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EventTypeTranslations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EventTypeTranslations.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned EventTypeTranslations
   **/
  _count?: true | EventTypeTranslationCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: EventTypeTranslationAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: EventTypeTranslationSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: EventTypeTranslationMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: EventTypeTranslationMaxAggregateInputType;
};

export type GetEventTypeTranslationAggregateType<T extends EventTypeTranslationAggregateArgs> = {
  [P in keyof T & keyof AggregateEventTypeTranslation]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateEventTypeTranslation[P]>
    : Prisma.GetScalarType<T[P], AggregateEventTypeTranslation[P]>;
};

export type EventTypeTranslationGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.EventTypeTranslationWhereInput;
  orderBy?:
    | Prisma.EventTypeTranslationOrderByWithAggregationInput
    | Prisma.EventTypeTranslationOrderByWithAggregationInput[];
  by: Prisma.EventTypeTranslationScalarFieldEnum[] | Prisma.EventTypeTranslationScalarFieldEnum;
  having?: Prisma.EventTypeTranslationScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: EventTypeTranslationCountAggregateInputType | true;
  _avg?: EventTypeTranslationAvgAggregateInputType;
  _sum?: EventTypeTranslationSumAggregateInputType;
  _min?: EventTypeTranslationMinAggregateInputType;
  _max?: EventTypeTranslationMaxAggregateInputType;
};

export type EventTypeTranslationGroupByOutputType = {
  uid: string;
  eventTypeId: number;
  field: $Enums.EventTypeAutoTranslatedField;
  sourceLocale: string;
  targetLocale: string;
  translatedText: string;
  createdAt: Date;
  createdBy: number;
  updatedAt: Date;
  updatedBy: number | null;
  _count: EventTypeTranslationCountAggregateOutputType | null;
  _avg: EventTypeTranslationAvgAggregateOutputType | null;
  _sum: EventTypeTranslationSumAggregateOutputType | null;
  _min: EventTypeTranslationMinAggregateOutputType | null;
  _max: EventTypeTranslationMaxAggregateOutputType | null;
};

type GetEventTypeTranslationGroupByPayload<T extends EventTypeTranslationGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<EventTypeTranslationGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof EventTypeTranslationGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], EventTypeTranslationGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], EventTypeTranslationGroupByOutputType[P]>;
    }
  >
>;

export type EventTypeTranslationWhereInput = {
  AND?: Prisma.EventTypeTranslationWhereInput | Prisma.EventTypeTranslationWhereInput[];
  OR?: Prisma.EventTypeTranslationWhereInput[];
  NOT?: Prisma.EventTypeTranslationWhereInput | Prisma.EventTypeTranslationWhereInput[];
  uid?: Prisma.StringFilter<"EventTypeTranslation"> | string;
  eventTypeId?: Prisma.IntFilter<"EventTypeTranslation"> | number;
  field?:
    | Prisma.EnumEventTypeAutoTranslatedFieldFilter<"EventTypeTranslation">
    | $Enums.EventTypeAutoTranslatedField;
  sourceLocale?: Prisma.StringFilter<"EventTypeTranslation"> | string;
  targetLocale?: Prisma.StringFilter<"EventTypeTranslation"> | string;
  translatedText?: Prisma.StringFilter<"EventTypeTranslation"> | string;
  createdAt?: Prisma.DateTimeFilter<"EventTypeTranslation"> | Date | string;
  createdBy?: Prisma.IntFilter<"EventTypeTranslation"> | number;
  updatedAt?: Prisma.DateTimeFilter<"EventTypeTranslation"> | Date | string;
  updatedBy?: Prisma.IntNullableFilter<"EventTypeTranslation"> | number | null;
  eventType?: Prisma.XOR<Prisma.EventTypeScalarRelationFilter, Prisma.EventTypeWhereInput>;
  creator?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
  updater?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null;
};

export type EventTypeTranslationOrderByWithRelationInput = {
  uid?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  field?: Prisma.SortOrder;
  sourceLocale?: Prisma.SortOrder;
  targetLocale?: Prisma.SortOrder;
  translatedText?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  updatedBy?: Prisma.SortOrderInput | Prisma.SortOrder;
  eventType?: Prisma.EventTypeOrderByWithRelationInput;
  creator?: Prisma.UserOrderByWithRelationInput;
  updater?: Prisma.UserOrderByWithRelationInput;
};

export type EventTypeTranslationWhereUniqueInput = Prisma.AtLeast<
  {
    uid?: string;
    eventTypeId_field_targetLocale?: Prisma.EventTypeTranslationEventTypeIdFieldTargetLocaleCompoundUniqueInput;
    AND?: Prisma.EventTypeTranslationWhereInput | Prisma.EventTypeTranslationWhereInput[];
    OR?: Prisma.EventTypeTranslationWhereInput[];
    NOT?: Prisma.EventTypeTranslationWhereInput | Prisma.EventTypeTranslationWhereInput[];
    eventTypeId?: Prisma.IntFilter<"EventTypeTranslation"> | number;
    field?:
      | Prisma.EnumEventTypeAutoTranslatedFieldFilter<"EventTypeTranslation">
      | $Enums.EventTypeAutoTranslatedField;
    sourceLocale?: Prisma.StringFilter<"EventTypeTranslation"> | string;
    targetLocale?: Prisma.StringFilter<"EventTypeTranslation"> | string;
    translatedText?: Prisma.StringFilter<"EventTypeTranslation"> | string;
    createdAt?: Prisma.DateTimeFilter<"EventTypeTranslation"> | Date | string;
    createdBy?: Prisma.IntFilter<"EventTypeTranslation"> | number;
    updatedAt?: Prisma.DateTimeFilter<"EventTypeTranslation"> | Date | string;
    updatedBy?: Prisma.IntNullableFilter<"EventTypeTranslation"> | number | null;
    eventType?: Prisma.XOR<Prisma.EventTypeScalarRelationFilter, Prisma.EventTypeWhereInput>;
    creator?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
    updater?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null;
  },
  "uid" | "eventTypeId_field_targetLocale"
>;

export type EventTypeTranslationOrderByWithAggregationInput = {
  uid?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  field?: Prisma.SortOrder;
  sourceLocale?: Prisma.SortOrder;
  targetLocale?: Prisma.SortOrder;
  translatedText?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  updatedBy?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.EventTypeTranslationCountOrderByAggregateInput;
  _avg?: Prisma.EventTypeTranslationAvgOrderByAggregateInput;
  _max?: Prisma.EventTypeTranslationMaxOrderByAggregateInput;
  _min?: Prisma.EventTypeTranslationMinOrderByAggregateInput;
  _sum?: Prisma.EventTypeTranslationSumOrderByAggregateInput;
};

export type EventTypeTranslationScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.EventTypeTranslationScalarWhereWithAggregatesInput
    | Prisma.EventTypeTranslationScalarWhereWithAggregatesInput[];
  OR?: Prisma.EventTypeTranslationScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.EventTypeTranslationScalarWhereWithAggregatesInput
    | Prisma.EventTypeTranslationScalarWhereWithAggregatesInput[];
  uid?: Prisma.StringWithAggregatesFilter<"EventTypeTranslation"> | string;
  eventTypeId?: Prisma.IntWithAggregatesFilter<"EventTypeTranslation"> | number;
  field?:
    | Prisma.EnumEventTypeAutoTranslatedFieldWithAggregatesFilter<"EventTypeTranslation">
    | $Enums.EventTypeAutoTranslatedField;
  sourceLocale?: Prisma.StringWithAggregatesFilter<"EventTypeTranslation"> | string;
  targetLocale?: Prisma.StringWithAggregatesFilter<"EventTypeTranslation"> | string;
  translatedText?: Prisma.StringWithAggregatesFilter<"EventTypeTranslation"> | string;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"EventTypeTranslation"> | Date | string;
  createdBy?: Prisma.IntWithAggregatesFilter<"EventTypeTranslation"> | number;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"EventTypeTranslation"> | Date | string;
  updatedBy?: Prisma.IntNullableWithAggregatesFilter<"EventTypeTranslation"> | number | null;
};

export type EventTypeTranslationCreateInput = {
  uid?: string;
  field: $Enums.EventTypeAutoTranslatedField;
  sourceLocale: string;
  targetLocale: string;
  translatedText: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  eventType: Prisma.EventTypeCreateNestedOneWithoutFieldTranslationsInput;
  creator: Prisma.UserCreateNestedOneWithoutCreatedTranslationsInput;
  updater?: Prisma.UserCreateNestedOneWithoutUpdatedTranslationsInput;
};

export type EventTypeTranslationUncheckedCreateInput = {
  uid?: string;
  eventTypeId: number;
  field: $Enums.EventTypeAutoTranslatedField;
  sourceLocale: string;
  targetLocale: string;
  translatedText: string;
  createdAt?: Date | string;
  createdBy: number;
  updatedAt?: Date | string;
  updatedBy?: number | null;
};

export type EventTypeTranslationUpdateInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string;
  field?:
    | Prisma.EnumEventTypeAutoTranslatedFieldFieldUpdateOperationsInput
    | $Enums.EventTypeAutoTranslatedField;
  sourceLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  targetLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  translatedText?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  eventType?: Prisma.EventTypeUpdateOneRequiredWithoutFieldTranslationsNestedInput;
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedTranslationsNestedInput;
  updater?: Prisma.UserUpdateOneWithoutUpdatedTranslationsNestedInput;
};

export type EventTypeTranslationUncheckedUpdateInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  field?:
    | Prisma.EnumEventTypeAutoTranslatedFieldFieldUpdateOperationsInput
    | $Enums.EventTypeAutoTranslatedField;
  sourceLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  targetLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  translatedText?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdBy?: Prisma.IntFieldUpdateOperationsInput | number;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedBy?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type EventTypeTranslationCreateManyInput = {
  uid?: string;
  eventTypeId: number;
  field: $Enums.EventTypeAutoTranslatedField;
  sourceLocale: string;
  targetLocale: string;
  translatedText: string;
  createdAt?: Date | string;
  createdBy: number;
  updatedAt?: Date | string;
  updatedBy?: number | null;
};

export type EventTypeTranslationUpdateManyMutationInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string;
  field?:
    | Prisma.EnumEventTypeAutoTranslatedFieldFieldUpdateOperationsInput
    | $Enums.EventTypeAutoTranslatedField;
  sourceLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  targetLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  translatedText?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type EventTypeTranslationUncheckedUpdateManyInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  field?:
    | Prisma.EnumEventTypeAutoTranslatedFieldFieldUpdateOperationsInput
    | $Enums.EventTypeAutoTranslatedField;
  sourceLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  targetLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  translatedText?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdBy?: Prisma.IntFieldUpdateOperationsInput | number;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedBy?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type EventTypeTranslationListRelationFilter = {
  every?: Prisma.EventTypeTranslationWhereInput;
  some?: Prisma.EventTypeTranslationWhereInput;
  none?: Prisma.EventTypeTranslationWhereInput;
};

export type EventTypeTranslationOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type EventTypeTranslationEventTypeIdFieldTargetLocaleCompoundUniqueInput = {
  eventTypeId: number;
  field: $Enums.EventTypeAutoTranslatedField;
  targetLocale: string;
};

export type EventTypeTranslationCountOrderByAggregateInput = {
  uid?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  field?: Prisma.SortOrder;
  sourceLocale?: Prisma.SortOrder;
  targetLocale?: Prisma.SortOrder;
  translatedText?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  updatedBy?: Prisma.SortOrder;
};

export type EventTypeTranslationAvgOrderByAggregateInput = {
  eventTypeId?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
  updatedBy?: Prisma.SortOrder;
};

export type EventTypeTranslationMaxOrderByAggregateInput = {
  uid?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  field?: Prisma.SortOrder;
  sourceLocale?: Prisma.SortOrder;
  targetLocale?: Prisma.SortOrder;
  translatedText?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  updatedBy?: Prisma.SortOrder;
};

export type EventTypeTranslationMinOrderByAggregateInput = {
  uid?: Prisma.SortOrder;
  eventTypeId?: Prisma.SortOrder;
  field?: Prisma.SortOrder;
  sourceLocale?: Prisma.SortOrder;
  targetLocale?: Prisma.SortOrder;
  translatedText?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  updatedBy?: Prisma.SortOrder;
};

export type EventTypeTranslationSumOrderByAggregateInput = {
  eventTypeId?: Prisma.SortOrder;
  createdBy?: Prisma.SortOrder;
  updatedBy?: Prisma.SortOrder;
};

export type EventTypeTranslationCreateNestedManyWithoutEventTypeInput = {
  create?:
    | Prisma.XOR<
        Prisma.EventTypeTranslationCreateWithoutEventTypeInput,
        Prisma.EventTypeTranslationUncheckedCreateWithoutEventTypeInput
      >
    | Prisma.EventTypeTranslationCreateWithoutEventTypeInput[]
    | Prisma.EventTypeTranslationUncheckedCreateWithoutEventTypeInput[];
  connectOrCreate?:
    | Prisma.EventTypeTranslationCreateOrConnectWithoutEventTypeInput
    | Prisma.EventTypeTranslationCreateOrConnectWithoutEventTypeInput[];
  createMany?: Prisma.EventTypeTranslationCreateManyEventTypeInputEnvelope;
  connect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
};

export type EventTypeTranslationUncheckedCreateNestedManyWithoutEventTypeInput = {
  create?:
    | Prisma.XOR<
        Prisma.EventTypeTranslationCreateWithoutEventTypeInput,
        Prisma.EventTypeTranslationUncheckedCreateWithoutEventTypeInput
      >
    | Prisma.EventTypeTranslationCreateWithoutEventTypeInput[]
    | Prisma.EventTypeTranslationUncheckedCreateWithoutEventTypeInput[];
  connectOrCreate?:
    | Prisma.EventTypeTranslationCreateOrConnectWithoutEventTypeInput
    | Prisma.EventTypeTranslationCreateOrConnectWithoutEventTypeInput[];
  createMany?: Prisma.EventTypeTranslationCreateManyEventTypeInputEnvelope;
  connect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
};

export type EventTypeTranslationUpdateManyWithoutEventTypeNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EventTypeTranslationCreateWithoutEventTypeInput,
        Prisma.EventTypeTranslationUncheckedCreateWithoutEventTypeInput
      >
    | Prisma.EventTypeTranslationCreateWithoutEventTypeInput[]
    | Prisma.EventTypeTranslationUncheckedCreateWithoutEventTypeInput[];
  connectOrCreate?:
    | Prisma.EventTypeTranslationCreateOrConnectWithoutEventTypeInput
    | Prisma.EventTypeTranslationCreateOrConnectWithoutEventTypeInput[];
  upsert?:
    | Prisma.EventTypeTranslationUpsertWithWhereUniqueWithoutEventTypeInput
    | Prisma.EventTypeTranslationUpsertWithWhereUniqueWithoutEventTypeInput[];
  createMany?: Prisma.EventTypeTranslationCreateManyEventTypeInputEnvelope;
  set?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  disconnect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  delete?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  connect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  update?:
    | Prisma.EventTypeTranslationUpdateWithWhereUniqueWithoutEventTypeInput
    | Prisma.EventTypeTranslationUpdateWithWhereUniqueWithoutEventTypeInput[];
  updateMany?:
    | Prisma.EventTypeTranslationUpdateManyWithWhereWithoutEventTypeInput
    | Prisma.EventTypeTranslationUpdateManyWithWhereWithoutEventTypeInput[];
  deleteMany?: Prisma.EventTypeTranslationScalarWhereInput | Prisma.EventTypeTranslationScalarWhereInput[];
};

export type EventTypeTranslationUncheckedUpdateManyWithoutEventTypeNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EventTypeTranslationCreateWithoutEventTypeInput,
        Prisma.EventTypeTranslationUncheckedCreateWithoutEventTypeInput
      >
    | Prisma.EventTypeTranslationCreateWithoutEventTypeInput[]
    | Prisma.EventTypeTranslationUncheckedCreateWithoutEventTypeInput[];
  connectOrCreate?:
    | Prisma.EventTypeTranslationCreateOrConnectWithoutEventTypeInput
    | Prisma.EventTypeTranslationCreateOrConnectWithoutEventTypeInput[];
  upsert?:
    | Prisma.EventTypeTranslationUpsertWithWhereUniqueWithoutEventTypeInput
    | Prisma.EventTypeTranslationUpsertWithWhereUniqueWithoutEventTypeInput[];
  createMany?: Prisma.EventTypeTranslationCreateManyEventTypeInputEnvelope;
  set?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  disconnect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  delete?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  connect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  update?:
    | Prisma.EventTypeTranslationUpdateWithWhereUniqueWithoutEventTypeInput
    | Prisma.EventTypeTranslationUpdateWithWhereUniqueWithoutEventTypeInput[];
  updateMany?:
    | Prisma.EventTypeTranslationUpdateManyWithWhereWithoutEventTypeInput
    | Prisma.EventTypeTranslationUpdateManyWithWhereWithoutEventTypeInput[];
  deleteMany?: Prisma.EventTypeTranslationScalarWhereInput | Prisma.EventTypeTranslationScalarWhereInput[];
};

export type EventTypeTranslationCreateNestedManyWithoutCreatorInput = {
  create?:
    | Prisma.XOR<
        Prisma.EventTypeTranslationCreateWithoutCreatorInput,
        Prisma.EventTypeTranslationUncheckedCreateWithoutCreatorInput
      >
    | Prisma.EventTypeTranslationCreateWithoutCreatorInput[]
    | Prisma.EventTypeTranslationUncheckedCreateWithoutCreatorInput[];
  connectOrCreate?:
    | Prisma.EventTypeTranslationCreateOrConnectWithoutCreatorInput
    | Prisma.EventTypeTranslationCreateOrConnectWithoutCreatorInput[];
  createMany?: Prisma.EventTypeTranslationCreateManyCreatorInputEnvelope;
  connect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
};

export type EventTypeTranslationCreateNestedManyWithoutUpdaterInput = {
  create?:
    | Prisma.XOR<
        Prisma.EventTypeTranslationCreateWithoutUpdaterInput,
        Prisma.EventTypeTranslationUncheckedCreateWithoutUpdaterInput
      >
    | Prisma.EventTypeTranslationCreateWithoutUpdaterInput[]
    | Prisma.EventTypeTranslationUncheckedCreateWithoutUpdaterInput[];
  connectOrCreate?:
    | Prisma.EventTypeTranslationCreateOrConnectWithoutUpdaterInput
    | Prisma.EventTypeTranslationCreateOrConnectWithoutUpdaterInput[];
  createMany?: Prisma.EventTypeTranslationCreateManyUpdaterInputEnvelope;
  connect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
};

export type EventTypeTranslationUncheckedCreateNestedManyWithoutCreatorInput = {
  create?:
    | Prisma.XOR<
        Prisma.EventTypeTranslationCreateWithoutCreatorInput,
        Prisma.EventTypeTranslationUncheckedCreateWithoutCreatorInput
      >
    | Prisma.EventTypeTranslationCreateWithoutCreatorInput[]
    | Prisma.EventTypeTranslationUncheckedCreateWithoutCreatorInput[];
  connectOrCreate?:
    | Prisma.EventTypeTranslationCreateOrConnectWithoutCreatorInput
    | Prisma.EventTypeTranslationCreateOrConnectWithoutCreatorInput[];
  createMany?: Prisma.EventTypeTranslationCreateManyCreatorInputEnvelope;
  connect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
};

export type EventTypeTranslationUncheckedCreateNestedManyWithoutUpdaterInput = {
  create?:
    | Prisma.XOR<
        Prisma.EventTypeTranslationCreateWithoutUpdaterInput,
        Prisma.EventTypeTranslationUncheckedCreateWithoutUpdaterInput
      >
    | Prisma.EventTypeTranslationCreateWithoutUpdaterInput[]
    | Prisma.EventTypeTranslationUncheckedCreateWithoutUpdaterInput[];
  connectOrCreate?:
    | Prisma.EventTypeTranslationCreateOrConnectWithoutUpdaterInput
    | Prisma.EventTypeTranslationCreateOrConnectWithoutUpdaterInput[];
  createMany?: Prisma.EventTypeTranslationCreateManyUpdaterInputEnvelope;
  connect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
};

export type EventTypeTranslationUpdateManyWithoutCreatorNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EventTypeTranslationCreateWithoutCreatorInput,
        Prisma.EventTypeTranslationUncheckedCreateWithoutCreatorInput
      >
    | Prisma.EventTypeTranslationCreateWithoutCreatorInput[]
    | Prisma.EventTypeTranslationUncheckedCreateWithoutCreatorInput[];
  connectOrCreate?:
    | Prisma.EventTypeTranslationCreateOrConnectWithoutCreatorInput
    | Prisma.EventTypeTranslationCreateOrConnectWithoutCreatorInput[];
  upsert?:
    | Prisma.EventTypeTranslationUpsertWithWhereUniqueWithoutCreatorInput
    | Prisma.EventTypeTranslationUpsertWithWhereUniqueWithoutCreatorInput[];
  createMany?: Prisma.EventTypeTranslationCreateManyCreatorInputEnvelope;
  set?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  disconnect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  delete?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  connect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  update?:
    | Prisma.EventTypeTranslationUpdateWithWhereUniqueWithoutCreatorInput
    | Prisma.EventTypeTranslationUpdateWithWhereUniqueWithoutCreatorInput[];
  updateMany?:
    | Prisma.EventTypeTranslationUpdateManyWithWhereWithoutCreatorInput
    | Prisma.EventTypeTranslationUpdateManyWithWhereWithoutCreatorInput[];
  deleteMany?: Prisma.EventTypeTranslationScalarWhereInput | Prisma.EventTypeTranslationScalarWhereInput[];
};

export type EventTypeTranslationUpdateManyWithoutUpdaterNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EventTypeTranslationCreateWithoutUpdaterInput,
        Prisma.EventTypeTranslationUncheckedCreateWithoutUpdaterInput
      >
    | Prisma.EventTypeTranslationCreateWithoutUpdaterInput[]
    | Prisma.EventTypeTranslationUncheckedCreateWithoutUpdaterInput[];
  connectOrCreate?:
    | Prisma.EventTypeTranslationCreateOrConnectWithoutUpdaterInput
    | Prisma.EventTypeTranslationCreateOrConnectWithoutUpdaterInput[];
  upsert?:
    | Prisma.EventTypeTranslationUpsertWithWhereUniqueWithoutUpdaterInput
    | Prisma.EventTypeTranslationUpsertWithWhereUniqueWithoutUpdaterInput[];
  createMany?: Prisma.EventTypeTranslationCreateManyUpdaterInputEnvelope;
  set?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  disconnect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  delete?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  connect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  update?:
    | Prisma.EventTypeTranslationUpdateWithWhereUniqueWithoutUpdaterInput
    | Prisma.EventTypeTranslationUpdateWithWhereUniqueWithoutUpdaterInput[];
  updateMany?:
    | Prisma.EventTypeTranslationUpdateManyWithWhereWithoutUpdaterInput
    | Prisma.EventTypeTranslationUpdateManyWithWhereWithoutUpdaterInput[];
  deleteMany?: Prisma.EventTypeTranslationScalarWhereInput | Prisma.EventTypeTranslationScalarWhereInput[];
};

export type EventTypeTranslationUncheckedUpdateManyWithoutCreatorNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EventTypeTranslationCreateWithoutCreatorInput,
        Prisma.EventTypeTranslationUncheckedCreateWithoutCreatorInput
      >
    | Prisma.EventTypeTranslationCreateWithoutCreatorInput[]
    | Prisma.EventTypeTranslationUncheckedCreateWithoutCreatorInput[];
  connectOrCreate?:
    | Prisma.EventTypeTranslationCreateOrConnectWithoutCreatorInput
    | Prisma.EventTypeTranslationCreateOrConnectWithoutCreatorInput[];
  upsert?:
    | Prisma.EventTypeTranslationUpsertWithWhereUniqueWithoutCreatorInput
    | Prisma.EventTypeTranslationUpsertWithWhereUniqueWithoutCreatorInput[];
  createMany?: Prisma.EventTypeTranslationCreateManyCreatorInputEnvelope;
  set?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  disconnect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  delete?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  connect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  update?:
    | Prisma.EventTypeTranslationUpdateWithWhereUniqueWithoutCreatorInput
    | Prisma.EventTypeTranslationUpdateWithWhereUniqueWithoutCreatorInput[];
  updateMany?:
    | Prisma.EventTypeTranslationUpdateManyWithWhereWithoutCreatorInput
    | Prisma.EventTypeTranslationUpdateManyWithWhereWithoutCreatorInput[];
  deleteMany?: Prisma.EventTypeTranslationScalarWhereInput | Prisma.EventTypeTranslationScalarWhereInput[];
};

export type EventTypeTranslationUncheckedUpdateManyWithoutUpdaterNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.EventTypeTranslationCreateWithoutUpdaterInput,
        Prisma.EventTypeTranslationUncheckedCreateWithoutUpdaterInput
      >
    | Prisma.EventTypeTranslationCreateWithoutUpdaterInput[]
    | Prisma.EventTypeTranslationUncheckedCreateWithoutUpdaterInput[];
  connectOrCreate?:
    | Prisma.EventTypeTranslationCreateOrConnectWithoutUpdaterInput
    | Prisma.EventTypeTranslationCreateOrConnectWithoutUpdaterInput[];
  upsert?:
    | Prisma.EventTypeTranslationUpsertWithWhereUniqueWithoutUpdaterInput
    | Prisma.EventTypeTranslationUpsertWithWhereUniqueWithoutUpdaterInput[];
  createMany?: Prisma.EventTypeTranslationCreateManyUpdaterInputEnvelope;
  set?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  disconnect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  delete?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  connect?: Prisma.EventTypeTranslationWhereUniqueInput | Prisma.EventTypeTranslationWhereUniqueInput[];
  update?:
    | Prisma.EventTypeTranslationUpdateWithWhereUniqueWithoutUpdaterInput
    | Prisma.EventTypeTranslationUpdateWithWhereUniqueWithoutUpdaterInput[];
  updateMany?:
    | Prisma.EventTypeTranslationUpdateManyWithWhereWithoutUpdaterInput
    | Prisma.EventTypeTranslationUpdateManyWithWhereWithoutUpdaterInput[];
  deleteMany?: Prisma.EventTypeTranslationScalarWhereInput | Prisma.EventTypeTranslationScalarWhereInput[];
};

export type EnumEventTypeAutoTranslatedFieldFieldUpdateOperationsInput = {
  set?: $Enums.EventTypeAutoTranslatedField;
};

export type EventTypeTranslationCreateWithoutEventTypeInput = {
  uid?: string;
  field: $Enums.EventTypeAutoTranslatedField;
  sourceLocale: string;
  targetLocale: string;
  translatedText: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  creator: Prisma.UserCreateNestedOneWithoutCreatedTranslationsInput;
  updater?: Prisma.UserCreateNestedOneWithoutUpdatedTranslationsInput;
};

export type EventTypeTranslationUncheckedCreateWithoutEventTypeInput = {
  uid?: string;
  field: $Enums.EventTypeAutoTranslatedField;
  sourceLocale: string;
  targetLocale: string;
  translatedText: string;
  createdAt?: Date | string;
  createdBy: number;
  updatedAt?: Date | string;
  updatedBy?: number | null;
};

export type EventTypeTranslationCreateOrConnectWithoutEventTypeInput = {
  where: Prisma.EventTypeTranslationWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.EventTypeTranslationCreateWithoutEventTypeInput,
    Prisma.EventTypeTranslationUncheckedCreateWithoutEventTypeInput
  >;
};

export type EventTypeTranslationCreateManyEventTypeInputEnvelope = {
  data:
    | Prisma.EventTypeTranslationCreateManyEventTypeInput
    | Prisma.EventTypeTranslationCreateManyEventTypeInput[];
  skipDuplicates?: boolean;
};

export type EventTypeTranslationUpsertWithWhereUniqueWithoutEventTypeInput = {
  where: Prisma.EventTypeTranslationWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.EventTypeTranslationUpdateWithoutEventTypeInput,
    Prisma.EventTypeTranslationUncheckedUpdateWithoutEventTypeInput
  >;
  create: Prisma.XOR<
    Prisma.EventTypeTranslationCreateWithoutEventTypeInput,
    Prisma.EventTypeTranslationUncheckedCreateWithoutEventTypeInput
  >;
};

export type EventTypeTranslationUpdateWithWhereUniqueWithoutEventTypeInput = {
  where: Prisma.EventTypeTranslationWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.EventTypeTranslationUpdateWithoutEventTypeInput,
    Prisma.EventTypeTranslationUncheckedUpdateWithoutEventTypeInput
  >;
};

export type EventTypeTranslationUpdateManyWithWhereWithoutEventTypeInput = {
  where: Prisma.EventTypeTranslationScalarWhereInput;
  data: Prisma.XOR<
    Prisma.EventTypeTranslationUpdateManyMutationInput,
    Prisma.EventTypeTranslationUncheckedUpdateManyWithoutEventTypeInput
  >;
};

export type EventTypeTranslationScalarWhereInput = {
  AND?: Prisma.EventTypeTranslationScalarWhereInput | Prisma.EventTypeTranslationScalarWhereInput[];
  OR?: Prisma.EventTypeTranslationScalarWhereInput[];
  NOT?: Prisma.EventTypeTranslationScalarWhereInput | Prisma.EventTypeTranslationScalarWhereInput[];
  uid?: Prisma.StringFilter<"EventTypeTranslation"> | string;
  eventTypeId?: Prisma.IntFilter<"EventTypeTranslation"> | number;
  field?:
    | Prisma.EnumEventTypeAutoTranslatedFieldFilter<"EventTypeTranslation">
    | $Enums.EventTypeAutoTranslatedField;
  sourceLocale?: Prisma.StringFilter<"EventTypeTranslation"> | string;
  targetLocale?: Prisma.StringFilter<"EventTypeTranslation"> | string;
  translatedText?: Prisma.StringFilter<"EventTypeTranslation"> | string;
  createdAt?: Prisma.DateTimeFilter<"EventTypeTranslation"> | Date | string;
  createdBy?: Prisma.IntFilter<"EventTypeTranslation"> | number;
  updatedAt?: Prisma.DateTimeFilter<"EventTypeTranslation"> | Date | string;
  updatedBy?: Prisma.IntNullableFilter<"EventTypeTranslation"> | number | null;
};

export type EventTypeTranslationCreateWithoutCreatorInput = {
  uid?: string;
  field: $Enums.EventTypeAutoTranslatedField;
  sourceLocale: string;
  targetLocale: string;
  translatedText: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  eventType: Prisma.EventTypeCreateNestedOneWithoutFieldTranslationsInput;
  updater?: Prisma.UserCreateNestedOneWithoutUpdatedTranslationsInput;
};

export type EventTypeTranslationUncheckedCreateWithoutCreatorInput = {
  uid?: string;
  eventTypeId: number;
  field: $Enums.EventTypeAutoTranslatedField;
  sourceLocale: string;
  targetLocale: string;
  translatedText: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  updatedBy?: number | null;
};

export type EventTypeTranslationCreateOrConnectWithoutCreatorInput = {
  where: Prisma.EventTypeTranslationWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.EventTypeTranslationCreateWithoutCreatorInput,
    Prisma.EventTypeTranslationUncheckedCreateWithoutCreatorInput
  >;
};

export type EventTypeTranslationCreateManyCreatorInputEnvelope = {
  data:
    | Prisma.EventTypeTranslationCreateManyCreatorInput
    | Prisma.EventTypeTranslationCreateManyCreatorInput[];
  skipDuplicates?: boolean;
};

export type EventTypeTranslationCreateWithoutUpdaterInput = {
  uid?: string;
  field: $Enums.EventTypeAutoTranslatedField;
  sourceLocale: string;
  targetLocale: string;
  translatedText: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  eventType: Prisma.EventTypeCreateNestedOneWithoutFieldTranslationsInput;
  creator: Prisma.UserCreateNestedOneWithoutCreatedTranslationsInput;
};

export type EventTypeTranslationUncheckedCreateWithoutUpdaterInput = {
  uid?: string;
  eventTypeId: number;
  field: $Enums.EventTypeAutoTranslatedField;
  sourceLocale: string;
  targetLocale: string;
  translatedText: string;
  createdAt?: Date | string;
  createdBy: number;
  updatedAt?: Date | string;
};

export type EventTypeTranslationCreateOrConnectWithoutUpdaterInput = {
  where: Prisma.EventTypeTranslationWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.EventTypeTranslationCreateWithoutUpdaterInput,
    Prisma.EventTypeTranslationUncheckedCreateWithoutUpdaterInput
  >;
};

export type EventTypeTranslationCreateManyUpdaterInputEnvelope = {
  data:
    | Prisma.EventTypeTranslationCreateManyUpdaterInput
    | Prisma.EventTypeTranslationCreateManyUpdaterInput[];
  skipDuplicates?: boolean;
};

export type EventTypeTranslationUpsertWithWhereUniqueWithoutCreatorInput = {
  where: Prisma.EventTypeTranslationWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.EventTypeTranslationUpdateWithoutCreatorInput,
    Prisma.EventTypeTranslationUncheckedUpdateWithoutCreatorInput
  >;
  create: Prisma.XOR<
    Prisma.EventTypeTranslationCreateWithoutCreatorInput,
    Prisma.EventTypeTranslationUncheckedCreateWithoutCreatorInput
  >;
};

export type EventTypeTranslationUpdateWithWhereUniqueWithoutCreatorInput = {
  where: Prisma.EventTypeTranslationWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.EventTypeTranslationUpdateWithoutCreatorInput,
    Prisma.EventTypeTranslationUncheckedUpdateWithoutCreatorInput
  >;
};

export type EventTypeTranslationUpdateManyWithWhereWithoutCreatorInput = {
  where: Prisma.EventTypeTranslationScalarWhereInput;
  data: Prisma.XOR<
    Prisma.EventTypeTranslationUpdateManyMutationInput,
    Prisma.EventTypeTranslationUncheckedUpdateManyWithoutCreatorInput
  >;
};

export type EventTypeTranslationUpsertWithWhereUniqueWithoutUpdaterInput = {
  where: Prisma.EventTypeTranslationWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.EventTypeTranslationUpdateWithoutUpdaterInput,
    Prisma.EventTypeTranslationUncheckedUpdateWithoutUpdaterInput
  >;
  create: Prisma.XOR<
    Prisma.EventTypeTranslationCreateWithoutUpdaterInput,
    Prisma.EventTypeTranslationUncheckedCreateWithoutUpdaterInput
  >;
};

export type EventTypeTranslationUpdateWithWhereUniqueWithoutUpdaterInput = {
  where: Prisma.EventTypeTranslationWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.EventTypeTranslationUpdateWithoutUpdaterInput,
    Prisma.EventTypeTranslationUncheckedUpdateWithoutUpdaterInput
  >;
};

export type EventTypeTranslationUpdateManyWithWhereWithoutUpdaterInput = {
  where: Prisma.EventTypeTranslationScalarWhereInput;
  data: Prisma.XOR<
    Prisma.EventTypeTranslationUpdateManyMutationInput,
    Prisma.EventTypeTranslationUncheckedUpdateManyWithoutUpdaterInput
  >;
};

export type EventTypeTranslationCreateManyEventTypeInput = {
  uid?: string;
  field: $Enums.EventTypeAutoTranslatedField;
  sourceLocale: string;
  targetLocale: string;
  translatedText: string;
  createdAt?: Date | string;
  createdBy: number;
  updatedAt?: Date | string;
  updatedBy?: number | null;
};

export type EventTypeTranslationUpdateWithoutEventTypeInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string;
  field?:
    | Prisma.EnumEventTypeAutoTranslatedFieldFieldUpdateOperationsInput
    | $Enums.EventTypeAutoTranslatedField;
  sourceLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  targetLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  translatedText?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedTranslationsNestedInput;
  updater?: Prisma.UserUpdateOneWithoutUpdatedTranslationsNestedInput;
};

export type EventTypeTranslationUncheckedUpdateWithoutEventTypeInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string;
  field?:
    | Prisma.EnumEventTypeAutoTranslatedFieldFieldUpdateOperationsInput
    | $Enums.EventTypeAutoTranslatedField;
  sourceLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  targetLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  translatedText?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdBy?: Prisma.IntFieldUpdateOperationsInput | number;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedBy?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type EventTypeTranslationUncheckedUpdateManyWithoutEventTypeInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string;
  field?:
    | Prisma.EnumEventTypeAutoTranslatedFieldFieldUpdateOperationsInput
    | $Enums.EventTypeAutoTranslatedField;
  sourceLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  targetLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  translatedText?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdBy?: Prisma.IntFieldUpdateOperationsInput | number;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedBy?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type EventTypeTranslationCreateManyCreatorInput = {
  uid?: string;
  eventTypeId: number;
  field: $Enums.EventTypeAutoTranslatedField;
  sourceLocale: string;
  targetLocale: string;
  translatedText: string;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  updatedBy?: number | null;
};

export type EventTypeTranslationCreateManyUpdaterInput = {
  uid?: string;
  eventTypeId: number;
  field: $Enums.EventTypeAutoTranslatedField;
  sourceLocale: string;
  targetLocale: string;
  translatedText: string;
  createdAt?: Date | string;
  createdBy: number;
  updatedAt?: Date | string;
};

export type EventTypeTranslationUpdateWithoutCreatorInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string;
  field?:
    | Prisma.EnumEventTypeAutoTranslatedFieldFieldUpdateOperationsInput
    | $Enums.EventTypeAutoTranslatedField;
  sourceLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  targetLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  translatedText?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  eventType?: Prisma.EventTypeUpdateOneRequiredWithoutFieldTranslationsNestedInput;
  updater?: Prisma.UserUpdateOneWithoutUpdatedTranslationsNestedInput;
};

export type EventTypeTranslationUncheckedUpdateWithoutCreatorInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  field?:
    | Prisma.EnumEventTypeAutoTranslatedFieldFieldUpdateOperationsInput
    | $Enums.EventTypeAutoTranslatedField;
  sourceLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  targetLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  translatedText?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedBy?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type EventTypeTranslationUncheckedUpdateManyWithoutCreatorInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  field?:
    | Prisma.EnumEventTypeAutoTranslatedFieldFieldUpdateOperationsInput
    | $Enums.EventTypeAutoTranslatedField;
  sourceLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  targetLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  translatedText?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedBy?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type EventTypeTranslationUpdateWithoutUpdaterInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string;
  field?:
    | Prisma.EnumEventTypeAutoTranslatedFieldFieldUpdateOperationsInput
    | $Enums.EventTypeAutoTranslatedField;
  sourceLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  targetLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  translatedText?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  eventType?: Prisma.EventTypeUpdateOneRequiredWithoutFieldTranslationsNestedInput;
  creator?: Prisma.UserUpdateOneRequiredWithoutCreatedTranslationsNestedInput;
};

export type EventTypeTranslationUncheckedUpdateWithoutUpdaterInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  field?:
    | Prisma.EnumEventTypeAutoTranslatedFieldFieldUpdateOperationsInput
    | $Enums.EventTypeAutoTranslatedField;
  sourceLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  targetLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  translatedText?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdBy?: Prisma.IntFieldUpdateOperationsInput | number;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type EventTypeTranslationUncheckedUpdateManyWithoutUpdaterInput = {
  uid?: Prisma.StringFieldUpdateOperationsInput | string;
  eventTypeId?: Prisma.IntFieldUpdateOperationsInput | number;
  field?:
    | Prisma.EnumEventTypeAutoTranslatedFieldFieldUpdateOperationsInput
    | $Enums.EventTypeAutoTranslatedField;
  sourceLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  targetLocale?: Prisma.StringFieldUpdateOperationsInput | string;
  translatedText?: Prisma.StringFieldUpdateOperationsInput | string;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  createdBy?: Prisma.IntFieldUpdateOperationsInput | number;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type EventTypeTranslationSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    uid?: boolean;
    eventTypeId?: boolean;
    field?: boolean;
    sourceLocale?: boolean;
    targetLocale?: boolean;
    translatedText?: boolean;
    createdAt?: boolean;
    createdBy?: boolean;
    updatedAt?: boolean;
    updatedBy?: boolean;
    eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
    creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    updater?: boolean | Prisma.EventTypeTranslation$updaterArgs<ExtArgs>;
  },
  ExtArgs["result"]["eventTypeTranslation"]
>;

export type EventTypeTranslationSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    uid?: boolean;
    eventTypeId?: boolean;
    field?: boolean;
    sourceLocale?: boolean;
    targetLocale?: boolean;
    translatedText?: boolean;
    createdAt?: boolean;
    createdBy?: boolean;
    updatedAt?: boolean;
    updatedBy?: boolean;
    eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
    creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    updater?: boolean | Prisma.EventTypeTranslation$updaterArgs<ExtArgs>;
  },
  ExtArgs["result"]["eventTypeTranslation"]
>;

export type EventTypeTranslationSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    uid?: boolean;
    eventTypeId?: boolean;
    field?: boolean;
    sourceLocale?: boolean;
    targetLocale?: boolean;
    translatedText?: boolean;
    createdAt?: boolean;
    createdBy?: boolean;
    updatedAt?: boolean;
    updatedBy?: boolean;
    eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
    creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
    updater?: boolean | Prisma.EventTypeTranslation$updaterArgs<ExtArgs>;
  },
  ExtArgs["result"]["eventTypeTranslation"]
>;

export type EventTypeTranslationSelectScalar = {
  uid?: boolean;
  eventTypeId?: boolean;
  field?: boolean;
  sourceLocale?: boolean;
  targetLocale?: boolean;
  translatedText?: boolean;
  createdAt?: boolean;
  createdBy?: boolean;
  updatedAt?: boolean;
  updatedBy?: boolean;
};

export type EventTypeTranslationOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  | "uid"
  | "eventTypeId"
  | "field"
  | "sourceLocale"
  | "targetLocale"
  | "translatedText"
  | "createdAt"
  | "createdBy"
  | "updatedAt"
  | "updatedBy",
  ExtArgs["result"]["eventTypeTranslation"]
>;
export type EventTypeTranslationInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
  creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  updater?: boolean | Prisma.EventTypeTranslation$updaterArgs<ExtArgs>;
};
export type EventTypeTranslationIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
  creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  updater?: boolean | Prisma.EventTypeTranslation$updaterArgs<ExtArgs>;
};
export type EventTypeTranslationIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  eventType?: boolean | Prisma.EventTypeDefaultArgs<ExtArgs>;
  creator?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
  updater?: boolean | Prisma.EventTypeTranslation$updaterArgs<ExtArgs>;
};

export type $EventTypeTranslationPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "EventTypeTranslation";
  objects: {
    eventType: Prisma.$EventTypePayload<ExtArgs>;
    creator: Prisma.$UserPayload<ExtArgs>;
    updater: Prisma.$UserPayload<ExtArgs> | null;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      uid: string;
      eventTypeId: number;
      field: $Enums.EventTypeAutoTranslatedField;
      sourceLocale: string;
      targetLocale: string;
      translatedText: string;
      createdAt: Date;
      createdBy: number;
      updatedAt: Date;
      updatedBy: number | null;
    },
    ExtArgs["result"]["eventTypeTranslation"]
  >;
  composites: {};
};

export type EventTypeTranslationGetPayload<
  S extends boolean | null | undefined | EventTypeTranslationDefaultArgs
> = runtime.Types.Result.GetResult<Prisma.$EventTypeTranslationPayload, S>;

export type EventTypeTranslationCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<EventTypeTranslationFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: EventTypeTranslationCountAggregateInputType | true;
};

export interface EventTypeTranslationDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["EventTypeTranslation"];
    meta: { name: "EventTypeTranslation" };
  };
  /**
   * Find zero or one EventTypeTranslation that matches the filter.
   * @param {EventTypeTranslationFindUniqueArgs} args - Arguments to find a EventTypeTranslation
   * @example
   * // Get one EventTypeTranslation
   * const eventTypeTranslation = await prisma.eventTypeTranslation.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends EventTypeTranslationFindUniqueArgs>(
    args: Prisma.SelectSubset<T, EventTypeTranslationFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeTranslationClient<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeTranslationPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one EventTypeTranslation that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {EventTypeTranslationFindUniqueOrThrowArgs} args - Arguments to find a EventTypeTranslation
   * @example
   * // Get one EventTypeTranslation
   * const eventTypeTranslation = await prisma.eventTypeTranslation.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends EventTypeTranslationFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, EventTypeTranslationFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeTranslationClient<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeTranslationPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first EventTypeTranslation that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventTypeTranslationFindFirstArgs} args - Arguments to find a EventTypeTranslation
   * @example
   * // Get one EventTypeTranslation
   * const eventTypeTranslation = await prisma.eventTypeTranslation.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends EventTypeTranslationFindFirstArgs>(
    args?: Prisma.SelectSubset<T, EventTypeTranslationFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeTranslationClient<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeTranslationPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first EventTypeTranslation that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventTypeTranslationFindFirstOrThrowArgs} args - Arguments to find a EventTypeTranslation
   * @example
   * // Get one EventTypeTranslation
   * const eventTypeTranslation = await prisma.eventTypeTranslation.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends EventTypeTranslationFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, EventTypeTranslationFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeTranslationClient<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeTranslationPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more EventTypeTranslations that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventTypeTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all EventTypeTranslations
   * const eventTypeTranslations = await prisma.eventTypeTranslation.findMany()
   *
   * // Get first 10 EventTypeTranslations
   * const eventTypeTranslations = await prisma.eventTypeTranslation.findMany({ take: 10 })
   *
   * // Only select the `uid`
   * const eventTypeTranslationWithUidOnly = await prisma.eventTypeTranslation.findMany({ select: { uid: true } })
   *
   */
  findMany<T extends EventTypeTranslationFindManyArgs>(
    args?: Prisma.SelectSubset<T, EventTypeTranslationFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeTranslationPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a EventTypeTranslation.
   * @param {EventTypeTranslationCreateArgs} args - Arguments to create a EventTypeTranslation.
   * @example
   * // Create one EventTypeTranslation
   * const EventTypeTranslation = await prisma.eventTypeTranslation.create({
   *   data: {
   *     // ... data to create a EventTypeTranslation
   *   }
   * })
   *
   */
  create<T extends EventTypeTranslationCreateArgs>(
    args: Prisma.SelectSubset<T, EventTypeTranslationCreateArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeTranslationClient<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeTranslationPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many EventTypeTranslations.
   * @param {EventTypeTranslationCreateManyArgs} args - Arguments to create many EventTypeTranslations.
   * @example
   * // Create many EventTypeTranslations
   * const eventTypeTranslation = await prisma.eventTypeTranslation.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends EventTypeTranslationCreateManyArgs>(
    args?: Prisma.SelectSubset<T, EventTypeTranslationCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many EventTypeTranslations and returns the data saved in the database.
   * @param {EventTypeTranslationCreateManyAndReturnArgs} args - Arguments to create many EventTypeTranslations.
   * @example
   * // Create many EventTypeTranslations
   * const eventTypeTranslation = await prisma.eventTypeTranslation.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many EventTypeTranslations and only return the `uid`
   * const eventTypeTranslationWithUidOnly = await prisma.eventTypeTranslation.createManyAndReturn({
   *   select: { uid: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends EventTypeTranslationCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, EventTypeTranslationCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeTranslationPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a EventTypeTranslation.
   * @param {EventTypeTranslationDeleteArgs} args - Arguments to delete one EventTypeTranslation.
   * @example
   * // Delete one EventTypeTranslation
   * const EventTypeTranslation = await prisma.eventTypeTranslation.delete({
   *   where: {
   *     // ... filter to delete one EventTypeTranslation
   *   }
   * })
   *
   */
  delete<T extends EventTypeTranslationDeleteArgs>(
    args: Prisma.SelectSubset<T, EventTypeTranslationDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeTranslationClient<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeTranslationPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one EventTypeTranslation.
   * @param {EventTypeTranslationUpdateArgs} args - Arguments to update one EventTypeTranslation.
   * @example
   * // Update one EventTypeTranslation
   * const eventTypeTranslation = await prisma.eventTypeTranslation.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends EventTypeTranslationUpdateArgs>(
    args: Prisma.SelectSubset<T, EventTypeTranslationUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeTranslationClient<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeTranslationPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more EventTypeTranslations.
   * @param {EventTypeTranslationDeleteManyArgs} args - Arguments to filter EventTypeTranslations to delete.
   * @example
   * // Delete a few EventTypeTranslations
   * const { count } = await prisma.eventTypeTranslation.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends EventTypeTranslationDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, EventTypeTranslationDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more EventTypeTranslations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventTypeTranslationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many EventTypeTranslations
   * const eventTypeTranslation = await prisma.eventTypeTranslation.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends EventTypeTranslationUpdateManyArgs>(
    args: Prisma.SelectSubset<T, EventTypeTranslationUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more EventTypeTranslations and returns the data updated in the database.
   * @param {EventTypeTranslationUpdateManyAndReturnArgs} args - Arguments to update many EventTypeTranslations.
   * @example
   * // Update many EventTypeTranslations
   * const eventTypeTranslation = await prisma.eventTypeTranslation.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more EventTypeTranslations and only return the `uid`
   * const eventTypeTranslationWithUidOnly = await prisma.eventTypeTranslation.updateManyAndReturn({
   *   select: { uid: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends EventTypeTranslationUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, EventTypeTranslationUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeTranslationPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one EventTypeTranslation.
   * @param {EventTypeTranslationUpsertArgs} args - Arguments to update or create a EventTypeTranslation.
   * @example
   * // Update or create a EventTypeTranslation
   * const eventTypeTranslation = await prisma.eventTypeTranslation.upsert({
   *   create: {
   *     // ... data to create a EventTypeTranslation
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the EventTypeTranslation we want to update
   *   }
   * })
   */
  upsert<T extends EventTypeTranslationUpsertArgs>(
    args: Prisma.SelectSubset<T, EventTypeTranslationUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeTranslationClient<
    runtime.Types.Result.GetResult<
      Prisma.$EventTypeTranslationPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of EventTypeTranslations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventTypeTranslationCountArgs} args - Arguments to filter EventTypeTranslations to count.
   * @example
   * // Count the number of EventTypeTranslations
   * const count = await prisma.eventTypeTranslation.count({
   *   where: {
   *     // ... the filter for the EventTypeTranslations we want to count
   *   }
   * })
   **/
  count<T extends EventTypeTranslationCountArgs>(
    args?: Prisma.Subset<T, EventTypeTranslationCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], EventTypeTranslationCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a EventTypeTranslation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventTypeTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends EventTypeTranslationAggregateArgs>(
    args: Prisma.Subset<T, EventTypeTranslationAggregateArgs>
  ): Prisma.PrismaPromise<GetEventTypeTranslationAggregateType<T>>;

  /**
   * Group by EventTypeTranslation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventTypeTranslationGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends EventTypeTranslationGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: EventTypeTranslationGroupByArgs["orderBy"] }
      : { orderBy?: EventTypeTranslationGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, EventTypeTranslationGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetEventTypeTranslationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the EventTypeTranslation model
   */
  readonly fields: EventTypeTranslationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for EventTypeTranslation.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__EventTypeTranslationClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  eventType<T extends Prisma.EventTypeDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.EventTypeDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__EventTypeClient<
    | runtime.Types.Result.GetResult<
        Prisma.$EventTypePayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  creator<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    | runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  updater<T extends Prisma.EventTypeTranslation$updaterArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.EventTypeTranslation$updaterArgs<ExtArgs>>
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the EventTypeTranslation model
 */
export interface EventTypeTranslationFieldRefs {
  readonly uid: Prisma.FieldRef<"EventTypeTranslation", "String">;
  readonly eventTypeId: Prisma.FieldRef<"EventTypeTranslation", "Int">;
  readonly field: Prisma.FieldRef<"EventTypeTranslation", "EventTypeAutoTranslatedField">;
  readonly sourceLocale: Prisma.FieldRef<"EventTypeTranslation", "String">;
  readonly targetLocale: Prisma.FieldRef<"EventTypeTranslation", "String">;
  readonly translatedText: Prisma.FieldRef<"EventTypeTranslation", "String">;
  readonly createdAt: Prisma.FieldRef<"EventTypeTranslation", "DateTime">;
  readonly createdBy: Prisma.FieldRef<"EventTypeTranslation", "Int">;
  readonly updatedAt: Prisma.FieldRef<"EventTypeTranslation", "DateTime">;
  readonly updatedBy: Prisma.FieldRef<"EventTypeTranslation", "Int">;
}

// Custom InputTypes
/**
 * EventTypeTranslation findUnique
 */
export type EventTypeTranslationFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeTranslation
   */
  select?: Prisma.EventTypeTranslationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeTranslation
   */
  omit?: Prisma.EventTypeTranslationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeTranslationInclude<ExtArgs> | null;
  /**
   * Filter, which EventTypeTranslation to fetch.
   */
  where: Prisma.EventTypeTranslationWhereUniqueInput;
};

/**
 * EventTypeTranslation findUniqueOrThrow
 */
export type EventTypeTranslationFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeTranslation
   */
  select?: Prisma.EventTypeTranslationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeTranslation
   */
  omit?: Prisma.EventTypeTranslationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeTranslationInclude<ExtArgs> | null;
  /**
   * Filter, which EventTypeTranslation to fetch.
   */
  where: Prisma.EventTypeTranslationWhereUniqueInput;
};

/**
 * EventTypeTranslation findFirst
 */
export type EventTypeTranslationFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeTranslation
   */
  select?: Prisma.EventTypeTranslationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeTranslation
   */
  omit?: Prisma.EventTypeTranslationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeTranslationInclude<ExtArgs> | null;
  /**
   * Filter, which EventTypeTranslation to fetch.
   */
  where?: Prisma.EventTypeTranslationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EventTypeTranslations to fetch.
   */
  orderBy?:
    | Prisma.EventTypeTranslationOrderByWithRelationInput
    | Prisma.EventTypeTranslationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for EventTypeTranslations.
   */
  cursor?: Prisma.EventTypeTranslationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EventTypeTranslations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EventTypeTranslations.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of EventTypeTranslations.
   */
  distinct?: Prisma.EventTypeTranslationScalarFieldEnum | Prisma.EventTypeTranslationScalarFieldEnum[];
};

/**
 * EventTypeTranslation findFirstOrThrow
 */
export type EventTypeTranslationFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeTranslation
   */
  select?: Prisma.EventTypeTranslationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeTranslation
   */
  omit?: Prisma.EventTypeTranslationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeTranslationInclude<ExtArgs> | null;
  /**
   * Filter, which EventTypeTranslation to fetch.
   */
  where?: Prisma.EventTypeTranslationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EventTypeTranslations to fetch.
   */
  orderBy?:
    | Prisma.EventTypeTranslationOrderByWithRelationInput
    | Prisma.EventTypeTranslationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for EventTypeTranslations.
   */
  cursor?: Prisma.EventTypeTranslationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EventTypeTranslations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EventTypeTranslations.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of EventTypeTranslations.
   */
  distinct?: Prisma.EventTypeTranslationScalarFieldEnum | Prisma.EventTypeTranslationScalarFieldEnum[];
};

/**
 * EventTypeTranslation findMany
 */
export type EventTypeTranslationFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeTranslation
   */
  select?: Prisma.EventTypeTranslationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeTranslation
   */
  omit?: Prisma.EventTypeTranslationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeTranslationInclude<ExtArgs> | null;
  /**
   * Filter, which EventTypeTranslations to fetch.
   */
  where?: Prisma.EventTypeTranslationWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of EventTypeTranslations to fetch.
   */
  orderBy?:
    | Prisma.EventTypeTranslationOrderByWithRelationInput
    | Prisma.EventTypeTranslationOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing EventTypeTranslations.
   */
  cursor?: Prisma.EventTypeTranslationWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` EventTypeTranslations from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` EventTypeTranslations.
   */
  skip?: number;
  distinct?: Prisma.EventTypeTranslationScalarFieldEnum | Prisma.EventTypeTranslationScalarFieldEnum[];
};

/**
 * EventTypeTranslation create
 */
export type EventTypeTranslationCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeTranslation
   */
  select?: Prisma.EventTypeTranslationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeTranslation
   */
  omit?: Prisma.EventTypeTranslationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeTranslationInclude<ExtArgs> | null;
  /**
   * The data needed to create a EventTypeTranslation.
   */
  data: Prisma.XOR<Prisma.EventTypeTranslationCreateInput, Prisma.EventTypeTranslationUncheckedCreateInput>;
};

/**
 * EventTypeTranslation createMany
 */
export type EventTypeTranslationCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many EventTypeTranslations.
   */
  data: Prisma.EventTypeTranslationCreateManyInput | Prisma.EventTypeTranslationCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * EventTypeTranslation createManyAndReturn
 */
export type EventTypeTranslationCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeTranslation
   */
  select?: Prisma.EventTypeTranslationSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeTranslation
   */
  omit?: Prisma.EventTypeTranslationOmit<ExtArgs> | null;
  /**
   * The data used to create many EventTypeTranslations.
   */
  data: Prisma.EventTypeTranslationCreateManyInput | Prisma.EventTypeTranslationCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeTranslationIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * EventTypeTranslation update
 */
export type EventTypeTranslationUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeTranslation
   */
  select?: Prisma.EventTypeTranslationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeTranslation
   */
  omit?: Prisma.EventTypeTranslationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeTranslationInclude<ExtArgs> | null;
  /**
   * The data needed to update a EventTypeTranslation.
   */
  data: Prisma.XOR<Prisma.EventTypeTranslationUpdateInput, Prisma.EventTypeTranslationUncheckedUpdateInput>;
  /**
   * Choose, which EventTypeTranslation to update.
   */
  where: Prisma.EventTypeTranslationWhereUniqueInput;
};

/**
 * EventTypeTranslation updateMany
 */
export type EventTypeTranslationUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update EventTypeTranslations.
   */
  data: Prisma.XOR<
    Prisma.EventTypeTranslationUpdateManyMutationInput,
    Prisma.EventTypeTranslationUncheckedUpdateManyInput
  >;
  /**
   * Filter which EventTypeTranslations to update
   */
  where?: Prisma.EventTypeTranslationWhereInput;
  /**
   * Limit how many EventTypeTranslations to update.
   */
  limit?: number;
};

/**
 * EventTypeTranslation updateManyAndReturn
 */
export type EventTypeTranslationUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeTranslation
   */
  select?: Prisma.EventTypeTranslationSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeTranslation
   */
  omit?: Prisma.EventTypeTranslationOmit<ExtArgs> | null;
  /**
   * The data used to update EventTypeTranslations.
   */
  data: Prisma.XOR<
    Prisma.EventTypeTranslationUpdateManyMutationInput,
    Prisma.EventTypeTranslationUncheckedUpdateManyInput
  >;
  /**
   * Filter which EventTypeTranslations to update
   */
  where?: Prisma.EventTypeTranslationWhereInput;
  /**
   * Limit how many EventTypeTranslations to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeTranslationIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * EventTypeTranslation upsert
 */
export type EventTypeTranslationUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeTranslation
   */
  select?: Prisma.EventTypeTranslationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeTranslation
   */
  omit?: Prisma.EventTypeTranslationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeTranslationInclude<ExtArgs> | null;
  /**
   * The filter to search for the EventTypeTranslation to update in case it exists.
   */
  where: Prisma.EventTypeTranslationWhereUniqueInput;
  /**
   * In case the EventTypeTranslation found by the `where` argument doesn't exist, create a new EventTypeTranslation with this data.
   */
  create: Prisma.XOR<Prisma.EventTypeTranslationCreateInput, Prisma.EventTypeTranslationUncheckedCreateInput>;
  /**
   * In case the EventTypeTranslation was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.EventTypeTranslationUpdateInput, Prisma.EventTypeTranslationUncheckedUpdateInput>;
};

/**
 * EventTypeTranslation delete
 */
export type EventTypeTranslationDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeTranslation
   */
  select?: Prisma.EventTypeTranslationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeTranslation
   */
  omit?: Prisma.EventTypeTranslationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeTranslationInclude<ExtArgs> | null;
  /**
   * Filter which EventTypeTranslation to delete.
   */
  where: Prisma.EventTypeTranslationWhereUniqueInput;
};

/**
 * EventTypeTranslation deleteMany
 */
export type EventTypeTranslationDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which EventTypeTranslations to delete
   */
  where?: Prisma.EventTypeTranslationWhereInput;
  /**
   * Limit how many EventTypeTranslations to delete.
   */
  limit?: number;
};

/**
 * EventTypeTranslation.updater
 */
export type EventTypeTranslation$updaterArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  where?: Prisma.UserWhereInput;
};

/**
 * EventTypeTranslation without action
 */
export type EventTypeTranslationDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the EventTypeTranslation
   */
  select?: Prisma.EventTypeTranslationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the EventTypeTranslation
   */
  omit?: Prisma.EventTypeTranslationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventTypeTranslationInclude<ExtArgs> | null;
};
