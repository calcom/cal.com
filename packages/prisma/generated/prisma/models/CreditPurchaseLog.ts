/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `CreditPurchaseLog` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model CreditPurchaseLog
 *
 */
export type CreditPurchaseLogModel = runtime.Types.Result.DefaultSelection<Prisma.$CreditPurchaseLogPayload>;

export type AggregateCreditPurchaseLog = {
  _count: CreditPurchaseLogCountAggregateOutputType | null;
  _avg: CreditPurchaseLogAvgAggregateOutputType | null;
  _sum: CreditPurchaseLogSumAggregateOutputType | null;
  _min: CreditPurchaseLogMinAggregateOutputType | null;
  _max: CreditPurchaseLogMaxAggregateOutputType | null;
};

export type CreditPurchaseLogAvgAggregateOutputType = {
  credits: number | null;
};

export type CreditPurchaseLogSumAggregateOutputType = {
  credits: number | null;
};

export type CreditPurchaseLogMinAggregateOutputType = {
  id: string | null;
  creditBalanceId: string | null;
  credits: number | null;
  createdAt: Date | null;
};

export type CreditPurchaseLogMaxAggregateOutputType = {
  id: string | null;
  creditBalanceId: string | null;
  credits: number | null;
  createdAt: Date | null;
};

export type CreditPurchaseLogCountAggregateOutputType = {
  id: number;
  creditBalanceId: number;
  credits: number;
  createdAt: number;
  _all: number;
};

export type CreditPurchaseLogAvgAggregateInputType = {
  credits?: true;
};

export type CreditPurchaseLogSumAggregateInputType = {
  credits?: true;
};

export type CreditPurchaseLogMinAggregateInputType = {
  id?: true;
  creditBalanceId?: true;
  credits?: true;
  createdAt?: true;
};

export type CreditPurchaseLogMaxAggregateInputType = {
  id?: true;
  creditBalanceId?: true;
  credits?: true;
  createdAt?: true;
};

export type CreditPurchaseLogCountAggregateInputType = {
  id?: true;
  creditBalanceId?: true;
  credits?: true;
  createdAt?: true;
  _all?: true;
};

export type CreditPurchaseLogAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which CreditPurchaseLog to aggregate.
   */
  where?: Prisma.CreditPurchaseLogWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of CreditPurchaseLogs to fetch.
   */
  orderBy?:
    | Prisma.CreditPurchaseLogOrderByWithRelationInput
    | Prisma.CreditPurchaseLogOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.CreditPurchaseLogWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` CreditPurchaseLogs from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` CreditPurchaseLogs.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned CreditPurchaseLogs
   **/
  _count?: true | CreditPurchaseLogCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: CreditPurchaseLogAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: CreditPurchaseLogSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: CreditPurchaseLogMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: CreditPurchaseLogMaxAggregateInputType;
};

export type GetCreditPurchaseLogAggregateType<T extends CreditPurchaseLogAggregateArgs> = {
  [P in keyof T & keyof AggregateCreditPurchaseLog]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateCreditPurchaseLog[P]>
    : Prisma.GetScalarType<T[P], AggregateCreditPurchaseLog[P]>;
};

export type CreditPurchaseLogGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.CreditPurchaseLogWhereInput;
  orderBy?:
    | Prisma.CreditPurchaseLogOrderByWithAggregationInput
    | Prisma.CreditPurchaseLogOrderByWithAggregationInput[];
  by: Prisma.CreditPurchaseLogScalarFieldEnum[] | Prisma.CreditPurchaseLogScalarFieldEnum;
  having?: Prisma.CreditPurchaseLogScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: CreditPurchaseLogCountAggregateInputType | true;
  _avg?: CreditPurchaseLogAvgAggregateInputType;
  _sum?: CreditPurchaseLogSumAggregateInputType;
  _min?: CreditPurchaseLogMinAggregateInputType;
  _max?: CreditPurchaseLogMaxAggregateInputType;
};

export type CreditPurchaseLogGroupByOutputType = {
  id: string;
  creditBalanceId: string;
  credits: number;
  createdAt: Date;
  _count: CreditPurchaseLogCountAggregateOutputType | null;
  _avg: CreditPurchaseLogAvgAggregateOutputType | null;
  _sum: CreditPurchaseLogSumAggregateOutputType | null;
  _min: CreditPurchaseLogMinAggregateOutputType | null;
  _max: CreditPurchaseLogMaxAggregateOutputType | null;
};

type GetCreditPurchaseLogGroupByPayload<T extends CreditPurchaseLogGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<CreditPurchaseLogGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof CreditPurchaseLogGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], CreditPurchaseLogGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], CreditPurchaseLogGroupByOutputType[P]>;
    }
  >
>;

export type CreditPurchaseLogWhereInput = {
  AND?: Prisma.CreditPurchaseLogWhereInput | Prisma.CreditPurchaseLogWhereInput[];
  OR?: Prisma.CreditPurchaseLogWhereInput[];
  NOT?: Prisma.CreditPurchaseLogWhereInput | Prisma.CreditPurchaseLogWhereInput[];
  id?: Prisma.StringFilter<"CreditPurchaseLog"> | string;
  creditBalanceId?: Prisma.StringFilter<"CreditPurchaseLog"> | string;
  credits?: Prisma.IntFilter<"CreditPurchaseLog"> | number;
  createdAt?: Prisma.DateTimeFilter<"CreditPurchaseLog"> | Date | string;
  creditBalance?: Prisma.XOR<Prisma.CreditBalanceScalarRelationFilter, Prisma.CreditBalanceWhereInput>;
};

export type CreditPurchaseLogOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  creditBalanceId?: Prisma.SortOrder;
  credits?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  creditBalance?: Prisma.CreditBalanceOrderByWithRelationInput;
};

export type CreditPurchaseLogWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?: Prisma.CreditPurchaseLogWhereInput | Prisma.CreditPurchaseLogWhereInput[];
    OR?: Prisma.CreditPurchaseLogWhereInput[];
    NOT?: Prisma.CreditPurchaseLogWhereInput | Prisma.CreditPurchaseLogWhereInput[];
    creditBalanceId?: Prisma.StringFilter<"CreditPurchaseLog"> | string;
    credits?: Prisma.IntFilter<"CreditPurchaseLog"> | number;
    createdAt?: Prisma.DateTimeFilter<"CreditPurchaseLog"> | Date | string;
    creditBalance?: Prisma.XOR<Prisma.CreditBalanceScalarRelationFilter, Prisma.CreditBalanceWhereInput>;
  },
  "id"
>;

export type CreditPurchaseLogOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  creditBalanceId?: Prisma.SortOrder;
  credits?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  _count?: Prisma.CreditPurchaseLogCountOrderByAggregateInput;
  _avg?: Prisma.CreditPurchaseLogAvgOrderByAggregateInput;
  _max?: Prisma.CreditPurchaseLogMaxOrderByAggregateInput;
  _min?: Prisma.CreditPurchaseLogMinOrderByAggregateInput;
  _sum?: Prisma.CreditPurchaseLogSumOrderByAggregateInput;
};

export type CreditPurchaseLogScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.CreditPurchaseLogScalarWhereWithAggregatesInput
    | Prisma.CreditPurchaseLogScalarWhereWithAggregatesInput[];
  OR?: Prisma.CreditPurchaseLogScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.CreditPurchaseLogScalarWhereWithAggregatesInput
    | Prisma.CreditPurchaseLogScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"CreditPurchaseLog"> | string;
  creditBalanceId?: Prisma.StringWithAggregatesFilter<"CreditPurchaseLog"> | string;
  credits?: Prisma.IntWithAggregatesFilter<"CreditPurchaseLog"> | number;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"CreditPurchaseLog"> | Date | string;
};

export type CreditPurchaseLogCreateInput = {
  id?: string;
  credits: number;
  createdAt?: Date | string;
  creditBalance: Prisma.CreditBalanceCreateNestedOneWithoutPurchaseLogsInput;
};

export type CreditPurchaseLogUncheckedCreateInput = {
  id?: string;
  creditBalanceId: string;
  credits: number;
  createdAt?: Date | string;
};

export type CreditPurchaseLogUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  credits?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  creditBalance?: Prisma.CreditBalanceUpdateOneRequiredWithoutPurchaseLogsNestedInput;
};

export type CreditPurchaseLogUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  creditBalanceId?: Prisma.StringFieldUpdateOperationsInput | string;
  credits?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CreditPurchaseLogCreateManyInput = {
  id?: string;
  creditBalanceId: string;
  credits: number;
  createdAt?: Date | string;
};

export type CreditPurchaseLogUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  credits?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CreditPurchaseLogUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  creditBalanceId?: Prisma.StringFieldUpdateOperationsInput | string;
  credits?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CreditPurchaseLogListRelationFilter = {
  every?: Prisma.CreditPurchaseLogWhereInput;
  some?: Prisma.CreditPurchaseLogWhereInput;
  none?: Prisma.CreditPurchaseLogWhereInput;
};

export type CreditPurchaseLogOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type CreditPurchaseLogCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  creditBalanceId?: Prisma.SortOrder;
  credits?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
};

export type CreditPurchaseLogAvgOrderByAggregateInput = {
  credits?: Prisma.SortOrder;
};

export type CreditPurchaseLogMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  creditBalanceId?: Prisma.SortOrder;
  credits?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
};

export type CreditPurchaseLogMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  creditBalanceId?: Prisma.SortOrder;
  credits?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
};

export type CreditPurchaseLogSumOrderByAggregateInput = {
  credits?: Prisma.SortOrder;
};

export type CreditPurchaseLogCreateNestedManyWithoutCreditBalanceInput = {
  create?:
    | Prisma.XOR<
        Prisma.CreditPurchaseLogCreateWithoutCreditBalanceInput,
        Prisma.CreditPurchaseLogUncheckedCreateWithoutCreditBalanceInput
      >
    | Prisma.CreditPurchaseLogCreateWithoutCreditBalanceInput[]
    | Prisma.CreditPurchaseLogUncheckedCreateWithoutCreditBalanceInput[];
  connectOrCreate?:
    | Prisma.CreditPurchaseLogCreateOrConnectWithoutCreditBalanceInput
    | Prisma.CreditPurchaseLogCreateOrConnectWithoutCreditBalanceInput[];
  createMany?: Prisma.CreditPurchaseLogCreateManyCreditBalanceInputEnvelope;
  connect?: Prisma.CreditPurchaseLogWhereUniqueInput | Prisma.CreditPurchaseLogWhereUniqueInput[];
};

export type CreditPurchaseLogUncheckedCreateNestedManyWithoutCreditBalanceInput = {
  create?:
    | Prisma.XOR<
        Prisma.CreditPurchaseLogCreateWithoutCreditBalanceInput,
        Prisma.CreditPurchaseLogUncheckedCreateWithoutCreditBalanceInput
      >
    | Prisma.CreditPurchaseLogCreateWithoutCreditBalanceInput[]
    | Prisma.CreditPurchaseLogUncheckedCreateWithoutCreditBalanceInput[];
  connectOrCreate?:
    | Prisma.CreditPurchaseLogCreateOrConnectWithoutCreditBalanceInput
    | Prisma.CreditPurchaseLogCreateOrConnectWithoutCreditBalanceInput[];
  createMany?: Prisma.CreditPurchaseLogCreateManyCreditBalanceInputEnvelope;
  connect?: Prisma.CreditPurchaseLogWhereUniqueInput | Prisma.CreditPurchaseLogWhereUniqueInput[];
};

export type CreditPurchaseLogUpdateManyWithoutCreditBalanceNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.CreditPurchaseLogCreateWithoutCreditBalanceInput,
        Prisma.CreditPurchaseLogUncheckedCreateWithoutCreditBalanceInput
      >
    | Prisma.CreditPurchaseLogCreateWithoutCreditBalanceInput[]
    | Prisma.CreditPurchaseLogUncheckedCreateWithoutCreditBalanceInput[];
  connectOrCreate?:
    | Prisma.CreditPurchaseLogCreateOrConnectWithoutCreditBalanceInput
    | Prisma.CreditPurchaseLogCreateOrConnectWithoutCreditBalanceInput[];
  upsert?:
    | Prisma.CreditPurchaseLogUpsertWithWhereUniqueWithoutCreditBalanceInput
    | Prisma.CreditPurchaseLogUpsertWithWhereUniqueWithoutCreditBalanceInput[];
  createMany?: Prisma.CreditPurchaseLogCreateManyCreditBalanceInputEnvelope;
  set?: Prisma.CreditPurchaseLogWhereUniqueInput | Prisma.CreditPurchaseLogWhereUniqueInput[];
  disconnect?: Prisma.CreditPurchaseLogWhereUniqueInput | Prisma.CreditPurchaseLogWhereUniqueInput[];
  delete?: Prisma.CreditPurchaseLogWhereUniqueInput | Prisma.CreditPurchaseLogWhereUniqueInput[];
  connect?: Prisma.CreditPurchaseLogWhereUniqueInput | Prisma.CreditPurchaseLogWhereUniqueInput[];
  update?:
    | Prisma.CreditPurchaseLogUpdateWithWhereUniqueWithoutCreditBalanceInput
    | Prisma.CreditPurchaseLogUpdateWithWhereUniqueWithoutCreditBalanceInput[];
  updateMany?:
    | Prisma.CreditPurchaseLogUpdateManyWithWhereWithoutCreditBalanceInput
    | Prisma.CreditPurchaseLogUpdateManyWithWhereWithoutCreditBalanceInput[];
  deleteMany?: Prisma.CreditPurchaseLogScalarWhereInput | Prisma.CreditPurchaseLogScalarWhereInput[];
};

export type CreditPurchaseLogUncheckedUpdateManyWithoutCreditBalanceNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.CreditPurchaseLogCreateWithoutCreditBalanceInput,
        Prisma.CreditPurchaseLogUncheckedCreateWithoutCreditBalanceInput
      >
    | Prisma.CreditPurchaseLogCreateWithoutCreditBalanceInput[]
    | Prisma.CreditPurchaseLogUncheckedCreateWithoutCreditBalanceInput[];
  connectOrCreate?:
    | Prisma.CreditPurchaseLogCreateOrConnectWithoutCreditBalanceInput
    | Prisma.CreditPurchaseLogCreateOrConnectWithoutCreditBalanceInput[];
  upsert?:
    | Prisma.CreditPurchaseLogUpsertWithWhereUniqueWithoutCreditBalanceInput
    | Prisma.CreditPurchaseLogUpsertWithWhereUniqueWithoutCreditBalanceInput[];
  createMany?: Prisma.CreditPurchaseLogCreateManyCreditBalanceInputEnvelope;
  set?: Prisma.CreditPurchaseLogWhereUniqueInput | Prisma.CreditPurchaseLogWhereUniqueInput[];
  disconnect?: Prisma.CreditPurchaseLogWhereUniqueInput | Prisma.CreditPurchaseLogWhereUniqueInput[];
  delete?: Prisma.CreditPurchaseLogWhereUniqueInput | Prisma.CreditPurchaseLogWhereUniqueInput[];
  connect?: Prisma.CreditPurchaseLogWhereUniqueInput | Prisma.CreditPurchaseLogWhereUniqueInput[];
  update?:
    | Prisma.CreditPurchaseLogUpdateWithWhereUniqueWithoutCreditBalanceInput
    | Prisma.CreditPurchaseLogUpdateWithWhereUniqueWithoutCreditBalanceInput[];
  updateMany?:
    | Prisma.CreditPurchaseLogUpdateManyWithWhereWithoutCreditBalanceInput
    | Prisma.CreditPurchaseLogUpdateManyWithWhereWithoutCreditBalanceInput[];
  deleteMany?: Prisma.CreditPurchaseLogScalarWhereInput | Prisma.CreditPurchaseLogScalarWhereInput[];
};

export type CreditPurchaseLogCreateWithoutCreditBalanceInput = {
  id?: string;
  credits: number;
  createdAt?: Date | string;
};

export type CreditPurchaseLogUncheckedCreateWithoutCreditBalanceInput = {
  id?: string;
  credits: number;
  createdAt?: Date | string;
};

export type CreditPurchaseLogCreateOrConnectWithoutCreditBalanceInput = {
  where: Prisma.CreditPurchaseLogWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.CreditPurchaseLogCreateWithoutCreditBalanceInput,
    Prisma.CreditPurchaseLogUncheckedCreateWithoutCreditBalanceInput
  >;
};

export type CreditPurchaseLogCreateManyCreditBalanceInputEnvelope = {
  data:
    | Prisma.CreditPurchaseLogCreateManyCreditBalanceInput
    | Prisma.CreditPurchaseLogCreateManyCreditBalanceInput[];
  skipDuplicates?: boolean;
};

export type CreditPurchaseLogUpsertWithWhereUniqueWithoutCreditBalanceInput = {
  where: Prisma.CreditPurchaseLogWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.CreditPurchaseLogUpdateWithoutCreditBalanceInput,
    Prisma.CreditPurchaseLogUncheckedUpdateWithoutCreditBalanceInput
  >;
  create: Prisma.XOR<
    Prisma.CreditPurchaseLogCreateWithoutCreditBalanceInput,
    Prisma.CreditPurchaseLogUncheckedCreateWithoutCreditBalanceInput
  >;
};

export type CreditPurchaseLogUpdateWithWhereUniqueWithoutCreditBalanceInput = {
  where: Prisma.CreditPurchaseLogWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.CreditPurchaseLogUpdateWithoutCreditBalanceInput,
    Prisma.CreditPurchaseLogUncheckedUpdateWithoutCreditBalanceInput
  >;
};

export type CreditPurchaseLogUpdateManyWithWhereWithoutCreditBalanceInput = {
  where: Prisma.CreditPurchaseLogScalarWhereInput;
  data: Prisma.XOR<
    Prisma.CreditPurchaseLogUpdateManyMutationInput,
    Prisma.CreditPurchaseLogUncheckedUpdateManyWithoutCreditBalanceInput
  >;
};

export type CreditPurchaseLogScalarWhereInput = {
  AND?: Prisma.CreditPurchaseLogScalarWhereInput | Prisma.CreditPurchaseLogScalarWhereInput[];
  OR?: Prisma.CreditPurchaseLogScalarWhereInput[];
  NOT?: Prisma.CreditPurchaseLogScalarWhereInput | Prisma.CreditPurchaseLogScalarWhereInput[];
  id?: Prisma.StringFilter<"CreditPurchaseLog"> | string;
  creditBalanceId?: Prisma.StringFilter<"CreditPurchaseLog"> | string;
  credits?: Prisma.IntFilter<"CreditPurchaseLog"> | number;
  createdAt?: Prisma.DateTimeFilter<"CreditPurchaseLog"> | Date | string;
};

export type CreditPurchaseLogCreateManyCreditBalanceInput = {
  id?: string;
  credits: number;
  createdAt?: Date | string;
};

export type CreditPurchaseLogUpdateWithoutCreditBalanceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  credits?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CreditPurchaseLogUncheckedUpdateWithoutCreditBalanceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  credits?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CreditPurchaseLogUncheckedUpdateManyWithoutCreditBalanceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  credits?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CreditPurchaseLogSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    creditBalanceId?: boolean;
    credits?: boolean;
    createdAt?: boolean;
    creditBalance?: boolean | Prisma.CreditBalanceDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["creditPurchaseLog"]
>;

export type CreditPurchaseLogSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    creditBalanceId?: boolean;
    credits?: boolean;
    createdAt?: boolean;
    creditBalance?: boolean | Prisma.CreditBalanceDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["creditPurchaseLog"]
>;

export type CreditPurchaseLogSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    creditBalanceId?: boolean;
    credits?: boolean;
    createdAt?: boolean;
    creditBalance?: boolean | Prisma.CreditBalanceDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["creditPurchaseLog"]
>;

export type CreditPurchaseLogSelectScalar = {
  id?: boolean;
  creditBalanceId?: boolean;
  credits?: boolean;
  createdAt?: boolean;
};

export type CreditPurchaseLogOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  "id" | "creditBalanceId" | "credits" | "createdAt",
  ExtArgs["result"]["creditPurchaseLog"]
>;
export type CreditPurchaseLogInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  creditBalance?: boolean | Prisma.CreditBalanceDefaultArgs<ExtArgs>;
};
export type CreditPurchaseLogIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  creditBalance?: boolean | Prisma.CreditBalanceDefaultArgs<ExtArgs>;
};
export type CreditPurchaseLogIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  creditBalance?: boolean | Prisma.CreditBalanceDefaultArgs<ExtArgs>;
};

export type $CreditPurchaseLogPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "CreditPurchaseLog";
  objects: {
    creditBalance: Prisma.$CreditBalancePayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      creditBalanceId: string;
      credits: number;
      createdAt: Date;
    },
    ExtArgs["result"]["creditPurchaseLog"]
  >;
  composites: {};
};

export type CreditPurchaseLogGetPayload<S extends boolean | null | undefined | CreditPurchaseLogDefaultArgs> =
  runtime.Types.Result.GetResult<Prisma.$CreditPurchaseLogPayload, S>;

export type CreditPurchaseLogCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<CreditPurchaseLogFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: CreditPurchaseLogCountAggregateInputType | true;
};

export interface CreditPurchaseLogDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["CreditPurchaseLog"];
    meta: { name: "CreditPurchaseLog" };
  };
  /**
   * Find zero or one CreditPurchaseLog that matches the filter.
   * @param {CreditPurchaseLogFindUniqueArgs} args - Arguments to find a CreditPurchaseLog
   * @example
   * // Get one CreditPurchaseLog
   * const creditPurchaseLog = await prisma.creditPurchaseLog.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends CreditPurchaseLogFindUniqueArgs>(
    args: Prisma.SelectSubset<T, CreditPurchaseLogFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__CreditPurchaseLogClient<
    runtime.Types.Result.GetResult<
      Prisma.$CreditPurchaseLogPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one CreditPurchaseLog that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {CreditPurchaseLogFindUniqueOrThrowArgs} args - Arguments to find a CreditPurchaseLog
   * @example
   * // Get one CreditPurchaseLog
   * const creditPurchaseLog = await prisma.creditPurchaseLog.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends CreditPurchaseLogFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, CreditPurchaseLogFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__CreditPurchaseLogClient<
    runtime.Types.Result.GetResult<
      Prisma.$CreditPurchaseLogPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first CreditPurchaseLog that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CreditPurchaseLogFindFirstArgs} args - Arguments to find a CreditPurchaseLog
   * @example
   * // Get one CreditPurchaseLog
   * const creditPurchaseLog = await prisma.creditPurchaseLog.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends CreditPurchaseLogFindFirstArgs>(
    args?: Prisma.SelectSubset<T, CreditPurchaseLogFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__CreditPurchaseLogClient<
    runtime.Types.Result.GetResult<
      Prisma.$CreditPurchaseLogPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first CreditPurchaseLog that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CreditPurchaseLogFindFirstOrThrowArgs} args - Arguments to find a CreditPurchaseLog
   * @example
   * // Get one CreditPurchaseLog
   * const creditPurchaseLog = await prisma.creditPurchaseLog.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends CreditPurchaseLogFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, CreditPurchaseLogFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__CreditPurchaseLogClient<
    runtime.Types.Result.GetResult<
      Prisma.$CreditPurchaseLogPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more CreditPurchaseLogs that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CreditPurchaseLogFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all CreditPurchaseLogs
   * const creditPurchaseLogs = await prisma.creditPurchaseLog.findMany()
   *
   * // Get first 10 CreditPurchaseLogs
   * const creditPurchaseLogs = await prisma.creditPurchaseLog.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const creditPurchaseLogWithIdOnly = await prisma.creditPurchaseLog.findMany({ select: { id: true } })
   *
   */
  findMany<T extends CreditPurchaseLogFindManyArgs>(
    args?: Prisma.SelectSubset<T, CreditPurchaseLogFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$CreditPurchaseLogPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a CreditPurchaseLog.
   * @param {CreditPurchaseLogCreateArgs} args - Arguments to create a CreditPurchaseLog.
   * @example
   * // Create one CreditPurchaseLog
   * const CreditPurchaseLog = await prisma.creditPurchaseLog.create({
   *   data: {
   *     // ... data to create a CreditPurchaseLog
   *   }
   * })
   *
   */
  create<T extends CreditPurchaseLogCreateArgs>(
    args: Prisma.SelectSubset<T, CreditPurchaseLogCreateArgs<ExtArgs>>
  ): Prisma.Prisma__CreditPurchaseLogClient<
    runtime.Types.Result.GetResult<Prisma.$CreditPurchaseLogPayload<ExtArgs>, T, "create", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many CreditPurchaseLogs.
   * @param {CreditPurchaseLogCreateManyArgs} args - Arguments to create many CreditPurchaseLogs.
   * @example
   * // Create many CreditPurchaseLogs
   * const creditPurchaseLog = await prisma.creditPurchaseLog.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends CreditPurchaseLogCreateManyArgs>(
    args?: Prisma.SelectSubset<T, CreditPurchaseLogCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many CreditPurchaseLogs and returns the data saved in the database.
   * @param {CreditPurchaseLogCreateManyAndReturnArgs} args - Arguments to create many CreditPurchaseLogs.
   * @example
   * // Create many CreditPurchaseLogs
   * const creditPurchaseLog = await prisma.creditPurchaseLog.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many CreditPurchaseLogs and only return the `id`
   * const creditPurchaseLogWithIdOnly = await prisma.creditPurchaseLog.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends CreditPurchaseLogCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, CreditPurchaseLogCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$CreditPurchaseLogPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a CreditPurchaseLog.
   * @param {CreditPurchaseLogDeleteArgs} args - Arguments to delete one CreditPurchaseLog.
   * @example
   * // Delete one CreditPurchaseLog
   * const CreditPurchaseLog = await prisma.creditPurchaseLog.delete({
   *   where: {
   *     // ... filter to delete one CreditPurchaseLog
   *   }
   * })
   *
   */
  delete<T extends CreditPurchaseLogDeleteArgs>(
    args: Prisma.SelectSubset<T, CreditPurchaseLogDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__CreditPurchaseLogClient<
    runtime.Types.Result.GetResult<Prisma.$CreditPurchaseLogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one CreditPurchaseLog.
   * @param {CreditPurchaseLogUpdateArgs} args - Arguments to update one CreditPurchaseLog.
   * @example
   * // Update one CreditPurchaseLog
   * const creditPurchaseLog = await prisma.creditPurchaseLog.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends CreditPurchaseLogUpdateArgs>(
    args: Prisma.SelectSubset<T, CreditPurchaseLogUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__CreditPurchaseLogClient<
    runtime.Types.Result.GetResult<Prisma.$CreditPurchaseLogPayload<ExtArgs>, T, "update", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more CreditPurchaseLogs.
   * @param {CreditPurchaseLogDeleteManyArgs} args - Arguments to filter CreditPurchaseLogs to delete.
   * @example
   * // Delete a few CreditPurchaseLogs
   * const { count } = await prisma.creditPurchaseLog.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends CreditPurchaseLogDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, CreditPurchaseLogDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more CreditPurchaseLogs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CreditPurchaseLogUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many CreditPurchaseLogs
   * const creditPurchaseLog = await prisma.creditPurchaseLog.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends CreditPurchaseLogUpdateManyArgs>(
    args: Prisma.SelectSubset<T, CreditPurchaseLogUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more CreditPurchaseLogs and returns the data updated in the database.
   * @param {CreditPurchaseLogUpdateManyAndReturnArgs} args - Arguments to update many CreditPurchaseLogs.
   * @example
   * // Update many CreditPurchaseLogs
   * const creditPurchaseLog = await prisma.creditPurchaseLog.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more CreditPurchaseLogs and only return the `id`
   * const creditPurchaseLogWithIdOnly = await prisma.creditPurchaseLog.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends CreditPurchaseLogUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, CreditPurchaseLogUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$CreditPurchaseLogPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one CreditPurchaseLog.
   * @param {CreditPurchaseLogUpsertArgs} args - Arguments to update or create a CreditPurchaseLog.
   * @example
   * // Update or create a CreditPurchaseLog
   * const creditPurchaseLog = await prisma.creditPurchaseLog.upsert({
   *   create: {
   *     // ... data to create a CreditPurchaseLog
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the CreditPurchaseLog we want to update
   *   }
   * })
   */
  upsert<T extends CreditPurchaseLogUpsertArgs>(
    args: Prisma.SelectSubset<T, CreditPurchaseLogUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__CreditPurchaseLogClient<
    runtime.Types.Result.GetResult<Prisma.$CreditPurchaseLogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of CreditPurchaseLogs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CreditPurchaseLogCountArgs} args - Arguments to filter CreditPurchaseLogs to count.
   * @example
   * // Count the number of CreditPurchaseLogs
   * const count = await prisma.creditPurchaseLog.count({
   *   where: {
   *     // ... the filter for the CreditPurchaseLogs we want to count
   *   }
   * })
   **/
  count<T extends CreditPurchaseLogCountArgs>(
    args?: Prisma.Subset<T, CreditPurchaseLogCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], CreditPurchaseLogCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a CreditPurchaseLog.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CreditPurchaseLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends CreditPurchaseLogAggregateArgs>(
    args: Prisma.Subset<T, CreditPurchaseLogAggregateArgs>
  ): Prisma.PrismaPromise<GetCreditPurchaseLogAggregateType<T>>;

  /**
   * Group by CreditPurchaseLog.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CreditPurchaseLogGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends CreditPurchaseLogGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: CreditPurchaseLogGroupByArgs["orderBy"] }
      : { orderBy?: CreditPurchaseLogGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, CreditPurchaseLogGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetCreditPurchaseLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the CreditPurchaseLog model
   */
  readonly fields: CreditPurchaseLogFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for CreditPurchaseLog.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__CreditPurchaseLogClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  creditBalance<T extends Prisma.CreditBalanceDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.CreditBalanceDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__CreditBalanceClient<
    | runtime.Types.Result.GetResult<
        Prisma.$CreditBalancePayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the CreditPurchaseLog model
 */
export interface CreditPurchaseLogFieldRefs {
  readonly id: Prisma.FieldRef<"CreditPurchaseLog", "String">;
  readonly creditBalanceId: Prisma.FieldRef<"CreditPurchaseLog", "String">;
  readonly credits: Prisma.FieldRef<"CreditPurchaseLog", "Int">;
  readonly createdAt: Prisma.FieldRef<"CreditPurchaseLog", "DateTime">;
}

// Custom InputTypes
/**
 * CreditPurchaseLog findUnique
 */
export type CreditPurchaseLogFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CreditPurchaseLog
   */
  select?: Prisma.CreditPurchaseLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CreditPurchaseLog
   */
  omit?: Prisma.CreditPurchaseLogOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CreditPurchaseLogInclude<ExtArgs> | null;
  /**
   * Filter, which CreditPurchaseLog to fetch.
   */
  where: Prisma.CreditPurchaseLogWhereUniqueInput;
};

/**
 * CreditPurchaseLog findUniqueOrThrow
 */
export type CreditPurchaseLogFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CreditPurchaseLog
   */
  select?: Prisma.CreditPurchaseLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CreditPurchaseLog
   */
  omit?: Prisma.CreditPurchaseLogOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CreditPurchaseLogInclude<ExtArgs> | null;
  /**
   * Filter, which CreditPurchaseLog to fetch.
   */
  where: Prisma.CreditPurchaseLogWhereUniqueInput;
};

/**
 * CreditPurchaseLog findFirst
 */
export type CreditPurchaseLogFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CreditPurchaseLog
   */
  select?: Prisma.CreditPurchaseLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CreditPurchaseLog
   */
  omit?: Prisma.CreditPurchaseLogOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CreditPurchaseLogInclude<ExtArgs> | null;
  /**
   * Filter, which CreditPurchaseLog to fetch.
   */
  where?: Prisma.CreditPurchaseLogWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of CreditPurchaseLogs to fetch.
   */
  orderBy?:
    | Prisma.CreditPurchaseLogOrderByWithRelationInput
    | Prisma.CreditPurchaseLogOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for CreditPurchaseLogs.
   */
  cursor?: Prisma.CreditPurchaseLogWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` CreditPurchaseLogs from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` CreditPurchaseLogs.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of CreditPurchaseLogs.
   */
  distinct?: Prisma.CreditPurchaseLogScalarFieldEnum | Prisma.CreditPurchaseLogScalarFieldEnum[];
};

/**
 * CreditPurchaseLog findFirstOrThrow
 */
export type CreditPurchaseLogFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CreditPurchaseLog
   */
  select?: Prisma.CreditPurchaseLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CreditPurchaseLog
   */
  omit?: Prisma.CreditPurchaseLogOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CreditPurchaseLogInclude<ExtArgs> | null;
  /**
   * Filter, which CreditPurchaseLog to fetch.
   */
  where?: Prisma.CreditPurchaseLogWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of CreditPurchaseLogs to fetch.
   */
  orderBy?:
    | Prisma.CreditPurchaseLogOrderByWithRelationInput
    | Prisma.CreditPurchaseLogOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for CreditPurchaseLogs.
   */
  cursor?: Prisma.CreditPurchaseLogWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` CreditPurchaseLogs from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` CreditPurchaseLogs.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of CreditPurchaseLogs.
   */
  distinct?: Prisma.CreditPurchaseLogScalarFieldEnum | Prisma.CreditPurchaseLogScalarFieldEnum[];
};

/**
 * CreditPurchaseLog findMany
 */
export type CreditPurchaseLogFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CreditPurchaseLog
   */
  select?: Prisma.CreditPurchaseLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CreditPurchaseLog
   */
  omit?: Prisma.CreditPurchaseLogOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CreditPurchaseLogInclude<ExtArgs> | null;
  /**
   * Filter, which CreditPurchaseLogs to fetch.
   */
  where?: Prisma.CreditPurchaseLogWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of CreditPurchaseLogs to fetch.
   */
  orderBy?:
    | Prisma.CreditPurchaseLogOrderByWithRelationInput
    | Prisma.CreditPurchaseLogOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing CreditPurchaseLogs.
   */
  cursor?: Prisma.CreditPurchaseLogWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` CreditPurchaseLogs from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` CreditPurchaseLogs.
   */
  skip?: number;
  distinct?: Prisma.CreditPurchaseLogScalarFieldEnum | Prisma.CreditPurchaseLogScalarFieldEnum[];
};

/**
 * CreditPurchaseLog create
 */
export type CreditPurchaseLogCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CreditPurchaseLog
   */
  select?: Prisma.CreditPurchaseLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CreditPurchaseLog
   */
  omit?: Prisma.CreditPurchaseLogOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CreditPurchaseLogInclude<ExtArgs> | null;
  /**
   * The data needed to create a CreditPurchaseLog.
   */
  data: Prisma.XOR<Prisma.CreditPurchaseLogCreateInput, Prisma.CreditPurchaseLogUncheckedCreateInput>;
};

/**
 * CreditPurchaseLog createMany
 */
export type CreditPurchaseLogCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many CreditPurchaseLogs.
   */
  data: Prisma.CreditPurchaseLogCreateManyInput | Prisma.CreditPurchaseLogCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * CreditPurchaseLog createManyAndReturn
 */
export type CreditPurchaseLogCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CreditPurchaseLog
   */
  select?: Prisma.CreditPurchaseLogSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the CreditPurchaseLog
   */
  omit?: Prisma.CreditPurchaseLogOmit<ExtArgs> | null;
  /**
   * The data used to create many CreditPurchaseLogs.
   */
  data: Prisma.CreditPurchaseLogCreateManyInput | Prisma.CreditPurchaseLogCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CreditPurchaseLogIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * CreditPurchaseLog update
 */
export type CreditPurchaseLogUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CreditPurchaseLog
   */
  select?: Prisma.CreditPurchaseLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CreditPurchaseLog
   */
  omit?: Prisma.CreditPurchaseLogOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CreditPurchaseLogInclude<ExtArgs> | null;
  /**
   * The data needed to update a CreditPurchaseLog.
   */
  data: Prisma.XOR<Prisma.CreditPurchaseLogUpdateInput, Prisma.CreditPurchaseLogUncheckedUpdateInput>;
  /**
   * Choose, which CreditPurchaseLog to update.
   */
  where: Prisma.CreditPurchaseLogWhereUniqueInput;
};

/**
 * CreditPurchaseLog updateMany
 */
export type CreditPurchaseLogUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update CreditPurchaseLogs.
   */
  data: Prisma.XOR<
    Prisma.CreditPurchaseLogUpdateManyMutationInput,
    Prisma.CreditPurchaseLogUncheckedUpdateManyInput
  >;
  /**
   * Filter which CreditPurchaseLogs to update
   */
  where?: Prisma.CreditPurchaseLogWhereInput;
  /**
   * Limit how many CreditPurchaseLogs to update.
   */
  limit?: number;
};

/**
 * CreditPurchaseLog updateManyAndReturn
 */
export type CreditPurchaseLogUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CreditPurchaseLog
   */
  select?: Prisma.CreditPurchaseLogSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the CreditPurchaseLog
   */
  omit?: Prisma.CreditPurchaseLogOmit<ExtArgs> | null;
  /**
   * The data used to update CreditPurchaseLogs.
   */
  data: Prisma.XOR<
    Prisma.CreditPurchaseLogUpdateManyMutationInput,
    Prisma.CreditPurchaseLogUncheckedUpdateManyInput
  >;
  /**
   * Filter which CreditPurchaseLogs to update
   */
  where?: Prisma.CreditPurchaseLogWhereInput;
  /**
   * Limit how many CreditPurchaseLogs to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CreditPurchaseLogIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * CreditPurchaseLog upsert
 */
export type CreditPurchaseLogUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CreditPurchaseLog
   */
  select?: Prisma.CreditPurchaseLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CreditPurchaseLog
   */
  omit?: Prisma.CreditPurchaseLogOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CreditPurchaseLogInclude<ExtArgs> | null;
  /**
   * The filter to search for the CreditPurchaseLog to update in case it exists.
   */
  where: Prisma.CreditPurchaseLogWhereUniqueInput;
  /**
   * In case the CreditPurchaseLog found by the `where` argument doesn't exist, create a new CreditPurchaseLog with this data.
   */
  create: Prisma.XOR<Prisma.CreditPurchaseLogCreateInput, Prisma.CreditPurchaseLogUncheckedCreateInput>;
  /**
   * In case the CreditPurchaseLog was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.CreditPurchaseLogUpdateInput, Prisma.CreditPurchaseLogUncheckedUpdateInput>;
};

/**
 * CreditPurchaseLog delete
 */
export type CreditPurchaseLogDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CreditPurchaseLog
   */
  select?: Prisma.CreditPurchaseLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CreditPurchaseLog
   */
  omit?: Prisma.CreditPurchaseLogOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CreditPurchaseLogInclude<ExtArgs> | null;
  /**
   * Filter which CreditPurchaseLog to delete.
   */
  where: Prisma.CreditPurchaseLogWhereUniqueInput;
};

/**
 * CreditPurchaseLog deleteMany
 */
export type CreditPurchaseLogDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which CreditPurchaseLogs to delete
   */
  where?: Prisma.CreditPurchaseLogWhereInput;
  /**
   * Limit how many CreditPurchaseLogs to delete.
   */
  limit?: number;
};

/**
 * CreditPurchaseLog without action
 */
export type CreditPurchaseLogDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the CreditPurchaseLog
   */
  select?: Prisma.CreditPurchaseLogSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CreditPurchaseLog
   */
  omit?: Prisma.CreditPurchaseLogOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CreditPurchaseLogInclude<ExtArgs> | null;
};
