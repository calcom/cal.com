/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `InternalNotePreset` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model InternalNotePreset
 *
 */
export type InternalNotePresetModel =
  runtime.Types.Result.DefaultSelection<Prisma.$InternalNotePresetPayload>;

export type AggregateInternalNotePreset = {
  _count: InternalNotePresetCountAggregateOutputType | null;
  _avg: InternalNotePresetAvgAggregateOutputType | null;
  _sum: InternalNotePresetSumAggregateOutputType | null;
  _min: InternalNotePresetMinAggregateOutputType | null;
  _max: InternalNotePresetMaxAggregateOutputType | null;
};

export type InternalNotePresetAvgAggregateOutputType = {
  id: number | null;
  teamId: number | null;
};

export type InternalNotePresetSumAggregateOutputType = {
  id: number | null;
  teamId: number | null;
};

export type InternalNotePresetMinAggregateOutputType = {
  id: number | null;
  name: string | null;
  cancellationReason: string | null;
  teamId: number | null;
  createdAt: Date | null;
};

export type InternalNotePresetMaxAggregateOutputType = {
  id: number | null;
  name: string | null;
  cancellationReason: string | null;
  teamId: number | null;
  createdAt: Date | null;
};

export type InternalNotePresetCountAggregateOutputType = {
  id: number;
  name: number;
  cancellationReason: number;
  teamId: number;
  createdAt: number;
  _all: number;
};

export type InternalNotePresetAvgAggregateInputType = {
  id?: true;
  teamId?: true;
};

export type InternalNotePresetSumAggregateInputType = {
  id?: true;
  teamId?: true;
};

export type InternalNotePresetMinAggregateInputType = {
  id?: true;
  name?: true;
  cancellationReason?: true;
  teamId?: true;
  createdAt?: true;
};

export type InternalNotePresetMaxAggregateInputType = {
  id?: true;
  name?: true;
  cancellationReason?: true;
  teamId?: true;
  createdAt?: true;
};

export type InternalNotePresetCountAggregateInputType = {
  id?: true;
  name?: true;
  cancellationReason?: true;
  teamId?: true;
  createdAt?: true;
  _all?: true;
};

export type InternalNotePresetAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which InternalNotePreset to aggregate.
   */
  where?: Prisma.InternalNotePresetWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of InternalNotePresets to fetch.
   */
  orderBy?:
    | Prisma.InternalNotePresetOrderByWithRelationInput
    | Prisma.InternalNotePresetOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.InternalNotePresetWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` InternalNotePresets from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` InternalNotePresets.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned InternalNotePresets
   **/
  _count?: true | InternalNotePresetCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: InternalNotePresetAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: InternalNotePresetSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: InternalNotePresetMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: InternalNotePresetMaxAggregateInputType;
};

export type GetInternalNotePresetAggregateType<T extends InternalNotePresetAggregateArgs> = {
  [P in keyof T & keyof AggregateInternalNotePreset]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateInternalNotePreset[P]>
    : Prisma.GetScalarType<T[P], AggregateInternalNotePreset[P]>;
};

export type InternalNotePresetGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.InternalNotePresetWhereInput;
  orderBy?:
    | Prisma.InternalNotePresetOrderByWithAggregationInput
    | Prisma.InternalNotePresetOrderByWithAggregationInput[];
  by: Prisma.InternalNotePresetScalarFieldEnum[] | Prisma.InternalNotePresetScalarFieldEnum;
  having?: Prisma.InternalNotePresetScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: InternalNotePresetCountAggregateInputType | true;
  _avg?: InternalNotePresetAvgAggregateInputType;
  _sum?: InternalNotePresetSumAggregateInputType;
  _min?: InternalNotePresetMinAggregateInputType;
  _max?: InternalNotePresetMaxAggregateInputType;
};

export type InternalNotePresetGroupByOutputType = {
  id: number;
  name: string;
  cancellationReason: string | null;
  teamId: number;
  createdAt: Date;
  _count: InternalNotePresetCountAggregateOutputType | null;
  _avg: InternalNotePresetAvgAggregateOutputType | null;
  _sum: InternalNotePresetSumAggregateOutputType | null;
  _min: InternalNotePresetMinAggregateOutputType | null;
  _max: InternalNotePresetMaxAggregateOutputType | null;
};

type GetInternalNotePresetGroupByPayload<T extends InternalNotePresetGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<InternalNotePresetGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof InternalNotePresetGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], InternalNotePresetGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], InternalNotePresetGroupByOutputType[P]>;
    }
  >
>;

export type InternalNotePresetWhereInput = {
  AND?: Prisma.InternalNotePresetWhereInput | Prisma.InternalNotePresetWhereInput[];
  OR?: Prisma.InternalNotePresetWhereInput[];
  NOT?: Prisma.InternalNotePresetWhereInput | Prisma.InternalNotePresetWhereInput[];
  id?: Prisma.IntFilter<"InternalNotePreset"> | number;
  name?: Prisma.StringFilter<"InternalNotePreset"> | string;
  cancellationReason?: Prisma.StringNullableFilter<"InternalNotePreset"> | string | null;
  teamId?: Prisma.IntFilter<"InternalNotePreset"> | number;
  createdAt?: Prisma.DateTimeFilter<"InternalNotePreset"> | Date | string;
  team?: Prisma.XOR<Prisma.TeamScalarRelationFilter, Prisma.TeamWhereInput>;
  BookingInternalNote?: Prisma.BookingInternalNoteListRelationFilter;
};

export type InternalNotePresetOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  cancellationReason?: Prisma.SortOrderInput | Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  team?: Prisma.TeamOrderByWithRelationInput;
  BookingInternalNote?: Prisma.BookingInternalNoteOrderByRelationAggregateInput;
};

export type InternalNotePresetWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    teamId_name?: Prisma.InternalNotePresetTeamIdNameCompoundUniqueInput;
    AND?: Prisma.InternalNotePresetWhereInput | Prisma.InternalNotePresetWhereInput[];
    OR?: Prisma.InternalNotePresetWhereInput[];
    NOT?: Prisma.InternalNotePresetWhereInput | Prisma.InternalNotePresetWhereInput[];
    name?: Prisma.StringFilter<"InternalNotePreset"> | string;
    cancellationReason?: Prisma.StringNullableFilter<"InternalNotePreset"> | string | null;
    teamId?: Prisma.IntFilter<"InternalNotePreset"> | number;
    createdAt?: Prisma.DateTimeFilter<"InternalNotePreset"> | Date | string;
    team?: Prisma.XOR<Prisma.TeamScalarRelationFilter, Prisma.TeamWhereInput>;
    BookingInternalNote?: Prisma.BookingInternalNoteListRelationFilter;
  },
  "id" | "teamId_name"
>;

export type InternalNotePresetOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  cancellationReason?: Prisma.SortOrderInput | Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  _count?: Prisma.InternalNotePresetCountOrderByAggregateInput;
  _avg?: Prisma.InternalNotePresetAvgOrderByAggregateInput;
  _max?: Prisma.InternalNotePresetMaxOrderByAggregateInput;
  _min?: Prisma.InternalNotePresetMinOrderByAggregateInput;
  _sum?: Prisma.InternalNotePresetSumOrderByAggregateInput;
};

export type InternalNotePresetScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.InternalNotePresetScalarWhereWithAggregatesInput
    | Prisma.InternalNotePresetScalarWhereWithAggregatesInput[];
  OR?: Prisma.InternalNotePresetScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.InternalNotePresetScalarWhereWithAggregatesInput
    | Prisma.InternalNotePresetScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"InternalNotePreset"> | number;
  name?: Prisma.StringWithAggregatesFilter<"InternalNotePreset"> | string;
  cancellationReason?: Prisma.StringNullableWithAggregatesFilter<"InternalNotePreset"> | string | null;
  teamId?: Prisma.IntWithAggregatesFilter<"InternalNotePreset"> | number;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"InternalNotePreset"> | Date | string;
};

export type InternalNotePresetCreateInput = {
  name: string;
  cancellationReason?: string | null;
  createdAt?: Date | string;
  team: Prisma.TeamCreateNestedOneWithoutInternalNotePresetsInput;
  BookingInternalNote?: Prisma.BookingInternalNoteCreateNestedManyWithoutNotePresetInput;
};

export type InternalNotePresetUncheckedCreateInput = {
  id?: number;
  name: string;
  cancellationReason?: string | null;
  teamId: number;
  createdAt?: Date | string;
  BookingInternalNote?: Prisma.BookingInternalNoteUncheckedCreateNestedManyWithoutNotePresetInput;
};

export type InternalNotePresetUpdateInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  cancellationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  team?: Prisma.TeamUpdateOneRequiredWithoutInternalNotePresetsNestedInput;
  BookingInternalNote?: Prisma.BookingInternalNoteUpdateManyWithoutNotePresetNestedInput;
};

export type InternalNotePresetUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  cancellationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  teamId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  BookingInternalNote?: Prisma.BookingInternalNoteUncheckedUpdateManyWithoutNotePresetNestedInput;
};

export type InternalNotePresetCreateManyInput = {
  id?: number;
  name: string;
  cancellationReason?: string | null;
  teamId: number;
  createdAt?: Date | string;
};

export type InternalNotePresetUpdateManyMutationInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  cancellationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type InternalNotePresetUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  cancellationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  teamId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type InternalNotePresetListRelationFilter = {
  every?: Prisma.InternalNotePresetWhereInput;
  some?: Prisma.InternalNotePresetWhereInput;
  none?: Prisma.InternalNotePresetWhereInput;
};

export type InternalNotePresetOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type InternalNotePresetTeamIdNameCompoundUniqueInput = {
  teamId: number;
  name: string;
};

export type InternalNotePresetCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  cancellationReason?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
};

export type InternalNotePresetAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
};

export type InternalNotePresetMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  cancellationReason?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
};

export type InternalNotePresetMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  cancellationReason?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
};

export type InternalNotePresetSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  teamId?: Prisma.SortOrder;
};

export type InternalNotePresetNullableScalarRelationFilter = {
  is?: Prisma.InternalNotePresetWhereInput | null;
  isNot?: Prisma.InternalNotePresetWhereInput | null;
};

export type InternalNotePresetCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<
        Prisma.InternalNotePresetCreateWithoutTeamInput,
        Prisma.InternalNotePresetUncheckedCreateWithoutTeamInput
      >
    | Prisma.InternalNotePresetCreateWithoutTeamInput[]
    | Prisma.InternalNotePresetUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.InternalNotePresetCreateOrConnectWithoutTeamInput
    | Prisma.InternalNotePresetCreateOrConnectWithoutTeamInput[];
  createMany?: Prisma.InternalNotePresetCreateManyTeamInputEnvelope;
  connect?: Prisma.InternalNotePresetWhereUniqueInput | Prisma.InternalNotePresetWhereUniqueInput[];
};

export type InternalNotePresetUncheckedCreateNestedManyWithoutTeamInput = {
  create?:
    | Prisma.XOR<
        Prisma.InternalNotePresetCreateWithoutTeamInput,
        Prisma.InternalNotePresetUncheckedCreateWithoutTeamInput
      >
    | Prisma.InternalNotePresetCreateWithoutTeamInput[]
    | Prisma.InternalNotePresetUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.InternalNotePresetCreateOrConnectWithoutTeamInput
    | Prisma.InternalNotePresetCreateOrConnectWithoutTeamInput[];
  createMany?: Prisma.InternalNotePresetCreateManyTeamInputEnvelope;
  connect?: Prisma.InternalNotePresetWhereUniqueInput | Prisma.InternalNotePresetWhereUniqueInput[];
};

export type InternalNotePresetUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.InternalNotePresetCreateWithoutTeamInput,
        Prisma.InternalNotePresetUncheckedCreateWithoutTeamInput
      >
    | Prisma.InternalNotePresetCreateWithoutTeamInput[]
    | Prisma.InternalNotePresetUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.InternalNotePresetCreateOrConnectWithoutTeamInput
    | Prisma.InternalNotePresetCreateOrConnectWithoutTeamInput[];
  upsert?:
    | Prisma.InternalNotePresetUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.InternalNotePresetUpsertWithWhereUniqueWithoutTeamInput[];
  createMany?: Prisma.InternalNotePresetCreateManyTeamInputEnvelope;
  set?: Prisma.InternalNotePresetWhereUniqueInput | Prisma.InternalNotePresetWhereUniqueInput[];
  disconnect?: Prisma.InternalNotePresetWhereUniqueInput | Prisma.InternalNotePresetWhereUniqueInput[];
  delete?: Prisma.InternalNotePresetWhereUniqueInput | Prisma.InternalNotePresetWhereUniqueInput[];
  connect?: Prisma.InternalNotePresetWhereUniqueInput | Prisma.InternalNotePresetWhereUniqueInput[];
  update?:
    | Prisma.InternalNotePresetUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.InternalNotePresetUpdateWithWhereUniqueWithoutTeamInput[];
  updateMany?:
    | Prisma.InternalNotePresetUpdateManyWithWhereWithoutTeamInput
    | Prisma.InternalNotePresetUpdateManyWithWhereWithoutTeamInput[];
  deleteMany?: Prisma.InternalNotePresetScalarWhereInput | Prisma.InternalNotePresetScalarWhereInput[];
};

export type InternalNotePresetUncheckedUpdateManyWithoutTeamNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.InternalNotePresetCreateWithoutTeamInput,
        Prisma.InternalNotePresetUncheckedCreateWithoutTeamInput
      >
    | Prisma.InternalNotePresetCreateWithoutTeamInput[]
    | Prisma.InternalNotePresetUncheckedCreateWithoutTeamInput[];
  connectOrCreate?:
    | Prisma.InternalNotePresetCreateOrConnectWithoutTeamInput
    | Prisma.InternalNotePresetCreateOrConnectWithoutTeamInput[];
  upsert?:
    | Prisma.InternalNotePresetUpsertWithWhereUniqueWithoutTeamInput
    | Prisma.InternalNotePresetUpsertWithWhereUniqueWithoutTeamInput[];
  createMany?: Prisma.InternalNotePresetCreateManyTeamInputEnvelope;
  set?: Prisma.InternalNotePresetWhereUniqueInput | Prisma.InternalNotePresetWhereUniqueInput[];
  disconnect?: Prisma.InternalNotePresetWhereUniqueInput | Prisma.InternalNotePresetWhereUniqueInput[];
  delete?: Prisma.InternalNotePresetWhereUniqueInput | Prisma.InternalNotePresetWhereUniqueInput[];
  connect?: Prisma.InternalNotePresetWhereUniqueInput | Prisma.InternalNotePresetWhereUniqueInput[];
  update?:
    | Prisma.InternalNotePresetUpdateWithWhereUniqueWithoutTeamInput
    | Prisma.InternalNotePresetUpdateWithWhereUniqueWithoutTeamInput[];
  updateMany?:
    | Prisma.InternalNotePresetUpdateManyWithWhereWithoutTeamInput
    | Prisma.InternalNotePresetUpdateManyWithWhereWithoutTeamInput[];
  deleteMany?: Prisma.InternalNotePresetScalarWhereInput | Prisma.InternalNotePresetScalarWhereInput[];
};

export type InternalNotePresetCreateNestedOneWithoutBookingInternalNoteInput = {
  create?: Prisma.XOR<
    Prisma.InternalNotePresetCreateWithoutBookingInternalNoteInput,
    Prisma.InternalNotePresetUncheckedCreateWithoutBookingInternalNoteInput
  >;
  connectOrCreate?: Prisma.InternalNotePresetCreateOrConnectWithoutBookingInternalNoteInput;
  connect?: Prisma.InternalNotePresetWhereUniqueInput;
};

export type InternalNotePresetUpdateOneWithoutBookingInternalNoteNestedInput = {
  create?: Prisma.XOR<
    Prisma.InternalNotePresetCreateWithoutBookingInternalNoteInput,
    Prisma.InternalNotePresetUncheckedCreateWithoutBookingInternalNoteInput
  >;
  connectOrCreate?: Prisma.InternalNotePresetCreateOrConnectWithoutBookingInternalNoteInput;
  upsert?: Prisma.InternalNotePresetUpsertWithoutBookingInternalNoteInput;
  disconnect?: Prisma.InternalNotePresetWhereInput | boolean;
  delete?: Prisma.InternalNotePresetWhereInput | boolean;
  connect?: Prisma.InternalNotePresetWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.InternalNotePresetUpdateToOneWithWhereWithoutBookingInternalNoteInput,
      Prisma.InternalNotePresetUpdateWithoutBookingInternalNoteInput
    >,
    Prisma.InternalNotePresetUncheckedUpdateWithoutBookingInternalNoteInput
  >;
};

export type InternalNotePresetCreateWithoutTeamInput = {
  name: string;
  cancellationReason?: string | null;
  createdAt?: Date | string;
  BookingInternalNote?: Prisma.BookingInternalNoteCreateNestedManyWithoutNotePresetInput;
};

export type InternalNotePresetUncheckedCreateWithoutTeamInput = {
  id?: number;
  name: string;
  cancellationReason?: string | null;
  createdAt?: Date | string;
  BookingInternalNote?: Prisma.BookingInternalNoteUncheckedCreateNestedManyWithoutNotePresetInput;
};

export type InternalNotePresetCreateOrConnectWithoutTeamInput = {
  where: Prisma.InternalNotePresetWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.InternalNotePresetCreateWithoutTeamInput,
    Prisma.InternalNotePresetUncheckedCreateWithoutTeamInput
  >;
};

export type InternalNotePresetCreateManyTeamInputEnvelope = {
  data: Prisma.InternalNotePresetCreateManyTeamInput | Prisma.InternalNotePresetCreateManyTeamInput[];
  skipDuplicates?: boolean;
};

export type InternalNotePresetUpsertWithWhereUniqueWithoutTeamInput = {
  where: Prisma.InternalNotePresetWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.InternalNotePresetUpdateWithoutTeamInput,
    Prisma.InternalNotePresetUncheckedUpdateWithoutTeamInput
  >;
  create: Prisma.XOR<
    Prisma.InternalNotePresetCreateWithoutTeamInput,
    Prisma.InternalNotePresetUncheckedCreateWithoutTeamInput
  >;
};

export type InternalNotePresetUpdateWithWhereUniqueWithoutTeamInput = {
  where: Prisma.InternalNotePresetWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.InternalNotePresetUpdateWithoutTeamInput,
    Prisma.InternalNotePresetUncheckedUpdateWithoutTeamInput
  >;
};

export type InternalNotePresetUpdateManyWithWhereWithoutTeamInput = {
  where: Prisma.InternalNotePresetScalarWhereInput;
  data: Prisma.XOR<
    Prisma.InternalNotePresetUpdateManyMutationInput,
    Prisma.InternalNotePresetUncheckedUpdateManyWithoutTeamInput
  >;
};

export type InternalNotePresetScalarWhereInput = {
  AND?: Prisma.InternalNotePresetScalarWhereInput | Prisma.InternalNotePresetScalarWhereInput[];
  OR?: Prisma.InternalNotePresetScalarWhereInput[];
  NOT?: Prisma.InternalNotePresetScalarWhereInput | Prisma.InternalNotePresetScalarWhereInput[];
  id?: Prisma.IntFilter<"InternalNotePreset"> | number;
  name?: Prisma.StringFilter<"InternalNotePreset"> | string;
  cancellationReason?: Prisma.StringNullableFilter<"InternalNotePreset"> | string | null;
  teamId?: Prisma.IntFilter<"InternalNotePreset"> | number;
  createdAt?: Prisma.DateTimeFilter<"InternalNotePreset"> | Date | string;
};

export type InternalNotePresetCreateWithoutBookingInternalNoteInput = {
  name: string;
  cancellationReason?: string | null;
  createdAt?: Date | string;
  team: Prisma.TeamCreateNestedOneWithoutInternalNotePresetsInput;
};

export type InternalNotePresetUncheckedCreateWithoutBookingInternalNoteInput = {
  id?: number;
  name: string;
  cancellationReason?: string | null;
  teamId: number;
  createdAt?: Date | string;
};

export type InternalNotePresetCreateOrConnectWithoutBookingInternalNoteInput = {
  where: Prisma.InternalNotePresetWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.InternalNotePresetCreateWithoutBookingInternalNoteInput,
    Prisma.InternalNotePresetUncheckedCreateWithoutBookingInternalNoteInput
  >;
};

export type InternalNotePresetUpsertWithoutBookingInternalNoteInput = {
  update: Prisma.XOR<
    Prisma.InternalNotePresetUpdateWithoutBookingInternalNoteInput,
    Prisma.InternalNotePresetUncheckedUpdateWithoutBookingInternalNoteInput
  >;
  create: Prisma.XOR<
    Prisma.InternalNotePresetCreateWithoutBookingInternalNoteInput,
    Prisma.InternalNotePresetUncheckedCreateWithoutBookingInternalNoteInput
  >;
  where?: Prisma.InternalNotePresetWhereInput;
};

export type InternalNotePresetUpdateToOneWithWhereWithoutBookingInternalNoteInput = {
  where?: Prisma.InternalNotePresetWhereInput;
  data: Prisma.XOR<
    Prisma.InternalNotePresetUpdateWithoutBookingInternalNoteInput,
    Prisma.InternalNotePresetUncheckedUpdateWithoutBookingInternalNoteInput
  >;
};

export type InternalNotePresetUpdateWithoutBookingInternalNoteInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  cancellationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  team?: Prisma.TeamUpdateOneRequiredWithoutInternalNotePresetsNestedInput;
};

export type InternalNotePresetUncheckedUpdateWithoutBookingInternalNoteInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  cancellationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  teamId?: Prisma.IntFieldUpdateOperationsInput | number;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type InternalNotePresetCreateManyTeamInput = {
  id?: number;
  name: string;
  cancellationReason?: string | null;
  createdAt?: Date | string;
};

export type InternalNotePresetUpdateWithoutTeamInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  cancellationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  BookingInternalNote?: Prisma.BookingInternalNoteUpdateManyWithoutNotePresetNestedInput;
};

export type InternalNotePresetUncheckedUpdateWithoutTeamInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  cancellationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  BookingInternalNote?: Prisma.BookingInternalNoteUncheckedUpdateManyWithoutNotePresetNestedInput;
};

export type InternalNotePresetUncheckedUpdateManyWithoutTeamInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  cancellationReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

/**
 * Count Type InternalNotePresetCountOutputType
 */

export type InternalNotePresetCountOutputType = {
  BookingInternalNote: number;
};

export type InternalNotePresetCountOutputTypeSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  BookingInternalNote?: boolean | InternalNotePresetCountOutputTypeCountBookingInternalNoteArgs;
};

/**
 * InternalNotePresetCountOutputType without action
 */
export type InternalNotePresetCountOutputTypeDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InternalNotePresetCountOutputType
   */
  select?: Prisma.InternalNotePresetCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * InternalNotePresetCountOutputType without action
 */
export type InternalNotePresetCountOutputTypeCountBookingInternalNoteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.BookingInternalNoteWhereInput;
};

export type InternalNotePresetSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    cancellationReason?: boolean;
    teamId?: boolean;
    createdAt?: boolean;
    team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
    BookingInternalNote?: boolean | Prisma.InternalNotePreset$BookingInternalNoteArgs<ExtArgs>;
    _count?: boolean | Prisma.InternalNotePresetCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["internalNotePreset"]
>;

export type InternalNotePresetSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    cancellationReason?: boolean;
    teamId?: boolean;
    createdAt?: boolean;
    team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["internalNotePreset"]
>;

export type InternalNotePresetSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    name?: boolean;
    cancellationReason?: boolean;
    teamId?: boolean;
    createdAt?: boolean;
    team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["internalNotePreset"]
>;

export type InternalNotePresetSelectScalar = {
  id?: boolean;
  name?: boolean;
  cancellationReason?: boolean;
  teamId?: boolean;
  createdAt?: boolean;
};

export type InternalNotePresetOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  "id" | "name" | "cancellationReason" | "teamId" | "createdAt",
  ExtArgs["result"]["internalNotePreset"]
>;
export type InternalNotePresetInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
  BookingInternalNote?: boolean | Prisma.InternalNotePreset$BookingInternalNoteArgs<ExtArgs>;
  _count?: boolean | Prisma.InternalNotePresetCountOutputTypeDefaultArgs<ExtArgs>;
};
export type InternalNotePresetIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
};
export type InternalNotePresetIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  team?: boolean | Prisma.TeamDefaultArgs<ExtArgs>;
};

export type $InternalNotePresetPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "InternalNotePreset";
  objects: {
    team: Prisma.$TeamPayload<ExtArgs>;
    BookingInternalNote: Prisma.$BookingInternalNotePayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      name: string;
      cancellationReason: string | null;
      teamId: number;
      createdAt: Date;
    },
    ExtArgs["result"]["internalNotePreset"]
  >;
  composites: {};
};

export type InternalNotePresetGetPayload<
  S extends boolean | null | undefined | InternalNotePresetDefaultArgs
> = runtime.Types.Result.GetResult<Prisma.$InternalNotePresetPayload, S>;

export type InternalNotePresetCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<InternalNotePresetFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: InternalNotePresetCountAggregateInputType | true;
};

export interface InternalNotePresetDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["InternalNotePreset"];
    meta: { name: "InternalNotePreset" };
  };
  /**
   * Find zero or one InternalNotePreset that matches the filter.
   * @param {InternalNotePresetFindUniqueArgs} args - Arguments to find a InternalNotePreset
   * @example
   * // Get one InternalNotePreset
   * const internalNotePreset = await prisma.internalNotePreset.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends InternalNotePresetFindUniqueArgs>(
    args: Prisma.SelectSubset<T, InternalNotePresetFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__InternalNotePresetClient<
    runtime.Types.Result.GetResult<
      Prisma.$InternalNotePresetPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one InternalNotePreset that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {InternalNotePresetFindUniqueOrThrowArgs} args - Arguments to find a InternalNotePreset
   * @example
   * // Get one InternalNotePreset
   * const internalNotePreset = await prisma.internalNotePreset.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends InternalNotePresetFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, InternalNotePresetFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__InternalNotePresetClient<
    runtime.Types.Result.GetResult<
      Prisma.$InternalNotePresetPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first InternalNotePreset that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InternalNotePresetFindFirstArgs} args - Arguments to find a InternalNotePreset
   * @example
   * // Get one InternalNotePreset
   * const internalNotePreset = await prisma.internalNotePreset.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends InternalNotePresetFindFirstArgs>(
    args?: Prisma.SelectSubset<T, InternalNotePresetFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__InternalNotePresetClient<
    runtime.Types.Result.GetResult<
      Prisma.$InternalNotePresetPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first InternalNotePreset that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InternalNotePresetFindFirstOrThrowArgs} args - Arguments to find a InternalNotePreset
   * @example
   * // Get one InternalNotePreset
   * const internalNotePreset = await prisma.internalNotePreset.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends InternalNotePresetFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, InternalNotePresetFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__InternalNotePresetClient<
    runtime.Types.Result.GetResult<
      Prisma.$InternalNotePresetPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more InternalNotePresets that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InternalNotePresetFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all InternalNotePresets
   * const internalNotePresets = await prisma.internalNotePreset.findMany()
   *
   * // Get first 10 InternalNotePresets
   * const internalNotePresets = await prisma.internalNotePreset.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const internalNotePresetWithIdOnly = await prisma.internalNotePreset.findMany({ select: { id: true } })
   *
   */
  findMany<T extends InternalNotePresetFindManyArgs>(
    args?: Prisma.SelectSubset<T, InternalNotePresetFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$InternalNotePresetPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a InternalNotePreset.
   * @param {InternalNotePresetCreateArgs} args - Arguments to create a InternalNotePreset.
   * @example
   * // Create one InternalNotePreset
   * const InternalNotePreset = await prisma.internalNotePreset.create({
   *   data: {
   *     // ... data to create a InternalNotePreset
   *   }
   * })
   *
   */
  create<T extends InternalNotePresetCreateArgs>(
    args: Prisma.SelectSubset<T, InternalNotePresetCreateArgs<ExtArgs>>
  ): Prisma.Prisma__InternalNotePresetClient<
    runtime.Types.Result.GetResult<
      Prisma.$InternalNotePresetPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many InternalNotePresets.
   * @param {InternalNotePresetCreateManyArgs} args - Arguments to create many InternalNotePresets.
   * @example
   * // Create many InternalNotePresets
   * const internalNotePreset = await prisma.internalNotePreset.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends InternalNotePresetCreateManyArgs>(
    args?: Prisma.SelectSubset<T, InternalNotePresetCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many InternalNotePresets and returns the data saved in the database.
   * @param {InternalNotePresetCreateManyAndReturnArgs} args - Arguments to create many InternalNotePresets.
   * @example
   * // Create many InternalNotePresets
   * const internalNotePreset = await prisma.internalNotePreset.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many InternalNotePresets and only return the `id`
   * const internalNotePresetWithIdOnly = await prisma.internalNotePreset.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends InternalNotePresetCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, InternalNotePresetCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$InternalNotePresetPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a InternalNotePreset.
   * @param {InternalNotePresetDeleteArgs} args - Arguments to delete one InternalNotePreset.
   * @example
   * // Delete one InternalNotePreset
   * const InternalNotePreset = await prisma.internalNotePreset.delete({
   *   where: {
   *     // ... filter to delete one InternalNotePreset
   *   }
   * })
   *
   */
  delete<T extends InternalNotePresetDeleteArgs>(
    args: Prisma.SelectSubset<T, InternalNotePresetDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__InternalNotePresetClient<
    runtime.Types.Result.GetResult<
      Prisma.$InternalNotePresetPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one InternalNotePreset.
   * @param {InternalNotePresetUpdateArgs} args - Arguments to update one InternalNotePreset.
   * @example
   * // Update one InternalNotePreset
   * const internalNotePreset = await prisma.internalNotePreset.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends InternalNotePresetUpdateArgs>(
    args: Prisma.SelectSubset<T, InternalNotePresetUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__InternalNotePresetClient<
    runtime.Types.Result.GetResult<
      Prisma.$InternalNotePresetPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more InternalNotePresets.
   * @param {InternalNotePresetDeleteManyArgs} args - Arguments to filter InternalNotePresets to delete.
   * @example
   * // Delete a few InternalNotePresets
   * const { count } = await prisma.internalNotePreset.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends InternalNotePresetDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, InternalNotePresetDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more InternalNotePresets.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InternalNotePresetUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many InternalNotePresets
   * const internalNotePreset = await prisma.internalNotePreset.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends InternalNotePresetUpdateManyArgs>(
    args: Prisma.SelectSubset<T, InternalNotePresetUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more InternalNotePresets and returns the data updated in the database.
   * @param {InternalNotePresetUpdateManyAndReturnArgs} args - Arguments to update many InternalNotePresets.
   * @example
   * // Update many InternalNotePresets
   * const internalNotePreset = await prisma.internalNotePreset.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more InternalNotePresets and only return the `id`
   * const internalNotePresetWithIdOnly = await prisma.internalNotePreset.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends InternalNotePresetUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, InternalNotePresetUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$InternalNotePresetPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one InternalNotePreset.
   * @param {InternalNotePresetUpsertArgs} args - Arguments to update or create a InternalNotePreset.
   * @example
   * // Update or create a InternalNotePreset
   * const internalNotePreset = await prisma.internalNotePreset.upsert({
   *   create: {
   *     // ... data to create a InternalNotePreset
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the InternalNotePreset we want to update
   *   }
   * })
   */
  upsert<T extends InternalNotePresetUpsertArgs>(
    args: Prisma.SelectSubset<T, InternalNotePresetUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__InternalNotePresetClient<
    runtime.Types.Result.GetResult<
      Prisma.$InternalNotePresetPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of InternalNotePresets.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InternalNotePresetCountArgs} args - Arguments to filter InternalNotePresets to count.
   * @example
   * // Count the number of InternalNotePresets
   * const count = await prisma.internalNotePreset.count({
   *   where: {
   *     // ... the filter for the InternalNotePresets we want to count
   *   }
   * })
   **/
  count<T extends InternalNotePresetCountArgs>(
    args?: Prisma.Subset<T, InternalNotePresetCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], InternalNotePresetCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a InternalNotePreset.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InternalNotePresetAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends InternalNotePresetAggregateArgs>(
    args: Prisma.Subset<T, InternalNotePresetAggregateArgs>
  ): Prisma.PrismaPromise<GetInternalNotePresetAggregateType<T>>;

  /**
   * Group by InternalNotePreset.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InternalNotePresetGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends InternalNotePresetGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: InternalNotePresetGroupByArgs["orderBy"] }
      : { orderBy?: InternalNotePresetGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, InternalNotePresetGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetInternalNotePresetGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the InternalNotePreset model
   */
  readonly fields: InternalNotePresetFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for InternalNotePreset.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__InternalNotePresetClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  team<T extends Prisma.TeamDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.TeamDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__TeamClient<
    | runtime.Types.Result.GetResult<Prisma.$TeamPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  BookingInternalNote<T extends Prisma.InternalNotePreset$BookingInternalNoteArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.InternalNotePreset$BookingInternalNoteArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$BookingInternalNotePayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the InternalNotePreset model
 */
export interface InternalNotePresetFieldRefs {
  readonly id: Prisma.FieldRef<"InternalNotePreset", "Int">;
  readonly name: Prisma.FieldRef<"InternalNotePreset", "String">;
  readonly cancellationReason: Prisma.FieldRef<"InternalNotePreset", "String">;
  readonly teamId: Prisma.FieldRef<"InternalNotePreset", "Int">;
  readonly createdAt: Prisma.FieldRef<"InternalNotePreset", "DateTime">;
}

// Custom InputTypes
/**
 * InternalNotePreset findUnique
 */
export type InternalNotePresetFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InternalNotePreset
   */
  select?: Prisma.InternalNotePresetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InternalNotePreset
   */
  omit?: Prisma.InternalNotePresetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InternalNotePresetInclude<ExtArgs> | null;
  /**
   * Filter, which InternalNotePreset to fetch.
   */
  where: Prisma.InternalNotePresetWhereUniqueInput;
};

/**
 * InternalNotePreset findUniqueOrThrow
 */
export type InternalNotePresetFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InternalNotePreset
   */
  select?: Prisma.InternalNotePresetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InternalNotePreset
   */
  omit?: Prisma.InternalNotePresetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InternalNotePresetInclude<ExtArgs> | null;
  /**
   * Filter, which InternalNotePreset to fetch.
   */
  where: Prisma.InternalNotePresetWhereUniqueInput;
};

/**
 * InternalNotePreset findFirst
 */
export type InternalNotePresetFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InternalNotePreset
   */
  select?: Prisma.InternalNotePresetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InternalNotePreset
   */
  omit?: Prisma.InternalNotePresetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InternalNotePresetInclude<ExtArgs> | null;
  /**
   * Filter, which InternalNotePreset to fetch.
   */
  where?: Prisma.InternalNotePresetWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of InternalNotePresets to fetch.
   */
  orderBy?:
    | Prisma.InternalNotePresetOrderByWithRelationInput
    | Prisma.InternalNotePresetOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for InternalNotePresets.
   */
  cursor?: Prisma.InternalNotePresetWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` InternalNotePresets from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` InternalNotePresets.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of InternalNotePresets.
   */
  distinct?: Prisma.InternalNotePresetScalarFieldEnum | Prisma.InternalNotePresetScalarFieldEnum[];
};

/**
 * InternalNotePreset findFirstOrThrow
 */
export type InternalNotePresetFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InternalNotePreset
   */
  select?: Prisma.InternalNotePresetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InternalNotePreset
   */
  omit?: Prisma.InternalNotePresetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InternalNotePresetInclude<ExtArgs> | null;
  /**
   * Filter, which InternalNotePreset to fetch.
   */
  where?: Prisma.InternalNotePresetWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of InternalNotePresets to fetch.
   */
  orderBy?:
    | Prisma.InternalNotePresetOrderByWithRelationInput
    | Prisma.InternalNotePresetOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for InternalNotePresets.
   */
  cursor?: Prisma.InternalNotePresetWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` InternalNotePresets from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` InternalNotePresets.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of InternalNotePresets.
   */
  distinct?: Prisma.InternalNotePresetScalarFieldEnum | Prisma.InternalNotePresetScalarFieldEnum[];
};

/**
 * InternalNotePreset findMany
 */
export type InternalNotePresetFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InternalNotePreset
   */
  select?: Prisma.InternalNotePresetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InternalNotePreset
   */
  omit?: Prisma.InternalNotePresetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InternalNotePresetInclude<ExtArgs> | null;
  /**
   * Filter, which InternalNotePresets to fetch.
   */
  where?: Prisma.InternalNotePresetWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of InternalNotePresets to fetch.
   */
  orderBy?:
    | Prisma.InternalNotePresetOrderByWithRelationInput
    | Prisma.InternalNotePresetOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing InternalNotePresets.
   */
  cursor?: Prisma.InternalNotePresetWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` InternalNotePresets from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` InternalNotePresets.
   */
  skip?: number;
  distinct?: Prisma.InternalNotePresetScalarFieldEnum | Prisma.InternalNotePresetScalarFieldEnum[];
};

/**
 * InternalNotePreset create
 */
export type InternalNotePresetCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InternalNotePreset
   */
  select?: Prisma.InternalNotePresetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InternalNotePreset
   */
  omit?: Prisma.InternalNotePresetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InternalNotePresetInclude<ExtArgs> | null;
  /**
   * The data needed to create a InternalNotePreset.
   */
  data: Prisma.XOR<Prisma.InternalNotePresetCreateInput, Prisma.InternalNotePresetUncheckedCreateInput>;
};

/**
 * InternalNotePreset createMany
 */
export type InternalNotePresetCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many InternalNotePresets.
   */
  data: Prisma.InternalNotePresetCreateManyInput | Prisma.InternalNotePresetCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * InternalNotePreset createManyAndReturn
 */
export type InternalNotePresetCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InternalNotePreset
   */
  select?: Prisma.InternalNotePresetSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the InternalNotePreset
   */
  omit?: Prisma.InternalNotePresetOmit<ExtArgs> | null;
  /**
   * The data used to create many InternalNotePresets.
   */
  data: Prisma.InternalNotePresetCreateManyInput | Prisma.InternalNotePresetCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InternalNotePresetIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * InternalNotePreset update
 */
export type InternalNotePresetUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InternalNotePreset
   */
  select?: Prisma.InternalNotePresetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InternalNotePreset
   */
  omit?: Prisma.InternalNotePresetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InternalNotePresetInclude<ExtArgs> | null;
  /**
   * The data needed to update a InternalNotePreset.
   */
  data: Prisma.XOR<Prisma.InternalNotePresetUpdateInput, Prisma.InternalNotePresetUncheckedUpdateInput>;
  /**
   * Choose, which InternalNotePreset to update.
   */
  where: Prisma.InternalNotePresetWhereUniqueInput;
};

/**
 * InternalNotePreset updateMany
 */
export type InternalNotePresetUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update InternalNotePresets.
   */
  data: Prisma.XOR<
    Prisma.InternalNotePresetUpdateManyMutationInput,
    Prisma.InternalNotePresetUncheckedUpdateManyInput
  >;
  /**
   * Filter which InternalNotePresets to update
   */
  where?: Prisma.InternalNotePresetWhereInput;
  /**
   * Limit how many InternalNotePresets to update.
   */
  limit?: number;
};

/**
 * InternalNotePreset updateManyAndReturn
 */
export type InternalNotePresetUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InternalNotePreset
   */
  select?: Prisma.InternalNotePresetSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the InternalNotePreset
   */
  omit?: Prisma.InternalNotePresetOmit<ExtArgs> | null;
  /**
   * The data used to update InternalNotePresets.
   */
  data: Prisma.XOR<
    Prisma.InternalNotePresetUpdateManyMutationInput,
    Prisma.InternalNotePresetUncheckedUpdateManyInput
  >;
  /**
   * Filter which InternalNotePresets to update
   */
  where?: Prisma.InternalNotePresetWhereInput;
  /**
   * Limit how many InternalNotePresets to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InternalNotePresetIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * InternalNotePreset upsert
 */
export type InternalNotePresetUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InternalNotePreset
   */
  select?: Prisma.InternalNotePresetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InternalNotePreset
   */
  omit?: Prisma.InternalNotePresetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InternalNotePresetInclude<ExtArgs> | null;
  /**
   * The filter to search for the InternalNotePreset to update in case it exists.
   */
  where: Prisma.InternalNotePresetWhereUniqueInput;
  /**
   * In case the InternalNotePreset found by the `where` argument doesn't exist, create a new InternalNotePreset with this data.
   */
  create: Prisma.XOR<Prisma.InternalNotePresetCreateInput, Prisma.InternalNotePresetUncheckedCreateInput>;
  /**
   * In case the InternalNotePreset was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.InternalNotePresetUpdateInput, Prisma.InternalNotePresetUncheckedUpdateInput>;
};

/**
 * InternalNotePreset delete
 */
export type InternalNotePresetDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InternalNotePreset
   */
  select?: Prisma.InternalNotePresetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InternalNotePreset
   */
  omit?: Prisma.InternalNotePresetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InternalNotePresetInclude<ExtArgs> | null;
  /**
   * Filter which InternalNotePreset to delete.
   */
  where: Prisma.InternalNotePresetWhereUniqueInput;
};

/**
 * InternalNotePreset deleteMany
 */
export type InternalNotePresetDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which InternalNotePresets to delete
   */
  where?: Prisma.InternalNotePresetWhereInput;
  /**
   * Limit how many InternalNotePresets to delete.
   */
  limit?: number;
};

/**
 * InternalNotePreset.BookingInternalNote
 */
export type InternalNotePreset$BookingInternalNoteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the BookingInternalNote
   */
  select?: Prisma.BookingInternalNoteSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the BookingInternalNote
   */
  omit?: Prisma.BookingInternalNoteOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BookingInternalNoteInclude<ExtArgs> | null;
  where?: Prisma.BookingInternalNoteWhereInput;
  orderBy?:
    | Prisma.BookingInternalNoteOrderByWithRelationInput
    | Prisma.BookingInternalNoteOrderByWithRelationInput[];
  cursor?: Prisma.BookingInternalNoteWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.BookingInternalNoteScalarFieldEnum | Prisma.BookingInternalNoteScalarFieldEnum[];
};

/**
 * InternalNotePreset without action
 */
export type InternalNotePresetDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the InternalNotePreset
   */
  select?: Prisma.InternalNotePresetSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the InternalNotePreset
   */
  omit?: Prisma.InternalNotePresetOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InternalNotePresetInclude<ExtArgs> | null;
};
