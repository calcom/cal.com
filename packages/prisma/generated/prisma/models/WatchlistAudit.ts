/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `WatchlistAudit` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model WatchlistAudit
 *
 */
export type WatchlistAuditModel = runtime.Types.Result.DefaultSelection<Prisma.$WatchlistAuditPayload>;

export type AggregateWatchlistAudit = {
  _count: WatchlistAuditCountAggregateOutputType | null;
  _avg: WatchlistAuditAvgAggregateOutputType | null;
  _sum: WatchlistAuditSumAggregateOutputType | null;
  _min: WatchlistAuditMinAggregateOutputType | null;
  _max: WatchlistAuditMaxAggregateOutputType | null;
};

export type WatchlistAuditAvgAggregateOutputType = {
  changedByUserId: number | null;
};

export type WatchlistAuditSumAggregateOutputType = {
  changedByUserId: number | null;
};

export type WatchlistAuditMinAggregateOutputType = {
  id: string | null;
  type: $Enums.WatchlistType | null;
  value: string | null;
  description: string | null;
  action: $Enums.WatchlistAction | null;
  changedAt: Date | null;
  changedByUserId: number | null;
  watchlistId: string | null;
};

export type WatchlistAuditMaxAggregateOutputType = {
  id: string | null;
  type: $Enums.WatchlistType | null;
  value: string | null;
  description: string | null;
  action: $Enums.WatchlistAction | null;
  changedAt: Date | null;
  changedByUserId: number | null;
  watchlistId: string | null;
};

export type WatchlistAuditCountAggregateOutputType = {
  id: number;
  type: number;
  value: number;
  description: number;
  action: number;
  changedAt: number;
  changedByUserId: number;
  watchlistId: number;
  _all: number;
};

export type WatchlistAuditAvgAggregateInputType = {
  changedByUserId?: true;
};

export type WatchlistAuditSumAggregateInputType = {
  changedByUserId?: true;
};

export type WatchlistAuditMinAggregateInputType = {
  id?: true;
  type?: true;
  value?: true;
  description?: true;
  action?: true;
  changedAt?: true;
  changedByUserId?: true;
  watchlistId?: true;
};

export type WatchlistAuditMaxAggregateInputType = {
  id?: true;
  type?: true;
  value?: true;
  description?: true;
  action?: true;
  changedAt?: true;
  changedByUserId?: true;
  watchlistId?: true;
};

export type WatchlistAuditCountAggregateInputType = {
  id?: true;
  type?: true;
  value?: true;
  description?: true;
  action?: true;
  changedAt?: true;
  changedByUserId?: true;
  watchlistId?: true;
  _all?: true;
};

export type WatchlistAuditAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which WatchlistAudit to aggregate.
   */
  where?: Prisma.WatchlistAuditWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WatchlistAudits to fetch.
   */
  orderBy?: Prisma.WatchlistAuditOrderByWithRelationInput | Prisma.WatchlistAuditOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.WatchlistAuditWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` WatchlistAudits from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WatchlistAudits.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned WatchlistAudits
   **/
  _count?: true | WatchlistAuditCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: WatchlistAuditAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: WatchlistAuditSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: WatchlistAuditMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: WatchlistAuditMaxAggregateInputType;
};

export type GetWatchlistAuditAggregateType<T extends WatchlistAuditAggregateArgs> = {
  [P in keyof T & keyof AggregateWatchlistAudit]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWatchlistAudit[P]>
    : Prisma.GetScalarType<T[P], AggregateWatchlistAudit[P]>;
};

export type WatchlistAuditGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.WatchlistAuditWhereInput;
  orderBy?:
    | Prisma.WatchlistAuditOrderByWithAggregationInput
    | Prisma.WatchlistAuditOrderByWithAggregationInput[];
  by: Prisma.WatchlistAuditScalarFieldEnum[] | Prisma.WatchlistAuditScalarFieldEnum;
  having?: Prisma.WatchlistAuditScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: WatchlistAuditCountAggregateInputType | true;
  _avg?: WatchlistAuditAvgAggregateInputType;
  _sum?: WatchlistAuditSumAggregateInputType;
  _min?: WatchlistAuditMinAggregateInputType;
  _max?: WatchlistAuditMaxAggregateInputType;
};

export type WatchlistAuditGroupByOutputType = {
  id: string;
  type: $Enums.WatchlistType;
  value: string;
  description: string | null;
  action: $Enums.WatchlistAction;
  changedAt: Date;
  changedByUserId: number | null;
  watchlistId: string;
  _count: WatchlistAuditCountAggregateOutputType | null;
  _avg: WatchlistAuditAvgAggregateOutputType | null;
  _sum: WatchlistAuditSumAggregateOutputType | null;
  _min: WatchlistAuditMinAggregateOutputType | null;
  _max: WatchlistAuditMaxAggregateOutputType | null;
};

type GetWatchlistAuditGroupByPayload<T extends WatchlistAuditGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<WatchlistAuditGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof WatchlistAuditGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], WatchlistAuditGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], WatchlistAuditGroupByOutputType[P]>;
    }
  >
>;

export type WatchlistAuditWhereInput = {
  AND?: Prisma.WatchlistAuditWhereInput | Prisma.WatchlistAuditWhereInput[];
  OR?: Prisma.WatchlistAuditWhereInput[];
  NOT?: Prisma.WatchlistAuditWhereInput | Prisma.WatchlistAuditWhereInput[];
  id?: Prisma.UuidFilter<"WatchlistAudit"> | string;
  type?: Prisma.EnumWatchlistTypeFilter<"WatchlistAudit"> | $Enums.WatchlistType;
  value?: Prisma.StringFilter<"WatchlistAudit"> | string;
  description?: Prisma.StringNullableFilter<"WatchlistAudit"> | string | null;
  action?: Prisma.EnumWatchlistActionFilter<"WatchlistAudit"> | $Enums.WatchlistAction;
  changedAt?: Prisma.DateTimeFilter<"WatchlistAudit"> | Date | string;
  changedByUserId?: Prisma.IntNullableFilter<"WatchlistAudit"> | number | null;
  watchlistId?: Prisma.UuidFilter<"WatchlistAudit"> | string;
  watchlist?: Prisma.XOR<Prisma.WatchlistNullableScalarRelationFilter, Prisma.WatchlistWhereInput> | null;
};

export type WatchlistAuditOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  description?: Prisma.SortOrderInput | Prisma.SortOrder;
  action?: Prisma.SortOrder;
  changedAt?: Prisma.SortOrder;
  changedByUserId?: Prisma.SortOrderInput | Prisma.SortOrder;
  watchlistId?: Prisma.SortOrder;
  watchlist?: Prisma.WatchlistOrderByWithRelationInput;
};

export type WatchlistAuditWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    AND?: Prisma.WatchlistAuditWhereInput | Prisma.WatchlistAuditWhereInput[];
    OR?: Prisma.WatchlistAuditWhereInput[];
    NOT?: Prisma.WatchlistAuditWhereInput | Prisma.WatchlistAuditWhereInput[];
    type?: Prisma.EnumWatchlistTypeFilter<"WatchlistAudit"> | $Enums.WatchlistType;
    value?: Prisma.StringFilter<"WatchlistAudit"> | string;
    description?: Prisma.StringNullableFilter<"WatchlistAudit"> | string | null;
    action?: Prisma.EnumWatchlistActionFilter<"WatchlistAudit"> | $Enums.WatchlistAction;
    changedAt?: Prisma.DateTimeFilter<"WatchlistAudit"> | Date | string;
    changedByUserId?: Prisma.IntNullableFilter<"WatchlistAudit"> | number | null;
    watchlistId?: Prisma.UuidFilter<"WatchlistAudit"> | string;
    watchlist?: Prisma.XOR<Prisma.WatchlistNullableScalarRelationFilter, Prisma.WatchlistWhereInput> | null;
  },
  "id"
>;

export type WatchlistAuditOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  description?: Prisma.SortOrderInput | Prisma.SortOrder;
  action?: Prisma.SortOrder;
  changedAt?: Prisma.SortOrder;
  changedByUserId?: Prisma.SortOrderInput | Prisma.SortOrder;
  watchlistId?: Prisma.SortOrder;
  _count?: Prisma.WatchlistAuditCountOrderByAggregateInput;
  _avg?: Prisma.WatchlistAuditAvgOrderByAggregateInput;
  _max?: Prisma.WatchlistAuditMaxOrderByAggregateInput;
  _min?: Prisma.WatchlistAuditMinOrderByAggregateInput;
  _sum?: Prisma.WatchlistAuditSumOrderByAggregateInput;
};

export type WatchlistAuditScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.WatchlistAuditScalarWhereWithAggregatesInput
    | Prisma.WatchlistAuditScalarWhereWithAggregatesInput[];
  OR?: Prisma.WatchlistAuditScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.WatchlistAuditScalarWhereWithAggregatesInput
    | Prisma.WatchlistAuditScalarWhereWithAggregatesInput[];
  id?: Prisma.UuidWithAggregatesFilter<"WatchlistAudit"> | string;
  type?: Prisma.EnumWatchlistTypeWithAggregatesFilter<"WatchlistAudit"> | $Enums.WatchlistType;
  value?: Prisma.StringWithAggregatesFilter<"WatchlistAudit"> | string;
  description?: Prisma.StringNullableWithAggregatesFilter<"WatchlistAudit"> | string | null;
  action?: Prisma.EnumWatchlistActionWithAggregatesFilter<"WatchlistAudit"> | $Enums.WatchlistAction;
  changedAt?: Prisma.DateTimeWithAggregatesFilter<"WatchlistAudit"> | Date | string;
  changedByUserId?: Prisma.IntNullableWithAggregatesFilter<"WatchlistAudit"> | number | null;
  watchlistId?: Prisma.UuidWithAggregatesFilter<"WatchlistAudit"> | string;
};

export type WatchlistAuditCreateInput = {
  id?: string;
  type: $Enums.WatchlistType;
  value: string;
  description?: string | null;
  action?: $Enums.WatchlistAction;
  changedAt?: Date | string;
  changedByUserId?: number | null;
  watchlist?: Prisma.WatchlistCreateNestedOneWithoutAuditsInput;
};

export type WatchlistAuditUncheckedCreateInput = {
  id?: string;
  type: $Enums.WatchlistType;
  value: string;
  description?: string | null;
  action?: $Enums.WatchlistAction;
  changedAt?: Date | string;
  changedByUserId?: number | null;
  watchlistId: string;
};

export type WatchlistAuditUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.EnumWatchlistTypeFieldUpdateOperationsInput | $Enums.WatchlistType;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  action?: Prisma.EnumWatchlistActionFieldUpdateOperationsInput | $Enums.WatchlistAction;
  changedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  changedByUserId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  watchlist?: Prisma.WatchlistUpdateOneWithoutAuditsNestedInput;
};

export type WatchlistAuditUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.EnumWatchlistTypeFieldUpdateOperationsInput | $Enums.WatchlistType;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  action?: Prisma.EnumWatchlistActionFieldUpdateOperationsInput | $Enums.WatchlistAction;
  changedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  changedByUserId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  watchlistId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type WatchlistAuditCreateManyInput = {
  id?: string;
  type: $Enums.WatchlistType;
  value: string;
  description?: string | null;
  action?: $Enums.WatchlistAction;
  changedAt?: Date | string;
  changedByUserId?: number | null;
  watchlistId: string;
};

export type WatchlistAuditUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.EnumWatchlistTypeFieldUpdateOperationsInput | $Enums.WatchlistType;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  action?: Prisma.EnumWatchlistActionFieldUpdateOperationsInput | $Enums.WatchlistAction;
  changedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  changedByUserId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type WatchlistAuditUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.EnumWatchlistTypeFieldUpdateOperationsInput | $Enums.WatchlistType;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  action?: Prisma.EnumWatchlistActionFieldUpdateOperationsInput | $Enums.WatchlistAction;
  changedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  changedByUserId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
  watchlistId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type WatchlistAuditListRelationFilter = {
  every?: Prisma.WatchlistAuditWhereInput;
  some?: Prisma.WatchlistAuditWhereInput;
  none?: Prisma.WatchlistAuditWhereInput;
};

export type WatchlistAuditOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type WatchlistAuditCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  description?: Prisma.SortOrder;
  action?: Prisma.SortOrder;
  changedAt?: Prisma.SortOrder;
  changedByUserId?: Prisma.SortOrder;
  watchlistId?: Prisma.SortOrder;
};

export type WatchlistAuditAvgOrderByAggregateInput = {
  changedByUserId?: Prisma.SortOrder;
};

export type WatchlistAuditMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  description?: Prisma.SortOrder;
  action?: Prisma.SortOrder;
  changedAt?: Prisma.SortOrder;
  changedByUserId?: Prisma.SortOrder;
  watchlistId?: Prisma.SortOrder;
};

export type WatchlistAuditMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  type?: Prisma.SortOrder;
  value?: Prisma.SortOrder;
  description?: Prisma.SortOrder;
  action?: Prisma.SortOrder;
  changedAt?: Prisma.SortOrder;
  changedByUserId?: Prisma.SortOrder;
  watchlistId?: Prisma.SortOrder;
};

export type WatchlistAuditSumOrderByAggregateInput = {
  changedByUserId?: Prisma.SortOrder;
};

export type WatchlistAuditCreateNestedManyWithoutWatchlistInput = {
  create?:
    | Prisma.XOR<
        Prisma.WatchlistAuditCreateWithoutWatchlistInput,
        Prisma.WatchlistAuditUncheckedCreateWithoutWatchlistInput
      >
    | Prisma.WatchlistAuditCreateWithoutWatchlistInput[]
    | Prisma.WatchlistAuditUncheckedCreateWithoutWatchlistInput[];
  connectOrCreate?:
    | Prisma.WatchlistAuditCreateOrConnectWithoutWatchlistInput
    | Prisma.WatchlistAuditCreateOrConnectWithoutWatchlistInput[];
  createMany?: Prisma.WatchlistAuditCreateManyWatchlistInputEnvelope;
  connect?: Prisma.WatchlistAuditWhereUniqueInput | Prisma.WatchlistAuditWhereUniqueInput[];
};

export type WatchlistAuditUncheckedCreateNestedManyWithoutWatchlistInput = {
  create?:
    | Prisma.XOR<
        Prisma.WatchlistAuditCreateWithoutWatchlistInput,
        Prisma.WatchlistAuditUncheckedCreateWithoutWatchlistInput
      >
    | Prisma.WatchlistAuditCreateWithoutWatchlistInput[]
    | Prisma.WatchlistAuditUncheckedCreateWithoutWatchlistInput[];
  connectOrCreate?:
    | Prisma.WatchlistAuditCreateOrConnectWithoutWatchlistInput
    | Prisma.WatchlistAuditCreateOrConnectWithoutWatchlistInput[];
  createMany?: Prisma.WatchlistAuditCreateManyWatchlistInputEnvelope;
  connect?: Prisma.WatchlistAuditWhereUniqueInput | Prisma.WatchlistAuditWhereUniqueInput[];
};

export type WatchlistAuditUpdateManyWithoutWatchlistNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.WatchlistAuditCreateWithoutWatchlistInput,
        Prisma.WatchlistAuditUncheckedCreateWithoutWatchlistInput
      >
    | Prisma.WatchlistAuditCreateWithoutWatchlistInput[]
    | Prisma.WatchlistAuditUncheckedCreateWithoutWatchlistInput[];
  connectOrCreate?:
    | Prisma.WatchlistAuditCreateOrConnectWithoutWatchlistInput
    | Prisma.WatchlistAuditCreateOrConnectWithoutWatchlistInput[];
  upsert?:
    | Prisma.WatchlistAuditUpsertWithWhereUniqueWithoutWatchlistInput
    | Prisma.WatchlistAuditUpsertWithWhereUniqueWithoutWatchlistInput[];
  createMany?: Prisma.WatchlistAuditCreateManyWatchlistInputEnvelope;
  set?: Prisma.WatchlistAuditWhereUniqueInput | Prisma.WatchlistAuditWhereUniqueInput[];
  disconnect?: Prisma.WatchlistAuditWhereUniqueInput | Prisma.WatchlistAuditWhereUniqueInput[];
  delete?: Prisma.WatchlistAuditWhereUniqueInput | Prisma.WatchlistAuditWhereUniqueInput[];
  connect?: Prisma.WatchlistAuditWhereUniqueInput | Prisma.WatchlistAuditWhereUniqueInput[];
  update?:
    | Prisma.WatchlistAuditUpdateWithWhereUniqueWithoutWatchlistInput
    | Prisma.WatchlistAuditUpdateWithWhereUniqueWithoutWatchlistInput[];
  updateMany?:
    | Prisma.WatchlistAuditUpdateManyWithWhereWithoutWatchlistInput
    | Prisma.WatchlistAuditUpdateManyWithWhereWithoutWatchlistInput[];
  deleteMany?: Prisma.WatchlistAuditScalarWhereInput | Prisma.WatchlistAuditScalarWhereInput[];
};

export type WatchlistAuditUncheckedUpdateManyWithoutWatchlistNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.WatchlistAuditCreateWithoutWatchlistInput,
        Prisma.WatchlistAuditUncheckedCreateWithoutWatchlistInput
      >
    | Prisma.WatchlistAuditCreateWithoutWatchlistInput[]
    | Prisma.WatchlistAuditUncheckedCreateWithoutWatchlistInput[];
  connectOrCreate?:
    | Prisma.WatchlistAuditCreateOrConnectWithoutWatchlistInput
    | Prisma.WatchlistAuditCreateOrConnectWithoutWatchlistInput[];
  upsert?:
    | Prisma.WatchlistAuditUpsertWithWhereUniqueWithoutWatchlistInput
    | Prisma.WatchlistAuditUpsertWithWhereUniqueWithoutWatchlistInput[];
  createMany?: Prisma.WatchlistAuditCreateManyWatchlistInputEnvelope;
  set?: Prisma.WatchlistAuditWhereUniqueInput | Prisma.WatchlistAuditWhereUniqueInput[];
  disconnect?: Prisma.WatchlistAuditWhereUniqueInput | Prisma.WatchlistAuditWhereUniqueInput[];
  delete?: Prisma.WatchlistAuditWhereUniqueInput | Prisma.WatchlistAuditWhereUniqueInput[];
  connect?: Prisma.WatchlistAuditWhereUniqueInput | Prisma.WatchlistAuditWhereUniqueInput[];
  update?:
    | Prisma.WatchlistAuditUpdateWithWhereUniqueWithoutWatchlistInput
    | Prisma.WatchlistAuditUpdateWithWhereUniqueWithoutWatchlistInput[];
  updateMany?:
    | Prisma.WatchlistAuditUpdateManyWithWhereWithoutWatchlistInput
    | Prisma.WatchlistAuditUpdateManyWithWhereWithoutWatchlistInput[];
  deleteMany?: Prisma.WatchlistAuditScalarWhereInput | Prisma.WatchlistAuditScalarWhereInput[];
};

export type WatchlistAuditCreateWithoutWatchlistInput = {
  id?: string;
  type: $Enums.WatchlistType;
  value: string;
  description?: string | null;
  action?: $Enums.WatchlistAction;
  changedAt?: Date | string;
  changedByUserId?: number | null;
};

export type WatchlistAuditUncheckedCreateWithoutWatchlistInput = {
  id?: string;
  type: $Enums.WatchlistType;
  value: string;
  description?: string | null;
  action?: $Enums.WatchlistAction;
  changedAt?: Date | string;
  changedByUserId?: number | null;
};

export type WatchlistAuditCreateOrConnectWithoutWatchlistInput = {
  where: Prisma.WatchlistAuditWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.WatchlistAuditCreateWithoutWatchlistInput,
    Prisma.WatchlistAuditUncheckedCreateWithoutWatchlistInput
  >;
};

export type WatchlistAuditCreateManyWatchlistInputEnvelope = {
  data: Prisma.WatchlistAuditCreateManyWatchlistInput | Prisma.WatchlistAuditCreateManyWatchlistInput[];
  skipDuplicates?: boolean;
};

export type WatchlistAuditUpsertWithWhereUniqueWithoutWatchlistInput = {
  where: Prisma.WatchlistAuditWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.WatchlistAuditUpdateWithoutWatchlistInput,
    Prisma.WatchlistAuditUncheckedUpdateWithoutWatchlistInput
  >;
  create: Prisma.XOR<
    Prisma.WatchlistAuditCreateWithoutWatchlistInput,
    Prisma.WatchlistAuditUncheckedCreateWithoutWatchlistInput
  >;
};

export type WatchlistAuditUpdateWithWhereUniqueWithoutWatchlistInput = {
  where: Prisma.WatchlistAuditWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.WatchlistAuditUpdateWithoutWatchlistInput,
    Prisma.WatchlistAuditUncheckedUpdateWithoutWatchlistInput
  >;
};

export type WatchlistAuditUpdateManyWithWhereWithoutWatchlistInput = {
  where: Prisma.WatchlistAuditScalarWhereInput;
  data: Prisma.XOR<
    Prisma.WatchlistAuditUpdateManyMutationInput,
    Prisma.WatchlistAuditUncheckedUpdateManyWithoutWatchlistInput
  >;
};

export type WatchlistAuditScalarWhereInput = {
  AND?: Prisma.WatchlistAuditScalarWhereInput | Prisma.WatchlistAuditScalarWhereInput[];
  OR?: Prisma.WatchlistAuditScalarWhereInput[];
  NOT?: Prisma.WatchlistAuditScalarWhereInput | Prisma.WatchlistAuditScalarWhereInput[];
  id?: Prisma.UuidFilter<"WatchlistAudit"> | string;
  type?: Prisma.EnumWatchlistTypeFilter<"WatchlistAudit"> | $Enums.WatchlistType;
  value?: Prisma.StringFilter<"WatchlistAudit"> | string;
  description?: Prisma.StringNullableFilter<"WatchlistAudit"> | string | null;
  action?: Prisma.EnumWatchlistActionFilter<"WatchlistAudit"> | $Enums.WatchlistAction;
  changedAt?: Prisma.DateTimeFilter<"WatchlistAudit"> | Date | string;
  changedByUserId?: Prisma.IntNullableFilter<"WatchlistAudit"> | number | null;
  watchlistId?: Prisma.UuidFilter<"WatchlistAudit"> | string;
};

export type WatchlistAuditCreateManyWatchlistInput = {
  id?: string;
  type: $Enums.WatchlistType;
  value: string;
  description?: string | null;
  action?: $Enums.WatchlistAction;
  changedAt?: Date | string;
  changedByUserId?: number | null;
};

export type WatchlistAuditUpdateWithoutWatchlistInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.EnumWatchlistTypeFieldUpdateOperationsInput | $Enums.WatchlistType;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  action?: Prisma.EnumWatchlistActionFieldUpdateOperationsInput | $Enums.WatchlistAction;
  changedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  changedByUserId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type WatchlistAuditUncheckedUpdateWithoutWatchlistInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.EnumWatchlistTypeFieldUpdateOperationsInput | $Enums.WatchlistType;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  action?: Prisma.EnumWatchlistActionFieldUpdateOperationsInput | $Enums.WatchlistAction;
  changedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  changedByUserId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type WatchlistAuditUncheckedUpdateManyWithoutWatchlistInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  type?: Prisma.EnumWatchlistTypeFieldUpdateOperationsInput | $Enums.WatchlistType;
  value?: Prisma.StringFieldUpdateOperationsInput | string;
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  action?: Prisma.EnumWatchlistActionFieldUpdateOperationsInput | $Enums.WatchlistAction;
  changedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  changedByUserId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null;
};

export type WatchlistAuditSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    type?: boolean;
    value?: boolean;
    description?: boolean;
    action?: boolean;
    changedAt?: boolean;
    changedByUserId?: boolean;
    watchlistId?: boolean;
    watchlist?: boolean | Prisma.WatchlistAudit$watchlistArgs<ExtArgs>;
  },
  ExtArgs["result"]["watchlistAudit"]
>;

export type WatchlistAuditSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    type?: boolean;
    value?: boolean;
    description?: boolean;
    action?: boolean;
    changedAt?: boolean;
    changedByUserId?: boolean;
    watchlistId?: boolean;
    watchlist?: boolean | Prisma.WatchlistAudit$watchlistArgs<ExtArgs>;
  },
  ExtArgs["result"]["watchlistAudit"]
>;

export type WatchlistAuditSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    type?: boolean;
    value?: boolean;
    description?: boolean;
    action?: boolean;
    changedAt?: boolean;
    changedByUserId?: boolean;
    watchlistId?: boolean;
    watchlist?: boolean | Prisma.WatchlistAudit$watchlistArgs<ExtArgs>;
  },
  ExtArgs["result"]["watchlistAudit"]
>;

export type WatchlistAuditSelectScalar = {
  id?: boolean;
  type?: boolean;
  value?: boolean;
  description?: boolean;
  action?: boolean;
  changedAt?: boolean;
  changedByUserId?: boolean;
  watchlistId?: boolean;
};

export type WatchlistAuditOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  "id" | "type" | "value" | "description" | "action" | "changedAt" | "changedByUserId" | "watchlistId",
  ExtArgs["result"]["watchlistAudit"]
>;
export type WatchlistAuditInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  watchlist?: boolean | Prisma.WatchlistAudit$watchlistArgs<ExtArgs>;
};
export type WatchlistAuditIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  watchlist?: boolean | Prisma.WatchlistAudit$watchlistArgs<ExtArgs>;
};
export type WatchlistAuditIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  watchlist?: boolean | Prisma.WatchlistAudit$watchlistArgs<ExtArgs>;
};

export type $WatchlistAuditPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "WatchlistAudit";
  objects: {
    watchlist: Prisma.$WatchlistPayload<ExtArgs> | null;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      type: $Enums.WatchlistType;
      value: string;
      description: string | null;
      action: $Enums.WatchlistAction;
      changedAt: Date;
      changedByUserId: number | null;
      watchlistId: string;
    },
    ExtArgs["result"]["watchlistAudit"]
  >;
  composites: {};
};

export type WatchlistAuditGetPayload<S extends boolean | null | undefined | WatchlistAuditDefaultArgs> =
  runtime.Types.Result.GetResult<Prisma.$WatchlistAuditPayload, S>;

export type WatchlistAuditCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<WatchlistAuditFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: WatchlistAuditCountAggregateInputType | true;
};

export interface WatchlistAuditDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["WatchlistAudit"];
    meta: { name: "WatchlistAudit" };
  };
  /**
   * Find zero or one WatchlistAudit that matches the filter.
   * @param {WatchlistAuditFindUniqueArgs} args - Arguments to find a WatchlistAudit
   * @example
   * // Get one WatchlistAudit
   * const watchlistAudit = await prisma.watchlistAudit.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends WatchlistAuditFindUniqueArgs>(
    args: Prisma.SelectSubset<T, WatchlistAuditFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__WatchlistAuditClient<
    runtime.Types.Result.GetResult<
      Prisma.$WatchlistAuditPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one WatchlistAudit that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {WatchlistAuditFindUniqueOrThrowArgs} args - Arguments to find a WatchlistAudit
   * @example
   * // Get one WatchlistAudit
   * const watchlistAudit = await prisma.watchlistAudit.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends WatchlistAuditFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, WatchlistAuditFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__WatchlistAuditClient<
    runtime.Types.Result.GetResult<
      Prisma.$WatchlistAuditPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first WatchlistAudit that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WatchlistAuditFindFirstArgs} args - Arguments to find a WatchlistAudit
   * @example
   * // Get one WatchlistAudit
   * const watchlistAudit = await prisma.watchlistAudit.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends WatchlistAuditFindFirstArgs>(
    args?: Prisma.SelectSubset<T, WatchlistAuditFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__WatchlistAuditClient<
    runtime.Types.Result.GetResult<
      Prisma.$WatchlistAuditPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first WatchlistAudit that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WatchlistAuditFindFirstOrThrowArgs} args - Arguments to find a WatchlistAudit
   * @example
   * // Get one WatchlistAudit
   * const watchlistAudit = await prisma.watchlistAudit.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends WatchlistAuditFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, WatchlistAuditFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__WatchlistAuditClient<
    runtime.Types.Result.GetResult<
      Prisma.$WatchlistAuditPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more WatchlistAudits that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WatchlistAuditFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all WatchlistAudits
   * const watchlistAudits = await prisma.watchlistAudit.findMany()
   *
   * // Get first 10 WatchlistAudits
   * const watchlistAudits = await prisma.watchlistAudit.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const watchlistAuditWithIdOnly = await prisma.watchlistAudit.findMany({ select: { id: true } })
   *
   */
  findMany<T extends WatchlistAuditFindManyArgs>(
    args?: Prisma.SelectSubset<T, WatchlistAuditFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$WatchlistAuditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>
  >;

  /**
   * Create a WatchlistAudit.
   * @param {WatchlistAuditCreateArgs} args - Arguments to create a WatchlistAudit.
   * @example
   * // Create one WatchlistAudit
   * const WatchlistAudit = await prisma.watchlistAudit.create({
   *   data: {
   *     // ... data to create a WatchlistAudit
   *   }
   * })
   *
   */
  create<T extends WatchlistAuditCreateArgs>(
    args: Prisma.SelectSubset<T, WatchlistAuditCreateArgs<ExtArgs>>
  ): Prisma.Prisma__WatchlistAuditClient<
    runtime.Types.Result.GetResult<Prisma.$WatchlistAuditPayload<ExtArgs>, T, "create", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many WatchlistAudits.
   * @param {WatchlistAuditCreateManyArgs} args - Arguments to create many WatchlistAudits.
   * @example
   * // Create many WatchlistAudits
   * const watchlistAudit = await prisma.watchlistAudit.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends WatchlistAuditCreateManyArgs>(
    args?: Prisma.SelectSubset<T, WatchlistAuditCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many WatchlistAudits and returns the data saved in the database.
   * @param {WatchlistAuditCreateManyAndReturnArgs} args - Arguments to create many WatchlistAudits.
   * @example
   * // Create many WatchlistAudits
   * const watchlistAudit = await prisma.watchlistAudit.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many WatchlistAudits and only return the `id`
   * const watchlistAuditWithIdOnly = await prisma.watchlistAudit.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends WatchlistAuditCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, WatchlistAuditCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$WatchlistAuditPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a WatchlistAudit.
   * @param {WatchlistAuditDeleteArgs} args - Arguments to delete one WatchlistAudit.
   * @example
   * // Delete one WatchlistAudit
   * const WatchlistAudit = await prisma.watchlistAudit.delete({
   *   where: {
   *     // ... filter to delete one WatchlistAudit
   *   }
   * })
   *
   */
  delete<T extends WatchlistAuditDeleteArgs>(
    args: Prisma.SelectSubset<T, WatchlistAuditDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__WatchlistAuditClient<
    runtime.Types.Result.GetResult<Prisma.$WatchlistAuditPayload<ExtArgs>, T, "delete", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one WatchlistAudit.
   * @param {WatchlistAuditUpdateArgs} args - Arguments to update one WatchlistAudit.
   * @example
   * // Update one WatchlistAudit
   * const watchlistAudit = await prisma.watchlistAudit.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends WatchlistAuditUpdateArgs>(
    args: Prisma.SelectSubset<T, WatchlistAuditUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__WatchlistAuditClient<
    runtime.Types.Result.GetResult<Prisma.$WatchlistAuditPayload<ExtArgs>, T, "update", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more WatchlistAudits.
   * @param {WatchlistAuditDeleteManyArgs} args - Arguments to filter WatchlistAudits to delete.
   * @example
   * // Delete a few WatchlistAudits
   * const { count } = await prisma.watchlistAudit.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends WatchlistAuditDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, WatchlistAuditDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more WatchlistAudits.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WatchlistAuditUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many WatchlistAudits
   * const watchlistAudit = await prisma.watchlistAudit.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends WatchlistAuditUpdateManyArgs>(
    args: Prisma.SelectSubset<T, WatchlistAuditUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more WatchlistAudits and returns the data updated in the database.
   * @param {WatchlistAuditUpdateManyAndReturnArgs} args - Arguments to update many WatchlistAudits.
   * @example
   * // Update many WatchlistAudits
   * const watchlistAudit = await prisma.watchlistAudit.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more WatchlistAudits and only return the `id`
   * const watchlistAuditWithIdOnly = await prisma.watchlistAudit.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends WatchlistAuditUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, WatchlistAuditUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$WatchlistAuditPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one WatchlistAudit.
   * @param {WatchlistAuditUpsertArgs} args - Arguments to update or create a WatchlistAudit.
   * @example
   * // Update or create a WatchlistAudit
   * const watchlistAudit = await prisma.watchlistAudit.upsert({
   *   create: {
   *     // ... data to create a WatchlistAudit
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the WatchlistAudit we want to update
   *   }
   * })
   */
  upsert<T extends WatchlistAuditUpsertArgs>(
    args: Prisma.SelectSubset<T, WatchlistAuditUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__WatchlistAuditClient<
    runtime.Types.Result.GetResult<Prisma.$WatchlistAuditPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of WatchlistAudits.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WatchlistAuditCountArgs} args - Arguments to filter WatchlistAudits to count.
   * @example
   * // Count the number of WatchlistAudits
   * const count = await prisma.watchlistAudit.count({
   *   where: {
   *     // ... the filter for the WatchlistAudits we want to count
   *   }
   * })
   **/
  count<T extends WatchlistAuditCountArgs>(
    args?: Prisma.Subset<T, WatchlistAuditCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], WatchlistAuditCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a WatchlistAudit.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WatchlistAuditAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends WatchlistAuditAggregateArgs>(
    args: Prisma.Subset<T, WatchlistAuditAggregateArgs>
  ): Prisma.PrismaPromise<GetWatchlistAuditAggregateType<T>>;

  /**
   * Group by WatchlistAudit.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WatchlistAuditGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends WatchlistAuditGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: WatchlistAuditGroupByArgs["orderBy"] }
      : { orderBy?: WatchlistAuditGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, WatchlistAuditGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetWatchlistAuditGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the WatchlistAudit model
   */
  readonly fields: WatchlistAuditFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for WatchlistAudit.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__WatchlistAuditClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  watchlist<T extends Prisma.WatchlistAudit$watchlistArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.WatchlistAudit$watchlistArgs<ExtArgs>>
  ): Prisma.Prisma__WatchlistClient<
    runtime.Types.Result.GetResult<
      Prisma.$WatchlistPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the WatchlistAudit model
 */
export interface WatchlistAuditFieldRefs {
  readonly id: Prisma.FieldRef<"WatchlistAudit", "String">;
  readonly type: Prisma.FieldRef<"WatchlistAudit", "WatchlistType">;
  readonly value: Prisma.FieldRef<"WatchlistAudit", "String">;
  readonly description: Prisma.FieldRef<"WatchlistAudit", "String">;
  readonly action: Prisma.FieldRef<"WatchlistAudit", "WatchlistAction">;
  readonly changedAt: Prisma.FieldRef<"WatchlistAudit", "DateTime">;
  readonly changedByUserId: Prisma.FieldRef<"WatchlistAudit", "Int">;
  readonly watchlistId: Prisma.FieldRef<"WatchlistAudit", "String">;
}

// Custom InputTypes
/**
 * WatchlistAudit findUnique
 */
export type WatchlistAuditFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WatchlistAudit
   */
  select?: Prisma.WatchlistAuditSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WatchlistAudit
   */
  omit?: Prisma.WatchlistAuditOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WatchlistAuditInclude<ExtArgs> | null;
  /**
   * Filter, which WatchlistAudit to fetch.
   */
  where: Prisma.WatchlistAuditWhereUniqueInput;
};

/**
 * WatchlistAudit findUniqueOrThrow
 */
export type WatchlistAuditFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WatchlistAudit
   */
  select?: Prisma.WatchlistAuditSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WatchlistAudit
   */
  omit?: Prisma.WatchlistAuditOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WatchlistAuditInclude<ExtArgs> | null;
  /**
   * Filter, which WatchlistAudit to fetch.
   */
  where: Prisma.WatchlistAuditWhereUniqueInput;
};

/**
 * WatchlistAudit findFirst
 */
export type WatchlistAuditFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WatchlistAudit
   */
  select?: Prisma.WatchlistAuditSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WatchlistAudit
   */
  omit?: Prisma.WatchlistAuditOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WatchlistAuditInclude<ExtArgs> | null;
  /**
   * Filter, which WatchlistAudit to fetch.
   */
  where?: Prisma.WatchlistAuditWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WatchlistAudits to fetch.
   */
  orderBy?: Prisma.WatchlistAuditOrderByWithRelationInput | Prisma.WatchlistAuditOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for WatchlistAudits.
   */
  cursor?: Prisma.WatchlistAuditWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` WatchlistAudits from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WatchlistAudits.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of WatchlistAudits.
   */
  distinct?: Prisma.WatchlistAuditScalarFieldEnum | Prisma.WatchlistAuditScalarFieldEnum[];
};

/**
 * WatchlistAudit findFirstOrThrow
 */
export type WatchlistAuditFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WatchlistAudit
   */
  select?: Prisma.WatchlistAuditSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WatchlistAudit
   */
  omit?: Prisma.WatchlistAuditOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WatchlistAuditInclude<ExtArgs> | null;
  /**
   * Filter, which WatchlistAudit to fetch.
   */
  where?: Prisma.WatchlistAuditWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WatchlistAudits to fetch.
   */
  orderBy?: Prisma.WatchlistAuditOrderByWithRelationInput | Prisma.WatchlistAuditOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for WatchlistAudits.
   */
  cursor?: Prisma.WatchlistAuditWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` WatchlistAudits from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WatchlistAudits.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of WatchlistAudits.
   */
  distinct?: Prisma.WatchlistAuditScalarFieldEnum | Prisma.WatchlistAuditScalarFieldEnum[];
};

/**
 * WatchlistAudit findMany
 */
export type WatchlistAuditFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WatchlistAudit
   */
  select?: Prisma.WatchlistAuditSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WatchlistAudit
   */
  omit?: Prisma.WatchlistAuditOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WatchlistAuditInclude<ExtArgs> | null;
  /**
   * Filter, which WatchlistAudits to fetch.
   */
  where?: Prisma.WatchlistAuditWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WatchlistAudits to fetch.
   */
  orderBy?: Prisma.WatchlistAuditOrderByWithRelationInput | Prisma.WatchlistAuditOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing WatchlistAudits.
   */
  cursor?: Prisma.WatchlistAuditWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` WatchlistAudits from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WatchlistAudits.
   */
  skip?: number;
  distinct?: Prisma.WatchlistAuditScalarFieldEnum | Prisma.WatchlistAuditScalarFieldEnum[];
};

/**
 * WatchlistAudit create
 */
export type WatchlistAuditCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WatchlistAudit
   */
  select?: Prisma.WatchlistAuditSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WatchlistAudit
   */
  omit?: Prisma.WatchlistAuditOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WatchlistAuditInclude<ExtArgs> | null;
  /**
   * The data needed to create a WatchlistAudit.
   */
  data: Prisma.XOR<Prisma.WatchlistAuditCreateInput, Prisma.WatchlistAuditUncheckedCreateInput>;
};

/**
 * WatchlistAudit createMany
 */
export type WatchlistAuditCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many WatchlistAudits.
   */
  data: Prisma.WatchlistAuditCreateManyInput | Prisma.WatchlistAuditCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * WatchlistAudit createManyAndReturn
 */
export type WatchlistAuditCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WatchlistAudit
   */
  select?: Prisma.WatchlistAuditSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the WatchlistAudit
   */
  omit?: Prisma.WatchlistAuditOmit<ExtArgs> | null;
  /**
   * The data used to create many WatchlistAudits.
   */
  data: Prisma.WatchlistAuditCreateManyInput | Prisma.WatchlistAuditCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WatchlistAuditIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * WatchlistAudit update
 */
export type WatchlistAuditUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WatchlistAudit
   */
  select?: Prisma.WatchlistAuditSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WatchlistAudit
   */
  omit?: Prisma.WatchlistAuditOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WatchlistAuditInclude<ExtArgs> | null;
  /**
   * The data needed to update a WatchlistAudit.
   */
  data: Prisma.XOR<Prisma.WatchlistAuditUpdateInput, Prisma.WatchlistAuditUncheckedUpdateInput>;
  /**
   * Choose, which WatchlistAudit to update.
   */
  where: Prisma.WatchlistAuditWhereUniqueInput;
};

/**
 * WatchlistAudit updateMany
 */
export type WatchlistAuditUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update WatchlistAudits.
   */
  data: Prisma.XOR<
    Prisma.WatchlistAuditUpdateManyMutationInput,
    Prisma.WatchlistAuditUncheckedUpdateManyInput
  >;
  /**
   * Filter which WatchlistAudits to update
   */
  where?: Prisma.WatchlistAuditWhereInput;
  /**
   * Limit how many WatchlistAudits to update.
   */
  limit?: number;
};

/**
 * WatchlistAudit updateManyAndReturn
 */
export type WatchlistAuditUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WatchlistAudit
   */
  select?: Prisma.WatchlistAuditSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the WatchlistAudit
   */
  omit?: Prisma.WatchlistAuditOmit<ExtArgs> | null;
  /**
   * The data used to update WatchlistAudits.
   */
  data: Prisma.XOR<
    Prisma.WatchlistAuditUpdateManyMutationInput,
    Prisma.WatchlistAuditUncheckedUpdateManyInput
  >;
  /**
   * Filter which WatchlistAudits to update
   */
  where?: Prisma.WatchlistAuditWhereInput;
  /**
   * Limit how many WatchlistAudits to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WatchlistAuditIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * WatchlistAudit upsert
 */
export type WatchlistAuditUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WatchlistAudit
   */
  select?: Prisma.WatchlistAuditSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WatchlistAudit
   */
  omit?: Prisma.WatchlistAuditOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WatchlistAuditInclude<ExtArgs> | null;
  /**
   * The filter to search for the WatchlistAudit to update in case it exists.
   */
  where: Prisma.WatchlistAuditWhereUniqueInput;
  /**
   * In case the WatchlistAudit found by the `where` argument doesn't exist, create a new WatchlistAudit with this data.
   */
  create: Prisma.XOR<Prisma.WatchlistAuditCreateInput, Prisma.WatchlistAuditUncheckedCreateInput>;
  /**
   * In case the WatchlistAudit was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.WatchlistAuditUpdateInput, Prisma.WatchlistAuditUncheckedUpdateInput>;
};

/**
 * WatchlistAudit delete
 */
export type WatchlistAuditDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WatchlistAudit
   */
  select?: Prisma.WatchlistAuditSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WatchlistAudit
   */
  omit?: Prisma.WatchlistAuditOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WatchlistAuditInclude<ExtArgs> | null;
  /**
   * Filter which WatchlistAudit to delete.
   */
  where: Prisma.WatchlistAuditWhereUniqueInput;
};

/**
 * WatchlistAudit deleteMany
 */
export type WatchlistAuditDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which WatchlistAudits to delete
   */
  where?: Prisma.WatchlistAuditWhereInput;
  /**
   * Limit how many WatchlistAudits to delete.
   */
  limit?: number;
};

/**
 * WatchlistAudit.watchlist
 */
export type WatchlistAudit$watchlistArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Watchlist
   */
  select?: Prisma.WatchlistSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Watchlist
   */
  omit?: Prisma.WatchlistOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WatchlistInclude<ExtArgs> | null;
  where?: Prisma.WatchlistWhereInput;
};

/**
 * WatchlistAudit without action
 */
export type WatchlistAuditDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WatchlistAudit
   */
  select?: Prisma.WatchlistAuditSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WatchlistAudit
   */
  omit?: Prisma.WatchlistAuditOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WatchlistAuditInclude<ExtArgs> | null;
};
