/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `OAuthClient` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model OAuthClient
 *
 */
export type OAuthClientModel = runtime.Types.Result.DefaultSelection<Prisma.$OAuthClientPayload>;

export type AggregateOAuthClient = {
  _count: OAuthClientCountAggregateOutputType | null;
  _min: OAuthClientMinAggregateOutputType | null;
  _max: OAuthClientMaxAggregateOutputType | null;
};

export type OAuthClientMinAggregateOutputType = {
  clientId: string | null;
  redirectUri: string | null;
  clientSecret: string | null;
  name: string | null;
  logo: string | null;
};

export type OAuthClientMaxAggregateOutputType = {
  clientId: string | null;
  redirectUri: string | null;
  clientSecret: string | null;
  name: string | null;
  logo: string | null;
};

export type OAuthClientCountAggregateOutputType = {
  clientId: number;
  redirectUri: number;
  clientSecret: number;
  name: number;
  logo: number;
  _all: number;
};

export type OAuthClientMinAggregateInputType = {
  clientId?: true;
  redirectUri?: true;
  clientSecret?: true;
  name?: true;
  logo?: true;
};

export type OAuthClientMaxAggregateInputType = {
  clientId?: true;
  redirectUri?: true;
  clientSecret?: true;
  name?: true;
  logo?: true;
};

export type OAuthClientCountAggregateInputType = {
  clientId?: true;
  redirectUri?: true;
  clientSecret?: true;
  name?: true;
  logo?: true;
  _all?: true;
};

export type OAuthClientAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which OAuthClient to aggregate.
   */
  where?: Prisma.OAuthClientWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of OAuthClients to fetch.
   */
  orderBy?: Prisma.OAuthClientOrderByWithRelationInput | Prisma.OAuthClientOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.OAuthClientWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` OAuthClients from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` OAuthClients.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned OAuthClients
   **/
  _count?: true | OAuthClientCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: OAuthClientMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: OAuthClientMaxAggregateInputType;
};

export type GetOAuthClientAggregateType<T extends OAuthClientAggregateArgs> = {
  [P in keyof T & keyof AggregateOAuthClient]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOAuthClient[P]>
    : Prisma.GetScalarType<T[P], AggregateOAuthClient[P]>;
};

export type OAuthClientGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.OAuthClientWhereInput;
  orderBy?: Prisma.OAuthClientOrderByWithAggregationInput | Prisma.OAuthClientOrderByWithAggregationInput[];
  by: Prisma.OAuthClientScalarFieldEnum[] | Prisma.OAuthClientScalarFieldEnum;
  having?: Prisma.OAuthClientScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: OAuthClientCountAggregateInputType | true;
  _min?: OAuthClientMinAggregateInputType;
  _max?: OAuthClientMaxAggregateInputType;
};

export type OAuthClientGroupByOutputType = {
  clientId: string;
  redirectUri: string;
  clientSecret: string;
  name: string;
  logo: string | null;
  _count: OAuthClientCountAggregateOutputType | null;
  _min: OAuthClientMinAggregateOutputType | null;
  _max: OAuthClientMaxAggregateOutputType | null;
};

type GetOAuthClientGroupByPayload<T extends OAuthClientGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<OAuthClientGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof OAuthClientGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], OAuthClientGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], OAuthClientGroupByOutputType[P]>;
    }
  >
>;

export type OAuthClientWhereInput = {
  AND?: Prisma.OAuthClientWhereInput | Prisma.OAuthClientWhereInput[];
  OR?: Prisma.OAuthClientWhereInput[];
  NOT?: Prisma.OAuthClientWhereInput | Prisma.OAuthClientWhereInput[];
  clientId?: Prisma.StringFilter<"OAuthClient"> | string;
  redirectUri?: Prisma.StringFilter<"OAuthClient"> | string;
  clientSecret?: Prisma.StringFilter<"OAuthClient"> | string;
  name?: Prisma.StringFilter<"OAuthClient"> | string;
  logo?: Prisma.StringNullableFilter<"OAuthClient"> | string | null;
  accessCodes?: Prisma.AccessCodeListRelationFilter;
};

export type OAuthClientOrderByWithRelationInput = {
  clientId?: Prisma.SortOrder;
  redirectUri?: Prisma.SortOrder;
  clientSecret?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  logo?: Prisma.SortOrderInput | Prisma.SortOrder;
  accessCodes?: Prisma.AccessCodeOrderByRelationAggregateInput;
};

export type OAuthClientWhereUniqueInput = Prisma.AtLeast<
  {
    clientId?: string;
    AND?: Prisma.OAuthClientWhereInput | Prisma.OAuthClientWhereInput[];
    OR?: Prisma.OAuthClientWhereInput[];
    NOT?: Prisma.OAuthClientWhereInput | Prisma.OAuthClientWhereInput[];
    redirectUri?: Prisma.StringFilter<"OAuthClient"> | string;
    clientSecret?: Prisma.StringFilter<"OAuthClient"> | string;
    name?: Prisma.StringFilter<"OAuthClient"> | string;
    logo?: Prisma.StringNullableFilter<"OAuthClient"> | string | null;
    accessCodes?: Prisma.AccessCodeListRelationFilter;
  },
  "clientId" | "clientId"
>;

export type OAuthClientOrderByWithAggregationInput = {
  clientId?: Prisma.SortOrder;
  redirectUri?: Prisma.SortOrder;
  clientSecret?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  logo?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.OAuthClientCountOrderByAggregateInput;
  _max?: Prisma.OAuthClientMaxOrderByAggregateInput;
  _min?: Prisma.OAuthClientMinOrderByAggregateInput;
};

export type OAuthClientScalarWhereWithAggregatesInput = {
  AND?: Prisma.OAuthClientScalarWhereWithAggregatesInput | Prisma.OAuthClientScalarWhereWithAggregatesInput[];
  OR?: Prisma.OAuthClientScalarWhereWithAggregatesInput[];
  NOT?: Prisma.OAuthClientScalarWhereWithAggregatesInput | Prisma.OAuthClientScalarWhereWithAggregatesInput[];
  clientId?: Prisma.StringWithAggregatesFilter<"OAuthClient"> | string;
  redirectUri?: Prisma.StringWithAggregatesFilter<"OAuthClient"> | string;
  clientSecret?: Prisma.StringWithAggregatesFilter<"OAuthClient"> | string;
  name?: Prisma.StringWithAggregatesFilter<"OAuthClient"> | string;
  logo?: Prisma.StringNullableWithAggregatesFilter<"OAuthClient"> | string | null;
};

export type OAuthClientCreateInput = {
  clientId: string;
  redirectUri: string;
  clientSecret: string;
  name: string;
  logo?: string | null;
  accessCodes?: Prisma.AccessCodeCreateNestedManyWithoutClientInput;
};

export type OAuthClientUncheckedCreateInput = {
  clientId: string;
  redirectUri: string;
  clientSecret: string;
  name: string;
  logo?: string | null;
  accessCodes?: Prisma.AccessCodeUncheckedCreateNestedManyWithoutClientInput;
};

export type OAuthClientUpdateInput = {
  clientId?: Prisma.StringFieldUpdateOperationsInput | string;
  redirectUri?: Prisma.StringFieldUpdateOperationsInput | string;
  clientSecret?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  accessCodes?: Prisma.AccessCodeUpdateManyWithoutClientNestedInput;
};

export type OAuthClientUncheckedUpdateInput = {
  clientId?: Prisma.StringFieldUpdateOperationsInput | string;
  redirectUri?: Prisma.StringFieldUpdateOperationsInput | string;
  clientSecret?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  accessCodes?: Prisma.AccessCodeUncheckedUpdateManyWithoutClientNestedInput;
};

export type OAuthClientCreateManyInput = {
  clientId: string;
  redirectUri: string;
  clientSecret: string;
  name: string;
  logo?: string | null;
};

export type OAuthClientUpdateManyMutationInput = {
  clientId?: Prisma.StringFieldUpdateOperationsInput | string;
  redirectUri?: Prisma.StringFieldUpdateOperationsInput | string;
  clientSecret?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type OAuthClientUncheckedUpdateManyInput = {
  clientId?: Prisma.StringFieldUpdateOperationsInput | string;
  redirectUri?: Prisma.StringFieldUpdateOperationsInput | string;
  clientSecret?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type OAuthClientCountOrderByAggregateInput = {
  clientId?: Prisma.SortOrder;
  redirectUri?: Prisma.SortOrder;
  clientSecret?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  logo?: Prisma.SortOrder;
};

export type OAuthClientMaxOrderByAggregateInput = {
  clientId?: Prisma.SortOrder;
  redirectUri?: Prisma.SortOrder;
  clientSecret?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  logo?: Prisma.SortOrder;
};

export type OAuthClientMinOrderByAggregateInput = {
  clientId?: Prisma.SortOrder;
  redirectUri?: Prisma.SortOrder;
  clientSecret?: Prisma.SortOrder;
  name?: Prisma.SortOrder;
  logo?: Prisma.SortOrder;
};

export type OAuthClientNullableScalarRelationFilter = {
  is?: Prisma.OAuthClientWhereInput | null;
  isNot?: Prisma.OAuthClientWhereInput | null;
};

export type OAuthClientCreateNestedOneWithoutAccessCodesInput = {
  create?: Prisma.XOR<
    Prisma.OAuthClientCreateWithoutAccessCodesInput,
    Prisma.OAuthClientUncheckedCreateWithoutAccessCodesInput
  >;
  connectOrCreate?: Prisma.OAuthClientCreateOrConnectWithoutAccessCodesInput;
  connect?: Prisma.OAuthClientWhereUniqueInput;
};

export type OAuthClientUpdateOneWithoutAccessCodesNestedInput = {
  create?: Prisma.XOR<
    Prisma.OAuthClientCreateWithoutAccessCodesInput,
    Prisma.OAuthClientUncheckedCreateWithoutAccessCodesInput
  >;
  connectOrCreate?: Prisma.OAuthClientCreateOrConnectWithoutAccessCodesInput;
  upsert?: Prisma.OAuthClientUpsertWithoutAccessCodesInput;
  disconnect?: Prisma.OAuthClientWhereInput | boolean;
  delete?: Prisma.OAuthClientWhereInput | boolean;
  connect?: Prisma.OAuthClientWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.OAuthClientUpdateToOneWithWhereWithoutAccessCodesInput,
      Prisma.OAuthClientUpdateWithoutAccessCodesInput
    >,
    Prisma.OAuthClientUncheckedUpdateWithoutAccessCodesInput
  >;
};

export type OAuthClientCreateWithoutAccessCodesInput = {
  clientId: string;
  redirectUri: string;
  clientSecret: string;
  name: string;
  logo?: string | null;
};

export type OAuthClientUncheckedCreateWithoutAccessCodesInput = {
  clientId: string;
  redirectUri: string;
  clientSecret: string;
  name: string;
  logo?: string | null;
};

export type OAuthClientCreateOrConnectWithoutAccessCodesInput = {
  where: Prisma.OAuthClientWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.OAuthClientCreateWithoutAccessCodesInput,
    Prisma.OAuthClientUncheckedCreateWithoutAccessCodesInput
  >;
};

export type OAuthClientUpsertWithoutAccessCodesInput = {
  update: Prisma.XOR<
    Prisma.OAuthClientUpdateWithoutAccessCodesInput,
    Prisma.OAuthClientUncheckedUpdateWithoutAccessCodesInput
  >;
  create: Prisma.XOR<
    Prisma.OAuthClientCreateWithoutAccessCodesInput,
    Prisma.OAuthClientUncheckedCreateWithoutAccessCodesInput
  >;
  where?: Prisma.OAuthClientWhereInput;
};

export type OAuthClientUpdateToOneWithWhereWithoutAccessCodesInput = {
  where?: Prisma.OAuthClientWhereInput;
  data: Prisma.XOR<
    Prisma.OAuthClientUpdateWithoutAccessCodesInput,
    Prisma.OAuthClientUncheckedUpdateWithoutAccessCodesInput
  >;
};

export type OAuthClientUpdateWithoutAccessCodesInput = {
  clientId?: Prisma.StringFieldUpdateOperationsInput | string;
  redirectUri?: Prisma.StringFieldUpdateOperationsInput | string;
  clientSecret?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type OAuthClientUncheckedUpdateWithoutAccessCodesInput = {
  clientId?: Prisma.StringFieldUpdateOperationsInput | string;
  redirectUri?: Prisma.StringFieldUpdateOperationsInput | string;
  clientSecret?: Prisma.StringFieldUpdateOperationsInput | string;
  name?: Prisma.StringFieldUpdateOperationsInput | string;
  logo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

/**
 * Count Type OAuthClientCountOutputType
 */

export type OAuthClientCountOutputType = {
  accessCodes: number;
};

export type OAuthClientCountOutputTypeSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  accessCodes?: boolean | OAuthClientCountOutputTypeCountAccessCodesArgs;
};

/**
 * OAuthClientCountOutputType without action
 */
export type OAuthClientCountOutputTypeDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OAuthClientCountOutputType
   */
  select?: Prisma.OAuthClientCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * OAuthClientCountOutputType without action
 */
export type OAuthClientCountOutputTypeCountAccessCodesArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.AccessCodeWhereInput;
};

export type OAuthClientSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    clientId?: boolean;
    redirectUri?: boolean;
    clientSecret?: boolean;
    name?: boolean;
    logo?: boolean;
    accessCodes?: boolean | Prisma.OAuthClient$accessCodesArgs<ExtArgs>;
    _count?: boolean | Prisma.OAuthClientCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["oAuthClient"]
>;

export type OAuthClientSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    clientId?: boolean;
    redirectUri?: boolean;
    clientSecret?: boolean;
    name?: boolean;
    logo?: boolean;
  },
  ExtArgs["result"]["oAuthClient"]
>;

export type OAuthClientSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    clientId?: boolean;
    redirectUri?: boolean;
    clientSecret?: boolean;
    name?: boolean;
    logo?: boolean;
  },
  ExtArgs["result"]["oAuthClient"]
>;

export type OAuthClientSelectScalar = {
  clientId?: boolean;
  redirectUri?: boolean;
  clientSecret?: boolean;
  name?: boolean;
  logo?: boolean;
};

export type OAuthClientOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  "clientId" | "redirectUri" | "clientSecret" | "name" | "logo",
  ExtArgs["result"]["oAuthClient"]
>;
export type OAuthClientInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  accessCodes?: boolean | Prisma.OAuthClient$accessCodesArgs<ExtArgs>;
  _count?: boolean | Prisma.OAuthClientCountOutputTypeDefaultArgs<ExtArgs>;
};
export type OAuthClientIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {};
export type OAuthClientIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {};

export type $OAuthClientPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "OAuthClient";
  objects: {
    accessCodes: Prisma.$AccessCodePayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      clientId: string;
      redirectUri: string;
      clientSecret: string;
      name: string;
      logo: string | null;
    },
    ExtArgs["result"]["oAuthClient"]
  >;
  composites: {};
};

export type OAuthClientGetPayload<S extends boolean | null | undefined | OAuthClientDefaultArgs> =
  runtime.Types.Result.GetResult<Prisma.$OAuthClientPayload, S>;

export type OAuthClientCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<OAuthClientFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: OAuthClientCountAggregateInputType | true;
};

export interface OAuthClientDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>["model"]["OAuthClient"]; meta: { name: "OAuthClient" } };
  /**
   * Find zero or one OAuthClient that matches the filter.
   * @param {OAuthClientFindUniqueArgs} args - Arguments to find a OAuthClient
   * @example
   * // Get one OAuthClient
   * const oAuthClient = await prisma.oAuthClient.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends OAuthClientFindUniqueArgs>(
    args: Prisma.SelectSubset<T, OAuthClientFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__OAuthClientClient<
    runtime.Types.Result.GetResult<
      Prisma.$OAuthClientPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one OAuthClient that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {OAuthClientFindUniqueOrThrowArgs} args - Arguments to find a OAuthClient
   * @example
   * // Get one OAuthClient
   * const oAuthClient = await prisma.oAuthClient.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends OAuthClientFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, OAuthClientFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__OAuthClientClient<
    runtime.Types.Result.GetResult<
      Prisma.$OAuthClientPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first OAuthClient that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OAuthClientFindFirstArgs} args - Arguments to find a OAuthClient
   * @example
   * // Get one OAuthClient
   * const oAuthClient = await prisma.oAuthClient.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends OAuthClientFindFirstArgs>(
    args?: Prisma.SelectSubset<T, OAuthClientFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__OAuthClientClient<
    runtime.Types.Result.GetResult<
      Prisma.$OAuthClientPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first OAuthClient that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OAuthClientFindFirstOrThrowArgs} args - Arguments to find a OAuthClient
   * @example
   * // Get one OAuthClient
   * const oAuthClient = await prisma.oAuthClient.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends OAuthClientFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, OAuthClientFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__OAuthClientClient<
    runtime.Types.Result.GetResult<
      Prisma.$OAuthClientPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more OAuthClients that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OAuthClientFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all OAuthClients
   * const oAuthClients = await prisma.oAuthClient.findMany()
   *
   * // Get first 10 OAuthClients
   * const oAuthClients = await prisma.oAuthClient.findMany({ take: 10 })
   *
   * // Only select the `clientId`
   * const oAuthClientWithClientIdOnly = await prisma.oAuthClient.findMany({ select: { clientId: true } })
   *
   */
  findMany<T extends OAuthClientFindManyArgs>(
    args?: Prisma.SelectSubset<T, OAuthClientFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$OAuthClientPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>
  >;

  /**
   * Create a OAuthClient.
   * @param {OAuthClientCreateArgs} args - Arguments to create a OAuthClient.
   * @example
   * // Create one OAuthClient
   * const OAuthClient = await prisma.oAuthClient.create({
   *   data: {
   *     // ... data to create a OAuthClient
   *   }
   * })
   *
   */
  create<T extends OAuthClientCreateArgs>(
    args: Prisma.SelectSubset<T, OAuthClientCreateArgs<ExtArgs>>
  ): Prisma.Prisma__OAuthClientClient<
    runtime.Types.Result.GetResult<Prisma.$OAuthClientPayload<ExtArgs>, T, "create", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many OAuthClients.
   * @param {OAuthClientCreateManyArgs} args - Arguments to create many OAuthClients.
   * @example
   * // Create many OAuthClients
   * const oAuthClient = await prisma.oAuthClient.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends OAuthClientCreateManyArgs>(
    args?: Prisma.SelectSubset<T, OAuthClientCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many OAuthClients and returns the data saved in the database.
   * @param {OAuthClientCreateManyAndReturnArgs} args - Arguments to create many OAuthClients.
   * @example
   * // Create many OAuthClients
   * const oAuthClient = await prisma.oAuthClient.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many OAuthClients and only return the `clientId`
   * const oAuthClientWithClientIdOnly = await prisma.oAuthClient.createManyAndReturn({
   *   select: { clientId: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends OAuthClientCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, OAuthClientCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$OAuthClientPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a OAuthClient.
   * @param {OAuthClientDeleteArgs} args - Arguments to delete one OAuthClient.
   * @example
   * // Delete one OAuthClient
   * const OAuthClient = await prisma.oAuthClient.delete({
   *   where: {
   *     // ... filter to delete one OAuthClient
   *   }
   * })
   *
   */
  delete<T extends OAuthClientDeleteArgs>(
    args: Prisma.SelectSubset<T, OAuthClientDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__OAuthClientClient<
    runtime.Types.Result.GetResult<Prisma.$OAuthClientPayload<ExtArgs>, T, "delete", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one OAuthClient.
   * @param {OAuthClientUpdateArgs} args - Arguments to update one OAuthClient.
   * @example
   * // Update one OAuthClient
   * const oAuthClient = await prisma.oAuthClient.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends OAuthClientUpdateArgs>(
    args: Prisma.SelectSubset<T, OAuthClientUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__OAuthClientClient<
    runtime.Types.Result.GetResult<Prisma.$OAuthClientPayload<ExtArgs>, T, "update", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more OAuthClients.
   * @param {OAuthClientDeleteManyArgs} args - Arguments to filter OAuthClients to delete.
   * @example
   * // Delete a few OAuthClients
   * const { count } = await prisma.oAuthClient.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends OAuthClientDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, OAuthClientDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more OAuthClients.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OAuthClientUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many OAuthClients
   * const oAuthClient = await prisma.oAuthClient.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends OAuthClientUpdateManyArgs>(
    args: Prisma.SelectSubset<T, OAuthClientUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more OAuthClients and returns the data updated in the database.
   * @param {OAuthClientUpdateManyAndReturnArgs} args - Arguments to update many OAuthClients.
   * @example
   * // Update many OAuthClients
   * const oAuthClient = await prisma.oAuthClient.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more OAuthClients and only return the `clientId`
   * const oAuthClientWithClientIdOnly = await prisma.oAuthClient.updateManyAndReturn({
   *   select: { clientId: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends OAuthClientUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, OAuthClientUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$OAuthClientPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one OAuthClient.
   * @param {OAuthClientUpsertArgs} args - Arguments to update or create a OAuthClient.
   * @example
   * // Update or create a OAuthClient
   * const oAuthClient = await prisma.oAuthClient.upsert({
   *   create: {
   *     // ... data to create a OAuthClient
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the OAuthClient we want to update
   *   }
   * })
   */
  upsert<T extends OAuthClientUpsertArgs>(
    args: Prisma.SelectSubset<T, OAuthClientUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__OAuthClientClient<
    runtime.Types.Result.GetResult<Prisma.$OAuthClientPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of OAuthClients.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OAuthClientCountArgs} args - Arguments to filter OAuthClients to count.
   * @example
   * // Count the number of OAuthClients
   * const count = await prisma.oAuthClient.count({
   *   where: {
   *     // ... the filter for the OAuthClients we want to count
   *   }
   * })
   **/
  count<T extends OAuthClientCountArgs>(
    args?: Prisma.Subset<T, OAuthClientCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], OAuthClientCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a OAuthClient.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OAuthClientAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends OAuthClientAggregateArgs>(
    args: Prisma.Subset<T, OAuthClientAggregateArgs>
  ): Prisma.PrismaPromise<GetOAuthClientAggregateType<T>>;

  /**
   * Group by OAuthClient.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OAuthClientGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends OAuthClientGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: OAuthClientGroupByArgs["orderBy"] }
      : { orderBy?: OAuthClientGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, OAuthClientGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetOAuthClientGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the OAuthClient model
   */
  readonly fields: OAuthClientFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for OAuthClient.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__OAuthClientClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  accessCodes<T extends Prisma.OAuthClient$accessCodesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.OAuthClient$accessCodesArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<Prisma.$AccessCodePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the OAuthClient model
 */
export interface OAuthClientFieldRefs {
  readonly clientId: Prisma.FieldRef<"OAuthClient", "String">;
  readonly redirectUri: Prisma.FieldRef<"OAuthClient", "String">;
  readonly clientSecret: Prisma.FieldRef<"OAuthClient", "String">;
  readonly name: Prisma.FieldRef<"OAuthClient", "String">;
  readonly logo: Prisma.FieldRef<"OAuthClient", "String">;
}

// Custom InputTypes
/**
 * OAuthClient findUnique
 */
export type OAuthClientFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OAuthClient
   */
  select?: Prisma.OAuthClientSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OAuthClient
   */
  omit?: Prisma.OAuthClientOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OAuthClientInclude<ExtArgs> | null;
  /**
   * Filter, which OAuthClient to fetch.
   */
  where: Prisma.OAuthClientWhereUniqueInput;
};

/**
 * OAuthClient findUniqueOrThrow
 */
export type OAuthClientFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OAuthClient
   */
  select?: Prisma.OAuthClientSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OAuthClient
   */
  omit?: Prisma.OAuthClientOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OAuthClientInclude<ExtArgs> | null;
  /**
   * Filter, which OAuthClient to fetch.
   */
  where: Prisma.OAuthClientWhereUniqueInput;
};

/**
 * OAuthClient findFirst
 */
export type OAuthClientFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OAuthClient
   */
  select?: Prisma.OAuthClientSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OAuthClient
   */
  omit?: Prisma.OAuthClientOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OAuthClientInclude<ExtArgs> | null;
  /**
   * Filter, which OAuthClient to fetch.
   */
  where?: Prisma.OAuthClientWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of OAuthClients to fetch.
   */
  orderBy?: Prisma.OAuthClientOrderByWithRelationInput | Prisma.OAuthClientOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for OAuthClients.
   */
  cursor?: Prisma.OAuthClientWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` OAuthClients from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` OAuthClients.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of OAuthClients.
   */
  distinct?: Prisma.OAuthClientScalarFieldEnum | Prisma.OAuthClientScalarFieldEnum[];
};

/**
 * OAuthClient findFirstOrThrow
 */
export type OAuthClientFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OAuthClient
   */
  select?: Prisma.OAuthClientSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OAuthClient
   */
  omit?: Prisma.OAuthClientOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OAuthClientInclude<ExtArgs> | null;
  /**
   * Filter, which OAuthClient to fetch.
   */
  where?: Prisma.OAuthClientWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of OAuthClients to fetch.
   */
  orderBy?: Prisma.OAuthClientOrderByWithRelationInput | Prisma.OAuthClientOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for OAuthClients.
   */
  cursor?: Prisma.OAuthClientWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` OAuthClients from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` OAuthClients.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of OAuthClients.
   */
  distinct?: Prisma.OAuthClientScalarFieldEnum | Prisma.OAuthClientScalarFieldEnum[];
};

/**
 * OAuthClient findMany
 */
export type OAuthClientFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OAuthClient
   */
  select?: Prisma.OAuthClientSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OAuthClient
   */
  omit?: Prisma.OAuthClientOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OAuthClientInclude<ExtArgs> | null;
  /**
   * Filter, which OAuthClients to fetch.
   */
  where?: Prisma.OAuthClientWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of OAuthClients to fetch.
   */
  orderBy?: Prisma.OAuthClientOrderByWithRelationInput | Prisma.OAuthClientOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing OAuthClients.
   */
  cursor?: Prisma.OAuthClientWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` OAuthClients from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` OAuthClients.
   */
  skip?: number;
  distinct?: Prisma.OAuthClientScalarFieldEnum | Prisma.OAuthClientScalarFieldEnum[];
};

/**
 * OAuthClient create
 */
export type OAuthClientCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OAuthClient
   */
  select?: Prisma.OAuthClientSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OAuthClient
   */
  omit?: Prisma.OAuthClientOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OAuthClientInclude<ExtArgs> | null;
  /**
   * The data needed to create a OAuthClient.
   */
  data: Prisma.XOR<Prisma.OAuthClientCreateInput, Prisma.OAuthClientUncheckedCreateInput>;
};

/**
 * OAuthClient createMany
 */
export type OAuthClientCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many OAuthClients.
   */
  data: Prisma.OAuthClientCreateManyInput | Prisma.OAuthClientCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * OAuthClient createManyAndReturn
 */
export type OAuthClientCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OAuthClient
   */
  select?: Prisma.OAuthClientSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the OAuthClient
   */
  omit?: Prisma.OAuthClientOmit<ExtArgs> | null;
  /**
   * The data used to create many OAuthClients.
   */
  data: Prisma.OAuthClientCreateManyInput | Prisma.OAuthClientCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * OAuthClient update
 */
export type OAuthClientUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OAuthClient
   */
  select?: Prisma.OAuthClientSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OAuthClient
   */
  omit?: Prisma.OAuthClientOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OAuthClientInclude<ExtArgs> | null;
  /**
   * The data needed to update a OAuthClient.
   */
  data: Prisma.XOR<Prisma.OAuthClientUpdateInput, Prisma.OAuthClientUncheckedUpdateInput>;
  /**
   * Choose, which OAuthClient to update.
   */
  where: Prisma.OAuthClientWhereUniqueInput;
};

/**
 * OAuthClient updateMany
 */
export type OAuthClientUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update OAuthClients.
   */
  data: Prisma.XOR<Prisma.OAuthClientUpdateManyMutationInput, Prisma.OAuthClientUncheckedUpdateManyInput>;
  /**
   * Filter which OAuthClients to update
   */
  where?: Prisma.OAuthClientWhereInput;
  /**
   * Limit how many OAuthClients to update.
   */
  limit?: number;
};

/**
 * OAuthClient updateManyAndReturn
 */
export type OAuthClientUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OAuthClient
   */
  select?: Prisma.OAuthClientSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the OAuthClient
   */
  omit?: Prisma.OAuthClientOmit<ExtArgs> | null;
  /**
   * The data used to update OAuthClients.
   */
  data: Prisma.XOR<Prisma.OAuthClientUpdateManyMutationInput, Prisma.OAuthClientUncheckedUpdateManyInput>;
  /**
   * Filter which OAuthClients to update
   */
  where?: Prisma.OAuthClientWhereInput;
  /**
   * Limit how many OAuthClients to update.
   */
  limit?: number;
};

/**
 * OAuthClient upsert
 */
export type OAuthClientUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OAuthClient
   */
  select?: Prisma.OAuthClientSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OAuthClient
   */
  omit?: Prisma.OAuthClientOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OAuthClientInclude<ExtArgs> | null;
  /**
   * The filter to search for the OAuthClient to update in case it exists.
   */
  where: Prisma.OAuthClientWhereUniqueInput;
  /**
   * In case the OAuthClient found by the `where` argument doesn't exist, create a new OAuthClient with this data.
   */
  create: Prisma.XOR<Prisma.OAuthClientCreateInput, Prisma.OAuthClientUncheckedCreateInput>;
  /**
   * In case the OAuthClient was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.OAuthClientUpdateInput, Prisma.OAuthClientUncheckedUpdateInput>;
};

/**
 * OAuthClient delete
 */
export type OAuthClientDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OAuthClient
   */
  select?: Prisma.OAuthClientSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OAuthClient
   */
  omit?: Prisma.OAuthClientOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OAuthClientInclude<ExtArgs> | null;
  /**
   * Filter which OAuthClient to delete.
   */
  where: Prisma.OAuthClientWhereUniqueInput;
};

/**
 * OAuthClient deleteMany
 */
export type OAuthClientDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which OAuthClients to delete
   */
  where?: Prisma.OAuthClientWhereInput;
  /**
   * Limit how many OAuthClients to delete.
   */
  limit?: number;
};

/**
 * OAuthClient.accessCodes
 */
export type OAuthClient$accessCodesArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the AccessCode
   */
  select?: Prisma.AccessCodeSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the AccessCode
   */
  omit?: Prisma.AccessCodeOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccessCodeInclude<ExtArgs> | null;
  where?: Prisma.AccessCodeWhereInput;
  orderBy?: Prisma.AccessCodeOrderByWithRelationInput | Prisma.AccessCodeOrderByWithRelationInput[];
  cursor?: Prisma.AccessCodeWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.AccessCodeScalarFieldEnum | Prisma.AccessCodeScalarFieldEnum[];
};

/**
 * OAuthClient without action
 */
export type OAuthClientDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the OAuthClient
   */
  select?: Prisma.OAuthClientSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the OAuthClient
   */
  omit?: Prisma.OAuthClientOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OAuthClientInclude<ExtArgs> | null;
};
