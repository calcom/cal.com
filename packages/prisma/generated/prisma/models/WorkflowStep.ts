/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * This file exports the `WorkflowStep` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";

import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model WorkflowStep
 *
 */
export type WorkflowStepModel = runtime.Types.Result.DefaultSelection<Prisma.$WorkflowStepPayload>;

export type AggregateWorkflowStep = {
  _count: WorkflowStepCountAggregateOutputType | null;
  _avg: WorkflowStepAvgAggregateOutputType | null;
  _sum: WorkflowStepSumAggregateOutputType | null;
  _min: WorkflowStepMinAggregateOutputType | null;
  _max: WorkflowStepMaxAggregateOutputType | null;
};

export type WorkflowStepAvgAggregateOutputType = {
  id: number | null;
  stepNumber: number | null;
  workflowId: number | null;
};

export type WorkflowStepSumAggregateOutputType = {
  id: number | null;
  stepNumber: number | null;
  workflowId: number | null;
};

export type WorkflowStepMinAggregateOutputType = {
  id: number | null;
  stepNumber: number | null;
  action: $Enums.WorkflowActions | null;
  workflowId: number | null;
  sendTo: string | null;
  reminderBody: string | null;
  emailSubject: string | null;
  template: $Enums.WorkflowTemplates | null;
  numberRequired: boolean | null;
  sender: string | null;
  numberVerificationPending: boolean | null;
  includeCalendarEvent: boolean | null;
  verifiedAt: Date | null;
  agentId: string | null;
  inboundAgentId: string | null;
};

export type WorkflowStepMaxAggregateOutputType = {
  id: number | null;
  stepNumber: number | null;
  action: $Enums.WorkflowActions | null;
  workflowId: number | null;
  sendTo: string | null;
  reminderBody: string | null;
  emailSubject: string | null;
  template: $Enums.WorkflowTemplates | null;
  numberRequired: boolean | null;
  sender: string | null;
  numberVerificationPending: boolean | null;
  includeCalendarEvent: boolean | null;
  verifiedAt: Date | null;
  agentId: string | null;
  inboundAgentId: string | null;
};

export type WorkflowStepCountAggregateOutputType = {
  id: number;
  stepNumber: number;
  action: number;
  workflowId: number;
  sendTo: number;
  reminderBody: number;
  emailSubject: number;
  template: number;
  numberRequired: number;
  sender: number;
  numberVerificationPending: number;
  includeCalendarEvent: number;
  verifiedAt: number;
  agentId: number;
  inboundAgentId: number;
  _all: number;
};

export type WorkflowStepAvgAggregateInputType = {
  id?: true;
  stepNumber?: true;
  workflowId?: true;
};

export type WorkflowStepSumAggregateInputType = {
  id?: true;
  stepNumber?: true;
  workflowId?: true;
};

export type WorkflowStepMinAggregateInputType = {
  id?: true;
  stepNumber?: true;
  action?: true;
  workflowId?: true;
  sendTo?: true;
  reminderBody?: true;
  emailSubject?: true;
  template?: true;
  numberRequired?: true;
  sender?: true;
  numberVerificationPending?: true;
  includeCalendarEvent?: true;
  verifiedAt?: true;
  agentId?: true;
  inboundAgentId?: true;
};

export type WorkflowStepMaxAggregateInputType = {
  id?: true;
  stepNumber?: true;
  action?: true;
  workflowId?: true;
  sendTo?: true;
  reminderBody?: true;
  emailSubject?: true;
  template?: true;
  numberRequired?: true;
  sender?: true;
  numberVerificationPending?: true;
  includeCalendarEvent?: true;
  verifiedAt?: true;
  agentId?: true;
  inboundAgentId?: true;
};

export type WorkflowStepCountAggregateInputType = {
  id?: true;
  stepNumber?: true;
  action?: true;
  workflowId?: true;
  sendTo?: true;
  reminderBody?: true;
  emailSubject?: true;
  template?: true;
  numberRequired?: true;
  sender?: true;
  numberVerificationPending?: true;
  includeCalendarEvent?: true;
  verifiedAt?: true;
  agentId?: true;
  inboundAgentId?: true;
  _all?: true;
};

export type WorkflowStepAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which WorkflowStep to aggregate.
   */
  where?: Prisma.WorkflowStepWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WorkflowSteps to fetch.
   */
  orderBy?: Prisma.WorkflowStepOrderByWithRelationInput | Prisma.WorkflowStepOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.WorkflowStepWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` WorkflowSteps from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WorkflowSteps.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned WorkflowSteps
   **/
  _count?: true | WorkflowStepCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to average
   **/
  _avg?: WorkflowStepAvgAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to sum
   **/
  _sum?: WorkflowStepSumAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: WorkflowStepMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: WorkflowStepMaxAggregateInputType;
};

export type GetWorkflowStepAggregateType<T extends WorkflowStepAggregateArgs> = {
  [P in keyof T & keyof AggregateWorkflowStep]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWorkflowStep[P]>
    : Prisma.GetScalarType<T[P], AggregateWorkflowStep[P]>;
};

export type WorkflowStepGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.WorkflowStepWhereInput;
  orderBy?: Prisma.WorkflowStepOrderByWithAggregationInput | Prisma.WorkflowStepOrderByWithAggregationInput[];
  by: Prisma.WorkflowStepScalarFieldEnum[] | Prisma.WorkflowStepScalarFieldEnum;
  having?: Prisma.WorkflowStepScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: WorkflowStepCountAggregateInputType | true;
  _avg?: WorkflowStepAvgAggregateInputType;
  _sum?: WorkflowStepSumAggregateInputType;
  _min?: WorkflowStepMinAggregateInputType;
  _max?: WorkflowStepMaxAggregateInputType;
};

export type WorkflowStepGroupByOutputType = {
  id: number;
  stepNumber: number;
  action: $Enums.WorkflowActions;
  workflowId: number;
  sendTo: string | null;
  reminderBody: string | null;
  emailSubject: string | null;
  template: $Enums.WorkflowTemplates;
  numberRequired: boolean | null;
  sender: string | null;
  numberVerificationPending: boolean;
  includeCalendarEvent: boolean;
  verifiedAt: Date | null;
  agentId: string | null;
  inboundAgentId: string | null;
  _count: WorkflowStepCountAggregateOutputType | null;
  _avg: WorkflowStepAvgAggregateOutputType | null;
  _sum: WorkflowStepSumAggregateOutputType | null;
  _min: WorkflowStepMinAggregateOutputType | null;
  _max: WorkflowStepMaxAggregateOutputType | null;
};

type GetWorkflowStepGroupByPayload<T extends WorkflowStepGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<WorkflowStepGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof WorkflowStepGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], WorkflowStepGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], WorkflowStepGroupByOutputType[P]>;
    }
  >
>;

export type WorkflowStepWhereInput = {
  AND?: Prisma.WorkflowStepWhereInput | Prisma.WorkflowStepWhereInput[];
  OR?: Prisma.WorkflowStepWhereInput[];
  NOT?: Prisma.WorkflowStepWhereInput | Prisma.WorkflowStepWhereInput[];
  id?: Prisma.IntFilter<"WorkflowStep"> | number;
  stepNumber?: Prisma.IntFilter<"WorkflowStep"> | number;
  action?: Prisma.EnumWorkflowActionsFilter<"WorkflowStep"> | $Enums.WorkflowActions;
  workflowId?: Prisma.IntFilter<"WorkflowStep"> | number;
  sendTo?: Prisma.StringNullableFilter<"WorkflowStep"> | string | null;
  reminderBody?: Prisma.StringNullableFilter<"WorkflowStep"> | string | null;
  emailSubject?: Prisma.StringNullableFilter<"WorkflowStep"> | string | null;
  template?: Prisma.EnumWorkflowTemplatesFilter<"WorkflowStep"> | $Enums.WorkflowTemplates;
  numberRequired?: Prisma.BoolNullableFilter<"WorkflowStep"> | boolean | null;
  sender?: Prisma.StringNullableFilter<"WorkflowStep"> | string | null;
  numberVerificationPending?: Prisma.BoolFilter<"WorkflowStep"> | boolean;
  includeCalendarEvent?: Prisma.BoolFilter<"WorkflowStep"> | boolean;
  verifiedAt?: Prisma.DateTimeNullableFilter<"WorkflowStep"> | Date | string | null;
  agentId?: Prisma.StringNullableFilter<"WorkflowStep"> | string | null;
  inboundAgentId?: Prisma.StringNullableFilter<"WorkflowStep"> | string | null;
  workflow?: Prisma.XOR<Prisma.WorkflowScalarRelationFilter, Prisma.WorkflowWhereInput>;
  workflowReminders?: Prisma.WorkflowReminderListRelationFilter;
  agent?: Prisma.XOR<Prisma.AgentNullableScalarRelationFilter, Prisma.AgentWhereInput> | null;
  inboundAgent?: Prisma.XOR<Prisma.AgentNullableScalarRelationFilter, Prisma.AgentWhereInput> | null;
};

export type WorkflowStepOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  stepNumber?: Prisma.SortOrder;
  action?: Prisma.SortOrder;
  workflowId?: Prisma.SortOrder;
  sendTo?: Prisma.SortOrderInput | Prisma.SortOrder;
  reminderBody?: Prisma.SortOrderInput | Prisma.SortOrder;
  emailSubject?: Prisma.SortOrderInput | Prisma.SortOrder;
  template?: Prisma.SortOrder;
  numberRequired?: Prisma.SortOrderInput | Prisma.SortOrder;
  sender?: Prisma.SortOrderInput | Prisma.SortOrder;
  numberVerificationPending?: Prisma.SortOrder;
  includeCalendarEvent?: Prisma.SortOrder;
  verifiedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  agentId?: Prisma.SortOrderInput | Prisma.SortOrder;
  inboundAgentId?: Prisma.SortOrderInput | Prisma.SortOrder;
  workflow?: Prisma.WorkflowOrderByWithRelationInput;
  workflowReminders?: Prisma.WorkflowReminderOrderByRelationAggregateInput;
  agent?: Prisma.AgentOrderByWithRelationInput;
  inboundAgent?: Prisma.AgentOrderByWithRelationInput;
};

export type WorkflowStepWhereUniqueInput = Prisma.AtLeast<
  {
    id?: number;
    agentId?: string;
    inboundAgentId?: string;
    AND?: Prisma.WorkflowStepWhereInput | Prisma.WorkflowStepWhereInput[];
    OR?: Prisma.WorkflowStepWhereInput[];
    NOT?: Prisma.WorkflowStepWhereInput | Prisma.WorkflowStepWhereInput[];
    stepNumber?: Prisma.IntFilter<"WorkflowStep"> | number;
    action?: Prisma.EnumWorkflowActionsFilter<"WorkflowStep"> | $Enums.WorkflowActions;
    workflowId?: Prisma.IntFilter<"WorkflowStep"> | number;
    sendTo?: Prisma.StringNullableFilter<"WorkflowStep"> | string | null;
    reminderBody?: Prisma.StringNullableFilter<"WorkflowStep"> | string | null;
    emailSubject?: Prisma.StringNullableFilter<"WorkflowStep"> | string | null;
    template?: Prisma.EnumWorkflowTemplatesFilter<"WorkflowStep"> | $Enums.WorkflowTemplates;
    numberRequired?: Prisma.BoolNullableFilter<"WorkflowStep"> | boolean | null;
    sender?: Prisma.StringNullableFilter<"WorkflowStep"> | string | null;
    numberVerificationPending?: Prisma.BoolFilter<"WorkflowStep"> | boolean;
    includeCalendarEvent?: Prisma.BoolFilter<"WorkflowStep"> | boolean;
    verifiedAt?: Prisma.DateTimeNullableFilter<"WorkflowStep"> | Date | string | null;
    workflow?: Prisma.XOR<Prisma.WorkflowScalarRelationFilter, Prisma.WorkflowWhereInput>;
    workflowReminders?: Prisma.WorkflowReminderListRelationFilter;
    agent?: Prisma.XOR<Prisma.AgentNullableScalarRelationFilter, Prisma.AgentWhereInput> | null;
    inboundAgent?: Prisma.XOR<Prisma.AgentNullableScalarRelationFilter, Prisma.AgentWhereInput> | null;
  },
  "id" | "agentId" | "inboundAgentId"
>;

export type WorkflowStepOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  stepNumber?: Prisma.SortOrder;
  action?: Prisma.SortOrder;
  workflowId?: Prisma.SortOrder;
  sendTo?: Prisma.SortOrderInput | Prisma.SortOrder;
  reminderBody?: Prisma.SortOrderInput | Prisma.SortOrder;
  emailSubject?: Prisma.SortOrderInput | Prisma.SortOrder;
  template?: Prisma.SortOrder;
  numberRequired?: Prisma.SortOrderInput | Prisma.SortOrder;
  sender?: Prisma.SortOrderInput | Prisma.SortOrder;
  numberVerificationPending?: Prisma.SortOrder;
  includeCalendarEvent?: Prisma.SortOrder;
  verifiedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  agentId?: Prisma.SortOrderInput | Prisma.SortOrder;
  inboundAgentId?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.WorkflowStepCountOrderByAggregateInput;
  _avg?: Prisma.WorkflowStepAvgOrderByAggregateInput;
  _max?: Prisma.WorkflowStepMaxOrderByAggregateInput;
  _min?: Prisma.WorkflowStepMinOrderByAggregateInput;
  _sum?: Prisma.WorkflowStepSumOrderByAggregateInput;
};

export type WorkflowStepScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.WorkflowStepScalarWhereWithAggregatesInput
    | Prisma.WorkflowStepScalarWhereWithAggregatesInput[];
  OR?: Prisma.WorkflowStepScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.WorkflowStepScalarWhereWithAggregatesInput
    | Prisma.WorkflowStepScalarWhereWithAggregatesInput[];
  id?: Prisma.IntWithAggregatesFilter<"WorkflowStep"> | number;
  stepNumber?: Prisma.IntWithAggregatesFilter<"WorkflowStep"> | number;
  action?: Prisma.EnumWorkflowActionsWithAggregatesFilter<"WorkflowStep"> | $Enums.WorkflowActions;
  workflowId?: Prisma.IntWithAggregatesFilter<"WorkflowStep"> | number;
  sendTo?: Prisma.StringNullableWithAggregatesFilter<"WorkflowStep"> | string | null;
  reminderBody?: Prisma.StringNullableWithAggregatesFilter<"WorkflowStep"> | string | null;
  emailSubject?: Prisma.StringNullableWithAggregatesFilter<"WorkflowStep"> | string | null;
  template?: Prisma.EnumWorkflowTemplatesWithAggregatesFilter<"WorkflowStep"> | $Enums.WorkflowTemplates;
  numberRequired?: Prisma.BoolNullableWithAggregatesFilter<"WorkflowStep"> | boolean | null;
  sender?: Prisma.StringNullableWithAggregatesFilter<"WorkflowStep"> | string | null;
  numberVerificationPending?: Prisma.BoolWithAggregatesFilter<"WorkflowStep"> | boolean;
  includeCalendarEvent?: Prisma.BoolWithAggregatesFilter<"WorkflowStep"> | boolean;
  verifiedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"WorkflowStep"> | Date | string | null;
  agentId?: Prisma.StringNullableWithAggregatesFilter<"WorkflowStep"> | string | null;
  inboundAgentId?: Prisma.StringNullableWithAggregatesFilter<"WorkflowStep"> | string | null;
};

export type WorkflowStepCreateInput = {
  stepNumber: number;
  action: $Enums.WorkflowActions;
  sendTo?: string | null;
  reminderBody?: string | null;
  emailSubject?: string | null;
  template?: $Enums.WorkflowTemplates;
  numberRequired?: boolean | null;
  sender?: string | null;
  numberVerificationPending?: boolean;
  includeCalendarEvent?: boolean;
  verifiedAt?: Date | string | null;
  workflow: Prisma.WorkflowCreateNestedOneWithoutStepsInput;
  workflowReminders?: Prisma.WorkflowReminderCreateNestedManyWithoutWorkflowStepInput;
  agent?: Prisma.AgentCreateNestedOneWithoutWorkflowStepInput;
  inboundAgent?: Prisma.AgentCreateNestedOneWithoutInboundWorkflowStepInput;
};

export type WorkflowStepUncheckedCreateInput = {
  id?: number;
  stepNumber: number;
  action: $Enums.WorkflowActions;
  workflowId: number;
  sendTo?: string | null;
  reminderBody?: string | null;
  emailSubject?: string | null;
  template?: $Enums.WorkflowTemplates;
  numberRequired?: boolean | null;
  sender?: string | null;
  numberVerificationPending?: boolean;
  includeCalendarEvent?: boolean;
  verifiedAt?: Date | string | null;
  agentId?: string | null;
  inboundAgentId?: string | null;
  workflowReminders?: Prisma.WorkflowReminderUncheckedCreateNestedManyWithoutWorkflowStepInput;
};

export type WorkflowStepUpdateInput = {
  stepNumber?: Prisma.IntFieldUpdateOperationsInput | number;
  action?: Prisma.EnumWorkflowActionsFieldUpdateOperationsInput | $Enums.WorkflowActions;
  sendTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  reminderBody?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  template?: Prisma.EnumWorkflowTemplatesFieldUpdateOperationsInput | $Enums.WorkflowTemplates;
  numberRequired?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  sender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberVerificationPending?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  includeCalendarEvent?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  workflow?: Prisma.WorkflowUpdateOneRequiredWithoutStepsNestedInput;
  workflowReminders?: Prisma.WorkflowReminderUpdateManyWithoutWorkflowStepNestedInput;
  agent?: Prisma.AgentUpdateOneWithoutWorkflowStepNestedInput;
  inboundAgent?: Prisma.AgentUpdateOneWithoutInboundWorkflowStepNestedInput;
};

export type WorkflowStepUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  stepNumber?: Prisma.IntFieldUpdateOperationsInput | number;
  action?: Prisma.EnumWorkflowActionsFieldUpdateOperationsInput | $Enums.WorkflowActions;
  workflowId?: Prisma.IntFieldUpdateOperationsInput | number;
  sendTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  reminderBody?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  template?: Prisma.EnumWorkflowTemplatesFieldUpdateOperationsInput | $Enums.WorkflowTemplates;
  numberRequired?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  sender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberVerificationPending?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  includeCalendarEvent?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  agentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  inboundAgentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  workflowReminders?: Prisma.WorkflowReminderUncheckedUpdateManyWithoutWorkflowStepNestedInput;
};

export type WorkflowStepCreateManyInput = {
  id?: number;
  stepNumber: number;
  action: $Enums.WorkflowActions;
  workflowId: number;
  sendTo?: string | null;
  reminderBody?: string | null;
  emailSubject?: string | null;
  template?: $Enums.WorkflowTemplates;
  numberRequired?: boolean | null;
  sender?: string | null;
  numberVerificationPending?: boolean;
  includeCalendarEvent?: boolean;
  verifiedAt?: Date | string | null;
  agentId?: string | null;
  inboundAgentId?: string | null;
};

export type WorkflowStepUpdateManyMutationInput = {
  stepNumber?: Prisma.IntFieldUpdateOperationsInput | number;
  action?: Prisma.EnumWorkflowActionsFieldUpdateOperationsInput | $Enums.WorkflowActions;
  sendTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  reminderBody?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  template?: Prisma.EnumWorkflowTemplatesFieldUpdateOperationsInput | $Enums.WorkflowTemplates;
  numberRequired?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  sender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberVerificationPending?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  includeCalendarEvent?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
};

export type WorkflowStepUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  stepNumber?: Prisma.IntFieldUpdateOperationsInput | number;
  action?: Prisma.EnumWorkflowActionsFieldUpdateOperationsInput | $Enums.WorkflowActions;
  workflowId?: Prisma.IntFieldUpdateOperationsInput | number;
  sendTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  reminderBody?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  template?: Prisma.EnumWorkflowTemplatesFieldUpdateOperationsInput | $Enums.WorkflowTemplates;
  numberRequired?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  sender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberVerificationPending?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  includeCalendarEvent?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  agentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  inboundAgentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type WorkflowStepCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  stepNumber?: Prisma.SortOrder;
  action?: Prisma.SortOrder;
  workflowId?: Prisma.SortOrder;
  sendTo?: Prisma.SortOrder;
  reminderBody?: Prisma.SortOrder;
  emailSubject?: Prisma.SortOrder;
  template?: Prisma.SortOrder;
  numberRequired?: Prisma.SortOrder;
  sender?: Prisma.SortOrder;
  numberVerificationPending?: Prisma.SortOrder;
  includeCalendarEvent?: Prisma.SortOrder;
  verifiedAt?: Prisma.SortOrder;
  agentId?: Prisma.SortOrder;
  inboundAgentId?: Prisma.SortOrder;
};

export type WorkflowStepAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  stepNumber?: Prisma.SortOrder;
  workflowId?: Prisma.SortOrder;
};

export type WorkflowStepMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  stepNumber?: Prisma.SortOrder;
  action?: Prisma.SortOrder;
  workflowId?: Prisma.SortOrder;
  sendTo?: Prisma.SortOrder;
  reminderBody?: Prisma.SortOrder;
  emailSubject?: Prisma.SortOrder;
  template?: Prisma.SortOrder;
  numberRequired?: Prisma.SortOrder;
  sender?: Prisma.SortOrder;
  numberVerificationPending?: Prisma.SortOrder;
  includeCalendarEvent?: Prisma.SortOrder;
  verifiedAt?: Prisma.SortOrder;
  agentId?: Prisma.SortOrder;
  inboundAgentId?: Prisma.SortOrder;
};

export type WorkflowStepMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  stepNumber?: Prisma.SortOrder;
  action?: Prisma.SortOrder;
  workflowId?: Prisma.SortOrder;
  sendTo?: Prisma.SortOrder;
  reminderBody?: Prisma.SortOrder;
  emailSubject?: Prisma.SortOrder;
  template?: Prisma.SortOrder;
  numberRequired?: Prisma.SortOrder;
  sender?: Prisma.SortOrder;
  numberVerificationPending?: Prisma.SortOrder;
  includeCalendarEvent?: Prisma.SortOrder;
  verifiedAt?: Prisma.SortOrder;
  agentId?: Prisma.SortOrder;
  inboundAgentId?: Prisma.SortOrder;
};

export type WorkflowStepSumOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  stepNumber?: Prisma.SortOrder;
  workflowId?: Prisma.SortOrder;
};

export type WorkflowStepListRelationFilter = {
  every?: Prisma.WorkflowStepWhereInput;
  some?: Prisma.WorkflowStepWhereInput;
  none?: Prisma.WorkflowStepWhereInput;
};

export type WorkflowStepOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder;
};

export type WorkflowStepNullableScalarRelationFilter = {
  is?: Prisma.WorkflowStepWhereInput | null;
  isNot?: Prisma.WorkflowStepWhereInput | null;
};

export type EnumWorkflowActionsFieldUpdateOperationsInput = {
  set?: $Enums.WorkflowActions;
};

export type EnumWorkflowTemplatesFieldUpdateOperationsInput = {
  set?: $Enums.WorkflowTemplates;
};

export type WorkflowStepCreateNestedManyWithoutWorkflowInput = {
  create?:
    | Prisma.XOR<
        Prisma.WorkflowStepCreateWithoutWorkflowInput,
        Prisma.WorkflowStepUncheckedCreateWithoutWorkflowInput
      >
    | Prisma.WorkflowStepCreateWithoutWorkflowInput[]
    | Prisma.WorkflowStepUncheckedCreateWithoutWorkflowInput[];
  connectOrCreate?:
    | Prisma.WorkflowStepCreateOrConnectWithoutWorkflowInput
    | Prisma.WorkflowStepCreateOrConnectWithoutWorkflowInput[];
  createMany?: Prisma.WorkflowStepCreateManyWorkflowInputEnvelope;
  connect?: Prisma.WorkflowStepWhereUniqueInput | Prisma.WorkflowStepWhereUniqueInput[];
};

export type WorkflowStepUncheckedCreateNestedManyWithoutWorkflowInput = {
  create?:
    | Prisma.XOR<
        Prisma.WorkflowStepCreateWithoutWorkflowInput,
        Prisma.WorkflowStepUncheckedCreateWithoutWorkflowInput
      >
    | Prisma.WorkflowStepCreateWithoutWorkflowInput[]
    | Prisma.WorkflowStepUncheckedCreateWithoutWorkflowInput[];
  connectOrCreate?:
    | Prisma.WorkflowStepCreateOrConnectWithoutWorkflowInput
    | Prisma.WorkflowStepCreateOrConnectWithoutWorkflowInput[];
  createMany?: Prisma.WorkflowStepCreateManyWorkflowInputEnvelope;
  connect?: Prisma.WorkflowStepWhereUniqueInput | Prisma.WorkflowStepWhereUniqueInput[];
};

export type WorkflowStepUpdateManyWithoutWorkflowNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.WorkflowStepCreateWithoutWorkflowInput,
        Prisma.WorkflowStepUncheckedCreateWithoutWorkflowInput
      >
    | Prisma.WorkflowStepCreateWithoutWorkflowInput[]
    | Prisma.WorkflowStepUncheckedCreateWithoutWorkflowInput[];
  connectOrCreate?:
    | Prisma.WorkflowStepCreateOrConnectWithoutWorkflowInput
    | Prisma.WorkflowStepCreateOrConnectWithoutWorkflowInput[];
  upsert?:
    | Prisma.WorkflowStepUpsertWithWhereUniqueWithoutWorkflowInput
    | Prisma.WorkflowStepUpsertWithWhereUniqueWithoutWorkflowInput[];
  createMany?: Prisma.WorkflowStepCreateManyWorkflowInputEnvelope;
  set?: Prisma.WorkflowStepWhereUniqueInput | Prisma.WorkflowStepWhereUniqueInput[];
  disconnect?: Prisma.WorkflowStepWhereUniqueInput | Prisma.WorkflowStepWhereUniqueInput[];
  delete?: Prisma.WorkflowStepWhereUniqueInput | Prisma.WorkflowStepWhereUniqueInput[];
  connect?: Prisma.WorkflowStepWhereUniqueInput | Prisma.WorkflowStepWhereUniqueInput[];
  update?:
    | Prisma.WorkflowStepUpdateWithWhereUniqueWithoutWorkflowInput
    | Prisma.WorkflowStepUpdateWithWhereUniqueWithoutWorkflowInput[];
  updateMany?:
    | Prisma.WorkflowStepUpdateManyWithWhereWithoutWorkflowInput
    | Prisma.WorkflowStepUpdateManyWithWhereWithoutWorkflowInput[];
  deleteMany?: Prisma.WorkflowStepScalarWhereInput | Prisma.WorkflowStepScalarWhereInput[];
};

export type WorkflowStepUncheckedUpdateManyWithoutWorkflowNestedInput = {
  create?:
    | Prisma.XOR<
        Prisma.WorkflowStepCreateWithoutWorkflowInput,
        Prisma.WorkflowStepUncheckedCreateWithoutWorkflowInput
      >
    | Prisma.WorkflowStepCreateWithoutWorkflowInput[]
    | Prisma.WorkflowStepUncheckedCreateWithoutWorkflowInput[];
  connectOrCreate?:
    | Prisma.WorkflowStepCreateOrConnectWithoutWorkflowInput
    | Prisma.WorkflowStepCreateOrConnectWithoutWorkflowInput[];
  upsert?:
    | Prisma.WorkflowStepUpsertWithWhereUniqueWithoutWorkflowInput
    | Prisma.WorkflowStepUpsertWithWhereUniqueWithoutWorkflowInput[];
  createMany?: Prisma.WorkflowStepCreateManyWorkflowInputEnvelope;
  set?: Prisma.WorkflowStepWhereUniqueInput | Prisma.WorkflowStepWhereUniqueInput[];
  disconnect?: Prisma.WorkflowStepWhereUniqueInput | Prisma.WorkflowStepWhereUniqueInput[];
  delete?: Prisma.WorkflowStepWhereUniqueInput | Prisma.WorkflowStepWhereUniqueInput[];
  connect?: Prisma.WorkflowStepWhereUniqueInput | Prisma.WorkflowStepWhereUniqueInput[];
  update?:
    | Prisma.WorkflowStepUpdateWithWhereUniqueWithoutWorkflowInput
    | Prisma.WorkflowStepUpdateWithWhereUniqueWithoutWorkflowInput[];
  updateMany?:
    | Prisma.WorkflowStepUpdateManyWithWhereWithoutWorkflowInput
    | Prisma.WorkflowStepUpdateManyWithWhereWithoutWorkflowInput[];
  deleteMany?: Prisma.WorkflowStepScalarWhereInput | Prisma.WorkflowStepScalarWhereInput[];
};

export type WorkflowStepCreateNestedOneWithoutWorkflowRemindersInput = {
  create?: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutWorkflowRemindersInput,
    Prisma.WorkflowStepUncheckedCreateWithoutWorkflowRemindersInput
  >;
  connectOrCreate?: Prisma.WorkflowStepCreateOrConnectWithoutWorkflowRemindersInput;
  connect?: Prisma.WorkflowStepWhereUniqueInput;
};

export type WorkflowStepUpdateOneWithoutWorkflowRemindersNestedInput = {
  create?: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutWorkflowRemindersInput,
    Prisma.WorkflowStepUncheckedCreateWithoutWorkflowRemindersInput
  >;
  connectOrCreate?: Prisma.WorkflowStepCreateOrConnectWithoutWorkflowRemindersInput;
  upsert?: Prisma.WorkflowStepUpsertWithoutWorkflowRemindersInput;
  disconnect?: Prisma.WorkflowStepWhereInput | boolean;
  delete?: Prisma.WorkflowStepWhereInput | boolean;
  connect?: Prisma.WorkflowStepWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.WorkflowStepUpdateToOneWithWhereWithoutWorkflowRemindersInput,
      Prisma.WorkflowStepUpdateWithoutWorkflowRemindersInput
    >,
    Prisma.WorkflowStepUncheckedUpdateWithoutWorkflowRemindersInput
  >;
};

export type WorkflowStepCreateNestedOneWithoutAgentInput = {
  create?: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutAgentInput,
    Prisma.WorkflowStepUncheckedCreateWithoutAgentInput
  >;
  connectOrCreate?: Prisma.WorkflowStepCreateOrConnectWithoutAgentInput;
  connect?: Prisma.WorkflowStepWhereUniqueInput;
};

export type WorkflowStepCreateNestedOneWithoutInboundAgentInput = {
  create?: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutInboundAgentInput,
    Prisma.WorkflowStepUncheckedCreateWithoutInboundAgentInput
  >;
  connectOrCreate?: Prisma.WorkflowStepCreateOrConnectWithoutInboundAgentInput;
  connect?: Prisma.WorkflowStepWhereUniqueInput;
};

export type WorkflowStepUncheckedCreateNestedOneWithoutAgentInput = {
  create?: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutAgentInput,
    Prisma.WorkflowStepUncheckedCreateWithoutAgentInput
  >;
  connectOrCreate?: Prisma.WorkflowStepCreateOrConnectWithoutAgentInput;
  connect?: Prisma.WorkflowStepWhereUniqueInput;
};

export type WorkflowStepUncheckedCreateNestedOneWithoutInboundAgentInput = {
  create?: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutInboundAgentInput,
    Prisma.WorkflowStepUncheckedCreateWithoutInboundAgentInput
  >;
  connectOrCreate?: Prisma.WorkflowStepCreateOrConnectWithoutInboundAgentInput;
  connect?: Prisma.WorkflowStepWhereUniqueInput;
};

export type WorkflowStepUpdateOneWithoutAgentNestedInput = {
  create?: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutAgentInput,
    Prisma.WorkflowStepUncheckedCreateWithoutAgentInput
  >;
  connectOrCreate?: Prisma.WorkflowStepCreateOrConnectWithoutAgentInput;
  upsert?: Prisma.WorkflowStepUpsertWithoutAgentInput;
  disconnect?: Prisma.WorkflowStepWhereInput | boolean;
  delete?: Prisma.WorkflowStepWhereInput | boolean;
  connect?: Prisma.WorkflowStepWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.WorkflowStepUpdateToOneWithWhereWithoutAgentInput,
      Prisma.WorkflowStepUpdateWithoutAgentInput
    >,
    Prisma.WorkflowStepUncheckedUpdateWithoutAgentInput
  >;
};

export type WorkflowStepUpdateOneWithoutInboundAgentNestedInput = {
  create?: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutInboundAgentInput,
    Prisma.WorkflowStepUncheckedCreateWithoutInboundAgentInput
  >;
  connectOrCreate?: Prisma.WorkflowStepCreateOrConnectWithoutInboundAgentInput;
  upsert?: Prisma.WorkflowStepUpsertWithoutInboundAgentInput;
  disconnect?: Prisma.WorkflowStepWhereInput | boolean;
  delete?: Prisma.WorkflowStepWhereInput | boolean;
  connect?: Prisma.WorkflowStepWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.WorkflowStepUpdateToOneWithWhereWithoutInboundAgentInput,
      Prisma.WorkflowStepUpdateWithoutInboundAgentInput
    >,
    Prisma.WorkflowStepUncheckedUpdateWithoutInboundAgentInput
  >;
};

export type WorkflowStepUncheckedUpdateOneWithoutAgentNestedInput = {
  create?: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutAgentInput,
    Prisma.WorkflowStepUncheckedCreateWithoutAgentInput
  >;
  connectOrCreate?: Prisma.WorkflowStepCreateOrConnectWithoutAgentInput;
  upsert?: Prisma.WorkflowStepUpsertWithoutAgentInput;
  disconnect?: Prisma.WorkflowStepWhereInput | boolean;
  delete?: Prisma.WorkflowStepWhereInput | boolean;
  connect?: Prisma.WorkflowStepWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.WorkflowStepUpdateToOneWithWhereWithoutAgentInput,
      Prisma.WorkflowStepUpdateWithoutAgentInput
    >,
    Prisma.WorkflowStepUncheckedUpdateWithoutAgentInput
  >;
};

export type WorkflowStepUncheckedUpdateOneWithoutInboundAgentNestedInput = {
  create?: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutInboundAgentInput,
    Prisma.WorkflowStepUncheckedCreateWithoutInboundAgentInput
  >;
  connectOrCreate?: Prisma.WorkflowStepCreateOrConnectWithoutInboundAgentInput;
  upsert?: Prisma.WorkflowStepUpsertWithoutInboundAgentInput;
  disconnect?: Prisma.WorkflowStepWhereInput | boolean;
  delete?: Prisma.WorkflowStepWhereInput | boolean;
  connect?: Prisma.WorkflowStepWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.WorkflowStepUpdateToOneWithWhereWithoutInboundAgentInput,
      Prisma.WorkflowStepUpdateWithoutInboundAgentInput
    >,
    Prisma.WorkflowStepUncheckedUpdateWithoutInboundAgentInput
  >;
};

export type WorkflowStepCreateWithoutWorkflowInput = {
  stepNumber: number;
  action: $Enums.WorkflowActions;
  sendTo?: string | null;
  reminderBody?: string | null;
  emailSubject?: string | null;
  template?: $Enums.WorkflowTemplates;
  numberRequired?: boolean | null;
  sender?: string | null;
  numberVerificationPending?: boolean;
  includeCalendarEvent?: boolean;
  verifiedAt?: Date | string | null;
  workflowReminders?: Prisma.WorkflowReminderCreateNestedManyWithoutWorkflowStepInput;
  agent?: Prisma.AgentCreateNestedOneWithoutWorkflowStepInput;
  inboundAgent?: Prisma.AgentCreateNestedOneWithoutInboundWorkflowStepInput;
};

export type WorkflowStepUncheckedCreateWithoutWorkflowInput = {
  id?: number;
  stepNumber: number;
  action: $Enums.WorkflowActions;
  sendTo?: string | null;
  reminderBody?: string | null;
  emailSubject?: string | null;
  template?: $Enums.WorkflowTemplates;
  numberRequired?: boolean | null;
  sender?: string | null;
  numberVerificationPending?: boolean;
  includeCalendarEvent?: boolean;
  verifiedAt?: Date | string | null;
  agentId?: string | null;
  inboundAgentId?: string | null;
  workflowReminders?: Prisma.WorkflowReminderUncheckedCreateNestedManyWithoutWorkflowStepInput;
};

export type WorkflowStepCreateOrConnectWithoutWorkflowInput = {
  where: Prisma.WorkflowStepWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutWorkflowInput,
    Prisma.WorkflowStepUncheckedCreateWithoutWorkflowInput
  >;
};

export type WorkflowStepCreateManyWorkflowInputEnvelope = {
  data: Prisma.WorkflowStepCreateManyWorkflowInput | Prisma.WorkflowStepCreateManyWorkflowInput[];
  skipDuplicates?: boolean;
};

export type WorkflowStepUpsertWithWhereUniqueWithoutWorkflowInput = {
  where: Prisma.WorkflowStepWhereUniqueInput;
  update: Prisma.XOR<
    Prisma.WorkflowStepUpdateWithoutWorkflowInput,
    Prisma.WorkflowStepUncheckedUpdateWithoutWorkflowInput
  >;
  create: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutWorkflowInput,
    Prisma.WorkflowStepUncheckedCreateWithoutWorkflowInput
  >;
};

export type WorkflowStepUpdateWithWhereUniqueWithoutWorkflowInput = {
  where: Prisma.WorkflowStepWhereUniqueInput;
  data: Prisma.XOR<
    Prisma.WorkflowStepUpdateWithoutWorkflowInput,
    Prisma.WorkflowStepUncheckedUpdateWithoutWorkflowInput
  >;
};

export type WorkflowStepUpdateManyWithWhereWithoutWorkflowInput = {
  where: Prisma.WorkflowStepScalarWhereInput;
  data: Prisma.XOR<
    Prisma.WorkflowStepUpdateManyMutationInput,
    Prisma.WorkflowStepUncheckedUpdateManyWithoutWorkflowInput
  >;
};

export type WorkflowStepScalarWhereInput = {
  AND?: Prisma.WorkflowStepScalarWhereInput | Prisma.WorkflowStepScalarWhereInput[];
  OR?: Prisma.WorkflowStepScalarWhereInput[];
  NOT?: Prisma.WorkflowStepScalarWhereInput | Prisma.WorkflowStepScalarWhereInput[];
  id?: Prisma.IntFilter<"WorkflowStep"> | number;
  stepNumber?: Prisma.IntFilter<"WorkflowStep"> | number;
  action?: Prisma.EnumWorkflowActionsFilter<"WorkflowStep"> | $Enums.WorkflowActions;
  workflowId?: Prisma.IntFilter<"WorkflowStep"> | number;
  sendTo?: Prisma.StringNullableFilter<"WorkflowStep"> | string | null;
  reminderBody?: Prisma.StringNullableFilter<"WorkflowStep"> | string | null;
  emailSubject?: Prisma.StringNullableFilter<"WorkflowStep"> | string | null;
  template?: Prisma.EnumWorkflowTemplatesFilter<"WorkflowStep"> | $Enums.WorkflowTemplates;
  numberRequired?: Prisma.BoolNullableFilter<"WorkflowStep"> | boolean | null;
  sender?: Prisma.StringNullableFilter<"WorkflowStep"> | string | null;
  numberVerificationPending?: Prisma.BoolFilter<"WorkflowStep"> | boolean;
  includeCalendarEvent?: Prisma.BoolFilter<"WorkflowStep"> | boolean;
  verifiedAt?: Prisma.DateTimeNullableFilter<"WorkflowStep"> | Date | string | null;
  agentId?: Prisma.StringNullableFilter<"WorkflowStep"> | string | null;
  inboundAgentId?: Prisma.StringNullableFilter<"WorkflowStep"> | string | null;
};

export type WorkflowStepCreateWithoutWorkflowRemindersInput = {
  stepNumber: number;
  action: $Enums.WorkflowActions;
  sendTo?: string | null;
  reminderBody?: string | null;
  emailSubject?: string | null;
  template?: $Enums.WorkflowTemplates;
  numberRequired?: boolean | null;
  sender?: string | null;
  numberVerificationPending?: boolean;
  includeCalendarEvent?: boolean;
  verifiedAt?: Date | string | null;
  workflow: Prisma.WorkflowCreateNestedOneWithoutStepsInput;
  agent?: Prisma.AgentCreateNestedOneWithoutWorkflowStepInput;
  inboundAgent?: Prisma.AgentCreateNestedOneWithoutInboundWorkflowStepInput;
};

export type WorkflowStepUncheckedCreateWithoutWorkflowRemindersInput = {
  id?: number;
  stepNumber: number;
  action: $Enums.WorkflowActions;
  workflowId: number;
  sendTo?: string | null;
  reminderBody?: string | null;
  emailSubject?: string | null;
  template?: $Enums.WorkflowTemplates;
  numberRequired?: boolean | null;
  sender?: string | null;
  numberVerificationPending?: boolean;
  includeCalendarEvent?: boolean;
  verifiedAt?: Date | string | null;
  agentId?: string | null;
  inboundAgentId?: string | null;
};

export type WorkflowStepCreateOrConnectWithoutWorkflowRemindersInput = {
  where: Prisma.WorkflowStepWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutWorkflowRemindersInput,
    Prisma.WorkflowStepUncheckedCreateWithoutWorkflowRemindersInput
  >;
};

export type WorkflowStepUpsertWithoutWorkflowRemindersInput = {
  update: Prisma.XOR<
    Prisma.WorkflowStepUpdateWithoutWorkflowRemindersInput,
    Prisma.WorkflowStepUncheckedUpdateWithoutWorkflowRemindersInput
  >;
  create: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutWorkflowRemindersInput,
    Prisma.WorkflowStepUncheckedCreateWithoutWorkflowRemindersInput
  >;
  where?: Prisma.WorkflowStepWhereInput;
};

export type WorkflowStepUpdateToOneWithWhereWithoutWorkflowRemindersInput = {
  where?: Prisma.WorkflowStepWhereInput;
  data: Prisma.XOR<
    Prisma.WorkflowStepUpdateWithoutWorkflowRemindersInput,
    Prisma.WorkflowStepUncheckedUpdateWithoutWorkflowRemindersInput
  >;
};

export type WorkflowStepUpdateWithoutWorkflowRemindersInput = {
  stepNumber?: Prisma.IntFieldUpdateOperationsInput | number;
  action?: Prisma.EnumWorkflowActionsFieldUpdateOperationsInput | $Enums.WorkflowActions;
  sendTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  reminderBody?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  template?: Prisma.EnumWorkflowTemplatesFieldUpdateOperationsInput | $Enums.WorkflowTemplates;
  numberRequired?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  sender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberVerificationPending?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  includeCalendarEvent?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  workflow?: Prisma.WorkflowUpdateOneRequiredWithoutStepsNestedInput;
  agent?: Prisma.AgentUpdateOneWithoutWorkflowStepNestedInput;
  inboundAgent?: Prisma.AgentUpdateOneWithoutInboundWorkflowStepNestedInput;
};

export type WorkflowStepUncheckedUpdateWithoutWorkflowRemindersInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  stepNumber?: Prisma.IntFieldUpdateOperationsInput | number;
  action?: Prisma.EnumWorkflowActionsFieldUpdateOperationsInput | $Enums.WorkflowActions;
  workflowId?: Prisma.IntFieldUpdateOperationsInput | number;
  sendTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  reminderBody?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  template?: Prisma.EnumWorkflowTemplatesFieldUpdateOperationsInput | $Enums.WorkflowTemplates;
  numberRequired?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  sender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberVerificationPending?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  includeCalendarEvent?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  agentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  inboundAgentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type WorkflowStepCreateWithoutAgentInput = {
  stepNumber: number;
  action: $Enums.WorkflowActions;
  sendTo?: string | null;
  reminderBody?: string | null;
  emailSubject?: string | null;
  template?: $Enums.WorkflowTemplates;
  numberRequired?: boolean | null;
  sender?: string | null;
  numberVerificationPending?: boolean;
  includeCalendarEvent?: boolean;
  verifiedAt?: Date | string | null;
  workflow: Prisma.WorkflowCreateNestedOneWithoutStepsInput;
  workflowReminders?: Prisma.WorkflowReminderCreateNestedManyWithoutWorkflowStepInput;
  inboundAgent?: Prisma.AgentCreateNestedOneWithoutInboundWorkflowStepInput;
};

export type WorkflowStepUncheckedCreateWithoutAgentInput = {
  id?: number;
  stepNumber: number;
  action: $Enums.WorkflowActions;
  workflowId: number;
  sendTo?: string | null;
  reminderBody?: string | null;
  emailSubject?: string | null;
  template?: $Enums.WorkflowTemplates;
  numberRequired?: boolean | null;
  sender?: string | null;
  numberVerificationPending?: boolean;
  includeCalendarEvent?: boolean;
  verifiedAt?: Date | string | null;
  inboundAgentId?: string | null;
  workflowReminders?: Prisma.WorkflowReminderUncheckedCreateNestedManyWithoutWorkflowStepInput;
};

export type WorkflowStepCreateOrConnectWithoutAgentInput = {
  where: Prisma.WorkflowStepWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutAgentInput,
    Prisma.WorkflowStepUncheckedCreateWithoutAgentInput
  >;
};

export type WorkflowStepCreateWithoutInboundAgentInput = {
  stepNumber: number;
  action: $Enums.WorkflowActions;
  sendTo?: string | null;
  reminderBody?: string | null;
  emailSubject?: string | null;
  template?: $Enums.WorkflowTemplates;
  numberRequired?: boolean | null;
  sender?: string | null;
  numberVerificationPending?: boolean;
  includeCalendarEvent?: boolean;
  verifiedAt?: Date | string | null;
  workflow: Prisma.WorkflowCreateNestedOneWithoutStepsInput;
  workflowReminders?: Prisma.WorkflowReminderCreateNestedManyWithoutWorkflowStepInput;
  agent?: Prisma.AgentCreateNestedOneWithoutWorkflowStepInput;
};

export type WorkflowStepUncheckedCreateWithoutInboundAgentInput = {
  id?: number;
  stepNumber: number;
  action: $Enums.WorkflowActions;
  workflowId: number;
  sendTo?: string | null;
  reminderBody?: string | null;
  emailSubject?: string | null;
  template?: $Enums.WorkflowTemplates;
  numberRequired?: boolean | null;
  sender?: string | null;
  numberVerificationPending?: boolean;
  includeCalendarEvent?: boolean;
  verifiedAt?: Date | string | null;
  agentId?: string | null;
  workflowReminders?: Prisma.WorkflowReminderUncheckedCreateNestedManyWithoutWorkflowStepInput;
};

export type WorkflowStepCreateOrConnectWithoutInboundAgentInput = {
  where: Prisma.WorkflowStepWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutInboundAgentInput,
    Prisma.WorkflowStepUncheckedCreateWithoutInboundAgentInput
  >;
};

export type WorkflowStepUpsertWithoutAgentInput = {
  update: Prisma.XOR<
    Prisma.WorkflowStepUpdateWithoutAgentInput,
    Prisma.WorkflowStepUncheckedUpdateWithoutAgentInput
  >;
  create: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutAgentInput,
    Prisma.WorkflowStepUncheckedCreateWithoutAgentInput
  >;
  where?: Prisma.WorkflowStepWhereInput;
};

export type WorkflowStepUpdateToOneWithWhereWithoutAgentInput = {
  where?: Prisma.WorkflowStepWhereInput;
  data: Prisma.XOR<
    Prisma.WorkflowStepUpdateWithoutAgentInput,
    Prisma.WorkflowStepUncheckedUpdateWithoutAgentInput
  >;
};

export type WorkflowStepUpdateWithoutAgentInput = {
  stepNumber?: Prisma.IntFieldUpdateOperationsInput | number;
  action?: Prisma.EnumWorkflowActionsFieldUpdateOperationsInput | $Enums.WorkflowActions;
  sendTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  reminderBody?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  template?: Prisma.EnumWorkflowTemplatesFieldUpdateOperationsInput | $Enums.WorkflowTemplates;
  numberRequired?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  sender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberVerificationPending?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  includeCalendarEvent?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  workflow?: Prisma.WorkflowUpdateOneRequiredWithoutStepsNestedInput;
  workflowReminders?: Prisma.WorkflowReminderUpdateManyWithoutWorkflowStepNestedInput;
  inboundAgent?: Prisma.AgentUpdateOneWithoutInboundWorkflowStepNestedInput;
};

export type WorkflowStepUncheckedUpdateWithoutAgentInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  stepNumber?: Prisma.IntFieldUpdateOperationsInput | number;
  action?: Prisma.EnumWorkflowActionsFieldUpdateOperationsInput | $Enums.WorkflowActions;
  workflowId?: Prisma.IntFieldUpdateOperationsInput | number;
  sendTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  reminderBody?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  template?: Prisma.EnumWorkflowTemplatesFieldUpdateOperationsInput | $Enums.WorkflowTemplates;
  numberRequired?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  sender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberVerificationPending?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  includeCalendarEvent?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  inboundAgentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  workflowReminders?: Prisma.WorkflowReminderUncheckedUpdateManyWithoutWorkflowStepNestedInput;
};

export type WorkflowStepUpsertWithoutInboundAgentInput = {
  update: Prisma.XOR<
    Prisma.WorkflowStepUpdateWithoutInboundAgentInput,
    Prisma.WorkflowStepUncheckedUpdateWithoutInboundAgentInput
  >;
  create: Prisma.XOR<
    Prisma.WorkflowStepCreateWithoutInboundAgentInput,
    Prisma.WorkflowStepUncheckedCreateWithoutInboundAgentInput
  >;
  where?: Prisma.WorkflowStepWhereInput;
};

export type WorkflowStepUpdateToOneWithWhereWithoutInboundAgentInput = {
  where?: Prisma.WorkflowStepWhereInput;
  data: Prisma.XOR<
    Prisma.WorkflowStepUpdateWithoutInboundAgentInput,
    Prisma.WorkflowStepUncheckedUpdateWithoutInboundAgentInput
  >;
};

export type WorkflowStepUpdateWithoutInboundAgentInput = {
  stepNumber?: Prisma.IntFieldUpdateOperationsInput | number;
  action?: Prisma.EnumWorkflowActionsFieldUpdateOperationsInput | $Enums.WorkflowActions;
  sendTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  reminderBody?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  template?: Prisma.EnumWorkflowTemplatesFieldUpdateOperationsInput | $Enums.WorkflowTemplates;
  numberRequired?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  sender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberVerificationPending?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  includeCalendarEvent?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  workflow?: Prisma.WorkflowUpdateOneRequiredWithoutStepsNestedInput;
  workflowReminders?: Prisma.WorkflowReminderUpdateManyWithoutWorkflowStepNestedInput;
  agent?: Prisma.AgentUpdateOneWithoutWorkflowStepNestedInput;
};

export type WorkflowStepUncheckedUpdateWithoutInboundAgentInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  stepNumber?: Prisma.IntFieldUpdateOperationsInput | number;
  action?: Prisma.EnumWorkflowActionsFieldUpdateOperationsInput | $Enums.WorkflowActions;
  workflowId?: Prisma.IntFieldUpdateOperationsInput | number;
  sendTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  reminderBody?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  template?: Prisma.EnumWorkflowTemplatesFieldUpdateOperationsInput | $Enums.WorkflowTemplates;
  numberRequired?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  sender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberVerificationPending?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  includeCalendarEvent?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  agentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  workflowReminders?: Prisma.WorkflowReminderUncheckedUpdateManyWithoutWorkflowStepNestedInput;
};

export type WorkflowStepCreateManyWorkflowInput = {
  id?: number;
  stepNumber: number;
  action: $Enums.WorkflowActions;
  sendTo?: string | null;
  reminderBody?: string | null;
  emailSubject?: string | null;
  template?: $Enums.WorkflowTemplates;
  numberRequired?: boolean | null;
  sender?: string | null;
  numberVerificationPending?: boolean;
  includeCalendarEvent?: boolean;
  verifiedAt?: Date | string | null;
  agentId?: string | null;
  inboundAgentId?: string | null;
};

export type WorkflowStepUpdateWithoutWorkflowInput = {
  stepNumber?: Prisma.IntFieldUpdateOperationsInput | number;
  action?: Prisma.EnumWorkflowActionsFieldUpdateOperationsInput | $Enums.WorkflowActions;
  sendTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  reminderBody?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  template?: Prisma.EnumWorkflowTemplatesFieldUpdateOperationsInput | $Enums.WorkflowTemplates;
  numberRequired?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  sender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberVerificationPending?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  includeCalendarEvent?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  workflowReminders?: Prisma.WorkflowReminderUpdateManyWithoutWorkflowStepNestedInput;
  agent?: Prisma.AgentUpdateOneWithoutWorkflowStepNestedInput;
  inboundAgent?: Prisma.AgentUpdateOneWithoutInboundWorkflowStepNestedInput;
};

export type WorkflowStepUncheckedUpdateWithoutWorkflowInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  stepNumber?: Prisma.IntFieldUpdateOperationsInput | number;
  action?: Prisma.EnumWorkflowActionsFieldUpdateOperationsInput | $Enums.WorkflowActions;
  sendTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  reminderBody?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  template?: Prisma.EnumWorkflowTemplatesFieldUpdateOperationsInput | $Enums.WorkflowTemplates;
  numberRequired?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  sender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberVerificationPending?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  includeCalendarEvent?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  agentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  inboundAgentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  workflowReminders?: Prisma.WorkflowReminderUncheckedUpdateManyWithoutWorkflowStepNestedInput;
};

export type WorkflowStepUncheckedUpdateManyWithoutWorkflowInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number;
  stepNumber?: Prisma.IntFieldUpdateOperationsInput | number;
  action?: Prisma.EnumWorkflowActionsFieldUpdateOperationsInput | $Enums.WorkflowActions;
  sendTo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  reminderBody?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubject?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  template?: Prisma.EnumWorkflowTemplatesFieldUpdateOperationsInput | $Enums.WorkflowTemplates;
  numberRequired?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null;
  sender?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  numberVerificationPending?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  includeCalendarEvent?: Prisma.BoolFieldUpdateOperationsInput | boolean;
  verifiedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null;
  agentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  inboundAgentId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

/**
 * Count Type WorkflowStepCountOutputType
 */

export type WorkflowStepCountOutputType = {
  workflowReminders: number;
};

export type WorkflowStepCountOutputTypeSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  workflowReminders?: boolean | WorkflowStepCountOutputTypeCountWorkflowRemindersArgs;
};

/**
 * WorkflowStepCountOutputType without action
 */
export type WorkflowStepCountOutputTypeDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowStepCountOutputType
   */
  select?: Prisma.WorkflowStepCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * WorkflowStepCountOutputType without action
 */
export type WorkflowStepCountOutputTypeCountWorkflowRemindersArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  where?: Prisma.WorkflowReminderWhereInput;
};

export type WorkflowStepSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    stepNumber?: boolean;
    action?: boolean;
    workflowId?: boolean;
    sendTo?: boolean;
    reminderBody?: boolean;
    emailSubject?: boolean;
    template?: boolean;
    numberRequired?: boolean;
    sender?: boolean;
    numberVerificationPending?: boolean;
    includeCalendarEvent?: boolean;
    verifiedAt?: boolean;
    agentId?: boolean;
    inboundAgentId?: boolean;
    workflow?: boolean | Prisma.WorkflowDefaultArgs<ExtArgs>;
    workflowReminders?: boolean | Prisma.WorkflowStep$workflowRemindersArgs<ExtArgs>;
    agent?: boolean | Prisma.WorkflowStep$agentArgs<ExtArgs>;
    inboundAgent?: boolean | Prisma.WorkflowStep$inboundAgentArgs<ExtArgs>;
    _count?: boolean | Prisma.WorkflowStepCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["workflowStep"]
>;

export type WorkflowStepSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    stepNumber?: boolean;
    action?: boolean;
    workflowId?: boolean;
    sendTo?: boolean;
    reminderBody?: boolean;
    emailSubject?: boolean;
    template?: boolean;
    numberRequired?: boolean;
    sender?: boolean;
    numberVerificationPending?: boolean;
    includeCalendarEvent?: boolean;
    verifiedAt?: boolean;
    agentId?: boolean;
    inboundAgentId?: boolean;
    workflow?: boolean | Prisma.WorkflowDefaultArgs<ExtArgs>;
    agent?: boolean | Prisma.WorkflowStep$agentArgs<ExtArgs>;
    inboundAgent?: boolean | Prisma.WorkflowStep$inboundAgentArgs<ExtArgs>;
  },
  ExtArgs["result"]["workflowStep"]
>;

export type WorkflowStepSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    stepNumber?: boolean;
    action?: boolean;
    workflowId?: boolean;
    sendTo?: boolean;
    reminderBody?: boolean;
    emailSubject?: boolean;
    template?: boolean;
    numberRequired?: boolean;
    sender?: boolean;
    numberVerificationPending?: boolean;
    includeCalendarEvent?: boolean;
    verifiedAt?: boolean;
    agentId?: boolean;
    inboundAgentId?: boolean;
    workflow?: boolean | Prisma.WorkflowDefaultArgs<ExtArgs>;
    agent?: boolean | Prisma.WorkflowStep$agentArgs<ExtArgs>;
    inboundAgent?: boolean | Prisma.WorkflowStep$inboundAgentArgs<ExtArgs>;
  },
  ExtArgs["result"]["workflowStep"]
>;

export type WorkflowStepSelectScalar = {
  id?: boolean;
  stepNumber?: boolean;
  action?: boolean;
  workflowId?: boolean;
  sendTo?: boolean;
  reminderBody?: boolean;
  emailSubject?: boolean;
  template?: boolean;
  numberRequired?: boolean;
  sender?: boolean;
  numberVerificationPending?: boolean;
  includeCalendarEvent?: boolean;
  verifiedAt?: boolean;
  agentId?: boolean;
  inboundAgentId?: boolean;
};

export type WorkflowStepOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
  | "id"
  | "stepNumber"
  | "action"
  | "workflowId"
  | "sendTo"
  | "reminderBody"
  | "emailSubject"
  | "template"
  | "numberRequired"
  | "sender"
  | "numberVerificationPending"
  | "includeCalendarEvent"
  | "verifiedAt"
  | "agentId"
  | "inboundAgentId",
  ExtArgs["result"]["workflowStep"]
>;
export type WorkflowStepInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  workflow?: boolean | Prisma.WorkflowDefaultArgs<ExtArgs>;
  workflowReminders?: boolean | Prisma.WorkflowStep$workflowRemindersArgs<ExtArgs>;
  agent?: boolean | Prisma.WorkflowStep$agentArgs<ExtArgs>;
  inboundAgent?: boolean | Prisma.WorkflowStep$inboundAgentArgs<ExtArgs>;
  _count?: boolean | Prisma.WorkflowStepCountOutputTypeDefaultArgs<ExtArgs>;
};
export type WorkflowStepIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  workflow?: boolean | Prisma.WorkflowDefaultArgs<ExtArgs>;
  agent?: boolean | Prisma.WorkflowStep$agentArgs<ExtArgs>;
  inboundAgent?: boolean | Prisma.WorkflowStep$inboundAgentArgs<ExtArgs>;
};
export type WorkflowStepIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  workflow?: boolean | Prisma.WorkflowDefaultArgs<ExtArgs>;
  agent?: boolean | Prisma.WorkflowStep$agentArgs<ExtArgs>;
  inboundAgent?: boolean | Prisma.WorkflowStep$inboundAgentArgs<ExtArgs>;
};

export type $WorkflowStepPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  name: "WorkflowStep";
  objects: {
    workflow: Prisma.$WorkflowPayload<ExtArgs>;
    workflowReminders: Prisma.$WorkflowReminderPayload<ExtArgs>[];
    agent: Prisma.$AgentPayload<ExtArgs> | null;
    inboundAgent: Prisma.$AgentPayload<ExtArgs> | null;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: number;
      stepNumber: number;
      action: $Enums.WorkflowActions;
      workflowId: number;
      sendTo: string | null;
      reminderBody: string | null;
      emailSubject: string | null;
      template: $Enums.WorkflowTemplates;
      numberRequired: boolean | null;
      sender: string | null;
      numberVerificationPending: boolean;
      includeCalendarEvent: boolean;
      verifiedAt: Date | null;
      agentId: string | null;
      inboundAgentId: string | null;
    },
    ExtArgs["result"]["workflowStep"]
  >;
  composites: {};
};

export type WorkflowStepGetPayload<S extends boolean | null | undefined | WorkflowStepDefaultArgs> =
  runtime.Types.Result.GetResult<Prisma.$WorkflowStepPayload, S>;

export type WorkflowStepCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<WorkflowStepFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: WorkflowStepCountAggregateInputType | true;
};

export interface WorkflowStepDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>["model"]["WorkflowStep"]; meta: { name: "WorkflowStep" } };
  /**
   * Find zero or one WorkflowStep that matches the filter.
   * @param {WorkflowStepFindUniqueArgs} args - Arguments to find a WorkflowStep
   * @example
   * // Get one WorkflowStep
   * const workflowStep = await prisma.workflowStep.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends WorkflowStepFindUniqueArgs>(
    args: Prisma.SelectSubset<T, WorkflowStepFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowStepClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowStepPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one WorkflowStep that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {WorkflowStepFindUniqueOrThrowArgs} args - Arguments to find a WorkflowStep
   * @example
   * // Get one WorkflowStep
   * const workflowStep = await prisma.workflowStep.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends WorkflowStepFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, WorkflowStepFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowStepClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowStepPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first WorkflowStep that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowStepFindFirstArgs} args - Arguments to find a WorkflowStep
   * @example
   * // Get one WorkflowStep
   * const workflowStep = await prisma.workflowStep.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends WorkflowStepFindFirstArgs>(
    args?: Prisma.SelectSubset<T, WorkflowStepFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowStepClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowStepPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first WorkflowStep that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowStepFindFirstOrThrowArgs} args - Arguments to find a WorkflowStep
   * @example
   * // Get one WorkflowStep
   * const workflowStep = await prisma.workflowStep.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends WorkflowStepFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, WorkflowStepFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowStepClient<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowStepPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more WorkflowSteps that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowStepFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all WorkflowSteps
   * const workflowSteps = await prisma.workflowStep.findMany()
   *
   * // Get first 10 WorkflowSteps
   * const workflowSteps = await prisma.workflowStep.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const workflowStepWithIdOnly = await prisma.workflowStep.findMany({ select: { id: true } })
   *
   */
  findMany<T extends WorkflowStepFindManyArgs>(
    args?: Prisma.SelectSubset<T, WorkflowStepFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<Prisma.$WorkflowStepPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>
  >;

  /**
   * Create a WorkflowStep.
   * @param {WorkflowStepCreateArgs} args - Arguments to create a WorkflowStep.
   * @example
   * // Create one WorkflowStep
   * const WorkflowStep = await prisma.workflowStep.create({
   *   data: {
   *     // ... data to create a WorkflowStep
   *   }
   * })
   *
   */
  create<T extends WorkflowStepCreateArgs>(
    args: Prisma.SelectSubset<T, WorkflowStepCreateArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowStepClient<
    runtime.Types.Result.GetResult<Prisma.$WorkflowStepPayload<ExtArgs>, T, "create", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many WorkflowSteps.
   * @param {WorkflowStepCreateManyArgs} args - Arguments to create many WorkflowSteps.
   * @example
   * // Create many WorkflowSteps
   * const workflowStep = await prisma.workflowStep.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends WorkflowStepCreateManyArgs>(
    args?: Prisma.SelectSubset<T, WorkflowStepCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many WorkflowSteps and returns the data saved in the database.
   * @param {WorkflowStepCreateManyAndReturnArgs} args - Arguments to create many WorkflowSteps.
   * @example
   * // Create many WorkflowSteps
   * const workflowStep = await prisma.workflowStep.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many WorkflowSteps and only return the `id`
   * const workflowStepWithIdOnly = await prisma.workflowStep.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends WorkflowStepCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, WorkflowStepCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowStepPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a WorkflowStep.
   * @param {WorkflowStepDeleteArgs} args - Arguments to delete one WorkflowStep.
   * @example
   * // Delete one WorkflowStep
   * const WorkflowStep = await prisma.workflowStep.delete({
   *   where: {
   *     // ... filter to delete one WorkflowStep
   *   }
   * })
   *
   */
  delete<T extends WorkflowStepDeleteArgs>(
    args: Prisma.SelectSubset<T, WorkflowStepDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowStepClient<
    runtime.Types.Result.GetResult<Prisma.$WorkflowStepPayload<ExtArgs>, T, "delete", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one WorkflowStep.
   * @param {WorkflowStepUpdateArgs} args - Arguments to update one WorkflowStep.
   * @example
   * // Update one WorkflowStep
   * const workflowStep = await prisma.workflowStep.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends WorkflowStepUpdateArgs>(
    args: Prisma.SelectSubset<T, WorkflowStepUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowStepClient<
    runtime.Types.Result.GetResult<Prisma.$WorkflowStepPayload<ExtArgs>, T, "update", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more WorkflowSteps.
   * @param {WorkflowStepDeleteManyArgs} args - Arguments to filter WorkflowSteps to delete.
   * @example
   * // Delete a few WorkflowSteps
   * const { count } = await prisma.workflowStep.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends WorkflowStepDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, WorkflowStepDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more WorkflowSteps.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowStepUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many WorkflowSteps
   * const workflowStep = await prisma.workflowStep.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends WorkflowStepUpdateManyArgs>(
    args: Prisma.SelectSubset<T, WorkflowStepUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more WorkflowSteps and returns the data updated in the database.
   * @param {WorkflowStepUpdateManyAndReturnArgs} args - Arguments to update many WorkflowSteps.
   * @example
   * // Update many WorkflowSteps
   * const workflowStep = await prisma.workflowStep.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more WorkflowSteps and only return the `id`
   * const workflowStepWithIdOnly = await prisma.workflowStep.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends WorkflowStepUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, WorkflowStepUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$WorkflowStepPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one WorkflowStep.
   * @param {WorkflowStepUpsertArgs} args - Arguments to update or create a WorkflowStep.
   * @example
   * // Update or create a WorkflowStep
   * const workflowStep = await prisma.workflowStep.upsert({
   *   create: {
   *     // ... data to create a WorkflowStep
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the WorkflowStep we want to update
   *   }
   * })
   */
  upsert<T extends WorkflowStepUpsertArgs>(
    args: Prisma.SelectSubset<T, WorkflowStepUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowStepClient<
    runtime.Types.Result.GetResult<Prisma.$WorkflowStepPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of WorkflowSteps.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowStepCountArgs} args - Arguments to filter WorkflowSteps to count.
   * @example
   * // Count the number of WorkflowSteps
   * const count = await prisma.workflowStep.count({
   *   where: {
   *     // ... the filter for the WorkflowSteps we want to count
   *   }
   * })
   **/
  count<T extends WorkflowStepCountArgs>(
    args?: Prisma.Subset<T, WorkflowStepCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], WorkflowStepCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a WorkflowStep.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowStepAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends WorkflowStepAggregateArgs>(
    args: Prisma.Subset<T, WorkflowStepAggregateArgs>
  ): Prisma.PrismaPromise<GetWorkflowStepAggregateType<T>>;

  /**
   * Group by WorkflowStep.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkflowStepGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends WorkflowStepGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: WorkflowStepGroupByArgs["orderBy"] }
      : { orderBy?: WorkflowStepGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
        }[HavingFields]
      : "take" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : "skip" extends Prisma.Keys<T>
      ? "orderBy" extends Prisma.Keys<T>
        ? ByValid extends Prisma.True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends Prisma.True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
        }[OrderFields]
  >(
    args: Prisma.SubsetIntersection<T, WorkflowStepGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors ? GetWorkflowStepGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the WorkflowStep model
   */
  readonly fields: WorkflowStepFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for WorkflowStep.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__WorkflowStepClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  workflow<T extends Prisma.WorkflowDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.WorkflowDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__WorkflowClient<
    | runtime.Types.Result.GetResult<
        Prisma.$WorkflowPayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  workflowReminders<T extends Prisma.WorkflowStep$workflowRemindersArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.WorkflowStep$workflowRemindersArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$WorkflowReminderPayload<ExtArgs>,
        T,
        "findMany",
        GlobalOmitOptions
      >
    | Null
  >;
  agent<T extends Prisma.WorkflowStep$agentArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.WorkflowStep$agentArgs<ExtArgs>>
  ): Prisma.Prisma__AgentClient<
    runtime.Types.Result.GetResult<
      Prisma.$AgentPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  inboundAgent<T extends Prisma.WorkflowStep$inboundAgentArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.WorkflowStep$inboundAgentArgs<ExtArgs>>
  ): Prisma.Prisma__AgentClient<
    runtime.Types.Result.GetResult<
      Prisma.$AgentPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the WorkflowStep model
 */
export interface WorkflowStepFieldRefs {
  readonly id: Prisma.FieldRef<"WorkflowStep", "Int">;
  readonly stepNumber: Prisma.FieldRef<"WorkflowStep", "Int">;
  readonly action: Prisma.FieldRef<"WorkflowStep", "WorkflowActions">;
  readonly workflowId: Prisma.FieldRef<"WorkflowStep", "Int">;
  readonly sendTo: Prisma.FieldRef<"WorkflowStep", "String">;
  readonly reminderBody: Prisma.FieldRef<"WorkflowStep", "String">;
  readonly emailSubject: Prisma.FieldRef<"WorkflowStep", "String">;
  readonly template: Prisma.FieldRef<"WorkflowStep", "WorkflowTemplates">;
  readonly numberRequired: Prisma.FieldRef<"WorkflowStep", "Boolean">;
  readonly sender: Prisma.FieldRef<"WorkflowStep", "String">;
  readonly numberVerificationPending: Prisma.FieldRef<"WorkflowStep", "Boolean">;
  readonly includeCalendarEvent: Prisma.FieldRef<"WorkflowStep", "Boolean">;
  readonly verifiedAt: Prisma.FieldRef<"WorkflowStep", "DateTime">;
  readonly agentId: Prisma.FieldRef<"WorkflowStep", "String">;
  readonly inboundAgentId: Prisma.FieldRef<"WorkflowStep", "String">;
}

// Custom InputTypes
/**
 * WorkflowStep findUnique
 */
export type WorkflowStepFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowStep
   */
  select?: Prisma.WorkflowStepSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowStep
   */
  omit?: Prisma.WorkflowStepOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowStepInclude<ExtArgs> | null;
  /**
   * Filter, which WorkflowStep to fetch.
   */
  where: Prisma.WorkflowStepWhereUniqueInput;
};

/**
 * WorkflowStep findUniqueOrThrow
 */
export type WorkflowStepFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowStep
   */
  select?: Prisma.WorkflowStepSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowStep
   */
  omit?: Prisma.WorkflowStepOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowStepInclude<ExtArgs> | null;
  /**
   * Filter, which WorkflowStep to fetch.
   */
  where: Prisma.WorkflowStepWhereUniqueInput;
};

/**
 * WorkflowStep findFirst
 */
export type WorkflowStepFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowStep
   */
  select?: Prisma.WorkflowStepSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowStep
   */
  omit?: Prisma.WorkflowStepOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowStepInclude<ExtArgs> | null;
  /**
   * Filter, which WorkflowStep to fetch.
   */
  where?: Prisma.WorkflowStepWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WorkflowSteps to fetch.
   */
  orderBy?: Prisma.WorkflowStepOrderByWithRelationInput | Prisma.WorkflowStepOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for WorkflowSteps.
   */
  cursor?: Prisma.WorkflowStepWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` WorkflowSteps from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WorkflowSteps.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of WorkflowSteps.
   */
  distinct?: Prisma.WorkflowStepScalarFieldEnum | Prisma.WorkflowStepScalarFieldEnum[];
};

/**
 * WorkflowStep findFirstOrThrow
 */
export type WorkflowStepFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowStep
   */
  select?: Prisma.WorkflowStepSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowStep
   */
  omit?: Prisma.WorkflowStepOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowStepInclude<ExtArgs> | null;
  /**
   * Filter, which WorkflowStep to fetch.
   */
  where?: Prisma.WorkflowStepWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WorkflowSteps to fetch.
   */
  orderBy?: Prisma.WorkflowStepOrderByWithRelationInput | Prisma.WorkflowStepOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for WorkflowSteps.
   */
  cursor?: Prisma.WorkflowStepWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` WorkflowSteps from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WorkflowSteps.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of WorkflowSteps.
   */
  distinct?: Prisma.WorkflowStepScalarFieldEnum | Prisma.WorkflowStepScalarFieldEnum[];
};

/**
 * WorkflowStep findMany
 */
export type WorkflowStepFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowStep
   */
  select?: Prisma.WorkflowStepSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowStep
   */
  omit?: Prisma.WorkflowStepOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowStepInclude<ExtArgs> | null;
  /**
   * Filter, which WorkflowSteps to fetch.
   */
  where?: Prisma.WorkflowStepWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of WorkflowSteps to fetch.
   */
  orderBy?: Prisma.WorkflowStepOrderByWithRelationInput | Prisma.WorkflowStepOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing WorkflowSteps.
   */
  cursor?: Prisma.WorkflowStepWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` WorkflowSteps from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` WorkflowSteps.
   */
  skip?: number;
  distinct?: Prisma.WorkflowStepScalarFieldEnum | Prisma.WorkflowStepScalarFieldEnum[];
};

/**
 * WorkflowStep create
 */
export type WorkflowStepCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowStep
   */
  select?: Prisma.WorkflowStepSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowStep
   */
  omit?: Prisma.WorkflowStepOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowStepInclude<ExtArgs> | null;
  /**
   * The data needed to create a WorkflowStep.
   */
  data: Prisma.XOR<Prisma.WorkflowStepCreateInput, Prisma.WorkflowStepUncheckedCreateInput>;
};

/**
 * WorkflowStep createMany
 */
export type WorkflowStepCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to create many WorkflowSteps.
   */
  data: Prisma.WorkflowStepCreateManyInput | Prisma.WorkflowStepCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * WorkflowStep createManyAndReturn
 */
export type WorkflowStepCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowStep
   */
  select?: Prisma.WorkflowStepSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowStep
   */
  omit?: Prisma.WorkflowStepOmit<ExtArgs> | null;
  /**
   * The data used to create many WorkflowSteps.
   */
  data: Prisma.WorkflowStepCreateManyInput | Prisma.WorkflowStepCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowStepIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * WorkflowStep update
 */
export type WorkflowStepUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowStep
   */
  select?: Prisma.WorkflowStepSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowStep
   */
  omit?: Prisma.WorkflowStepOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowStepInclude<ExtArgs> | null;
  /**
   * The data needed to update a WorkflowStep.
   */
  data: Prisma.XOR<Prisma.WorkflowStepUpdateInput, Prisma.WorkflowStepUncheckedUpdateInput>;
  /**
   * Choose, which WorkflowStep to update.
   */
  where: Prisma.WorkflowStepWhereUniqueInput;
};

/**
 * WorkflowStep updateMany
 */
export type WorkflowStepUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * The data used to update WorkflowSteps.
   */
  data: Prisma.XOR<Prisma.WorkflowStepUpdateManyMutationInput, Prisma.WorkflowStepUncheckedUpdateManyInput>;
  /**
   * Filter which WorkflowSteps to update
   */
  where?: Prisma.WorkflowStepWhereInput;
  /**
   * Limit how many WorkflowSteps to update.
   */
  limit?: number;
};

/**
 * WorkflowStep updateManyAndReturn
 */
export type WorkflowStepUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowStep
   */
  select?: Prisma.WorkflowStepSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowStep
   */
  omit?: Prisma.WorkflowStepOmit<ExtArgs> | null;
  /**
   * The data used to update WorkflowSteps.
   */
  data: Prisma.XOR<Prisma.WorkflowStepUpdateManyMutationInput, Prisma.WorkflowStepUncheckedUpdateManyInput>;
  /**
   * Filter which WorkflowSteps to update
   */
  where?: Prisma.WorkflowStepWhereInput;
  /**
   * Limit how many WorkflowSteps to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowStepIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * WorkflowStep upsert
 */
export type WorkflowStepUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowStep
   */
  select?: Prisma.WorkflowStepSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowStep
   */
  omit?: Prisma.WorkflowStepOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowStepInclude<ExtArgs> | null;
  /**
   * The filter to search for the WorkflowStep to update in case it exists.
   */
  where: Prisma.WorkflowStepWhereUniqueInput;
  /**
   * In case the WorkflowStep found by the `where` argument doesn't exist, create a new WorkflowStep with this data.
   */
  create: Prisma.XOR<Prisma.WorkflowStepCreateInput, Prisma.WorkflowStepUncheckedCreateInput>;
  /**
   * In case the WorkflowStep was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.WorkflowStepUpdateInput, Prisma.WorkflowStepUncheckedUpdateInput>;
};

/**
 * WorkflowStep delete
 */
export type WorkflowStepDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowStep
   */
  select?: Prisma.WorkflowStepSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowStep
   */
  omit?: Prisma.WorkflowStepOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowStepInclude<ExtArgs> | null;
  /**
   * Filter which WorkflowStep to delete.
   */
  where: Prisma.WorkflowStepWhereUniqueInput;
};

/**
 * WorkflowStep deleteMany
 */
export type WorkflowStepDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Filter which WorkflowSteps to delete
   */
  where?: Prisma.WorkflowStepWhereInput;
  /**
   * Limit how many WorkflowSteps to delete.
   */
  limit?: number;
};

/**
 * WorkflowStep.workflowReminders
 */
export type WorkflowStep$workflowRemindersArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowReminder
   */
  select?: Prisma.WorkflowReminderSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowReminder
   */
  omit?: Prisma.WorkflowReminderOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowReminderInclude<ExtArgs> | null;
  where?: Prisma.WorkflowReminderWhereInput;
  orderBy?:
    | Prisma.WorkflowReminderOrderByWithRelationInput
    | Prisma.WorkflowReminderOrderByWithRelationInput[];
  cursor?: Prisma.WorkflowReminderWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.WorkflowReminderScalarFieldEnum | Prisma.WorkflowReminderScalarFieldEnum[];
};

/**
 * WorkflowStep.agent
 */
export type WorkflowStep$agentArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Agent
   */
  select?: Prisma.AgentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Agent
   */
  omit?: Prisma.AgentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgentInclude<ExtArgs> | null;
  where?: Prisma.AgentWhereInput;
};

/**
 * WorkflowStep.inboundAgent
 */
export type WorkflowStep$inboundAgentArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the Agent
   */
  select?: Prisma.AgentSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Agent
   */
  omit?: Prisma.AgentOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AgentInclude<ExtArgs> | null;
  where?: Prisma.AgentWhereInput;
};

/**
 * WorkflowStep without action
 */
export type WorkflowStepDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
  /**
   * Select specific fields to fetch from the WorkflowStep
   */
  select?: Prisma.WorkflowStepSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the WorkflowStep
   */
  omit?: Prisma.WorkflowStepOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkflowStepInclude<ExtArgs> | null;
};
