/* !!! This is code generated by Prisma. Do not edit directly. !!! */

/* eslint-disable */
// @ts-nocheck

/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */
import * as runtime from "@prisma/client/runtime/index-browser";

export type * from "../models";
export type * from "./prismaNamespace";
export const Decimal = runtime.Decimal;
export const ModelName = {
  Host: "Host",
  HostGroup: "HostGroup",
  CalVideoSettings: "CalVideoSettings",
  EventType: "EventType",
  Credential: "Credential",
  DestinationCalendar: "DestinationCalendar",
  UserPassword: "UserPassword",
  TravelSchedule: "TravelSchedule",
  User: "User",
  NotificationsSubscriptions: "NotificationsSubscriptions",
  Profile: "Profile",
  Team: "Team",
  CreditBalance: "CreditBalance",
  CreditPurchaseLog: "CreditPurchaseLog",
  CreditExpenseLog: "CreditExpenseLog",
  OrganizationSettings: "OrganizationSettings",
  Membership: "Membership",
  VerificationToken: "VerificationToken",
  InstantMeetingToken: "InstantMeetingToken",
  BookingReference: "BookingReference",
  Attendee: "Attendee",
  Booking: "Booking",
  Tracking: "Tracking",
  Schedule: "Schedule",
  Availability: "Availability",
  SelectedCalendar: "SelectedCalendar",
  EventTypeCustomInput: "EventTypeCustomInput",
  ResetPasswordRequest: "ResetPasswordRequest",
  ReminderMail: "ReminderMail",
  Payment: "Payment",
  Webhook: "Webhook",
  Impersonations: "Impersonations",
  ApiKey: "ApiKey",
  RateLimit: "RateLimit",
  HashedLink: "HashedLink",
  Account: "Account",
  Session: "Session",
  App: "App",
  App_RoutingForms_Form: "App_RoutingForms_Form",
  App_RoutingForms_FormResponse: "App_RoutingForms_FormResponse",
  App_RoutingForms_QueuedFormResponse: "App_RoutingForms_QueuedFormResponse",
  RoutingFormResponseField: "RoutingFormResponseField",
  RoutingFormResponseDenormalized: "RoutingFormResponseDenormalized",
  Feedback: "Feedback",
  WorkflowStep: "WorkflowStep",
  Workflow: "Workflow",
  AIPhoneCallConfiguration: "AIPhoneCallConfiguration",
  WorkflowsOnEventTypes: "WorkflowsOnEventTypes",
  WorkflowsOnRoutingForms: "WorkflowsOnRoutingForms",
  WorkflowsOnTeams: "WorkflowsOnTeams",
  Deployment: "Deployment",
  WorkflowReminder: "WorkflowReminder",
  WebhookScheduledTriggers: "WebhookScheduledTriggers",
  BookingSeat: "BookingSeat",
  VerifiedNumber: "VerifiedNumber",
  VerifiedEmail: "VerifiedEmail",
  Feature: "Feature",
  UserFeatures: "UserFeatures",
  TeamFeatures: "TeamFeatures",
  SelectedSlots: "SelectedSlots",
  OAuthClient: "OAuthClient",
  AccessCode: "AccessCode",
  BookingDenormalized: "BookingDenormalized",
  CalendarCache: "CalendarCache",
  TempOrgRedirect: "TempOrgRedirect",
  Avatar: "Avatar",
  OutOfOfficeEntry: "OutOfOfficeEntry",
  OutOfOfficeReason: "OutOfOfficeReason",
  PlatformOAuthClient: "PlatformOAuthClient",
  PlatformAuthorizationToken: "PlatformAuthorizationToken",
  AccessToken: "AccessToken",
  RefreshToken: "RefreshToken",
  DSyncData: "DSyncData",
  DSyncTeamGroupMapping: "DSyncTeamGroupMapping",
  SecondaryEmail: "SecondaryEmail",
  Task: "Task",
  ManagedOrganization: "ManagedOrganization",
  PlatformBilling: "PlatformBilling",
  AttributeOption: "AttributeOption",
  Attribute: "Attribute",
  AttributeToUser: "AttributeToUser",
  AssignmentReason: "AssignmentReason",
  DelegationCredential: "DelegationCredential",
  DomainWideDelegation: "DomainWideDelegation",
  WorkspacePlatform: "WorkspacePlatform",
  EventTypeTranslation: "EventTypeTranslation",
  Watchlist: "Watchlist",
  WatchlistAudit: "WatchlistAudit",
  WatchlistEventAudit: "WatchlistEventAudit",
  BookingReport: "BookingReport",
  OrganizationOnboarding: "OrganizationOnboarding",
  App_RoutingForms_IncompleteBookingActions: "App_RoutingForms_IncompleteBookingActions",
  InternalNotePreset: "InternalNotePreset",
  FilterSegment: "FilterSegment",
  UserFilterSegmentPreference: "UserFilterSegmentPreference",
  BookingInternalNote: "BookingInternalNote",
  WorkflowOptOutContact: "WorkflowOptOutContact",
  Role: "Role",
  RolePermission: "RolePermission",
  Agent: "Agent",
  CalAiPhoneNumber: "CalAiPhoneNumber",
  TeamBilling: "TeamBilling",
  OrganizationBilling: "OrganizationBilling",
  CalendarCacheEvent: "CalendarCacheEvent",
  RoutingFormResponse: "RoutingFormResponse",
  BookingTimeStatus: "BookingTimeStatus",
  BookingTimeStatusDenormalized: "BookingTimeStatusDenormalized",
} as const;

export type ModelName = (typeof ModelName)[keyof typeof ModelName];

/**
 * Enums
 */
export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: "ReadUncommitted",
  ReadCommitted: "ReadCommitted",
  RepeatableRead: "RepeatableRead",
  Serializable: "Serializable",
} as const);

export type TransactionIsolationLevel =
  (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel];

export const HostScalarFieldEnum = {
  userId: "userId",
  eventTypeId: "eventTypeId",
  isFixed: "isFixed",
  priority: "priority",
  weight: "weight",
  weightAdjustment: "weightAdjustment",
  scheduleId: "scheduleId",
  createdAt: "createdAt",
  groupId: "groupId",
  memberId: "memberId",
} as const;

export type HostScalarFieldEnum = (typeof HostScalarFieldEnum)[keyof typeof HostScalarFieldEnum];

export const HostGroupScalarFieldEnum = {
  id: "id",
  name: "name",
  eventTypeId: "eventTypeId",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type HostGroupScalarFieldEnum =
  (typeof HostGroupScalarFieldEnum)[keyof typeof HostGroupScalarFieldEnum];

export const CalVideoSettingsScalarFieldEnum = {
  eventTypeId: "eventTypeId",
  disableRecordingForOrganizer: "disableRecordingForOrganizer",
  disableRecordingForGuests: "disableRecordingForGuests",
  enableAutomaticTranscription: "enableAutomaticTranscription",
  enableAutomaticRecordingForOrganizer: "enableAutomaticRecordingForOrganizer",
  redirectUrlOnExit: "redirectUrlOnExit",
  disableTranscriptionForGuests: "disableTranscriptionForGuests",
  disableTranscriptionForOrganizer: "disableTranscriptionForOrganizer",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type CalVideoSettingsScalarFieldEnum =
  (typeof CalVideoSettingsScalarFieldEnum)[keyof typeof CalVideoSettingsScalarFieldEnum];

export const EventTypeScalarFieldEnum = {
  id: "id",
  title: "title",
  slug: "slug",
  description: "description",
  interfaceLanguage: "interfaceLanguage",
  position: "position",
  locations: "locations",
  length: "length",
  offsetStart: "offsetStart",
  hidden: "hidden",
  userId: "userId",
  profileId: "profileId",
  teamId: "teamId",
  useEventLevelSelectedCalendars: "useEventLevelSelectedCalendars",
  eventName: "eventName",
  parentId: "parentId",
  bookingFields: "bookingFields",
  timeZone: "timeZone",
  periodType: "periodType",
  periodStartDate: "periodStartDate",
  periodEndDate: "periodEndDate",
  periodDays: "periodDays",
  periodCountCalendarDays: "periodCountCalendarDays",
  lockTimeZoneToggleOnBookingPage: "lockTimeZoneToggleOnBookingPage",
  lockedTimeZone: "lockedTimeZone",
  requiresConfirmation: "requiresConfirmation",
  requiresConfirmationWillBlockSlot: "requiresConfirmationWillBlockSlot",
  requiresConfirmationForFreeEmail: "requiresConfirmationForFreeEmail",
  requiresBookerEmailVerification: "requiresBookerEmailVerification",
  canSendCalVideoTranscriptionEmails: "canSendCalVideoTranscriptionEmails",
  autoTranslateDescriptionEnabled: "autoTranslateDescriptionEnabled",
  recurringEvent: "recurringEvent",
  disableGuests: "disableGuests",
  hideCalendarNotes: "hideCalendarNotes",
  hideCalendarEventDetails: "hideCalendarEventDetails",
  minimumBookingNotice: "minimumBookingNotice",
  beforeEventBuffer: "beforeEventBuffer",
  afterEventBuffer: "afterEventBuffer",
  seatsPerTimeSlot: "seatsPerTimeSlot",
  onlyShowFirstAvailableSlot: "onlyShowFirstAvailableSlot",
  showOptimizedSlots: "showOptimizedSlots",
  disableCancelling: "disableCancelling",
  disableRescheduling: "disableRescheduling",
  seatsShowAttendees: "seatsShowAttendees",
  seatsShowAvailabilityCount: "seatsShowAvailabilityCount",
  schedulingType: "schedulingType",
  scheduleId: "scheduleId",
  allowReschedulingCancelledBookings: "allowReschedulingCancelledBookings",
  price: "price",
  currency: "currency",
  slotInterval: "slotInterval",
  metadata: "metadata",
  successRedirectUrl: "successRedirectUrl",
  forwardParamsSuccessRedirect: "forwardParamsSuccessRedirect",
  bookingLimits: "bookingLimits",
  durationLimits: "durationLimits",
  isInstantEvent: "isInstantEvent",
  instantMeetingExpiryTimeOffsetInSeconds: "instantMeetingExpiryTimeOffsetInSeconds",
  instantMeetingScheduleId: "instantMeetingScheduleId",
  instantMeetingParameters: "instantMeetingParameters",
  assignAllTeamMembers: "assignAllTeamMembers",
  assignRRMembersUsingSegment: "assignRRMembersUsingSegment",
  rrSegmentQueryValue: "rrSegmentQueryValue",
  useEventTypeDestinationCalendarEmail: "useEventTypeDestinationCalendarEmail",
  isRRWeightsEnabled: "isRRWeightsEnabled",
  maxLeadThreshold: "maxLeadThreshold",
  includeNoShowInRRCalculation: "includeNoShowInRRCalculation",
  allowReschedulingPastBookings: "allowReschedulingPastBookings",
  hideOrganizerEmail: "hideOrganizerEmail",
  maxActiveBookingsPerBooker: "maxActiveBookingsPerBooker",
  maxActiveBookingPerBookerOfferReschedule: "maxActiveBookingPerBookerOfferReschedule",
  customReplyToEmail: "customReplyToEmail",
  eventTypeColor: "eventTypeColor",
  rescheduleWithSameRoundRobinHost: "rescheduleWithSameRoundRobinHost",
  secondaryEmailId: "secondaryEmailId",
  useBookerTimezone: "useBookerTimezone",
  restrictionScheduleId: "restrictionScheduleId",
  bookingRequiresAuthentication: "bookingRequiresAuthentication",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type EventTypeScalarFieldEnum =
  (typeof EventTypeScalarFieldEnum)[keyof typeof EventTypeScalarFieldEnum];

export const CredentialScalarFieldEnum = {
  id: "id",
  type: "type",
  key: "key",
  userId: "userId",
  teamId: "teamId",
  appId: "appId",
  subscriptionId: "subscriptionId",
  paymentStatus: "paymentStatus",
  billingCycleStart: "billingCycleStart",
  invalid: "invalid",
  delegationCredentialId: "delegationCredentialId",
} as const;

export type CredentialScalarFieldEnum =
  (typeof CredentialScalarFieldEnum)[keyof typeof CredentialScalarFieldEnum];

export const DestinationCalendarScalarFieldEnum = {
  id: "id",
  integration: "integration",
  externalId: "externalId",
  primaryEmail: "primaryEmail",
  userId: "userId",
  eventTypeId: "eventTypeId",
  credentialId: "credentialId",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  delegationCredentialId: "delegationCredentialId",
  domainWideDelegationCredentialId: "domainWideDelegationCredentialId",
} as const;

export type DestinationCalendarScalarFieldEnum =
  (typeof DestinationCalendarScalarFieldEnum)[keyof typeof DestinationCalendarScalarFieldEnum];

export const UserPasswordScalarFieldEnum = {
  hash: "hash",
  userId: "userId",
} as const;

export type UserPasswordScalarFieldEnum =
  (typeof UserPasswordScalarFieldEnum)[keyof typeof UserPasswordScalarFieldEnum];

export const TravelScheduleScalarFieldEnum = {
  id: "id",
  userId: "userId",
  timeZone: "timeZone",
  startDate: "startDate",
  endDate: "endDate",
  prevTimeZone: "prevTimeZone",
} as const;

export type TravelScheduleScalarFieldEnum =
  (typeof TravelScheduleScalarFieldEnum)[keyof typeof TravelScheduleScalarFieldEnum];

export const UserScalarFieldEnum = {
  id: "id",
  username: "username",
  name: "name",
  email: "email",
  emailVerified: "emailVerified",
  bio: "bio",
  avatarUrl: "avatarUrl",
  timeZone: "timeZone",
  weekStart: "weekStart",
  startTime: "startTime",
  endTime: "endTime",
  bufferTime: "bufferTime",
  hideBranding: "hideBranding",
  theme: "theme",
  appTheme: "appTheme",
  createdDate: "createdDate",
  trialEndsAt: "trialEndsAt",
  lastActiveAt: "lastActiveAt",
  defaultScheduleId: "defaultScheduleId",
  completedOnboarding: "completedOnboarding",
  locale: "locale",
  timeFormat: "timeFormat",
  twoFactorSecret: "twoFactorSecret",
  twoFactorEnabled: "twoFactorEnabled",
  backupCodes: "backupCodes",
  identityProvider: "identityProvider",
  identityProviderId: "identityProviderId",
  invitedTo: "invitedTo",
  brandColor: "brandColor",
  darkBrandColor: "darkBrandColor",
  allowDynamicBooking: "allowDynamicBooking",
  allowSEOIndexing: "allowSEOIndexing",
  receiveMonthlyDigestEmail: "receiveMonthlyDigestEmail",
  requiresBookerEmailVerification: "requiresBookerEmailVerification",
  metadata: "metadata",
  verified: "verified",
  role: "role",
  disableImpersonation: "disableImpersonation",
  organizationId: "organizationId",
  locked: "locked",
  movedToProfileId: "movedToProfileId",
  isPlatformManaged: "isPlatformManaged",
  smsLockState: "smsLockState",
  smsLockReviewedByAdmin: "smsLockReviewedByAdmin",
  referralLinkId: "referralLinkId",
  creationSource: "creationSource",
  whitelistWorkflows: "whitelistWorkflows",
} as const;

export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum];

export const NotificationsSubscriptionsScalarFieldEnum = {
  id: "id",
  userId: "userId",
  subscription: "subscription",
} as const;

export type NotificationsSubscriptionsScalarFieldEnum =
  (typeof NotificationsSubscriptionsScalarFieldEnum)[keyof typeof NotificationsSubscriptionsScalarFieldEnum];

export const ProfileScalarFieldEnum = {
  id: "id",
  uid: "uid",
  userId: "userId",
  organizationId: "organizationId",
  username: "username",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type ProfileScalarFieldEnum = (typeof ProfileScalarFieldEnum)[keyof typeof ProfileScalarFieldEnum];

export const TeamScalarFieldEnum = {
  id: "id",
  name: "name",
  slug: "slug",
  logoUrl: "logoUrl",
  calVideoLogo: "calVideoLogo",
  appLogo: "appLogo",
  appIconLogo: "appIconLogo",
  bio: "bio",
  hideBranding: "hideBranding",
  hideTeamProfileLink: "hideTeamProfileLink",
  isPrivate: "isPrivate",
  hideBookATeamMember: "hideBookATeamMember",
  createdAt: "createdAt",
  metadata: "metadata",
  theme: "theme",
  rrResetInterval: "rrResetInterval",
  rrTimestampBasis: "rrTimestampBasis",
  brandColor: "brandColor",
  darkBrandColor: "darkBrandColor",
  bannerUrl: "bannerUrl",
  parentId: "parentId",
  timeFormat: "timeFormat",
  timeZone: "timeZone",
  weekStart: "weekStart",
  isOrganization: "isOrganization",
  pendingPayment: "pendingPayment",
  isPlatform: "isPlatform",
  createdByOAuthClientId: "createdByOAuthClientId",
  smsLockState: "smsLockState",
  smsLockReviewedByAdmin: "smsLockReviewedByAdmin",
  bookingLimits: "bookingLimits",
  includeManagedEventsInLimits: "includeManagedEventsInLimits",
} as const;

export type TeamScalarFieldEnum = (typeof TeamScalarFieldEnum)[keyof typeof TeamScalarFieldEnum];

export const CreditBalanceScalarFieldEnum = {
  id: "id",
  teamId: "teamId",
  userId: "userId",
  additionalCredits: "additionalCredits",
  limitReachedAt: "limitReachedAt",
  warningSentAt: "warningSentAt",
} as const;

export type CreditBalanceScalarFieldEnum =
  (typeof CreditBalanceScalarFieldEnum)[keyof typeof CreditBalanceScalarFieldEnum];

export const CreditPurchaseLogScalarFieldEnum = {
  id: "id",
  creditBalanceId: "creditBalanceId",
  credits: "credits",
  createdAt: "createdAt",
} as const;

export type CreditPurchaseLogScalarFieldEnum =
  (typeof CreditPurchaseLogScalarFieldEnum)[keyof typeof CreditPurchaseLogScalarFieldEnum];

export const CreditExpenseLogScalarFieldEnum = {
  id: "id",
  creditBalanceId: "creditBalanceId",
  bookingUid: "bookingUid",
  credits: "credits",
  creditType: "creditType",
  date: "date",
  smsSid: "smsSid",
  smsSegments: "smsSegments",
  phoneNumber: "phoneNumber",
  email: "email",
  callDuration: "callDuration",
  creditFor: "creditFor",
  externalRef: "externalRef",
} as const;

export type CreditExpenseLogScalarFieldEnum =
  (typeof CreditExpenseLogScalarFieldEnum)[keyof typeof CreditExpenseLogScalarFieldEnum];

export const OrganizationSettingsScalarFieldEnum = {
  id: "id",
  organizationId: "organizationId",
  isOrganizationConfigured: "isOrganizationConfigured",
  isOrganizationVerified: "isOrganizationVerified",
  orgAutoAcceptEmail: "orgAutoAcceptEmail",
  lockEventTypeCreationForUsers: "lockEventTypeCreationForUsers",
  adminGetsNoSlotsNotification: "adminGetsNoSlotsNotification",
  isAdminReviewed: "isAdminReviewed",
  isAdminAPIEnabled: "isAdminAPIEnabled",
  allowSEOIndexing: "allowSEOIndexing",
  orgProfileRedirectsToVerifiedDomain: "orgProfileRedirectsToVerifiedDomain",
  disablePhoneOnlySMSNotifications: "disablePhoneOnlySMSNotifications",
} as const;

export type OrganizationSettingsScalarFieldEnum =
  (typeof OrganizationSettingsScalarFieldEnum)[keyof typeof OrganizationSettingsScalarFieldEnum];

export const MembershipScalarFieldEnum = {
  id: "id",
  teamId: "teamId",
  userId: "userId",
  accepted: "accepted",
  role: "role",
  customRoleId: "customRoleId",
  disableImpersonation: "disableImpersonation",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type MembershipScalarFieldEnum =
  (typeof MembershipScalarFieldEnum)[keyof typeof MembershipScalarFieldEnum];

export const VerificationTokenScalarFieldEnum = {
  id: "id",
  identifier: "identifier",
  token: "token",
  expires: "expires",
  expiresInDays: "expiresInDays",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  teamId: "teamId",
  secondaryEmailId: "secondaryEmailId",
} as const;

export type VerificationTokenScalarFieldEnum =
  (typeof VerificationTokenScalarFieldEnum)[keyof typeof VerificationTokenScalarFieldEnum];

export const InstantMeetingTokenScalarFieldEnum = {
  id: "id",
  token: "token",
  expires: "expires",
  teamId: "teamId",
  bookingId: "bookingId",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type InstantMeetingTokenScalarFieldEnum =
  (typeof InstantMeetingTokenScalarFieldEnum)[keyof typeof InstantMeetingTokenScalarFieldEnum];

export const BookingReferenceScalarFieldEnum = {
  id: "id",
  type: "type",
  uid: "uid",
  meetingId: "meetingId",
  thirdPartyRecurringEventId: "thirdPartyRecurringEventId",
  meetingPassword: "meetingPassword",
  meetingUrl: "meetingUrl",
  bookingId: "bookingId",
  externalCalendarId: "externalCalendarId",
  deleted: "deleted",
  credentialId: "credentialId",
  delegationCredentialId: "delegationCredentialId",
  domainWideDelegationCredentialId: "domainWideDelegationCredentialId",
} as const;

export type BookingReferenceScalarFieldEnum =
  (typeof BookingReferenceScalarFieldEnum)[keyof typeof BookingReferenceScalarFieldEnum];

export const AttendeeScalarFieldEnum = {
  id: "id",
  email: "email",
  name: "name",
  timeZone: "timeZone",
  phoneNumber: "phoneNumber",
  locale: "locale",
  bookingId: "bookingId",
  noShow: "noShow",
} as const;

export type AttendeeScalarFieldEnum = (typeof AttendeeScalarFieldEnum)[keyof typeof AttendeeScalarFieldEnum];

export const BookingScalarFieldEnum = {
  id: "id",
  uid: "uid",
  idempotencyKey: "idempotencyKey",
  userId: "userId",
  userPrimaryEmail: "userPrimaryEmail",
  eventTypeId: "eventTypeId",
  title: "title",
  description: "description",
  customInputs: "customInputs",
  responses: "responses",
  startTime: "startTime",
  endTime: "endTime",
  location: "location",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  status: "status",
  paid: "paid",
  destinationCalendarId: "destinationCalendarId",
  cancellationReason: "cancellationReason",
  rejectionReason: "rejectionReason",
  reassignReason: "reassignReason",
  reassignById: "reassignById",
  dynamicEventSlugRef: "dynamicEventSlugRef",
  dynamicGroupSlugRef: "dynamicGroupSlugRef",
  rescheduled: "rescheduled",
  fromReschedule: "fromReschedule",
  recurringEventId: "recurringEventId",
  smsReminderNumber: "smsReminderNumber",
  scheduledJobs: "scheduledJobs",
  metadata: "metadata",
  isRecorded: "isRecorded",
  iCalUID: "iCalUID",
  iCalSequence: "iCalSequence",
  rating: "rating",
  ratingFeedback: "ratingFeedback",
  noShowHost: "noShowHost",
  oneTimePassword: "oneTimePassword",
  cancelledBy: "cancelledBy",
  rescheduledBy: "rescheduledBy",
  creationSource: "creationSource",
} as const;

export type BookingScalarFieldEnum = (typeof BookingScalarFieldEnum)[keyof typeof BookingScalarFieldEnum];

export const TrackingScalarFieldEnum = {
  id: "id",
  bookingId: "bookingId",
  utm_source: "utm_source",
  utm_medium: "utm_medium",
  utm_campaign: "utm_campaign",
  utm_term: "utm_term",
  utm_content: "utm_content",
} as const;

export type TrackingScalarFieldEnum = (typeof TrackingScalarFieldEnum)[keyof typeof TrackingScalarFieldEnum];

export const ScheduleScalarFieldEnum = {
  id: "id",
  userId: "userId",
  name: "name",
  timeZone: "timeZone",
} as const;

export type ScheduleScalarFieldEnum = (typeof ScheduleScalarFieldEnum)[keyof typeof ScheduleScalarFieldEnum];

export const AvailabilityScalarFieldEnum = {
  id: "id",
  userId: "userId",
  eventTypeId: "eventTypeId",
  days: "days",
  startTime: "startTime",
  endTime: "endTime",
  date: "date",
  scheduleId: "scheduleId",
} as const;

export type AvailabilityScalarFieldEnum =
  (typeof AvailabilityScalarFieldEnum)[keyof typeof AvailabilityScalarFieldEnum];

export const SelectedCalendarScalarFieldEnum = {
  id: "id",
  userId: "userId",
  integration: "integration",
  externalId: "externalId",
  credentialId: "credentialId",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  googleChannelId: "googleChannelId",
  googleChannelKind: "googleChannelKind",
  googleChannelResourceId: "googleChannelResourceId",
  googleChannelResourceUri: "googleChannelResourceUri",
  googleChannelExpiration: "googleChannelExpiration",
  channelId: "channelId",
  channelKind: "channelKind",
  channelResourceId: "channelResourceId",
  channelResourceUri: "channelResourceUri",
  channelExpiration: "channelExpiration",
  syncSubscribedAt: "syncSubscribedAt",
  syncToken: "syncToken",
  syncedAt: "syncedAt",
  syncErrorAt: "syncErrorAt",
  syncErrorCount: "syncErrorCount",
  delegationCredentialId: "delegationCredentialId",
  domainWideDelegationCredentialId: "domainWideDelegationCredentialId",
  error: "error",
  lastErrorAt: "lastErrorAt",
  watchAttempts: "watchAttempts",
  unwatchAttempts: "unwatchAttempts",
  maxAttempts: "maxAttempts",
  eventTypeId: "eventTypeId",
} as const;

export type SelectedCalendarScalarFieldEnum =
  (typeof SelectedCalendarScalarFieldEnum)[keyof typeof SelectedCalendarScalarFieldEnum];

export const EventTypeCustomInputScalarFieldEnum = {
  id: "id",
  eventTypeId: "eventTypeId",
  label: "label",
  type: "type",
  options: "options",
  required: "required",
  placeholder: "placeholder",
} as const;

export type EventTypeCustomInputScalarFieldEnum =
  (typeof EventTypeCustomInputScalarFieldEnum)[keyof typeof EventTypeCustomInputScalarFieldEnum];

export const ResetPasswordRequestScalarFieldEnum = {
  id: "id",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  email: "email",
  expires: "expires",
} as const;

export type ResetPasswordRequestScalarFieldEnum =
  (typeof ResetPasswordRequestScalarFieldEnum)[keyof typeof ResetPasswordRequestScalarFieldEnum];

export const ReminderMailScalarFieldEnum = {
  id: "id",
  referenceId: "referenceId",
  reminderType: "reminderType",
  elapsedMinutes: "elapsedMinutes",
  createdAt: "createdAt",
} as const;

export type ReminderMailScalarFieldEnum =
  (typeof ReminderMailScalarFieldEnum)[keyof typeof ReminderMailScalarFieldEnum];

export const PaymentScalarFieldEnum = {
  id: "id",
  uid: "uid",
  appId: "appId",
  bookingId: "bookingId",
  amount: "amount",
  fee: "fee",
  currency: "currency",
  success: "success",
  refunded: "refunded",
  data: "data",
  externalId: "externalId",
  paymentOption: "paymentOption",
} as const;

export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum];

export const WebhookScalarFieldEnum = {
  id: "id",
  userId: "userId",
  teamId: "teamId",
  eventTypeId: "eventTypeId",
  platformOAuthClientId: "platformOAuthClientId",
  subscriberUrl: "subscriberUrl",
  payloadTemplate: "payloadTemplate",
  createdAt: "createdAt",
  active: "active",
  eventTriggers: "eventTriggers",
  appId: "appId",
  secret: "secret",
  platform: "platform",
  time: "time",
  timeUnit: "timeUnit",
} as const;

export type WebhookScalarFieldEnum = (typeof WebhookScalarFieldEnum)[keyof typeof WebhookScalarFieldEnum];

export const ImpersonationsScalarFieldEnum = {
  id: "id",
  createdAt: "createdAt",
  impersonatedUserId: "impersonatedUserId",
  impersonatedById: "impersonatedById",
} as const;

export type ImpersonationsScalarFieldEnum =
  (typeof ImpersonationsScalarFieldEnum)[keyof typeof ImpersonationsScalarFieldEnum];

export const ApiKeyScalarFieldEnum = {
  id: "id",
  userId: "userId",
  teamId: "teamId",
  note: "note",
  createdAt: "createdAt",
  expiresAt: "expiresAt",
  lastUsedAt: "lastUsedAt",
  hashedKey: "hashedKey",
  appId: "appId",
} as const;

export type ApiKeyScalarFieldEnum = (typeof ApiKeyScalarFieldEnum)[keyof typeof ApiKeyScalarFieldEnum];

export const RateLimitScalarFieldEnum = {
  id: "id",
  name: "name",
  apiKeyId: "apiKeyId",
  ttl: "ttl",
  limit: "limit",
  blockDuration: "blockDuration",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type RateLimitScalarFieldEnum =
  (typeof RateLimitScalarFieldEnum)[keyof typeof RateLimitScalarFieldEnum];

export const HashedLinkScalarFieldEnum = {
  id: "id",
  link: "link",
  eventTypeId: "eventTypeId",
  expiresAt: "expiresAt",
  maxUsageCount: "maxUsageCount",
  usageCount: "usageCount",
} as const;

export type HashedLinkScalarFieldEnum =
  (typeof HashedLinkScalarFieldEnum)[keyof typeof HashedLinkScalarFieldEnum];

export const AccountScalarFieldEnum = {
  id: "id",
  userId: "userId",
  type: "type",
  provider: "provider",
  providerAccountId: "providerAccountId",
  providerEmail: "providerEmail",
  refresh_token: "refresh_token",
  access_token: "access_token",
  expires_at: "expires_at",
  token_type: "token_type",
  scope: "scope",
  id_token: "id_token",
  session_state: "session_state",
} as const;

export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum];

export const SessionScalarFieldEnum = {
  id: "id",
  sessionToken: "sessionToken",
  userId: "userId",
  expires: "expires",
} as const;

export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum];

export const AppScalarFieldEnum = {
  slug: "slug",
  dirName: "dirName",
  keys: "keys",
  categories: "categories",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  enabled: "enabled",
} as const;

export type AppScalarFieldEnum = (typeof AppScalarFieldEnum)[keyof typeof AppScalarFieldEnum];

export const App_RoutingForms_FormScalarFieldEnum = {
  id: "id",
  description: "description",
  position: "position",
  routes: "routes",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  name: "name",
  fields: "fields",
  updatedById: "updatedById",
  userId: "userId",
  teamId: "teamId",
  disabled: "disabled",
  settings: "settings",
} as const;

export type App_RoutingForms_FormScalarFieldEnum =
  (typeof App_RoutingForms_FormScalarFieldEnum)[keyof typeof App_RoutingForms_FormScalarFieldEnum];

export const App_RoutingForms_FormResponseScalarFieldEnum = {
  id: "id",
  uuid: "uuid",
  formFillerId: "formFillerId",
  formId: "formId",
  response: "response",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  routedToBookingUid: "routedToBookingUid",
  chosenRouteId: "chosenRouteId",
} as const;

export type App_RoutingForms_FormResponseScalarFieldEnum =
  (typeof App_RoutingForms_FormResponseScalarFieldEnum)[keyof typeof App_RoutingForms_FormResponseScalarFieldEnum];

export const App_RoutingForms_QueuedFormResponseScalarFieldEnum = {
  id: "id",
  formId: "formId",
  response: "response",
  chosenRouteId: "chosenRouteId",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  actualResponseId: "actualResponseId",
} as const;

export type App_RoutingForms_QueuedFormResponseScalarFieldEnum =
  (typeof App_RoutingForms_QueuedFormResponseScalarFieldEnum)[keyof typeof App_RoutingForms_QueuedFormResponseScalarFieldEnum];

export const RoutingFormResponseFieldScalarFieldEnum = {
  id: "id",
  responseId: "responseId",
  fieldId: "fieldId",
  valueString: "valueString",
  valueNumber: "valueNumber",
  valueStringArray: "valueStringArray",
} as const;

export type RoutingFormResponseFieldScalarFieldEnum =
  (typeof RoutingFormResponseFieldScalarFieldEnum)[keyof typeof RoutingFormResponseFieldScalarFieldEnum];

export const RoutingFormResponseDenormalizedScalarFieldEnum = {
  id: "id",
  uuid: "uuid",
  formId: "formId",
  formName: "formName",
  formTeamId: "formTeamId",
  formUserId: "formUserId",
  bookingUid: "bookingUid",
  bookingId: "bookingId",
  bookingStatus: "bookingStatus",
  bookingStatusOrder: "bookingStatusOrder",
  bookingCreatedAt: "bookingCreatedAt",
  bookingStartTime: "bookingStartTime",
  bookingEndTime: "bookingEndTime",
  bookingUserId: "bookingUserId",
  bookingUserName: "bookingUserName",
  bookingUserEmail: "bookingUserEmail",
  bookingUserAvatarUrl: "bookingUserAvatarUrl",
  bookingAssignmentReason: "bookingAssignmentReason",
  eventTypeId: "eventTypeId",
  eventTypeParentId: "eventTypeParentId",
  eventTypeSchedulingType: "eventTypeSchedulingType",
  createdAt: "createdAt",
  utm_source: "utm_source",
  utm_medium: "utm_medium",
  utm_campaign: "utm_campaign",
  utm_term: "utm_term",
  utm_content: "utm_content",
} as const;

export type RoutingFormResponseDenormalizedScalarFieldEnum =
  (typeof RoutingFormResponseDenormalizedScalarFieldEnum)[keyof typeof RoutingFormResponseDenormalizedScalarFieldEnum];

export const FeedbackScalarFieldEnum = {
  id: "id",
  date: "date",
  userId: "userId",
  rating: "rating",
  comment: "comment",
} as const;

export type FeedbackScalarFieldEnum = (typeof FeedbackScalarFieldEnum)[keyof typeof FeedbackScalarFieldEnum];

export const WorkflowStepScalarFieldEnum = {
  id: "id",
  stepNumber: "stepNumber",
  action: "action",
  workflowId: "workflowId",
  sendTo: "sendTo",
  reminderBody: "reminderBody",
  emailSubject: "emailSubject",
  template: "template",
  numberRequired: "numberRequired",
  sender: "sender",
  numberVerificationPending: "numberVerificationPending",
  includeCalendarEvent: "includeCalendarEvent",
  verifiedAt: "verifiedAt",
  agentId: "agentId",
  inboundAgentId: "inboundAgentId",
} as const;

export type WorkflowStepScalarFieldEnum =
  (typeof WorkflowStepScalarFieldEnum)[keyof typeof WorkflowStepScalarFieldEnum];

export const WorkflowScalarFieldEnum = {
  id: "id",
  position: "position",
  name: "name",
  userId: "userId",
  teamId: "teamId",
  isActiveOnAll: "isActiveOnAll",
  trigger: "trigger",
  time: "time",
  timeUnit: "timeUnit",
  type: "type",
} as const;

export type WorkflowScalarFieldEnum = (typeof WorkflowScalarFieldEnum)[keyof typeof WorkflowScalarFieldEnum];

export const AIPhoneCallConfigurationScalarFieldEnum = {
  id: "id",
  eventTypeId: "eventTypeId",
  templateType: "templateType",
  schedulerName: "schedulerName",
  generalPrompt: "generalPrompt",
  yourPhoneNumber: "yourPhoneNumber",
  numberToCall: "numberToCall",
  guestName: "guestName",
  guestEmail: "guestEmail",
  guestCompany: "guestCompany",
  enabled: "enabled",
  beginMessage: "beginMessage",
  llmId: "llmId",
} as const;

export type AIPhoneCallConfigurationScalarFieldEnum =
  (typeof AIPhoneCallConfigurationScalarFieldEnum)[keyof typeof AIPhoneCallConfigurationScalarFieldEnum];

export const WorkflowsOnEventTypesScalarFieldEnum = {
  id: "id",
  workflowId: "workflowId",
  eventTypeId: "eventTypeId",
} as const;

export type WorkflowsOnEventTypesScalarFieldEnum =
  (typeof WorkflowsOnEventTypesScalarFieldEnum)[keyof typeof WorkflowsOnEventTypesScalarFieldEnum];

export const WorkflowsOnRoutingFormsScalarFieldEnum = {
  id: "id",
  workflowId: "workflowId",
  routingFormId: "routingFormId",
} as const;

export type WorkflowsOnRoutingFormsScalarFieldEnum =
  (typeof WorkflowsOnRoutingFormsScalarFieldEnum)[keyof typeof WorkflowsOnRoutingFormsScalarFieldEnum];

export const WorkflowsOnTeamsScalarFieldEnum = {
  id: "id",
  workflowId: "workflowId",
  teamId: "teamId",
} as const;

export type WorkflowsOnTeamsScalarFieldEnum =
  (typeof WorkflowsOnTeamsScalarFieldEnum)[keyof typeof WorkflowsOnTeamsScalarFieldEnum];

export const DeploymentScalarFieldEnum = {
  id: "id",
  logo: "logo",
  theme: "theme",
  licenseKey: "licenseKey",
  signatureTokenEncrypted: "signatureTokenEncrypted",
  agreedLicenseAt: "agreedLicenseAt",
} as const;

export type DeploymentScalarFieldEnum =
  (typeof DeploymentScalarFieldEnum)[keyof typeof DeploymentScalarFieldEnum];

export const WorkflowReminderScalarFieldEnum = {
  id: "id",
  uuid: "uuid",
  bookingUid: "bookingUid",
  method: "method",
  scheduledDate: "scheduledDate",
  referenceId: "referenceId",
  scheduled: "scheduled",
  workflowStepId: "workflowStepId",
  cancelled: "cancelled",
  seatReferenceId: "seatReferenceId",
  isMandatoryReminder: "isMandatoryReminder",
  retryCount: "retryCount",
} as const;

export type WorkflowReminderScalarFieldEnum =
  (typeof WorkflowReminderScalarFieldEnum)[keyof typeof WorkflowReminderScalarFieldEnum];

export const WebhookScheduledTriggersScalarFieldEnum = {
  id: "id",
  jobName: "jobName",
  subscriberUrl: "subscriberUrl",
  payload: "payload",
  startAfter: "startAfter",
  retryCount: "retryCount",
  createdAt: "createdAt",
  appId: "appId",
  webhookId: "webhookId",
  bookingId: "bookingId",
} as const;

export type WebhookScheduledTriggersScalarFieldEnum =
  (typeof WebhookScheduledTriggersScalarFieldEnum)[keyof typeof WebhookScheduledTriggersScalarFieldEnum];

export const BookingSeatScalarFieldEnum = {
  id: "id",
  referenceUid: "referenceUid",
  bookingId: "bookingId",
  attendeeId: "attendeeId",
  data: "data",
  metadata: "metadata",
} as const;

export type BookingSeatScalarFieldEnum =
  (typeof BookingSeatScalarFieldEnum)[keyof typeof BookingSeatScalarFieldEnum];

export const VerifiedNumberScalarFieldEnum = {
  id: "id",
  userId: "userId",
  teamId: "teamId",
  phoneNumber: "phoneNumber",
} as const;

export type VerifiedNumberScalarFieldEnum =
  (typeof VerifiedNumberScalarFieldEnum)[keyof typeof VerifiedNumberScalarFieldEnum];

export const VerifiedEmailScalarFieldEnum = {
  id: "id",
  userId: "userId",
  teamId: "teamId",
  email: "email",
} as const;

export type VerifiedEmailScalarFieldEnum =
  (typeof VerifiedEmailScalarFieldEnum)[keyof typeof VerifiedEmailScalarFieldEnum];

export const FeatureScalarFieldEnum = {
  slug: "slug",
  enabled: "enabled",
  description: "description",
  type: "type",
  stale: "stale",
  lastUsedAt: "lastUsedAt",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  updatedBy: "updatedBy",
} as const;

export type FeatureScalarFieldEnum = (typeof FeatureScalarFieldEnum)[keyof typeof FeatureScalarFieldEnum];

export const UserFeaturesScalarFieldEnum = {
  userId: "userId",
  featureId: "featureId",
  assignedAt: "assignedAt",
  assignedBy: "assignedBy",
  updatedAt: "updatedAt",
} as const;

export type UserFeaturesScalarFieldEnum =
  (typeof UserFeaturesScalarFieldEnum)[keyof typeof UserFeaturesScalarFieldEnum];

export const TeamFeaturesScalarFieldEnum = {
  teamId: "teamId",
  featureId: "featureId",
  assignedAt: "assignedAt",
  assignedBy: "assignedBy",
  updatedAt: "updatedAt",
} as const;

export type TeamFeaturesScalarFieldEnum =
  (typeof TeamFeaturesScalarFieldEnum)[keyof typeof TeamFeaturesScalarFieldEnum];

export const SelectedSlotsScalarFieldEnum = {
  id: "id",
  eventTypeId: "eventTypeId",
  userId: "userId",
  slotUtcStartDate: "slotUtcStartDate",
  slotUtcEndDate: "slotUtcEndDate",
  uid: "uid",
  releaseAt: "releaseAt",
  isSeat: "isSeat",
} as const;

export type SelectedSlotsScalarFieldEnum =
  (typeof SelectedSlotsScalarFieldEnum)[keyof typeof SelectedSlotsScalarFieldEnum];

export const OAuthClientScalarFieldEnum = {
  clientId: "clientId",
  redirectUri: "redirectUri",
  clientSecret: "clientSecret",
  name: "name",
  logo: "logo",
} as const;

export type OAuthClientScalarFieldEnum =
  (typeof OAuthClientScalarFieldEnum)[keyof typeof OAuthClientScalarFieldEnum];

export const AccessCodeScalarFieldEnum = {
  id: "id",
  code: "code",
  clientId: "clientId",
  expiresAt: "expiresAt",
  scopes: "scopes",
  userId: "userId",
  teamId: "teamId",
} as const;

export type AccessCodeScalarFieldEnum =
  (typeof AccessCodeScalarFieldEnum)[keyof typeof AccessCodeScalarFieldEnum];

export const BookingDenormalizedScalarFieldEnum = {
  id: "id",
  uid: "uid",
  eventTypeId: "eventTypeId",
  title: "title",
  description: "description",
  startTime: "startTime",
  endTime: "endTime",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  location: "location",
  paid: "paid",
  status: "status",
  rescheduled: "rescheduled",
  userId: "userId",
  teamId: "teamId",
  eventLength: "eventLength",
  eventParentId: "eventParentId",
  userEmail: "userEmail",
  userName: "userName",
  userUsername: "userUsername",
  ratingFeedback: "ratingFeedback",
  rating: "rating",
  noShowHost: "noShowHost",
  isTeamBooking: "isTeamBooking",
} as const;

export type BookingDenormalizedScalarFieldEnum =
  (typeof BookingDenormalizedScalarFieldEnum)[keyof typeof BookingDenormalizedScalarFieldEnum];

export const CalendarCacheScalarFieldEnum = {
  id: "id",
  key: "key",
  value: "value",
  expiresAt: "expiresAt",
  updatedAt: "updatedAt",
  credentialId: "credentialId",
  userId: "userId",
} as const;

export type CalendarCacheScalarFieldEnum =
  (typeof CalendarCacheScalarFieldEnum)[keyof typeof CalendarCacheScalarFieldEnum];

export const TempOrgRedirectScalarFieldEnum = {
  id: "id",
  from: "from",
  fromOrgId: "fromOrgId",
  type: "type",
  toUrl: "toUrl",
  enabled: "enabled",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type TempOrgRedirectScalarFieldEnum =
  (typeof TempOrgRedirectScalarFieldEnum)[keyof typeof TempOrgRedirectScalarFieldEnum];

export const AvatarScalarFieldEnum = {
  teamId: "teamId",
  userId: "userId",
  data: "data",
  objectKey: "objectKey",
  isBanner: "isBanner",
} as const;

export type AvatarScalarFieldEnum = (typeof AvatarScalarFieldEnum)[keyof typeof AvatarScalarFieldEnum];

export const OutOfOfficeEntryScalarFieldEnum = {
  id: "id",
  uuid: "uuid",
  start: "start",
  end: "end",
  notes: "notes",
  userId: "userId",
  toUserId: "toUserId",
  reasonId: "reasonId",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type OutOfOfficeEntryScalarFieldEnum =
  (typeof OutOfOfficeEntryScalarFieldEnum)[keyof typeof OutOfOfficeEntryScalarFieldEnum];

export const OutOfOfficeReasonScalarFieldEnum = {
  id: "id",
  emoji: "emoji",
  reason: "reason",
  enabled: "enabled",
  userId: "userId",
} as const;

export type OutOfOfficeReasonScalarFieldEnum =
  (typeof OutOfOfficeReasonScalarFieldEnum)[keyof typeof OutOfOfficeReasonScalarFieldEnum];

export const PlatformOAuthClientScalarFieldEnum = {
  id: "id",
  name: "name",
  secret: "secret",
  permissions: "permissions",
  logo: "logo",
  redirectUris: "redirectUris",
  organizationId: "organizationId",
  bookingRedirectUri: "bookingRedirectUri",
  bookingCancelRedirectUri: "bookingCancelRedirectUri",
  bookingRescheduleRedirectUri: "bookingRescheduleRedirectUri",
  areEmailsEnabled: "areEmailsEnabled",
  areDefaultEventTypesEnabled: "areDefaultEventTypesEnabled",
  areCalendarEventsEnabled: "areCalendarEventsEnabled",
  createdAt: "createdAt",
} as const;

export type PlatformOAuthClientScalarFieldEnum =
  (typeof PlatformOAuthClientScalarFieldEnum)[keyof typeof PlatformOAuthClientScalarFieldEnum];

export const PlatformAuthorizationTokenScalarFieldEnum = {
  id: "id",
  platformOAuthClientId: "platformOAuthClientId",
  userId: "userId",
  createdAt: "createdAt",
} as const;

export type PlatformAuthorizationTokenScalarFieldEnum =
  (typeof PlatformAuthorizationTokenScalarFieldEnum)[keyof typeof PlatformAuthorizationTokenScalarFieldEnum];

export const AccessTokenScalarFieldEnum = {
  id: "id",
  secret: "secret",
  createdAt: "createdAt",
  expiresAt: "expiresAt",
  platformOAuthClientId: "platformOAuthClientId",
  userId: "userId",
} as const;

export type AccessTokenScalarFieldEnum =
  (typeof AccessTokenScalarFieldEnum)[keyof typeof AccessTokenScalarFieldEnum];

export const RefreshTokenScalarFieldEnum = {
  id: "id",
  secret: "secret",
  createdAt: "createdAt",
  expiresAt: "expiresAt",
  platformOAuthClientId: "platformOAuthClientId",
  userId: "userId",
} as const;

export type RefreshTokenScalarFieldEnum =
  (typeof RefreshTokenScalarFieldEnum)[keyof typeof RefreshTokenScalarFieldEnum];

export const DSyncDataScalarFieldEnum = {
  id: "id",
  directoryId: "directoryId",
  tenant: "tenant",
  organizationId: "organizationId",
} as const;

export type DSyncDataScalarFieldEnum =
  (typeof DSyncDataScalarFieldEnum)[keyof typeof DSyncDataScalarFieldEnum];

export const DSyncTeamGroupMappingScalarFieldEnum = {
  id: "id",
  organizationId: "organizationId",
  teamId: "teamId",
  directoryId: "directoryId",
  groupName: "groupName",
} as const;

export type DSyncTeamGroupMappingScalarFieldEnum =
  (typeof DSyncTeamGroupMappingScalarFieldEnum)[keyof typeof DSyncTeamGroupMappingScalarFieldEnum];

export const SecondaryEmailScalarFieldEnum = {
  id: "id",
  userId: "userId",
  email: "email",
  emailVerified: "emailVerified",
} as const;

export type SecondaryEmailScalarFieldEnum =
  (typeof SecondaryEmailScalarFieldEnum)[keyof typeof SecondaryEmailScalarFieldEnum];

export const TaskScalarFieldEnum = {
  id: "id",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  scheduledAt: "scheduledAt",
  succeededAt: "succeededAt",
  type: "type",
  payload: "payload",
  attempts: "attempts",
  maxAttempts: "maxAttempts",
  lastError: "lastError",
  lastFailedAttemptAt: "lastFailedAttemptAt",
  referenceUid: "referenceUid",
} as const;

export type TaskScalarFieldEnum = (typeof TaskScalarFieldEnum)[keyof typeof TaskScalarFieldEnum];

export const ManagedOrganizationScalarFieldEnum = {
  managedOrganizationId: "managedOrganizationId",
  managerOrganizationId: "managerOrganizationId",
  createdAt: "createdAt",
} as const;

export type ManagedOrganizationScalarFieldEnum =
  (typeof ManagedOrganizationScalarFieldEnum)[keyof typeof ManagedOrganizationScalarFieldEnum];

export const PlatformBillingScalarFieldEnum = {
  id: "id",
  customerId: "customerId",
  subscriptionId: "subscriptionId",
  priceId: "priceId",
  plan: "plan",
  billingCycleStart: "billingCycleStart",
  billingCycleEnd: "billingCycleEnd",
  overdue: "overdue",
  managerBillingId: "managerBillingId",
} as const;

export type PlatformBillingScalarFieldEnum =
  (typeof PlatformBillingScalarFieldEnum)[keyof typeof PlatformBillingScalarFieldEnum];

export const AttributeOptionScalarFieldEnum = {
  id: "id",
  attributeId: "attributeId",
  value: "value",
  slug: "slug",
  isGroup: "isGroup",
  contains: "contains",
} as const;

export type AttributeOptionScalarFieldEnum =
  (typeof AttributeOptionScalarFieldEnum)[keyof typeof AttributeOptionScalarFieldEnum];

export const AttributeScalarFieldEnum = {
  id: "id",
  teamId: "teamId",
  type: "type",
  name: "name",
  slug: "slug",
  enabled: "enabled",
  usersCanEditRelation: "usersCanEditRelation",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  isWeightsEnabled: "isWeightsEnabled",
  isLocked: "isLocked",
} as const;

export type AttributeScalarFieldEnum =
  (typeof AttributeScalarFieldEnum)[keyof typeof AttributeScalarFieldEnum];

export const AttributeToUserScalarFieldEnum = {
  id: "id",
  memberId: "memberId",
  attributeOptionId: "attributeOptionId",
  weight: "weight",
  createdAt: "createdAt",
  createdById: "createdById",
  createdByDSyncId: "createdByDSyncId",
  updatedAt: "updatedAt",
  updatedById: "updatedById",
  updatedByDSyncId: "updatedByDSyncId",
} as const;

export type AttributeToUserScalarFieldEnum =
  (typeof AttributeToUserScalarFieldEnum)[keyof typeof AttributeToUserScalarFieldEnum];

export const AssignmentReasonScalarFieldEnum = {
  id: "id",
  createdAt: "createdAt",
  bookingId: "bookingId",
  reasonEnum: "reasonEnum",
  reasonString: "reasonString",
} as const;

export type AssignmentReasonScalarFieldEnum =
  (typeof AssignmentReasonScalarFieldEnum)[keyof typeof AssignmentReasonScalarFieldEnum];

export const DelegationCredentialScalarFieldEnum = {
  id: "id",
  workspacePlatformId: "workspacePlatformId",
  serviceAccountKey: "serviceAccountKey",
  enabled: "enabled",
  lastEnabledAt: "lastEnabledAt",
  lastDisabledAt: "lastDisabledAt",
  organizationId: "organizationId",
  domain: "domain",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type DelegationCredentialScalarFieldEnum =
  (typeof DelegationCredentialScalarFieldEnum)[keyof typeof DelegationCredentialScalarFieldEnum];

export const DomainWideDelegationScalarFieldEnum = {
  id: "id",
  workspacePlatformId: "workspacePlatformId",
  serviceAccountKey: "serviceAccountKey",
  enabled: "enabled",
  organizationId: "organizationId",
  domain: "domain",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type DomainWideDelegationScalarFieldEnum =
  (typeof DomainWideDelegationScalarFieldEnum)[keyof typeof DomainWideDelegationScalarFieldEnum];

export const WorkspacePlatformScalarFieldEnum = {
  id: "id",
  slug: "slug",
  name: "name",
  description: "description",
  defaultServiceAccountKey: "defaultServiceAccountKey",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  enabled: "enabled",
} as const;

export type WorkspacePlatformScalarFieldEnum =
  (typeof WorkspacePlatformScalarFieldEnum)[keyof typeof WorkspacePlatformScalarFieldEnum];

export const EventTypeTranslationScalarFieldEnum = {
  uid: "uid",
  eventTypeId: "eventTypeId",
  field: "field",
  sourceLocale: "sourceLocale",
  targetLocale: "targetLocale",
  translatedText: "translatedText",
  createdAt: "createdAt",
  createdBy: "createdBy",
  updatedAt: "updatedAt",
  updatedBy: "updatedBy",
} as const;

export type EventTypeTranslationScalarFieldEnum =
  (typeof EventTypeTranslationScalarFieldEnum)[keyof typeof EventTypeTranslationScalarFieldEnum];

export const WatchlistScalarFieldEnum = {
  id: "id",
  type: "type",
  value: "value",
  description: "description",
  isGlobal: "isGlobal",
  organizationId: "organizationId",
  action: "action",
  source: "source",
  lastUpdatedAt: "lastUpdatedAt",
} as const;

export type WatchlistScalarFieldEnum =
  (typeof WatchlistScalarFieldEnum)[keyof typeof WatchlistScalarFieldEnum];

export const WatchlistAuditScalarFieldEnum = {
  id: "id",
  type: "type",
  value: "value",
  description: "description",
  action: "action",
  changedAt: "changedAt",
  changedByUserId: "changedByUserId",
  watchlistId: "watchlistId",
} as const;

export type WatchlistAuditScalarFieldEnum =
  (typeof WatchlistAuditScalarFieldEnum)[keyof typeof WatchlistAuditScalarFieldEnum];

export const WatchlistEventAuditScalarFieldEnum = {
  id: "id",
  watchlistId: "watchlistId",
  eventTypeId: "eventTypeId",
  actionTaken: "actionTaken",
  timestamp: "timestamp",
} as const;

export type WatchlistEventAuditScalarFieldEnum =
  (typeof WatchlistEventAuditScalarFieldEnum)[keyof typeof WatchlistEventAuditScalarFieldEnum];

export const BookingReportScalarFieldEnum = {
  id: "id",
  bookingUid: "bookingUid",
  bookerEmail: "bookerEmail",
  reportedById: "reportedById",
  organizationId: "organizationId",
  reason: "reason",
  description: "description",
  cancelled: "cancelled",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  watchlistId: "watchlistId",
} as const;

export type BookingReportScalarFieldEnum =
  (typeof BookingReportScalarFieldEnum)[keyof typeof BookingReportScalarFieldEnum];

export const OrganizationOnboardingScalarFieldEnum = {
  id: "id",
  createdById: "createdById",
  createdAt: "createdAt",
  orgOwnerEmail: "orgOwnerEmail",
  error: "error",
  updatedAt: "updatedAt",
  organizationId: "organizationId",
  billingPeriod: "billingPeriod",
  pricePerSeat: "pricePerSeat",
  seats: "seats",
  isPlatform: "isPlatform",
  name: "name",
  slug: "slug",
  logo: "logo",
  bio: "bio",
  brandColor: "brandColor",
  bannerUrl: "bannerUrl",
  isDomainConfigured: "isDomainConfigured",
  stripeCustomerId: "stripeCustomerId",
  stripeSubscriptionId: "stripeSubscriptionId",
  stripeSubscriptionItemId: "stripeSubscriptionItemId",
  invitedMembers: "invitedMembers",
  teams: "teams",
  isComplete: "isComplete",
} as const;

export type OrganizationOnboardingScalarFieldEnum =
  (typeof OrganizationOnboardingScalarFieldEnum)[keyof typeof OrganizationOnboardingScalarFieldEnum];

export const App_RoutingForms_IncompleteBookingActionsScalarFieldEnum = {
  id: "id",
  formId: "formId",
  actionType: "actionType",
  data: "data",
  enabled: "enabled",
  credentialId: "credentialId",
} as const;

export type App_RoutingForms_IncompleteBookingActionsScalarFieldEnum =
  (typeof App_RoutingForms_IncompleteBookingActionsScalarFieldEnum)[keyof typeof App_RoutingForms_IncompleteBookingActionsScalarFieldEnum];

export const InternalNotePresetScalarFieldEnum = {
  id: "id",
  name: "name",
  cancellationReason: "cancellationReason",
  teamId: "teamId",
  createdAt: "createdAt",
} as const;

export type InternalNotePresetScalarFieldEnum =
  (typeof InternalNotePresetScalarFieldEnum)[keyof typeof InternalNotePresetScalarFieldEnum];

export const FilterSegmentScalarFieldEnum = {
  id: "id",
  name: "name",
  tableIdentifier: "tableIdentifier",
  scope: "scope",
  activeFilters: "activeFilters",
  sorting: "sorting",
  columnVisibility: "columnVisibility",
  columnSizing: "columnSizing",
  perPage: "perPage",
  searchTerm: "searchTerm",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  userId: "userId",
  teamId: "teamId",
} as const;

export type FilterSegmentScalarFieldEnum =
  (typeof FilterSegmentScalarFieldEnum)[keyof typeof FilterSegmentScalarFieldEnum];

export const UserFilterSegmentPreferenceScalarFieldEnum = {
  id: "id",
  userId: "userId",
  tableIdentifier: "tableIdentifier",
  segmentId: "segmentId",
  systemSegmentId: "systemSegmentId",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type UserFilterSegmentPreferenceScalarFieldEnum =
  (typeof UserFilterSegmentPreferenceScalarFieldEnum)[keyof typeof UserFilterSegmentPreferenceScalarFieldEnum];

export const BookingInternalNoteScalarFieldEnum = {
  id: "id",
  notePresetId: "notePresetId",
  text: "text",
  bookingId: "bookingId",
  createdById: "createdById",
  createdAt: "createdAt",
} as const;

export type BookingInternalNoteScalarFieldEnum =
  (typeof BookingInternalNoteScalarFieldEnum)[keyof typeof BookingInternalNoteScalarFieldEnum];

export const WorkflowOptOutContactScalarFieldEnum = {
  id: "id",
  type: "type",
  value: "value",
  optedOut: "optedOut",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type WorkflowOptOutContactScalarFieldEnum =
  (typeof WorkflowOptOutContactScalarFieldEnum)[keyof typeof WorkflowOptOutContactScalarFieldEnum];

export const RoleScalarFieldEnum = {
  id: "id",
  name: "name",
  color: "color",
  description: "description",
  teamId: "teamId",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  type: "type",
} as const;

export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum];

export const RolePermissionScalarFieldEnum = {
  id: "id",
  roleId: "roleId",
  resource: "resource",
  action: "action",
  createdAt: "createdAt",
} as const;

export type RolePermissionScalarFieldEnum =
  (typeof RolePermissionScalarFieldEnum)[keyof typeof RolePermissionScalarFieldEnum];

export const AgentScalarFieldEnum = {
  id: "id",
  name: "name",
  userId: "userId",
  teamId: "teamId",
  providerAgentId: "providerAgentId",
  inboundEventTypeId: "inboundEventTypeId",
  enabled: "enabled",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type AgentScalarFieldEnum = (typeof AgentScalarFieldEnum)[keyof typeof AgentScalarFieldEnum];

export const CalAiPhoneNumberScalarFieldEnum = {
  id: "id",
  userId: "userId",
  teamId: "teamId",
  phoneNumber: "phoneNumber",
  provider: "provider",
  providerPhoneNumberId: "providerPhoneNumberId",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  stripeCustomerId: "stripeCustomerId",
  stripeSubscriptionId: "stripeSubscriptionId",
  subscriptionStatus: "subscriptionStatus",
  inboundAgentId: "inboundAgentId",
  outboundAgentId: "outboundAgentId",
} as const;

export type CalAiPhoneNumberScalarFieldEnum =
  (typeof CalAiPhoneNumberScalarFieldEnum)[keyof typeof CalAiPhoneNumberScalarFieldEnum];

export const TeamBillingScalarFieldEnum = {
  id: "id",
  teamId: "teamId",
  subscriptionId: "subscriptionId",
  subscriptionItemId: "subscriptionItemId",
  customerId: "customerId",
  status: "status",
  planName: "planName",
  subscriptionStart: "subscriptionStart",
  subscriptionTrialEnd: "subscriptionTrialEnd",
  subscriptionEnd: "subscriptionEnd",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type TeamBillingScalarFieldEnum =
  (typeof TeamBillingScalarFieldEnum)[keyof typeof TeamBillingScalarFieldEnum];

export const OrganizationBillingScalarFieldEnum = {
  id: "id",
  teamId: "teamId",
  subscriptionId: "subscriptionId",
  subscriptionItemId: "subscriptionItemId",
  customerId: "customerId",
  status: "status",
  planName: "planName",
  subscriptionStart: "subscriptionStart",
  subscriptionTrialEnd: "subscriptionTrialEnd",
  subscriptionEnd: "subscriptionEnd",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
} as const;

export type OrganizationBillingScalarFieldEnum =
  (typeof OrganizationBillingScalarFieldEnum)[keyof typeof OrganizationBillingScalarFieldEnum];

export const CalendarCacheEventScalarFieldEnum = {
  id: "id",
  selectedCalendarId: "selectedCalendarId",
  externalId: "externalId",
  externalEtag: "externalEtag",
  iCalUID: "iCalUID",
  iCalSequence: "iCalSequence",
  summary: "summary",
  description: "description",
  location: "location",
  start: "start",
  end: "end",
  isAllDay: "isAllDay",
  timeZone: "timeZone",
  status: "status",
  recurringEventId: "recurringEventId",
  originalStartTime: "originalStartTime",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  externalCreatedAt: "externalCreatedAt",
  externalUpdatedAt: "externalUpdatedAt",
} as const;

export type CalendarCacheEventScalarFieldEnum =
  (typeof CalendarCacheEventScalarFieldEnum)[keyof typeof CalendarCacheEventScalarFieldEnum];

export const RoutingFormResponseScalarFieldEnum = {
  id: "id",
  response: "response",
  responseLowercase: "responseLowercase",
  formId: "formId",
  formName: "formName",
  formTeamId: "formTeamId",
  formUserId: "formUserId",
  bookingUid: "bookingUid",
  bookingStatus: "bookingStatus",
  bookingStatusOrder: "bookingStatusOrder",
  bookingCreatedAt: "bookingCreatedAt",
  bookingAttendees: "bookingAttendees",
  bookingUserId: "bookingUserId",
  bookingUserName: "bookingUserName",
  bookingUserEmail: "bookingUserEmail",
  bookingUserAvatarUrl: "bookingUserAvatarUrl",
  bookingAssignmentReason: "bookingAssignmentReason",
  bookingAssignmentReasonLowercase: "bookingAssignmentReasonLowercase",
  bookingStartTime: "bookingStartTime",
  bookingEndTime: "bookingEndTime",
  createdAt: "createdAt",
  utm_source: "utm_source",
  utm_medium: "utm_medium",
  utm_campaign: "utm_campaign",
  utm_term: "utm_term",
  utm_content: "utm_content",
} as const;

export type RoutingFormResponseScalarFieldEnum =
  (typeof RoutingFormResponseScalarFieldEnum)[keyof typeof RoutingFormResponseScalarFieldEnum];

export const BookingTimeStatusScalarFieldEnum = {
  id: "id",
  uid: "uid",
  eventTypeId: "eventTypeId",
  title: "title",
  description: "description",
  startTime: "startTime",
  endTime: "endTime",
  createdAt: "createdAt",
  location: "location",
  paid: "paid",
  status: "status",
  rescheduled: "rescheduled",
  userId: "userId",
  teamId: "teamId",
  eventLength: "eventLength",
  timeStatus: "timeStatus",
  eventParentId: "eventParentId",
  userEmail: "userEmail",
  username: "username",
  ratingFeedback: "ratingFeedback",
  rating: "rating",
  noShowHost: "noShowHost",
  isTeamBooking: "isTeamBooking",
} as const;

export type BookingTimeStatusScalarFieldEnum =
  (typeof BookingTimeStatusScalarFieldEnum)[keyof typeof BookingTimeStatusScalarFieldEnum];

export const BookingTimeStatusDenormalizedScalarFieldEnum = {
  id: "id",
  uid: "uid",
  eventTypeId: "eventTypeId",
  title: "title",
  description: "description",
  startTime: "startTime",
  endTime: "endTime",
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  location: "location",
  paid: "paid",
  status: "status",
  rescheduled: "rescheduled",
  userId: "userId",
  teamId: "teamId",
  eventLength: "eventLength",
  eventParentId: "eventParentId",
  userEmail: "userEmail",
  userName: "userName",
  userUsername: "userUsername",
  ratingFeedback: "ratingFeedback",
  rating: "rating",
  noShowHost: "noShowHost",
  isTeamBooking: "isTeamBooking",
  timeStatus: "timeStatus",
} as const;

export type BookingTimeStatusDenormalizedScalarFieldEnum =
  (typeof BookingTimeStatusDenormalizedScalarFieldEnum)[keyof typeof BookingTimeStatusDenormalizedScalarFieldEnum];

export const SortOrder = {
  asc: "asc",
  desc: "desc",
} as const;

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder];

export const NullableJsonNullValueInput = {
  DbNull: DbNull,
  JsonNull: JsonNull,
} as const;

export type NullableJsonNullValueInput =
  (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput];

export const JsonNullValueInput = {
  JsonNull: JsonNull,
} as const;

export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput];

export const QueryMode = {
  default: "default",
  insensitive: "insensitive",
} as const;

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode];

export const NullsOrder = {
  first: "first",
  last: "last",
} as const;

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder];

export const JsonNullValueFilter = {
  DbNull: DbNull,
  JsonNull: JsonNull,
  AnyNull: AnyNull,
} as const;

export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter];
