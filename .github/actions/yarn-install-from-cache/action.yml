name: "Yarn install from cache"
description: "Restore yarn dependencies from cache with fallback to install"
inputs:
  node_version:
    required: false
    default: v20.x

runs:
  using: "composite"
  steps:
    - name: Use Node ${{ inputs.node_version }}
      uses: buildjet/setup-node@v4
      with:
        node-version: ${{ inputs.node_version }}
    
    - name: Expose yarn config as "$GITHUB_OUTPUT"
      id: yarn-config
      shell: bash
      run: |
        echo "CACHE_FOLDER=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

    - name: Restore yarn cache
      uses: buildjet/cache@v4
      with:
        path: ${{ steps.yarn-config.outputs.CACHE_FOLDER }}
        key: yarn-download-cache-${{ hashFiles('yarn.lock') }}

    - name: Restore node_modules
      uses: buildjet/cache@v4
      with:
        path: "**/node_modules/"
        key: ${{ runner.os }}-yarn-nm-cache-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}

    - name: Restore yarn install state
      uses: buildjet/cache@v4
      with:
        path: .yarn/ci-cache/
        key: ${{ runner.os }}-yarn-install-state-cache-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}

    - name: Install only if cache miss
      shell: bash
      run: |
        if [ ! -d "node_modules" ] || [ ! -f "node_modules/.yarn-integrity" ]; then
          echo "Cache miss detected, installing dependencies..."
          yarn install --inline-builds --frozen-lockfile
          yarn prisma generate
        else
          echo "Dependencies restored from cache successfully"
        fi
      env:
        YARN_ENABLE_IMMUTABLE_INSTALLS: "false"
        YARN_ENABLE_GLOBAL_CACHE: "false"
        YARN_INSTALL_STATE_PATH: .yarn/ci-cache/install-state.gz
        YARN_NM_MODE: "hardlinks-local"
        HUSKY: "0"
