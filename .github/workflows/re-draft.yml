on:
  workflow_run:
    workflows:
      - Changes Requested
    types:
      - completed

concurrency:
  group: ${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions:
  contents: write
  issues: write
  pull-requests: write
  statuses: write

jobs:
  re-draft:
    permissions:
      contents: write
      issues: write
      pull-requests: write
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - run: echo "This PR was rejected"
      - name: Convert PR to draft when changes are requested
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_ACCESS_TOKEN }}
          script: |
            async function getPullRequestId() {
              const pull_number = context.payload.pull_request.number;
              const pullRequest = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number,
              });
              if (!pullRequest.data.node_id) throw new Error(`pullRequestId no found for '${pull_number}'`);
              return pullRequest.data.node_id;
            }
            const query = `
              mutation($id: ID!) {
                convertPullRequestToDraft(input: { pullRequestId: $id }) {
                  pullRequest {
                    id
                    number
                    isDraft
                  }
                }
              }
            `;
            const pullRequestId = await getPullRequestId();
            const variables = {
              id: pullRequestId,
            }
            const response = await github.graphql(query, variables)
            if (!response.convertPullRequestToDraft) {
              throw new Error("Failed to convert pull request to draft");
            }
            console.info("Pull request successfully converted to draft.");
            console.info(`Draft conversion response: ${JSON.stringify(response, null, 2)}`);
