name: PR Update

on:
  pull_request_target:
    types: [opened, synchronize, reopened, labeled]
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect changes
    runs-on: buildjet-2vcpu-ubuntu-2204
    permissions:
      pull-requests: read
    outputs:
      has-files-requiring-all-checks: ${{ steps.filter.outputs.has-files-requiring-all-checks }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/dangerous-git-checkout
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            has-files-requiring-all-checks:
              - "!(**.md|.github/CODEOWNERS)"

  check-label:
    runs-on: buildjet-2vcpu-ubuntu-2204
    name: Check for E2E label
    outputs:
      run-e2e: ${{ steps.check-if-pr-has-label.outputs.run-e2e == 'true' && (github.event_name != 'labeled' || (github.event_name == 'labeled' && github.event.label.name == 'ready-for-e2e')) }}
      run-jobs: ${{ github.event_name != 'labeled' }}
    steps:
      - name: Get PR from branch name
        id: check-if-pr-has-label
        uses: actions/github-script@v7
        with:
          script: |
            let pr;
            console.log('github.event_name', '${{ github.event_name }}');
            const parsedEvent = ${{ github.event }};
            if (parsedEvent && parsedEvent.pull_request) {
              const response = await github.rest.pulls.get({
                owner: github.context.repo.owner,
                repo: github.context.repo.repo,
                pull_number: parsedEvent.pull_request.number
              });

              pr = response.data;
            } else {
              const ref = '${{ github.ref }}';
              const branch = ref.replace('refs/heads/', '');
              console.log('ref', ref);
              console.log('branch', branch);
              const response = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open',
                head: `${context.repo.owner}:${branch}`
              });

              if (response.data.length > 0) {
                pr = response.data[0];
              }
            }

            if (!pr) {
              core.setOutput('run-e2e', false);
              console.log('No PR found');
              return;
            }

            const labels = pr.labels.map(label => label.name);
            const labelFound = labels.includes('ready-for-e2e');
            console.log('PR #', pr.number);
            console.log('Found the label?', labelFound);
            core.setOutput('run-e2e', labelFound);

  type-check:
    name: Type check
    needs: [changes, check-label]
    if: ${{ needs.check-label.outputs.run-jobs == 'true' && needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
    uses: ./.github/workflows/check-types.yml
    secrets: inherit

  lint:
    name: Linters
    needs: [changes, check-label]
    if: ${{ needs.check-label.outputs.run-jobs == 'true' && needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
    uses: ./.github/workflows/lint.yml
    secrets: inherit

  unit-test:
    name: Tests
    needs: [changes, check-label]
    if: ${{ needs.check-label.outputs.run-jobs == 'true' && needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
    uses: ./.github/workflows/unit-tests.yml
    secrets: inherit

  integration-test:
    name: Tests
    needs: [changes, check-label]
    if: ${{ needs.check-label.outputs.run-jobs == 'true' && needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
    uses: ./.github/workflows/integration-tests.yml
    secrets: inherit

  build-api-v1:
    name: Production builds
    needs: [changes, check-label]
    if: ${{ needs.check-label.outputs.run-e2e == 'true' && needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
    uses: ./.github/workflows/api-v1-production-build.yml
    secrets: inherit

  build-api-v2:
    name: Production builds
    needs: [changes, check-label]
    if: ${{ needs.check-label.outputs.run-e2e == 'true' && needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
    uses: ./.github/workflows/api-v2-production-build.yml
    secrets: inherit

  build:
    name: Production builds
    needs: [changes, check-label]
    if: ${{ needs.check-label.outputs.run-e2e == 'true' && needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
    uses: ./.github/workflows/production-build-without-database.yml
    secrets: inherit

  e2e:
    name: Tests
    needs: [changes, check-label, build]
    if: ${{ needs.check-label.outputs.run-e2e == 'true' && needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
    uses: ./.github/workflows/e2e.yml
    secrets: inherit

  e2e-app-store:
    name: Tests
    needs: [changes, check-label, build]
    if: ${{ needs.check-label.outputs.run-e2e == 'true' && needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
    uses: ./.github/workflows/e2e-app-store.yml
    secrets: inherit

  e2e-embed:
    name: Tests
    needs: [changes, check-label, build]
    if: ${{ needs.check-label.outputs.run-e2e == 'true' && needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
    uses: ./.github/workflows/e2e-embed.yml
    secrets: inherit

  e2e-embed-react:
    name: Tests
    needs: [changes, check-label, build]
    if: ${{ needs.check-label.outputs.run-e2e == 'true' && needs.changes.outputs.has-files-requiring-all-checks == 'true' }}
    uses: ./.github/workflows/e2e-embed-react.yml
    secrets: inherit

  analyze:
    name: Analyze Build
    needs: [build]
    uses: ./.github/workflows/nextjs-bundle-analysis.yml
    secrets: inherit

  required:
    needs: [changes, lint, type-check, unit-test, integration-test, check-label, build, build-api-v1, build-api-v2, e2e, e2e-embed, e2e-embed-react, e2e-app-store]
    if: ${{ needs.check-label.outputs.run-e2e == 'true' }}
    runs-on: buildjet-2vcpu-ubuntu-2204
    steps:
      - name: fail if conditional jobs failed
        if: needs.changes.outputs.has-files-requiring-all-checks == 'true' && (contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped') || contains(needs.*.result, 'cancelled'))
        run: exit 1
