name: E2E Atoms

on:
  pull_request:
    branches:
      - main
    paths:
      - 'packages/platform/atoms/**'
      - 'packages/platform/examples/base/**'
      - 'apps/api/v2/**'
      - '.github/workflows/e2e-atoms.yml'

permissions:
  actions: write
  contents: read

env:
  ## api v2 env
  ALLOWED_HOSTNAMES: ${{ vars.CI_ALLOWED_HOSTNAMES }}
  API_KEY_PREFIX: ${{ secrets.CI_API_KEY_PREFIX }}
  API_PORT: ${{ vars.CI_API_V2_PORT }}
  CALCOM_LICENSE_KEY: ${{ secrets.CI_CALCOM_LICENSE_KEY }}
  DAILY_API_KEY: ${{ secrets.CI_DAILY_API_KEY }}
  DATABASE_READ_URL: ${{ secrets.CI_DATABASE_URL }}
  DATABASE_WRITE_URL: ${{ secrets.CI_DATABASE_URL }}
  GOOGLE_API_CREDENTIALS: ${{ secrets.CI_GOOGLE_API_CREDENTIALS }}
  IS_E2E: true
  NEXTAUTH_SECRET: ${{ secrets.CI_NEXTAUTH_SECRET }}
  NEXTAUTH_URL: ${{ secrets.CI_NEXTAUTH_URL }}
  REDIS_URL: "redis://localhost:6379"
  LINGO_DOT_DEV_API_KEY: ${{ secrets.CI_LINGO_DOT_DEV_API_KEY }}
  STRIPE_PRIVATE_KEY: ${{ secrets.CI_STRIPE_PRIVATE_KEY }}
  STRIPE_API_KEY: ${{ secrets.CI_STRIPE_PRIVATE_KEY }}
  STRIPE_CLIENT_ID: ${{ secrets.CI_STRIPE_CLIENT_ID }}
  STRIPE_WEBHOOK_SECRET: ${{ secrets.CI_STRIPE_WEBHOOK_SECRET }}
  SLOTS_CACHE_TTL: ${{ secrets.CI_SLOTS_CACHE_TTL }}
  NEXT_PUBLIC_VAPID_PUBLIC_KEY: ${{ secrets.NEXT_PUBLIC_VAPID_PUBLIC_KEY }}
  VAPID_PRIVATE_KEY: ${{ secrets.VAPID_PRIVATE_KEY }}
  JWT_SECRET: ${{ secrets.CI_JWT_SECRET }}
  NODE_ENV: ${{ vars.CI_NODE_ENV }}

  ## atoms e2e examples app env
  ATOMS_E2E_OAUTH_CLIENT_ID: ${{ secrets.ATOMS_E2E_OAUTH_CLIENT_ID }}
  ATOMS_E2E_OAUTH_CLIENT_SECRET: ${{ secrets.ATOMS_E2E_OAUTH_CLIENT_SECRET }}
  ATOMS_E2E_API_URL: ${{ secrets.ATOMS_E2E_API_URL }}
  ATOMS_E2E_ORG_ID: ${{ secrets.ATOMS_E2E_ORG_ID }}
  ATOMS_E2E_OAUTH_CLIENT_ID_BOOKER_EMBED: ${{ secrets.ATOMS_E2E_OAUTH_CLIENT_ID_BOOKER_EMBED }}
  ATOMS_E2E_APPLE_ID: ${{ secrets.ATOMS_E2E_APPLE_ID }}
  ATOMS_E2E_APPLE_CONNECT_APP_SPECIFIC_PASSCODE: ${{ secrets.ATOMS_E2E_APPLE_CONNECT_APP_SPECIFIC_PASSCODE }}
  
  ## env variables needed for both api v2 and examples app
  DATABASE_DIRECT_URL: ${{ secrets.CI_DATABASE_URL }}
  DATABASE_URL: ${{ secrets.CI_DATABASE_URL }}
  NODE_OPTIONS: --max-old-space-size=29000

jobs:
  e2e-atoms:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    timeout-minutes: 15
    name: E2E Atoms
    runs-on: buildjet-16vcpu-ubuntu-2204
    services:
      postgres:
        image: postgres:13
        credentials:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: calendso
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:latest
        credentials:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/checkout@v4
      - uses: ./.github/actions/dangerous-git-checkout
      - uses: ./.github/actions/yarn-install
      - uses: ./.github/actions/cache-db
      - uses: ./.github/actions/yarn-playwright-install
      - name: Start API v2
        working-directory: apps/api/v2
        run: |
          yarn dev:no-docker &
          API_PID=$!
          echo "API_PID=$API_PID" >> $GITHUB_ENV
          
          # Wait for API to be ready
          echo "Waiting for API v2 to be ready on port ${{ vars.CI_API_V2_PORT }}..."
          timeout 300 bash -c 'until curl -f http://localhost:${{ vars.CI_API_V2_PORT }}/health > /dev/null 2>&1; do sleep 2; done'
          echo "API v2 is ready!"
      - name: Run E2E Atoms Tests
        working-directory: packages/platform/examples/base
        run: yarn test:e2e
      - name: Upload Atoms dist (entire folder)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: atoms-dist-${{ github.sha }}
          path: packages/platform/atoms/dist
          retention-days: 7
          if-no-files-found: warn

      - name: Stop API v2
        if: always()
        run: |
          if [ ! -z "$API_PID" ]; then
            kill $API_PID || true
          fi
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-atoms-test-results
          path: test-results
          retention-days: 7
      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-atoms-playwright-report
          path: playwright-report
          retention-days: 7
